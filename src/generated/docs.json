{
  "nav": [
    {
      "children": [
        {
          "title": "Quick start",
          "level": 2,
          "route": "blueprint.quick-start"
        },
        {
          "title": "Browser support",
          "level": 2,
          "route": "blueprint.browser-support"
        },
        {
          "children": [
            {
              "title": "Installing Blueprint",
              "level": 3,
              "route": "blueprint/getting-started.installing-blueprint"
            },
            {
              "title": "JS environment",
              "level": 3,
              "route": "blueprint/getting-started.js-environment"
            },
            {
              "title": "Language features",
              "level": 4,
              "route": "blueprint/getting-started.language-features"
            },
            {
              "title": "DOM4",
              "level": 4,
              "route": "blueprint/getting-started.dom4"
            },
            {
              "title": "TypeScript",
              "level": 3,
              "route": "blueprint/getting-started.typescript"
            },
            {
              "title": "Vanilla JS APIs",
              "level": 3,
              "route": "blueprint/getting-started.vanilla-js-apis"
            },
            {
              "title": "CDN consumption",
              "level": 3,
              "route": "blueprint/getting-started.cdn-consumption"
            }
          ],
          "level": 2,
          "reference": "getting-started",
          "route": "blueprint/getting-started",
          "title": "Getting started"
        },
        {
          "children": [
            {
              "title": "Understanding TypeScript",
              "level": 3,
              "route": "blueprint/reading-the-docs.understanding-typescript"
            }
          ],
          "level": 2,
          "reference": "reading-the-docs",
          "route": "blueprint/reading-the-docs",
          "title": "Reading the documentation"
        },
        {
          "children": [],
          "level": 2,
          "reference": "whats-new-2.0",
          "route": "blueprint/whats-new-2.0",
          "title": "What's new in 2.0"
        },
        {
          "children": [],
          "level": 2,
          "reference": "whats-new-3.0",
          "route": "blueprint/whats-new-3.0",
          "title": "What's new in 3.0"
        }
      ],
      "level": 1,
      "reference": "blueprint",
      "route": "blueprint",
      "title": "Blueprint"
    },
    {
      "children": [
        {
          "children": [
            {
              "title": "Focus management",
              "level": 3,
              "route": "core/accessibility.focus-management"
            },
            {
              "title": "JavaScript API",
              "level": 4,
              "route": "core/accessibility.javascript-api"
            },
            {
              "title": "Color contrast",
              "level": 3,
              "route": "core/accessibility.color-contrast"
            }
          ],
          "level": 2,
          "reference": "accessibility",
          "route": "core/accessibility",
          "title": "Accessibility"
        },
        {
          "children": [
            {
              "title": "Modifiers",
              "level": 3,
              "route": "core/classes.modifiers"
            },
            {
              "title": "Namespacing",
              "level": 3,
              "route": "core/classes.namespacing"
            },
            {
              "title": "Linting",
              "level": 3,
              "route": "core/classes.linting"
            }
          ],
          "level": 2,
          "reference": "classes",
          "route": "core/classes",
          "title": "Classes"
        },
        {
          "children": [
            {
              "title": "Gray scale",
              "level": 3,
              "route": "core/colors.gray-scale"
            },
            {
              "title": "Core colors",
              "level": 3,
              "route": "core/colors.core-colors"
            },
            {
              "title": "Extended colors",
              "level": 3,
              "route": "core/colors.extended-colors"
            },
            {
              "title": "Usage",
              "level": 3,
              "route": "core/colors.usage"
            },
            {
              "title": "Color schemes",
              "level": 3,
              "route": "core/colors.color-schemes"
            },
            {
              "title": "Sequential color schemes",
              "level": 4,
              "route": "core/colors.sequential-color-schemes"
            },
            {
              "title": "Diverging color schemes",
              "level": 4,
              "route": "core/colors.diverging-color-schemes"
            },
            {
              "title": "Qualitative color schemes",
              "level": 4,
              "route": "core/colors.qualitative-color-schemes"
            }
          ],
          "level": 2,
          "reference": "colors",
          "route": "core/colors",
          "title": "Colors"
        },
        {
          "children": [
            {
              "title": "Usage",
              "level": 3,
              "route": "core/typography.usage"
            },
            {
              "title": "UI text",
              "level": 3,
              "route": "core/typography.ui-text"
            },
            {
              "title": "Running text",
              "level": 3,
              "route": "core/typography.running-text"
            },
            {
              "title": "Headings",
              "level": 3,
              "route": "core/typography.headings"
            },
            {
              "title": "Links",
              "level": 3,
              "route": "core/typography.links"
            },
            {
              "title": "Preformatted text",
              "level": 3,
              "route": "core/typography.preformatted-text"
            },
            {
              "title": "Block quotes",
              "level": 3,
              "route": "core/typography.block-quotes"
            },
            {
              "title": "Lists",
              "level": 3,
              "route": "core/typography.lists"
            },
            {
              "title": "Internationalization",
              "level": 3,
              "route": "core/typography.internationalization"
            },
            {
              "title": "Right-to-left text",
              "level": 4,
              "route": "core/typography.right-to-left-text"
            },
            {
              "title": "Dark theme",
              "level": 3,
              "route": "core/typography.dark-theme"
            }
          ],
          "level": 2,
          "reference": "typography",
          "route": "core/typography",
          "title": "Typography"
        },
        {
          "children": [
            {
              "title": "Font variables",
              "level": 3,
              "route": "core/variables.font-variables"
            },
            {
              "title": "Icon variables",
              "level": 3,
              "route": "core/variables.icon-variables"
            },
            {
              "title": "Grids & dimensions",
              "level": 3,
              "route": "core/variables.grids---dimensions"
            },
            {
              "title": "Grid system",
              "level": 4,
              "route": "core/variables.grid-system"
            },
            {
              "title": "Layering",
              "level": 3,
              "route": "core/variables.layering"
            },
            {
              "title": "Light theme styles",
              "level": 3,
              "route": "core/variables.light-theme-styles"
            },
            {
              "title": "Dark theme styles",
              "level": 3,
              "route": "core/variables.dark-theme-styles"
            },
            {
              "title": "Elevation drop shadows",
              "level": 3,
              "route": "core/variables.elevation-drop-shadows"
            },
            {
              "title": "Color aliases",
              "level": 3,
              "route": "core/variables.color-aliases"
            }
          ],
          "level": 2,
          "reference": "variables",
          "route": "core/variables",
          "title": "Variables"
        },
        {
          "children": [
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/breadcrumbs.props"
                },
                {
                  "title": "Breadcrumbs",
                  "level": 5,
                  "route": "core/components/breadcrumbs.breadcrumbs"
                },
                {
                  "title": "Breadcrumb",
                  "level": 5,
                  "route": "core/components/breadcrumbs.breadcrumb"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/breadcrumbs.css"
                }
              ],
              "level": 3,
              "reference": "breadcrumbs",
              "route": "core/components/breadcrumbs",
              "title": "Breadcrumbs"
            },
            {
              "children": [
                {
                  "title": "Adding icons",
                  "level": 4,
                  "route": "core/components/button.adding-icons"
                },
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/button.props"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/button.css"
                }
              ],
              "level": 3,
              "reference": "button",
              "route": "core/components/button",
              "title": "Button"
            },
            {
              "children": [
                {
                  "title": "Usage with popovers",
                  "level": 4,
                  "route": "core/components/button-group.usage-with-popovers"
                },
                {
                  "title": "Flex layout",
                  "level": 4,
                  "route": "core/components/button-group.flex-layout"
                },
                {
                  "title": "Vertical layout",
                  "level": 4,
                  "route": "core/components/button-group.vertical-layout"
                },
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/button-group.props"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/button-group.css"
                }
              ],
              "level": 3,
              "reference": "button-group",
              "route": "core/components/button-group",
              "title": "Button group"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/callout.props"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/callout.css"
                }
              ],
              "level": 3,
              "reference": "callout",
              "route": "core/components/callout",
              "title": "Callout"
            },
            {
              "children": [
                {
                  "title": "Elevation",
                  "level": 4,
                  "route": "core/components/card.elevation"
                },
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/card.props"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/card.css"
                }
              ],
              "level": 3,
              "reference": "card",
              "route": "core/components/card",
              "title": "Card"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/collapse.props"
                }
              ],
              "level": 3,
              "reference": "collapse",
              "route": "core/components/collapse",
              "title": "Collapse"
            },
            {
              "children": [
                {
                  "title": "Separators",
                  "level": 4,
                  "route": "core/components/collapsible-list.separators"
                },
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/collapsible-list.props"
                }
              ],
              "level": 3,
              "reference": "collapsible-list",
              "route": "core/components/collapsible-list",
              "title": "Collapsible list"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/divider.props"
                }
              ],
              "level": 3,
              "reference": "divider",
              "route": "core/components/divider",
              "title": "Divider"
            },
            {
              "children": [
                {
                  "title": "Multiline mode",
                  "level": 4,
                  "route": "core/components/editable-text.multiline-mode"
                },
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/editable-text.props"
                }
              ],
              "level": 3,
              "reference": "editable-text",
              "route": "core/components/editable-text",
              "title": "Editable text"
            },
            {
              "children": [
                {
                  "title": "Nested usage",
                  "level": 4,
                  "route": "core/components/html.nested-usage"
                },
                {
                  "title": "Linting",
                  "level": 4,
                  "route": "core/components/html.linting"
                }
              ],
              "level": 3,
              "reference": "html",
              "route": "core/components/html",
              "title": "HTML elements"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/html-table.props"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/html-table.css"
                }
              ],
              "level": 3,
              "reference": "html-table",
              "route": "core/components/html-table",
              "title": "HTML table"
            },
            {
              "children": [
                {
                  "title": "Usage",
                  "level": 4,
                  "route": "core/components/hotkeys.usage"
                },
                {
                  "title": "Decorator",
                  "level": 5,
                  "route": "core/components/hotkeys.decorator"
                },
                {
                  "title": "Props",
                  "level": 5,
                  "route": "core/components/hotkeys.props"
                },
                {
                  "title": "Scope",
                  "level": 4,
                  "route": "core/components/hotkeys.scope"
                },
                {
                  "title": "Dialog",
                  "level": 4,
                  "route": "core/components/hotkeys.dialog"
                },
                {
                  "title": "Key combos",
                  "level": 4,
                  "route": "core/components/hotkeys.key-combos"
                }
              ],
              "level": 3,
              "reference": "hotkeys",
              "route": "core/components/hotkeys",
              "title": "Hotkeys"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/icon.props"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/icon.css"
                }
              ],
              "level": 3,
              "reference": "icon",
              "route": "core/components/icon",
              "title": "Icon"
            },
            {
              "children": [
                {
                  "title": "Dropdowns",
                  "level": 4,
                  "route": "core/components/menu.dropdowns"
                },
                {
                  "title": "Submenus",
                  "level": 4,
                  "route": "core/components/menu.submenus"
                },
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/menu.props"
                },
                {
                  "title": "Menu",
                  "level": 5,
                  "route": "core/components/menu.menu"
                },
                {
                  "title": "Menu item",
                  "level": 5,
                  "route": "core/components/menu.menu-item"
                },
                {
                  "title": "Menu divider",
                  "level": 5,
                  "route": "core/components/menu.menu-divider"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/menu.css"
                },
                {
                  "title": "Section headers",
                  "level": 5,
                  "route": "core/components/menu.section-headers"
                }
              ],
              "level": 3,
              "reference": "menu",
              "route": "core/components/menu",
              "title": "Menu"
            },
            {
              "children": [
                {
                  "title": "Fixed to viewport top",
                  "level": 5,
                  "route": "core/components/navbar.fixed-to-viewport-top"
                },
                {
                  "title": "Fixed width",
                  "level": 5,
                  "route": "core/components/navbar.fixed-width"
                },
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/navbar.props"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/navbar.css"
                }
              ],
              "level": 3,
              "reference": "navbar",
              "route": "core/components/navbar",
              "title": "Navbar"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/non-ideal-state.props"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/non-ideal-state.css"
                }
              ],
              "level": 3,
              "reference": "non-ideal-state",
              "route": "core/components/non-ideal-state",
              "title": "Non-ideal state"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/overflow-list.props"
                }
              ],
              "level": 3,
              "reference": "overflow-list",
              "route": "core/components/overflow-list",
              "title": "Overflow list"
            },
            {
              "children": [
                {
                  "title": "Panels",
                  "level": 4,
                  "route": "core/components/panel-stack.panels"
                },
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/panel-stack.props"
                }
              ],
              "level": 3,
              "reference": "panel-stack",
              "route": "core/components/panel-stack",
              "title": "Panel stack"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/progress-bar.props"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/progress-bar.css"
                }
              ],
              "level": 3,
              "reference": "progress-bar",
              "route": "core/components/progress-bar",
              "title": "Progress bar"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/resize-sensor.props"
                }
              ],
              "level": 3,
              "reference": "resize-sensor",
              "route": "core/components/resize-sensor",
              "title": "Resize sensor"
            },
            {
              "children": [
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/skeleton.css"
                }
              ],
              "level": 3,
              "reference": "skeleton",
              "route": "core/components/skeleton",
              "title": "Skeleton"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/spinner.props"
                }
              ],
              "level": 3,
              "reference": "spinner",
              "route": "core/components/spinner",
              "title": "Spinner"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/tabs.props"
                },
                {
                  "title": "Tabs",
                  "level": 5,
                  "route": "core/components/tabs.tabs"
                },
                {
                  "title": "Tab",
                  "level": 5,
                  "route": "core/components/tabs.tab"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/tabs.css"
                }
              ],
              "level": 3,
              "reference": "tabs",
              "route": "core/components/tabs",
              "title": "Tabs"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/tag.props"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/tag.css"
                }
              ],
              "level": 3,
              "reference": "tag",
              "route": "core/components/tag",
              "title": "Tag"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/text.props"
                }
              ],
              "level": 3,
              "reference": "text",
              "route": "core/components/text",
              "title": "Text"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/tree.props"
                },
                {
                  "title": "Instance methods",
                  "level": 5,
                  "route": "core/components/tree.instance-methods"
                },
                {
                  "title": "Tree node",
                  "level": 5,
                  "route": "core/components/tree.tree-node"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/tree.css"
                }
              ],
              "level": 3,
              "reference": "tree",
              "route": "core/components/tree",
              "title": "Tree"
            },
            {
              "title": "Form controls",
              "level": 3,
              "route": "core/components.form-controls"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/form-group.props"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/form-group.css"
                }
              ],
              "level": 3,
              "reference": "form-group",
              "route": "core/components/form-group",
              "title": "Form group"
            },
            {
              "children": [
                {
                  "title": "Flex layout",
                  "level": 4,
                  "route": "core/components/control-group.flex-layout"
                },
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/control-group.props"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/control-group.css"
                }
              ],
              "level": 3,
              "reference": "control-group",
              "route": "core/components/control-group",
              "title": "Control group"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/label.props"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/label.css"
                }
              ],
              "level": 3,
              "reference": "label",
              "route": "core/components/label",
              "title": "Label"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/checkbox.props"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/checkbox.css"
                }
              ],
              "level": 3,
              "reference": "checkbox",
              "route": "core/components/checkbox",
              "title": "Checkbox"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/radio.props"
                },
                {
                  "title": "RadioGroup",
                  "level": 5,
                  "route": "core/components/radio.radiogroup"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/radio.css"
                }
              ],
              "level": 3,
              "reference": "radio",
              "route": "core/components/radio",
              "title": "Radio"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/html-select.props"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/html-select.css"
                }
              ],
              "level": 3,
              "reference": "html-select",
              "route": "core/components/html-select",
              "title": "HTML select"
            },
            {
              "children": [
                {
                  "title": "Slider",
                  "level": 4,
                  "route": "core/components/sliders.slider"
                },
                {
                  "title": "Range slider",
                  "level": 4,
                  "route": "core/components/sliders.range-slider"
                },
                {
                  "title": "Multi slider",
                  "level": 4,
                  "route": "core/components/sliders.multi-slider"
                },
                {
                  "title": "Handle",
                  "level": 5,
                  "route": "core/components/sliders.handle"
                }
              ],
              "level": 3,
              "reference": "sliders",
              "route": "core/components/sliders",
              "title": "Slider"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/switch.props"
                },
                {
                  "title": "CSS API",
                  "level": 4,
                  "route": "core/components/switch.css-api"
                }
              ],
              "level": 3,
              "reference": "switch",
              "route": "core/components/switch",
              "title": "Switch"
            },
            {
              "title": "Form inputs",
              "level": 3,
              "route": "core/components.form-inputs"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/file-input.props"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/file-input.css"
                }
              ],
              "level": 3,
              "reference": "file-input",
              "route": "core/components/file-input",
              "title": "File input"
            },
            {
              "children": [
                {
                  "title": "Interactions",
                  "level": 4,
                  "route": "core/components/numeric-input.interactions"
                },
                {
                  "title": "Basic example",
                  "level": 4,
                  "route": "core/components/numeric-input.basic-example"
                },
                {
                  "title": "Extended example",
                  "level": 4,
                  "route": "core/components/numeric-input.extended-example"
                },
                {
                  "title": "JavaScript API",
                  "level": 4,
                  "route": "core/components/numeric-input.javascript-api"
                },
                {
                  "title": "Responsive numeric inputs",
                  "level": 5,
                  "route": "core/components/numeric-input.responsive-numeric-inputs"
                },
                {
                  "title": "Uncontrolled mode",
                  "level": 5,
                  "route": "core/components/numeric-input.uncontrolled-mode"
                },
                {
                  "title": "Controlled mode",
                  "level": 5,
                  "route": "core/components/numeric-input.controlled-mode"
                }
              ],
              "level": 3,
              "reference": "numeric-input",
              "route": "core/components/numeric-input",
              "title": "Numeric input"
            },
            {
              "children": [
                {
                  "title": "Input group",
                  "level": 4,
                  "route": "core/components/text-inputs.input-group"
                },
                {
                  "title": "Props",
                  "level": 5,
                  "route": "core/components/text-inputs.props"
                },
                {
                  "title": "CSS",
                  "level": 5,
                  "route": "core/components/text-inputs.css"
                },
                {
                  "title": "HTML input",
                  "level": 4,
                  "route": "core/components/text-inputs.html-input"
                },
                {
                  "title": "Text area",
                  "level": 4,
                  "route": "core/components/text-inputs.text-area"
                },
                {
                  "title": "Search field",
                  "level": 4,
                  "route": "core/components/text-inputs.search-field"
                }
              ],
              "level": 3,
              "reference": "text-inputs",
              "route": "core/components/text-inputs",
              "title": "Text inputs"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/tag-input.props"
                }
              ],
              "level": 3,
              "reference": "tag-input",
              "route": "core/components/tag-input",
              "title": "Tag input"
            },
            {
              "title": "Overlays",
              "level": 3,
              "route": "core/components.overlays"
            },
            {
              "children": [
                {
                  "title": "Scroll support",
                  "level": 4,
                  "route": "core/components/overlay.scroll-support"
                },
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/overlay.props"
                }
              ],
              "level": 3,
              "reference": "overlay",
              "route": "core/components/overlay",
              "title": "Overlay"
            },
            {
              "children": [
                {
                  "title": "React 15",
                  "level": 4,
                  "route": "core/components/portal.react-15"
                },
                {
                  "title": "React context",
                  "level": 4,
                  "route": "core/components/portal.react-context"
                },
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/portal.props"
                }
              ],
              "level": 3,
              "reference": "portal",
              "route": "core/components/portal",
              "title": "Portal"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/alert.props"
                }
              ],
              "level": 3,
              "reference": "alert",
              "route": "core/components/alert",
              "title": "Alert"
            },
            {
              "children": [
                {
                  "title": "Decorator usage",
                  "level": 4,
                  "route": "core/components/context-menu.decorator-usage"
                },
                {
                  "title": "Imperative usage",
                  "level": 4,
                  "route": "core/components/context-menu.imperative-usage"
                }
              ],
              "level": 3,
              "reference": "context-menu",
              "route": "core/components/context-menu",
              "title": "Context menu"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/dialog.props"
                },
                {
                  "title": "CSS",
                  "level": 4,
                  "route": "core/components/dialog.css"
                }
              ],
              "level": 3,
              "reference": "dialog",
              "route": "core/components/dialog",
              "title": "Dialog"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/drawer.props"
                }
              ],
              "level": 3,
              "reference": "drawer",
              "route": "core/components/drawer",
              "title": "Drawer"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/popover.props"
                },
                {
                  "title": "Concepts",
                  "level": 4,
                  "route": "core/components/popover.concepts"
                },
                {
                  "title": "Structure",
                  "level": 5,
                  "route": "core/components/popover.structure"
                },
                {
                  "title": "Position",
                  "level": 5,
                  "route": "core/components/popover.position"
                },
                {
                  "title": "Modifiers",
                  "level": 5,
                  "route": "core/components/popover.modifiers"
                },
                {
                  "title": "Controlled mode",
                  "level": 5,
                  "route": "core/components/popover.controlled-mode"
                },
                {
                  "title": "Interactions",
                  "level": 5,
                  "route": "core/components/popover.interactions"
                },
                {
                  "title": "Closing on click",
                  "level": 5,
                  "route": "core/components/popover.closing-on-click"
                },
                {
                  "title": "Backdrop",
                  "level": 5,
                  "route": "core/components/popover.backdrop"
                },
                {
                  "title": "Portal rendering",
                  "level": 5,
                  "route": "core/components/popover.portal-rendering"
                },
                {
                  "title": "Style",
                  "level": 4,
                  "route": "core/components/popover.style"
                },
                {
                  "title": "Dark theme",
                  "level": 5,
                  "route": "core/components/popover.dark-theme"
                },
                {
                  "title": "Sizing",
                  "level": 5,
                  "route": "core/components/popover.sizing"
                },
                {
                  "title": "Minimal style",
                  "level": 5,
                  "route": "core/components/popover.minimal-style"
                },
                {
                  "title": "Testing",
                  "level": 4,
                  "route": "core/components/popover.testing"
                }
              ],
              "level": 3,
              "reference": "popover",
              "route": "core/components/popover",
              "title": "Popover"
            },
            {
              "children": [
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/toast.props"
                },
                {
                  "title": "Toast",
                  "level": 5,
                  "route": "core/components/toast.toast"
                },
                {
                  "title": "Toaster",
                  "level": 5,
                  "route": "core/components/toast.toaster"
                },
                {
                  "title": "Static usage",
                  "level": 4,
                  "route": "core/components/toast.static-usage"
                },
                {
                  "title": "Example",
                  "level": 5,
                  "route": "core/components/toast.example"
                },
                {
                  "title": "React component usage",
                  "level": 4,
                  "route": "core/components/toast.react-component-usage"
                }
              ],
              "level": 3,
              "reference": "toast",
              "route": "core/components/toast",
              "title": "Toast"
            },
            {
              "children": [
                {
                  "title": "Combining with popover",
                  "level": 4,
                  "route": "core/components/tooltip.combining-with-popover"
                },
                {
                  "title": "Props",
                  "level": 4,
                  "route": "core/components/tooltip.props"
                }
              ],
              "level": 3,
              "reference": "tooltip",
              "route": "core/components/tooltip",
              "title": "Tooltip"
            }
          ],
          "level": 2,
          "reference": "components",
          "route": "core/components",
          "title": "Components"
        }
      ],
      "level": 1,
      "reference": "core",
      "route": "core",
      "title": "Core"
    }
  ],
  "pages": {
    "_nav": {
      "reference": "_nav",
      "route": "_nav",
      "sourcePath": "src\\_nav.md",
      "title": "(untitled)",
      "contents": [
        "<!--\nThis file enumerates the exact order of root pages in the left sidebar.\n-->\n",
        {
          "tag": "page",
          "value": "blueprint"
        },
        {
          "tag": "page",
          "value": "core"
        }
      ],
      "contentsRaw": "<!--\nThis file enumerates the exact order of root pages in the left sidebar.\n-->\n\n@page blueprint\n@page core",
      "metadata": {}
    },
    "blueprint": {
      "reference": "blueprint",
      "route": "blueprint",
      "sourcePath": "src\\blueprint.md",
      "title": "Blueprint",
      "contents": [
        {
          "tag": "heading",
          "value": "Blueprint",
          "level": 1,
          "route": "blueprint"
        },
        "<h4 id=\"blueprint-is-a-react-based-ui-toolkit-for-the-web-\">Blueprint is a React-based UI toolkit for the web.</h4>\n<p>It is optimized for building complex data-dense interfaces for desktop applications.</p>\n",
        {
          "tag": "reactDocs",
          "value": "Welcome"
        },
        "<div class=\"bp3-callout bp3-intent-success bp3-icon-endorsed\">\n    <h4 class=\"bp3-heading\">Blueprint v3 is available now! <a href=\"#blueprint/whats-new-3.0\">See what&#39;s new.</a></h4>\n</div>\n\n",
        {
          "tag": "heading",
          "value": "Quick start",
          "level": 2,
          "route": "blueprint.quick-start"
        },
        "<h3 id=\"install\">Install</h3>\n<p><strong>@blueprintjs/core</strong> is the primary Blueprint package on NPM and home to over 40 components.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>yarn&nbsp;add&nbsp;@blueprintjs/core&nbsp;react&nbsp;react-dom</span></span></div></pre><p>Additional components live in the <strong>@blueprintjs/icons</strong>, <strong>@blueprintjs/datetime</strong>, <strong>@blueprintjs/select</strong>, <strong>@blueprintjs/table</strong>, and <strong>@blueprintjs/timezone</strong> packages, separated by use case and significant dependencies. All have peer dependencies on <strong>react</strong> and <strong>react-dom</strong>, so these two packages must be installed alongside Blueprint.</p>\n<h3 id=\"import\">Import</h3>\n<p>Import React components from the appropriate package.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Button</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>intent</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>success</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>button&nbsp;content</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onClick</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>incrementCounter</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></div></pre><p>Don&#39;t forget to include the <strong>main CSS file</strong> from each Blueprint package!</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"comment block html\"><span class=\"punctuation definition comment html\"><span>&lt;!--</span></span><span>&nbsp;in&nbsp;index.html,&nbsp;or&nbsp;however&nbsp;you&nbsp;manage&nbsp;your&nbsp;CSS&nbsp;files&nbsp;</span><span class=\"punctuation definition comment html\"><span>--&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>link</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>href</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>path/to/node_modules/normalize.css/normalize.css</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>rel</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>stylesheet</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"comment block html\"><span class=\"punctuation definition comment html\"><span>&lt;!--</span></span><span>&nbsp;blueprint-icons.css&nbsp;file&nbsp;must&nbsp;be&nbsp;included&nbsp;alongside&nbsp;blueprint.css!&nbsp;</span><span class=\"punctuation definition comment html\"><span>--&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>link</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>href</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>path/to/node_modules/@blueprintjs/icons/lib/css/blueprint-icons.css</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>rel</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>stylesheet</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>link</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>href</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>path/to/node_modules/@blueprintjs/core/lib/css/blueprint.css</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>rel</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>stylesheet</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"comment block html\"><span class=\"punctuation definition comment html\"><span>&lt;!--</span></span><span>&nbsp;add&nbsp;other&nbsp;blueprint-*.css&nbsp;files&nbsp;here&nbsp;</span><span class=\"punctuation definition comment html\"><span>--&gt;</span></span></span></span></div></pre>",
        {
          "tag": "heading",
          "value": "Browser support",
          "level": 2,
          "route": "blueprint.browser-support"
        },
        "<p><strong>Blueprint supports Chrome, Firefox, Safari, IE 11, and Microsoft Edge.</strong></p>\n<p>You may experience degraded visuals in IE.\nIE 10 and below are unsupported due to their lack of support for CSS Flexbox Layout.\nThese browsers were deprecated by Microsoft (end of support) in <a href=\"https://www.microsoft.com/en-us/WindowsForBusiness/End-of-IE-support\">January 2016</a>.</p>\n",
        {
          "tag": "page",
          "value": "getting-started"
        },
        {
          "tag": "page",
          "value": "reading-the-docs"
        },
        {
          "tag": "page",
          "value": "whats-new-2.0"
        },
        {
          "tag": "page",
          "value": "whats-new-3.0"
        }
      ],
      "contentsRaw": "@# Blueprint\n\n#### Blueprint is a React-based UI toolkit for the web.\n\nIt is optimized for building complex data-dense interfaces for desktop applications.\n\n@reactDocs Welcome\n\n<div class=\"bp3-callout bp3-intent-success bp3-icon-endorsed\">\n    <h4 class=\"bp3-heading\">Blueprint v3 is available now! [See what's new.](#blueprint/whats-new-3.0)</h4>\n</div>\n\n@## Quick start\n\n### Install\n\n**@blueprintjs/core** is the primary Blueprint package on NPM and home to over 40 components.\n\n```sh\nyarn add @blueprintjs/core react react-dom\n```\n\nAdditional components live in the **@blueprintjs/icons**, **@blueprintjs/datetime**, **@blueprintjs/select**, **@blueprintjs/table**, and **@blueprintjs/timezone** packages, separated by use case and significant dependencies. All have peer dependencies on **react** and **react-dom**, so these two packages must be installed alongside Blueprint.\n\n### Import\n\nImport React components from the appropriate package.\n\n```tsx\nimport { Button } from \"@blueprintjs/core\";\n\n<Button intent=\"success\" text=\"button content\" onClick={incrementCounter} />\n```\n\nDon't forget to include the **main CSS file** from each Blueprint package!\n\n```html\n<!-- in index.html, or however you manage your CSS files -->\n<link href=\"path/to/node_modules/normalize.css/normalize.css\" rel=\"stylesheet\" />\n<!-- blueprint-icons.css file must be included alongside blueprint.css! -->\n<link href=\"path/to/node_modules/@blueprintjs/icons/lib/css/blueprint-icons.css\" rel=\"stylesheet\" />\n<link href=\"path/to/node_modules/@blueprintjs/core/lib/css/blueprint.css\" rel=\"stylesheet\" />\n<!-- add other blueprint-*.css files here -->\n```\n\n@## Browser support\n\n**Blueprint supports Chrome, Firefox, Safari, IE 11, and Microsoft Edge.**\n\nYou may experience degraded visuals in IE.\nIE 10 and below are unsupported due to their lack of support for CSS Flexbox Layout.\nThese browsers were deprecated by Microsoft (end of support) in [January 2016](https://www.microsoft.com/en-us/WindowsForBusiness/End-of-IE-support).\n\n@page getting-started\n@page reading-the-docs\n@page whats-new-2.0\n@page whats-new-3.0",
      "metadata": {}
    },
    "README": {
      "reference": "README",
      "route": "README",
      "sourcePath": "src\\docs-data\\node_modules\\yargs\\README.md",
      "title": "(untitled)",
      "contents": [
        "<h1 id=\"yargs\">Yargs</h1>\n<p><a href=\"https://travis-ci.org/yargs/yargs\"><img src=\"https://img.shields.io/travis/yargs/yargs/master.svg\" alt=\"Build Status\"></a>\n<a href=\"https://coveralls.io/github/yargs/yargs\"><img src=\"https://img.shields.io/coveralls/yargs/yargs.svg\" alt=\"Coverage Status\"></a>\n<a href=\"https://www.npmjs.com/package/yargs\"><img src=\"https://img.shields.io/npm/v/yargs.svg\" alt=\"NPM version\"></a>\n<a href=\"https://ci.appveyor.com/project/bcoe/yargs-ljwvf\"><img src=\"https://img.shields.io/appveyor/ci/bcoe/yargs-ljwvf/master.svg?label=Windows%20Tests\" alt=\"Windows Tests\"></a>\n<a href=\"http://standardjs.com/\"><img src=\"https://img.shields.io/badge/code%20style-standard-brightgreen.svg\" alt=\"js-standard-style\"></a>\n<a href=\"https://conventionalcommits.org/\"><img src=\"https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg\" alt=\"Conventional Commits\"></a>\n<a href=\"http://devtoolscommunity.herokuapp.com\"><img src=\"http://devtoolscommunity.herokuapp.com/badge.svg\" alt=\"Slack\"></a></p>\n<p><em>Having problems? want to contribute? join our <a href=\"http://devtoolscommunity.herokuapp.com\">community slack</a></em>.</p>\n<blockquote>\n<p>Yargs be a node.js library fer hearties tryin&#39; ter parse optstrings.</p>\n</blockquote>\n<p><img width=\"250\" src=\"/yargs-logo.png\"></p>\n<p>Yargs helps you build interactive command line tools, by parsing arguments and generating an elegant user interface. It gives you:</p>\n<ul>\n<li>commands and (grouped) options (<code>my-program.js serve --port=5000</code>).</li>\n<li>a dynamically generated help menu based on your arguments.</li>\n</ul>\n<blockquote>\n<p><img width=\"400\" src=\"/screen.png\"></p>\n</blockquote>\n<ul>\n<li>bash-completion shortcuts for commands and options.</li>\n<li>and <a href=\"/docs/api.md\">tons more</a>.</li>\n</ul>\n<h2 id=\"installation\">Installation</h2>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>npm&nbsp;i&nbsp;yargs&nbsp;--save</span></span></div></pre><h2 id=\"simple-example\">Simple Example</h2>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>#!/usr/bin/env&nbsp;node</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>const&nbsp;argv&nbsp;=&nbsp;require(&#39;yargs&#39;).argv</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>if&nbsp;(argv.ships&nbsp;&gt;&nbsp;3&nbsp;&amp;&amp;&nbsp;argv.distance&nbsp;&lt;&nbsp;53.5)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;console.log(&#39;Plunder&nbsp;more&nbsp;riffiwobbles!&#39;)</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}&nbsp;else&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;console.log(&#39;Retreat&nbsp;from&nbsp;the&nbsp;xupptumblers!&#39;)</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div></pre><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>$&nbsp;./plunder.js&nbsp;--ships=4&nbsp;--distance=22</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Plunder&nbsp;more&nbsp;riffiwobbles!</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>$&nbsp;./plunder.js&nbsp;--ships&nbsp;12&nbsp;--distance&nbsp;98.7</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Retreat&nbsp;from&nbsp;the&nbsp;xupptumblers!</span></span></div></pre><h2 id=\"complex-example\">Complex Example</h2>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source js\"><span class=\"comment line shebang js\"><span>#!/usr/bin/env&nbsp;node</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"support function js\"><span>require</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span>yargs</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&nbsp;eslint-disable-line</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&nbsp;&nbsp;</span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>command</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span>serve&nbsp;[port]</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&nbsp;</span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span>start&nbsp;the&nbsp;server</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&nbsp;</span><span class=\"meta function arrow js\"><span class=\"meta parameters js\"><span class=\"punctuation definition parameters begin bracket round js\"><span>(</span></span><span class=\"variable parameter function js\"><span>yargs</span></span><span class=\"punctuation definition parameters end bracket round js\"><span>)</span></span></span><span>&nbsp;</span><span class=\"storage type function arrow js\"><span>=&gt;</span></span></span><span>&nbsp;</span><span class=\"punctuation definition function body begin bracket curly js\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta method-call js\"><span class=\"meta arguments js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;yargs</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta method-call js\"><span class=\"meta arguments js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>positional</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span>port</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&nbsp;</span><span class=\"meta brace curly js\"><span>{</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta method-call js\"><span class=\"meta arguments js\"><span class=\"meta method-call js\"><span class=\"meta arguments js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;describe</span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span>port&nbsp;to&nbsp;bind&nbsp;on</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta method-call js\"><span class=\"meta arguments js\"><span class=\"meta method-call js\"><span class=\"meta arguments js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default</span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&nbsp;</span><span class=\"constant numeric decimal js\"><span>5000</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta method-call js\"><span class=\"meta arguments js\"><span class=\"meta method-call js\"><span class=\"meta arguments js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta method-call js\"><span class=\"meta arguments js\"><span>&nbsp;&nbsp;</span><span class=\"punctuation definition function body end bracket curly js\"><span>}</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&nbsp;</span><span class=\"meta function arrow js\"><span class=\"meta parameters js\"><span class=\"punctuation definition parameters begin bracket round js\"><span>(</span></span><span class=\"variable parameter function js\"><span>argv</span></span><span class=\"punctuation definition parameters end bracket round js\"><span>)</span></span></span><span>&nbsp;</span><span class=\"storage type function arrow js\"><span>=&gt;</span></span></span><span>&nbsp;</span><span class=\"punctuation definition function body begin bracket curly js\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta method-call js\"><span class=\"meta arguments js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control js\"><span>if</span></span><span>&nbsp;</span><span class=\"meta brace round js\"><span>(</span></span><span class=\"variable other object js\"><span>argv</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>verbose</span></span><span class=\"meta brace round js\"><span>)</span></span><span>&nbsp;</span><span class=\"entity name type object console js\"><span>console</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function console js\"><span>info</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span class=\"string quoted template js\"><span class=\"punctuation definition string begin js\"><span>`</span></span><span>start&nbsp;server&nbsp;on&nbsp;:</span><span class=\"source js embedded source\"><span class=\"punctuation section embedded js\"><span>${</span></span><span class=\"variable other object js\"><span>argv</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"support variable property dom js\"><span>port</span></span><span class=\"punctuation section embedded js\"><span>}</span></span></span><span class=\"punctuation definition string end js\"><span>`</span></span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta method-call js\"><span class=\"meta arguments js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>serve</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span class=\"variable other object js\"><span>argv</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"support variable property dom js\"><span>port</span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta method-call js\"><span class=\"meta arguments js\"><span>&nbsp;&nbsp;</span><span class=\"punctuation definition function body end bracket curly js\"><span>}</span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&nbsp;&nbsp;</span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>option</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span>verbose</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&nbsp;</span><span class=\"meta brace curly js\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta method-call js\"><span class=\"meta arguments js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;alias</span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span>v</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta method-call js\"><span class=\"meta arguments js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;default</span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&nbsp;</span><span class=\"constant language boolean false js\"><span>false</span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta method-call js\"><span class=\"meta arguments js\"><span>&nbsp;&nbsp;</span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&nbsp;&nbsp;</span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>argv</span></span></span></div></pre><p>Run the example above with <code>--help</code> to see the help for the application.</p>\n<h2 id=\"table-of-contents\">Table of Contents</h2>\n<ul>\n<li><a href=\"/docs/api.md\">Yargs&#39; API</a></li>\n<li><a href=\"/docs/examples.md\">Examples</a></li>\n<li><a href=\"/docs/tricks.md\">Parsing Tricks</a><ul>\n<li><a href=\"/docs/tricks.md#stop\">Stop the Parser</a></li>\n<li><a href=\"/docs/tricks.md#negate\">Negating Boolean Arguments</a></li>\n<li><a href=\"/docs/tricks.md#numbers\">Numbers</a></li>\n<li><a href=\"/docs/tricks.md#arrays\">Arrays</a></li>\n<li><a href=\"/docs/tricks.md#objects\">Objects</a></li>\n</ul>\n</li>\n<li><a href=\"/docs/advanced.md\">Advanced Topics</a><ul>\n<li><a href=\"/docs/advanced.md#commands\">Composing Your App Using Commands</a></li>\n<li><a href=\"/docs/advanced.md#configuration\">Building Configurable CLI Apps</a></li>\n<li><a href=\"/docs/advanced.md#customizing\">Customizing Yargs&#39; Parser</a></li>\n</ul>\n</li>\n<li><a href=\"/contributing.md\">Contributing</a></li>\n</ul>\n"
      ],
      "contentsRaw": "# Yargs\n\n[![Build Status][travis-image]][travis-url]\n[![Coverage Status][coveralls-image]][coveralls-url]\n[![NPM version][npm-image]][npm-url]\n[![Windows Tests][windows-image]][windows-url]\n[![js-standard-style][standard-image]][standard-url]\n[![Conventional Commits][conventional-commits-image]][conventional-commits-url]\n[![Slack][slack-image]][slack-url]\n\n_Having problems? want to contribute? join our [community slack](http://devtoolscommunity.herokuapp.com)_.\n\n> Yargs be a node.js library fer hearties tryin' ter parse optstrings.\n\n<img width=\"250\" src=\"/yargs-logo.png\">\n\nYargs helps you build interactive command line tools, by parsing arguments and generating an elegant user interface. It gives you:\n\n* commands and (grouped) options (`my-program.js serve --port=5000`).\n* a dynamically generated help menu based on your arguments.\n\n> <img width=\"400\" src=\"/screen.png\">\n\n* bash-completion shortcuts for commands and options.\n* and [tons more](/docs/api.md).\n\n## Installation\n\n```bash\nnpm i yargs --save\n```\n\n## Simple Example\n\n````javascript\n#!/usr/bin/env node\nconst argv = require('yargs').argv\n\nif (argv.ships > 3 && argv.distance < 53.5) {\n  console.log('Plunder more riffiwobbles!')\n} else {\n  console.log('Retreat from the xupptumblers!')\n}\n````\n\n```bash\n$ ./plunder.js --ships=4 --distance=22\nPlunder more riffiwobbles!\n\n$ ./plunder.js --ships 12 --distance 98.7\nRetreat from the xupptumblers!\n```\n\n## Complex Example\n\n```js\n#!/usr/bin/env node\nrequire('yargs') // eslint-disable-line\n  .command('serve [port]', 'start the server', (yargs) => {\n    yargs\n      .positional('port', {\n        describe: 'port to bind on',\n        default: 5000\n      })\n  }, (argv) => {\n    if (argv.verbose) console.info(`start server on :${argv.port}`)\n    serve(argv.port)\n  })\n  .option('verbose', {\n    alias: 'v',\n    default: false\n  })\n  .argv\n```\n\nRun the example above with `--help` to see the help for the application.\n\n## Table of Contents\n\n* [Yargs' API](/docs/api.md)\n* [Examples](/docs/examples.md)\n* [Parsing Tricks](/docs/tricks.md)\n  * [Stop the Parser](/docs/tricks.md#stop)\n  * [Negating Boolean Arguments](/docs/tricks.md#negate)\n  * [Numbers](/docs/tricks.md#numbers)\n  * [Arrays](/docs/tricks.md#arrays)\n  * [Objects](/docs/tricks.md#objects)\n* [Advanced Topics](/docs/advanced.md)\n  * [Composing Your App Using Commands](/docs/advanced.md#commands)\n  * [Building Configurable CLI Apps](/docs/advanced.md#configuration)\n  * [Customizing Yargs' Parser](/docs/advanced.md#customizing)\n* [Contributing](/contributing.md)\n\n[travis-url]: https://travis-ci.org/yargs/yargs\n[travis-image]: https://img.shields.io/travis/yargs/yargs/master.svg\n[coveralls-url]: https://coveralls.io/github/yargs/yargs\n[coveralls-image]: https://img.shields.io/coveralls/yargs/yargs.svg\n[npm-url]: https://www.npmjs.com/package/yargs\n[npm-image]: https://img.shields.io/npm/v/yargs.svg\n[windows-url]: https://ci.appveyor.com/project/bcoe/yargs-ljwvf\n[windows-image]: https://img.shields.io/appveyor/ci/bcoe/yargs-ljwvf/master.svg?label=Windows%20Tests\n[standard-image]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg\n[standard-url]: http://standardjs.com/\n[conventional-commits-image]: https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg\n[conventional-commits-url]: https://conventionalcommits.org/\n[slack-image]: http://devtoolscommunity.herokuapp.com/badge.svg\n[slack-url]: http://devtoolscommunity.herokuapp.com",
      "metadata": {}
    },
    "alert": {
      "reference": "alert",
      "route": "core/components/alert",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\alert\\alert.md",
      "title": "Alert",
      "contents": [
        {
          "tag": "heading",
          "value": "Alert",
          "level": 1,
          "route": "core/components/alert"
        },
        "<p>Alerts notify users of important information and force them to acknowledge the alert content before\ncontinuing.</p>\n<p>Although similar to <a href=\"#core/components/dialog\">dialogs</a>, alerts are more\nrestrictive and should only be used for important information. By default, the\nuser can only exit the alert by clicking one of the confirmation\nbuttons—clicking the overlay or pressing the <code>esc</code> key will not close the alert.\nThese interactions can be enabled via props.</p>\n",
        {
          "tag": "reactExample",
          "value": "AlertExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/alert.props"
        },
        "<p><code>Alert</code> only supports controlled usage through the <code>isOpen</code> prop. Use the\n<code>onConfirm</code> and <code>onCancel</code> props to respond to those interactions separately, or\nuse <code>onClose</code> to handle both at the same time.</p>\n",
        {
          "tag": "interface",
          "value": "IAlertProps"
        }
      ],
      "contentsRaw": "@# Alert\n\nAlerts notify users of important information and force them to acknowledge the alert content before\ncontinuing.\n\nAlthough similar to [dialogs](#core/components/dialog), alerts are more\nrestrictive and should only be used for important information. By default, the\nuser can only exit the alert by clicking one of the confirmation\nbuttons—clicking the overlay or pressing the `esc` key will not close the alert.\nThese interactions can be enabled via props.\n\n@reactExample AlertExample\n\n@## Props\n\n`Alert` only supports controlled usage through the `isOpen` prop. Use the\n`onConfirm` and `onCancel` props to respond to those interactions separately, or\nuse `onClose` to handle both at the same time.\n\n@interface IAlertProps",
      "metadata": {}
    },
    "breadcrumbs": {
      "reference": "breadcrumbs",
      "route": "core/components/breadcrumbs",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\breadcrumbs\\breadcrumbs.md",
      "title": "Breadcrumbs",
      "contents": [
        {
          "tag": "heading",
          "value": "Breadcrumbs",
          "level": 1,
          "route": "core/components/breadcrumbs"
        },
        "<p>Breadcrumbs identify the path to the current resource in an application.</p>\n",
        {
          "tag": "reactExample",
          "value": "BreadcrumbsExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/breadcrumbs.props"
        },
        {
          "tag": "heading",
          "value": "Breadcrumbs",
          "level": 3,
          "route": "core/components/breadcrumbs.breadcrumbs"
        },
        "<p>The <code>Breadcrumbs</code> component requires an <code>items</code> array of\n<a href=\"#core/components/breadcrumbs.breadcrumb\">breadcrumb props</a> and renders them in\nan <a href=\"#core/components/overflow-list\"><code>OverflowList</code></a> to automatically collapse\nbreadcrumbs that do not fit in the available space.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>const</span></span><span class=\"meta object-binding-pattern-variable tsx\"><span>&nbsp;</span><span class=\"punctuation definition binding-pattern object tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>Breadcrumbs</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>IBreadcrumbProps</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>Icon</span></span><span>&nbsp;</span><span class=\"punctuation definition binding-pattern object tsx\"><span>}</span></span><span>&nbsp;</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr tsx\"><span class=\"meta definition variable tsx variable other constant tsx\"><span>BREADCRUMBS</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type tsx\"><span>IBreadcrumbProps</span></span><span class=\"meta type tuple tsx\"><span class=\"meta brace square tsx\"><span>[</span><span>]</span></span></span><span>&nbsp;</span></span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta array literal tsx\"><span class=\"meta brace square tsx\"><span>[</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta array literal tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>href</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>/users</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>icon</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>folder-close</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>text</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Users</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta array literal tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>href</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>/users/janet</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>icon</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>folder-close</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>text</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Janet</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta array literal tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>icon</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>document</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>text</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>image.jpg</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta array literal tsx\"><span class=\"meta brace square tsx\"><span>]</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"keyword control export tsx\"><span>export</span></span><span>&nbsp;</span><span class=\"storage type class tsx\"><span>class</span></span><span>&nbsp;</span><span class=\"entity name type class tsx\"><span>BreadcrumbsExample</span></span><span>&nbsp;</span><span class=\"storage modifier tsx\"><span>extends</span></span><span>&nbsp;</span><span class=\"entity name type module tsx\"><span>React</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity other inherited-class tsx\"><span>Component</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta method declaration tsx\"><span class=\"storage modifier tsx\"><span>public</span></span><span>&nbsp;</span><span class=\"meta definition method tsx entity name function tsx\"><span>render</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control flow tsx\"><span>return</span></span><span>&nbsp;</span><span class=\"meta brace round tsx\"><span>(</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Breadcrumbs</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>currentBreadcrumbRenderer</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>renderCurrentBreadcrumb</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>items</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other constant tsx\"><span>BREADCRUMBS</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"storage modifier tsx\"><span>private</span></span><span>&nbsp;</span><span class=\"meta field declaration tsx\"><span class=\"meta definition property tsx entity name function tsx\"><span>renderCurrentBreadcrumb</span></span><span>&nbsp;</span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta arrow tsx\"><span>&nbsp;</span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"meta parameter object-binding-pattern tsx\"><span class=\"punctuation definition binding-pattern object tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable parameter tsx\"><span>text</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"keyword operator rest tsx\"><span>...</span></span><span class=\"variable parameter tsx\"><span>restProps</span></span><span>&nbsp;</span><span class=\"punctuation definition binding-pattern object tsx\"><span>}</span></span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type tsx\"><span>IBreadcrumbProps</span></span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"storage type function arrow tsx\"><span>=&gt;</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta field declaration tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"punctuation whitespace comment leading tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;customize&nbsp;rendering&nbsp;of&nbsp;last&nbsp;breadcrumb</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta field declaration tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control flow tsx\"><span>return</span></span><span>&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Breadcrumb</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"keyword operator spread tsx\"><span>...</span></span><span class=\"variable other readwrite tsx\"><span>restProps</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>text</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Icon</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>icon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>star</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Breadcrumb</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta field declaration tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></div></pre>",
        {
          "tag": "interface",
          "value": "IBreadcrumbsProps"
        },
        {
          "tag": "heading",
          "value": "Breadcrumb",
          "level": 3,
          "route": "core/components/breadcrumbs.breadcrumb"
        },
        "<p>The <code>Breadcrumb</code> component renders an <code>a.bp3-breadcrumb</code> if given an <code>href</code> or\n<code>onClick</code> and a <code>span.bp3-breadcrumb</code> otherwise. Typically you will supply an\narray of <code>IBreadcrumbProps</code> to the <code>&lt;Breadcrumbs items&gt;</code> prop and only render\nthis component directly when defining a custom <code>breadcrumbRenderer</code>.</p>\n",
        {
          "tag": "interface",
          "value": "IBreadcrumbProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/breadcrumbs.css"
        },
        "<ul>\n<li>Begin with a <code>ul.bp3-breadcrumbs</code>; each crumb should be in its own <code>li</code> as a direct descendant.</li>\n<li>Breadcrumbs are typically navigation links (for example, to the parent folder in a file path), and\ntherefore should use <code>&lt;a&gt;</code> tags (except for the final breadcrumb).</li>\n<li>Each navigation breadcrumb should use <code>.bp3-breadcrumb</code>.</li>\n<li>Make a breadcrumb non-interactive with the <code>.bp3-disabled</code> class. You should only use this\nstate when you want to indicate that the user cannot navigate to the breadcrumb (for example, if\nthe user does not have permission to access it). Otherwise, clicking a breadcrumb should take the\nuser to that resource.</li>\n<li>Mark the final breadcrumb <code>.bp3-breadcrumb-current</code> for an emphasized appearance.</li>\n<li>The <code>.bp3-breadcrumbs-collapsed</code> button-like element can be used as the target for a dropdown menu\ncontaining breadcrumbs that are collapsed due to layout constraints.</li>\n<li>When adding another element (such as a <a href=\"#core/components/tooltip\">tooltip</a> or\n<a href=\"#core/components/popover\">popover</a>) to a breadcrumb, wrap it around the contents of the <code>li</code>.</li>\n</ul>\n",
        {
          "tag": "css",
          "value": "breadcrumbs"
        }
      ],
      "contentsRaw": "@# Breadcrumbs\n\nBreadcrumbs identify the path to the current resource in an application.\n\n@reactExample BreadcrumbsExample\n\n@## Props\n\n@### Breadcrumbs\n\nThe `Breadcrumbs` component requires an `items` array of\n[breadcrumb props](#core/components/breadcrumbs.breadcrumb) and renders them in\nan [`OverflowList`](#core/components/overflow-list) to automatically collapse\nbreadcrumbs that do not fit in the available space.\n\n```tsx\nconst { Breadcrumbs, IBreadcrumbProps, Icon } = \"@blueprintjs/core\";\n\nconst BREADCRUMBS: IBreadcrumbProps[] = [\n    { href: \"/users\", icon: \"folder-close\", text: \"Users\" },\n    { href: \"/users/janet\", icon: \"folder-close\", text: \"Janet\" },\n    { icon: \"document\", text: \"image.jpg\" },\n];\n\nexport class BreadcrumbsExample extends React.Component {\n    public render() {\n        return (\n            <Breadcrumbs\n                currentBreadcrumbRenderer={this.renderCurrentBreadcrumb}\n                items={BREADCRUMBS}\n             />\n        );\n    }\n    private renderCurrentBreadcrumb = ({ text, ...restProps }: IBreadcrumbProps) => {\n        // customize rendering of last breadcrumb\n        return <Breadcrumb {...restProps}>{text} <Icon icon=\"star\" /></Breadcrumb>;\n    };\n}\n```\n\n@interface IBreadcrumbsProps\n\n@### Breadcrumb\n\nThe `Breadcrumb` component renders an `a.bp3-breadcrumb` if given an `href` or\n`onClick` and a `span.bp3-breadcrumb` otherwise. Typically you will supply an\narray of `IBreadcrumbProps` to the `<Breadcrumbs items>` prop and only render\nthis component directly when defining a custom `breadcrumbRenderer`.\n\n@interface IBreadcrumbProps\n\n@## CSS\n\n* Begin with a `ul.bp3-breadcrumbs`; each crumb should be in its own `li` as a direct descendant.\n* Breadcrumbs are typically navigation links (for example, to the parent folder in a file path), and\ntherefore should use `<a>` tags (except for the final breadcrumb).\n* Each navigation breadcrumb should use `.bp3-breadcrumb`.\n* Make a breadcrumb non-interactive with the `.bp3-disabled` class. You should only use this\nstate when you want to indicate that the user cannot navigate to the breadcrumb (for example, if\nthe user does not have permission to access it). Otherwise, clicking a breadcrumb should take the\nuser to that resource.\n* Mark the final breadcrumb `.bp3-breadcrumb-current` for an emphasized appearance.\n* The `.bp3-breadcrumbs-collapsed` button-like element can be used as the target for a dropdown menu\ncontaining breadcrumbs that are collapsed due to layout constraints.\n* When adding another element (such as a [tooltip](#core/components/tooltip) or\n[popover](#core/components/popover)) to a breadcrumb, wrap it around the contents of the `li`.\n\n@css breadcrumbs",
      "metadata": {}
    },
    "button-group": {
      "reference": "button-group",
      "route": "core/components/button-group",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\button\\button-group.md",
      "title": "Button group",
      "contents": [
        {
          "tag": "heading",
          "value": "Button group",
          "level": 1,
          "route": "core/components/button-group"
        },
        "<p>Button groups arrange multiple buttons in a horizontal or vertical group.</p>\n",
        {
          "tag": "reactExample",
          "value": "ButtonGroupExample"
        },
        {
          "tag": "heading",
          "value": "Usage with popovers",
          "level": 2,
          "route": "core/components/button-group.usage-with-popovers"
        },
        "<p><code>Button</code>s inside a <code>ButtonGroup</code> can trivially be wrapped with a\n<a href=\"#core/components/popover\"><code>Popover</code></a> to create complex toolbars.</p>\n",
        {
          "tag": "reactExample",
          "value": "ButtonGroupPopoverExample"
        },
        {
          "tag": "heading",
          "value": "Flex layout",
          "level": 2,
          "route": "core/components/button-group.flex-layout"
        },
        "<p><code>ButtonGroup</code> is a CSS inline flex row (or column if vertical) and provides\nsome modifer props for common flexbox patterns:</p>\n<ul>\n<li><p>Enable the <code>fill</code> prop on a button group to make all buttons expand equally to\nfill the available space.</p>\n<ul>\n<li>Buttons will expand horizontally by default, or vertically if the <code>vertical</code> prop is enabled.</li>\n<li>Add the class <code>Classes.FIXED</code> to individual buttons to revert them to their initial sizes.</li>\n</ul>\n</li>\n<li><p>Alternatively, enable the <code>fill</code> prop on specific buttons (instead of on the\ngroup) to expand them equally to fill the available space while other\nbuttons retain their original sizes.</p>\n</li>\n</ul>\n<p>You can adjust the specific size of a button with the <code>flex-basis</code> or <code>width</code>\nCSS properties.</p>\n",
        {
          "tag": "heading",
          "value": "Vertical layout",
          "level": 2,
          "route": "core/components/button-group.vertical-layout"
        },
        "<p>Buttons in a vertical group all have the same width as the widest button in the\ngroup.</p>\n<p>Use the <code>alignText</code> prop to control icon and text alignment in the buttons. Set\nthis prop on <code>ButtonGroup</code> to affect all buttons in the group, or set the prop\non individual buttons directly.</p>\n",
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/button-group.props"
        },
        "<p>Most of the <code>ButtonGroup</code> props are also supported by <code>Button</code> directly; setting\nthese props on <code>ButtonGroup</code> will apply the same value to all buttons in the\ngroup. Note that most modifiers, once enabled on the group, cannot be overridden\non child buttons (due to the cascading nature of CSS).</p>\n<p>The component also supports all HTML <code>&lt;div&gt;</code> props.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>ButtonGroup</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>minimal</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant language boolean true tsx\"><span>true</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onMouseEnter</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"keyword operator spread tsx\"><span>...</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>icon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>database</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Queries</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>icon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>function</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Functions</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>AnchorButton</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>rightIcon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>caret-down</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Options</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>AnchorButton</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>ButtonGroup</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre>",
        {
          "tag": "interface",
          "value": "IButtonGroupProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/button-group.css"
        },
        "<p>Arrange multiple buttons in a group by wrapping them in <code>.bp3-button-group</code>.\nYou can apply sizing directly on the button group container element.</p>\n<p>You should implement interactive segmented controls as button groups.</p>\n",
        {
          "tag": "css",
          "value": "button-group"
        }
      ],
      "contentsRaw": "@# Button group\n\nButton groups arrange multiple buttons in a horizontal or vertical group.\n\n@reactExample ButtonGroupExample\n\n@## Usage with popovers\n\n`Button`s inside a `ButtonGroup` can trivially be wrapped with a\n[`Popover`](#core/components/popover) to create complex toolbars.\n\n@reactExample ButtonGroupPopoverExample\n\n@## Flex layout\n\n`ButtonGroup` is a CSS inline flex row (or column if vertical) and provides\nsome modifer props for common flexbox patterns:\n\n- Enable the `fill` prop on a button group to make all buttons expand equally to\n  fill the available space.\n    - Buttons will expand horizontally by default, or vertically if the `vertical` prop is enabled.\n    - Add the class `Classes.FIXED` to individual buttons to revert them to their initial sizes.\n\n- Alternatively, enable the `fill` prop on specific buttons (instead of on the\n  group) to expand them equally to fill the available space while other\n  buttons retain their original sizes.\n\nYou can adjust the specific size of a button with the `flex-basis` or `width`\nCSS properties.\n\n@## Vertical layout\n\nButtons in a vertical group all have the same width as the widest button in the\ngroup.\n\nUse the `alignText` prop to control icon and text alignment in the buttons. Set\nthis prop on `ButtonGroup` to affect all buttons in the group, or set the prop\non individual buttons directly.\n\n@## Props\n\nMost of the `ButtonGroup` props are also supported by `Button` directly; setting\nthese props on `ButtonGroup` will apply the same value to all buttons in the\ngroup. Note that most modifiers, once enabled on the group, cannot be overridden\non child buttons (due to the cascading nature of CSS).\n\nThe component also supports all HTML `<div>` props.\n\n```tsx\n<ButtonGroup minimal={true} onMouseEnter={...}>\n    <Button icon=\"database\">Queries</Button>\n    <Button icon=\"function\">Functions</Button>\n    <AnchorButton rightIcon=\"caret-down\">Options</AnchorButton>\n</ButtonGroup>\n```\n\n@interface IButtonGroupProps\n\n@## CSS\n\nArrange multiple buttons in a group by wrapping them in `.bp3-button-group`.\nYou can apply sizing directly on the button group container element.\n\nYou should implement interactive segmented controls as button groups.\n\n@css button-group",
      "metadata": {}
    },
    "button": {
      "reference": "button",
      "route": "core/components/button",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\button\\button.md",
      "title": "Button",
      "contents": [
        {
          "tag": "heading",
          "value": "Button",
          "level": 1,
          "route": "core/components/button"
        },
        "<p>Buttons trigger actions when clicked.</p>\n",
        {
          "tag": "reactExample",
          "value": "ButtonsExample"
        },
        "<h3 id=\"anchorbutton\"><code>AnchorButton</code></h3>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>AnchorButton</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Click</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;renders:</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>a</span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>class</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>bp3-button</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>role</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>tabIndex</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant numeric decimal tsx\"><span>0</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Click</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>a</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre><h3 id=\"button\"><code>Button</code></h3>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>icon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>refresh</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;renders:</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>button</span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>class</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>bp3-button</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>type</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>svg</span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>class</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>bp3-icon</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>...</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>svg</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>button</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre><div class=\"bp3-callout bp3-intent-danger bp3-icon-error\">\n    <h4 class=\"bp3-heading\">\n\nDisabled <code>Button</code> prevents all interaction\n</h4>\n\nUse <code>AnchorButton</code> if you need mouse interaction events (such as hovering) on a disabled button.\n\n<code>Button</code> uses the native <code>disabled</code> attribute on the <code>&lt;button&gt;</code> tag so the browser disables all interactions.\n<code>AnchorButton</code> uses the class <code>.bp3-disabled</code> because <code>&lt;a&gt;</code> tags do not support the <code>disabled</code>\nattribute. As a result, the <code>AnchorButton</code> component will prevent <em>only</em> the <code>onClick</code> handler\nwhen disabled but permit other events.\n\n</div>\n\n",
        {
          "tag": "heading",
          "value": "Adding icons",
          "level": 2,
          "route": "core/components/button.adding-icons"
        },
        "<p><code>Button</code> and <code>AnchorButton</code> support <code>icon</code> and <code>rightIcon</code> props to place an\nicon on either end of their children. Icons can also be supplied as children\nusing the <code>Icon</code> component.</p>\n",
        {
          "tag": "reactExample",
          "value": "ButtonsIconsExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/button.props"
        },
        "<p>The two button components each support arbitrary HTML props for their underlying\nDOM element (<code>&lt;button&gt;</code> and <code>&lt;a&gt;</code> respectively). Specifying an HTML prop will\noverride the component&#39;s default for it, such as <code>role</code> on <code>&lt;AnchorButton&gt;</code>.</p>\n",
        {
          "tag": "interface",
          "value": "IButtonProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/button.css"
        },
        "<p>Use the <code>bp3-button</code> class to access button styles. You should implement buttons using the\n<code>&lt;button&gt;</code> or <code>&lt;a&gt;</code> tags rather than <code>&lt;div&gt;</code> for accessibility.</p>\n<ul>\n<li>Make sure to include <code>type=&quot;button&quot;</code> on <code>&lt;button&gt;</code> tags (use <code>type=&quot;submit&quot;</code> to submit a\n<code>&lt;form&gt;</code>) and <code>role=&quot;button&quot;</code> on <code>&lt;a&gt;</code> tags for accessibility.</li>\n<li>Add the attribute <code>tabindex=&quot;0&quot;</code> to make <code>&lt;a&gt;</code> tags focusable. <code>&lt;button&gt;</code> elements are\nfocusable by default.</li>\n<li>For buttons implemented with <code>&lt;a&gt;</code> tags, add <code>tabindex=&quot;-1&quot;</code> to disabled buttons to prevent the\nuser from focusing them by pressing <kbd>tab</kbd> on the keyboard. (This does not happen in the example below.)</li>\n<li>Note that <code>&lt;a&gt;</code> tags do not respond to the <code>:disabled</code> attribute; use <code>.bp3-disabled</code> instead.</li>\n</ul>\n",
        {
          "tag": "css",
          "value": "button"
        }
      ],
      "contentsRaw": "@# Button\n\nButtons trigger actions when clicked.\n\n@reactExample ButtonsExample\n\n### `AnchorButton`\n\n```tsx\n<AnchorButton text=\"Click\" />\n// renders:\n<a class=\"bp3-button\" role=\"button\" tabIndex={0}>Click</a>\n```\n\n### `Button`\n\n```tsx\n<Button icon=\"refresh\" />\n// renders:\n<button class=\"bp3-button\" type=\"button\"><svg class=\"bp3-icon\">...</svg></button>\n```\n\n<div class=\"bp3-callout bp3-intent-danger bp3-icon-error\">\n    <h4 class=\"bp3-heading\">\n\nDisabled `Button` prevents all interaction\n</h4>\n\nUse `AnchorButton` if you need mouse interaction events (such as hovering) on a disabled button.\n\n`Button` uses the native `disabled` attribute on the `<button>` tag so the browser disables all interactions.\n`AnchorButton` uses the class `.bp3-disabled` because `<a>` tags do not support the `disabled`\nattribute. As a result, the `AnchorButton` component will prevent *only* the `onClick` handler\nwhen disabled but permit other events.\n\n</div>\n\n@## Adding icons\n\n`Button` and `AnchorButton` support `icon` and `rightIcon` props to place an\nicon on either end of their children. Icons can also be supplied as children\nusing the `Icon` component.\n\n@reactExample ButtonsIconsExample\n\n@## Props\n\nThe two button components each support arbitrary HTML props for their underlying\nDOM element (`<button>` and `<a>` respectively). Specifying an HTML prop will\noverride the component's default for it, such as `role` on `<AnchorButton>`.\n\n@interface IButtonProps\n\n@## CSS\n\nUse the `bp3-button` class to access button styles. You should implement buttons using the\n`<button>` or `<a>` tags rather than `<div>` for accessibility.\n\n* Make sure to include `type=\"button\"` on `<button>` tags (use `type=\"submit\"` to submit a\n  `<form>`) and `role=\"button\"` on `<a>` tags for accessibility.\n* Add the attribute `tabindex=\"0\"` to make `<a>` tags focusable. `<button>` elements are\n  focusable by default.\n* For buttons implemented with `<a>` tags, add `tabindex=\"-1\"` to disabled buttons to prevent the\n  user from focusing them by pressing <kbd>tab</kbd> on the keyboard. (This does not happen in the example below.)\n* Note that `<a>` tags do not respond to the `:disabled` attribute; use `.bp3-disabled` instead.\n\n@css button",
      "metadata": {}
    },
    "callout": {
      "reference": "callout",
      "route": "core/components/callout",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\callout\\callout.md",
      "title": "Callout",
      "contents": [
        {
          "tag": "heading",
          "value": "Callout",
          "level": 1,
          "route": "core/components/callout"
        },
        "<p>Callouts visually highlight important content for the user. They can contain\na title, an icon and content. Each intent has a default icon associated with it.</p>\n",
        {
          "tag": "reactExample",
          "value": "CalloutExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/callout.props"
        },
        {
          "tag": "interface",
          "value": "ICalloutProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/callout.css"
        },
        "<p>Callouts use the same visual intent modifier classes as buttons. If you need a\nheading, use the <code>&lt;h4&gt;</code> element with a <code>.bp3-heading</code> class.</p>\n",
        {
          "tag": "css",
          "value": "callout"
        }
      ],
      "contentsRaw": "@# Callout\n\nCallouts visually highlight important content for the user. They can contain\na title, an icon and content. Each intent has a default icon associated with it.\n\n@reactExample CalloutExample\n\n@## Props\n\n@interface ICalloutProps\n\n@## CSS\n\nCallouts use the same visual intent modifier classes as buttons. If you need a\nheading, use the `<h4>` element with a `.bp3-heading` class.\n\n@css callout",
      "metadata": {}
    },
    "card": {
      "reference": "card",
      "route": "core/components/card",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\card\\card.md",
      "title": "Card",
      "contents": [
        {
          "tag": "heading",
          "value": "Card",
          "level": 1,
          "route": "core/components/card"
        },
        "<p>A card is a bounded unit of UI content with a solid background color.</p>\n",
        {
          "tag": "reactExample",
          "value": "CardExample"
        },
        {
          "tag": "heading",
          "value": "Elevation",
          "level": 2,
          "route": "core/components/card.elevation"
        },
        "<p>Apply an <code>elevation</code> value to a card to apply a drop shadow that simulates\nheight in the UI. Five elevations are supported, from 0 to 4.</p>\n<p>The <code>Classes.ELEVATION_*</code> constants can be used on any element (not just a\n<code>Card</code>) to apply the drop shadow.</p>\n",
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/card.props"
        },
        "<p>This component is a simple stateless container for its children.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Button</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Card</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Elevation</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Card</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>interactive</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant language boolean true tsx\"><span>true</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>elevation</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Elevation</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>TWO</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>h5</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>a</span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>href</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>#</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Card&nbsp;heading</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>a</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>h5</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>p</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Card&nbsp;content</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>p</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Submit</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Card</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre>",
        {
          "tag": "interface",
          "value": "ICardProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/card.css"
        },
        "<p>Start with <code>.bp3-card</code> and add an elevation class <code>.bp3-elevation-*</code> to apply a\ndrop shadow that simulates height in the UI.</p>\n<p>Add the <code>.bp3-interactive</code> modifier class to make a <code>.bp3-card</code> respond to user\ninteractions. When you hover over cards with this class applied, the mouse\nchanges to a pointer and increases the elevation shadow on the card.</p>\n",
        {
          "tag": "css",
          "value": "card"
        }
      ],
      "contentsRaw": "@# Card\n\nA card is a bounded unit of UI content with a solid background color.\n\n@reactExample CardExample\n\n@## Elevation\n\nApply an `elevation` value to a card to apply a drop shadow that simulates\nheight in the UI. Five elevations are supported, from 0 to 4.\n\nThe `Classes.ELEVATION_*` constants can be used on any element (not just a\n`Card`) to apply the drop shadow.\n\n@## Props\n\nThis component is a simple stateless container for its children.\n\n```tsx\nimport { Button, Card, Elevation } from \"@blueprintjs/core\";\n\n<Card interactive={true} elevation={Elevation.TWO}>\n    <h5><a href=\"#\">Card heading</a></h5>\n    <p>Card content</p>\n    <Button>Submit</Button>\n</Card>\n```\n\n@interface ICardProps\n\n@## CSS\n\nStart with `.bp3-card` and add an elevation class `.bp3-elevation-*` to apply a\ndrop shadow that simulates height in the UI.\n\nAdd the `.bp3-interactive` modifier class to make a `.bp3-card` respond to user\ninteractions. When you hover over cards with this class applied, the mouse\nchanges to a pointer and increases the elevation shadow on the card.\n\n@css card",
      "metadata": {}
    },
    "collapse": {
      "reference": "collapse",
      "route": "core/components/collapse",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\collapse\\collapse.md",
      "title": "Collapse",
      "contents": [
        {
          "tag": "heading",
          "value": "Collapse",
          "level": 1,
          "route": "core/components/collapse"
        },
        "<p>The <code>Collapse</code> element shows and hides content with a built-in slide in/out animation.\nYou might use this to create a panel of settings for your application, with sub-sections\nthat can be expanded and collapsed.</p>\n",
        {
          "tag": "reactExample",
          "value": "CollapseExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/collapse.props"
        },
        "<p>Any content should be a child of the <code>Collapse</code> element. Content must be in the document\nflow (e.g. <code>position: absolute;</code> wouldn&#39;t work, as the parent element would inherit a height of 0).</p>\n<p>Toggling the <code>isOpen</code> prop triggers the open and close animations.\nOnce the component is in the closed state, the children are no longer rendered, unless the\n<code>keepChildrenMounted</code> prop is true.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta interface tsx\"><span class=\"keyword control export tsx\"><span>export</span></span><span>&nbsp;</span><span class=\"storage type interface tsx\"><span>interface</span></span><span>&nbsp;</span><span class=\"entity name type interface tsx\"><span>ICollapseExampleState</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta interface tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta field declaration tsx\"><span class=\"meta definition property tsx variable object property tsx\"><span>isOpen</span></span><span class=\"keyword operator optional tsx\"><span>?</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"support type primitive tsx\"><span>boolean</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta interface tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"keyword control export tsx\"><span>export</span></span><span>&nbsp;</span><span class=\"storage type class tsx\"><span>class</span></span><span>&nbsp;</span><span class=\"entity name type class tsx\"><span>CollapseExample</span></span><span>&nbsp;</span><span class=\"storage modifier tsx\"><span>extends</span></span><span>&nbsp;</span><span class=\"entity name type module tsx\"><span>React</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity other inherited-class tsx\"><span>Component</span></span><span class=\"meta type parameters tsx\"><span class=\"punctuation definition typeparameters begin tsx\"><span>&lt;</span></span><span class=\"meta object type tsx\"><span class=\"punctuation definition block tsx\"><span>{</span><span>}</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"entity name type tsx\"><span>ICollapseExampleState</span></span><span class=\"punctuation definition typeparameters end tsx\"><span>&gt;</span></span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"storage modifier tsx\"><span>public</span></span><span>&nbsp;</span><span class=\"meta field declaration tsx\"><span class=\"meta definition property tsx variable object property tsx\"><span>state</span></span><span>&nbsp;</span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta field declaration tsx\"><span class=\"meta objectliteral tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>isOpen</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"constant language boolean false tsx\"><span>false</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta field declaration tsx\"><span class=\"meta objectliteral tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta method declaration tsx\"><span class=\"storage modifier tsx\"><span>public</span></span><span>&nbsp;</span><span class=\"meta definition method tsx entity name function tsx\"><span>render</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control flow tsx\"><span>return</span></span><span>&nbsp;</span><span class=\"meta brace round tsx\"><span>(</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onClick</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>handleClick</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>state</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>isOpen</span></span><span>&nbsp;</span><span class=\"keyword operator ternary tsx\"><span>?</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Hide</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"keyword operator ternary tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Show</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;build&nbsp;logs</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Collapse</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>isOpen</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>state</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>isOpen</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Pre</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dummy&nbsp;text.</span></span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Pre</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Collapse</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"storage modifier tsx\"><span>private</span></span><span>&nbsp;</span><span class=\"meta field declaration tsx\"><span class=\"meta definition property tsx entity name function tsx\"><span>handleClick</span></span><span>&nbsp;</span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta arrow tsx\"><span>&nbsp;</span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"storage type function arrow tsx\"><span>=&gt;</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta field declaration tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>setState</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>isOpen</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"keyword operator logical tsx\"><span>!</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>state</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>isOpen</span></span><span>&nbsp;</span></span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta field declaration tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></div></pre>",
        {
          "tag": "interface",
          "value": "ICollapseProps"
        }
      ],
      "contentsRaw": "@# Collapse\n\nThe `Collapse` element shows and hides content with a built-in slide in/out animation.\nYou might use this to create a panel of settings for your application, with sub-sections\nthat can be expanded and collapsed.\n\n@reactExample CollapseExample\n\n@## Props\n\nAny content should be a child of the `Collapse` element. Content must be in the document\nflow (e.g. `position: absolute;` wouldn't work, as the parent element would inherit a height of 0).\n\nToggling the `isOpen` prop triggers the open and close animations.\nOnce the component is in the closed state, the children are no longer rendered, unless the\n`keepChildrenMounted` prop is true.\n\n```tsx\nexport interface ICollapseExampleState {\n    isOpen?: boolean;\n};\n\nexport class CollapseExample extends React.Component<{}, ICollapseExampleState> {\n    public state = {\n        isOpen: false,\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button onClick={this.handleClick}>\n                    {this.state.isOpen ? \"Hide\" : \"Show\"} build logs\n                </Button>\n                <Collapse isOpen={this.state.isOpen}>\n                    <Pre>\n                        Dummy text.\n                    </Pre>\n                </Collapse>\n            </div>\n        );\n    }\n\n    private handleClick = () => {\n        this.setState({ isOpen: !this.state.isOpen });\n    }\n}\n```\n\n@interface ICollapseProps",
      "metadata": {}
    },
    "collapsible-list": {
      "reference": "collapsible-list",
      "route": "core/components/collapsible-list",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\collapsible-list\\collapsible-list.md",
      "title": "Collapsible list",
      "contents": [
        {
          "tag": "heading",
          "value": "Collapsible list",
          "level": 1,
          "route": "core/components/collapsible-list"
        },
        "<p>The <code>CollapsibleList</code> component accepts a list of menu items and a count of\nvisible items. It shows precisely that many items and collapses the rest into a\ndropdown menu. The required <code>visibleItemRenderer</code> callback prop allows for\ncustomizing the appearance of visible items, using the props from the <code>MenuItem</code>\nchildren.</p>\n<div class=\"bp3-callout bp3-intent-danger bp3-icon-error\">\n    <h4 class=\"bp3-heading\">\n\nDeprecated: use <a href=\"#core/components/overflow-list\">Overflow list</a>\n</h4>\n\nThis component is <strong>deprecated since 3.0.0</strong> with the introduction of\n<a href=\"#core/components/overflow-list\"><code>OverflowList</code></a> which provides a similar\nexperience with two distinct advantages:\n\n<ol>\n    <li>Items collapse automatically based on available space in the container.</li>\n    <li>\n\n<code>OverflowList</code> accepts a generic array of items (instead of explicit\n<code>&lt;MenuItem&gt;</code> children) with custom renderers for both visible and overflowed\nitems, allowing for <em>any</em> UI, not just a dropdown menu.\n\n</li>\n</ol>\n\n</div>\n\n",
        {
          "tag": "reactExample",
          "value": "CollapsibleListExample"
        },
        {
          "tag": "heading",
          "value": "Separators",
          "level": 2,
          "route": "core/components/collapsible-list.separators"
        },
        "<p>Often a list of items calls for separators between each item.\nAdding separators to a <code>CollapsibleList</code> is easily achieved via CSS using <code>::after</code> pseudo-elements.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source css scss\"><span class=\"comment line scss\"><span>//</span><span>&nbsp;pass&nbsp;`visibleItemClassName=&quot;my-list-item&quot;`&nbsp;to&nbsp;component,&nbsp;then...</span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source css scss\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"entity other attribute-name class css\"><span class=\"punctuation definition entity css\"><span>.</span></span><span>my-list-item</span></span><span class=\"entity other attribute-name pseudo-element css\"><span class=\"punctuation definition entity css\"><span>::</span></span><span>after</span></span><span>&nbsp;</span><span class=\"meta property-list scss\"><span class=\"punctuation section property-list begin scss\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"meta property-list scss\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta property-name scss\"><span class=\"support type property-name scss\"><span>display</span></span></span><span class=\"meta property-value scss\"><span class=\"punctuation separator key-value scss\"><span>:</span></span><span>&nbsp;</span><span class=\"support constant property-value scss\"><span>inline-block</span></span><span class=\"punctuation terminator rule scss\"><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"meta property-list scss\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta property-name scss\"><span class=\"support type property-name scss\"><span>content</span></span></span><span class=\"meta property-value scss\"><span class=\"punctuation separator key-value scss\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted double scss\"><span class=\"punctuation definition string begin scss\"><span>&quot;</span></span><span class=\"punctuation definition string end scss\"><span>&quot;</span></span></span><span class=\"punctuation terminator rule scss\"><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"meta property-list scss\"><span class=\"comment line scss\"><span>&nbsp;&nbsp;&nbsp;&nbsp;//</span><span>&nbsp;custom&nbsp;separator&nbsp;styles...</span><span>&nbsp;</span></span></span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"meta property-list scss\"><span class=\"punctuation section property-list end scss\"><span>}</span></span></span></span></div><div class=\"line\"><span class=\"source css scss\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"comment line scss\"><span>//</span><span>&nbsp;remove&nbsp;separator&nbsp;after&nbsp;the&nbsp;last&nbsp;item</span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"entity other attribute-name class css\"><span class=\"punctuation definition entity css\"><span>.</span></span><span>my-list-item</span></span><span class=\"entity other attribute-name pseudo-class css\"><span class=\"punctuation definition entity css\"><span>:</span></span><span>last-child</span></span><span class=\"entity other attribute-name pseudo-element css\"><span class=\"punctuation definition entity css\"><span>::</span></span><span>after</span></span><span>&nbsp;</span><span class=\"meta property-list scss\"><span class=\"punctuation section property-list begin scss\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"meta property-list scss\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta property-name scss\"><span class=\"support type property-name scss\"><span>display</span></span></span><span class=\"meta property-value scss\"><span class=\"punctuation separator key-value scss\"><span>:</span></span><span>&nbsp;</span><span class=\"support constant property-value scss\"><span>none</span></span><span class=\"punctuation terminator rule scss\"><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"meta property-list scss\"><span class=\"punctuation section property-list end scss\"><span>}</span></span></span></span></div></pre>",
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/collapsible-list.props"
        },
        "<p>Children of the <code>CollapsibleList</code> component <em>must</em> be <code>MenuItem</code>s so they can be easily rendered\nin the dropdown. Define a <code>visibleItemRenderer</code> callback to customize the appearance of visible\nitems using their <a href=\"#core/components/menu.menu-item\"><code>IMenuItemProps</code></a>.</p>\n",
        {
          "tag": "interface",
          "value": "ICollapsibleListProps"
        }
      ],
      "contentsRaw": "@# Collapsible list\n\nThe `CollapsibleList` component accepts a list of menu items and a count of\nvisible items. It shows precisely that many items and collapses the rest into a\ndropdown menu. The required `visibleItemRenderer` callback prop allows for\ncustomizing the appearance of visible items, using the props from the `MenuItem`\nchildren.\n\n<div class=\"bp3-callout bp3-intent-danger bp3-icon-error\">\n    <h4 class=\"bp3-heading\">\n\nDeprecated: use [Overflow list](#core/components/overflow-list)\n</h4>\n\nThis component is **deprecated since 3.0.0** with the introduction of\n[`OverflowList`](#core/components/overflow-list) which provides a similar\nexperience with two distinct advantages:\n\n<ol>\n    <li>Items collapse automatically based on available space in the container.</li>\n    <li>\n\n`OverflowList` accepts a generic array of items (instead of explicit\n`<MenuItem>` children) with custom renderers for both visible and overflowed\nitems, allowing for _any_ UI, not just a dropdown menu.\n\n</li>\n</ol>\n\n</div>\n\n@reactExample CollapsibleListExample\n\n@## Separators\n\nOften a list of items calls for separators between each item.\nAdding separators to a `CollapsibleList` is easily achieved via CSS using `::after` pseudo-elements.\n\n```css.scss\n// pass `visibleItemClassName=\"my-list-item\"` to component, then...\n\n.my-list-item::after {\n    display: inline-block;\n    content: \"\";\n    // custom separator styles...\n}\n\n// remove separator after the last item\n.my-list-item:last-child::after {\n    display: none;\n}\n```\n\n@## Props\n\nChildren of the `CollapsibleList` component _must_ be `MenuItem`s so they can be easily rendered\nin the dropdown. Define a `visibleItemRenderer` callback to customize the appearance of visible\nitems using their [`IMenuItemProps`](#core/components/menu.menu-item).\n\n@interface ICollapsibleListProps",
      "metadata": {}
    },
    "components": {
      "reference": "components",
      "route": "core/components",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\components.md",
      "title": "Components",
      "contents": [
        {
          "tag": "heading",
          "value": "Components",
          "level": 1,
          "route": "core/components"
        },
        "<!-- Exact ordering of components in the navbar: -->\n",
        {
          "tag": "page",
          "value": "breadcrumbs"
        },
        {
          "tag": "page",
          "value": "button"
        },
        {
          "tag": "page",
          "value": "button-group"
        },
        {
          "tag": "page",
          "value": "callout"
        },
        {
          "tag": "page",
          "value": "card"
        },
        {
          "tag": "page",
          "value": "collapse"
        },
        {
          "tag": "page",
          "value": "collapsible-list"
        },
        {
          "tag": "page",
          "value": "divider"
        },
        {
          "tag": "page",
          "value": "editable-text"
        },
        {
          "tag": "page",
          "value": "html"
        },
        {
          "tag": "page",
          "value": "html-table"
        },
        {
          "tag": "page",
          "value": "hotkeys"
        },
        {
          "tag": "page",
          "value": "icon"
        },
        {
          "tag": "page",
          "value": "menu"
        },
        {
          "tag": "page",
          "value": "navbar"
        },
        {
          "tag": "page",
          "value": "non-ideal-state"
        },
        {
          "tag": "page",
          "value": "overflow-list"
        },
        {
          "tag": "page",
          "value": "panel-stack"
        },
        {
          "tag": "page",
          "value": "progress-bar"
        },
        {
          "tag": "page",
          "value": "resize-sensor"
        },
        {
          "tag": "page",
          "value": "skeleton"
        },
        {
          "tag": "page",
          "value": "spinner"
        },
        {
          "tag": "page",
          "value": "tabs"
        },
        {
          "tag": "page",
          "value": "tag"
        },
        {
          "tag": "page",
          "value": "text"
        },
        {
          "tag": "page",
          "value": "tree"
        },
        {
          "tag": "heading",
          "value": "Form controls",
          "level": 2,
          "route": "core/components.form-controls"
        },
        {
          "tag": "page",
          "value": "form-group"
        },
        {
          "tag": "page",
          "value": "control-group"
        },
        {
          "tag": "page",
          "value": "label"
        },
        {
          "tag": "page",
          "value": "checkbox"
        },
        {
          "tag": "page",
          "value": "radio"
        },
        {
          "tag": "page",
          "value": "html-select"
        },
        {
          "tag": "page",
          "value": "sliders"
        },
        {
          "tag": "page",
          "value": "switch"
        },
        {
          "tag": "heading",
          "value": "Form inputs",
          "level": 2,
          "route": "core/components.form-inputs"
        },
        {
          "tag": "page",
          "value": "file-input"
        },
        {
          "tag": "page",
          "value": "numeric-input"
        },
        {
          "tag": "page",
          "value": "text-inputs"
        },
        {
          "tag": "page",
          "value": "tag-input"
        },
        {
          "tag": "heading",
          "value": "Overlays",
          "level": 2,
          "route": "core/components.overlays"
        },
        {
          "tag": "page",
          "value": "overlay"
        },
        {
          "tag": "page",
          "value": "portal"
        },
        {
          "tag": "page",
          "value": "alert"
        },
        {
          "tag": "page",
          "value": "context-menu"
        },
        {
          "tag": "page",
          "value": "dialog"
        },
        {
          "tag": "page",
          "value": "drawer"
        },
        {
          "tag": "page",
          "value": "popover"
        },
        {
          "tag": "page",
          "value": "toast"
        },
        {
          "tag": "page",
          "value": "tooltip"
        }
      ],
      "contentsRaw": "@# Components\n\n<!-- Exact ordering of components in the navbar: -->\n\n@page breadcrumbs\n@page button\n@page button-group\n@page callout\n@page card\n@page collapse\n@page collapsible-list\n@page divider\n@page editable-text\n@page html\n@page html-table\n@page hotkeys\n@page icon\n@page menu\n@page navbar\n@page non-ideal-state\n@page overflow-list\n@page panel-stack\n@page progress-bar\n@page resize-sensor\n@page skeleton\n@page spinner\n@page tabs\n@page tag\n@page text\n@page tree\n\n@## Form controls\n\n@page form-group\n@page control-group\n@page label\n@page checkbox\n@page radio\n@page html-select\n@page sliders\n@page switch\n\n@## Form inputs\n\n@page file-input\n@page numeric-input\n@page text-inputs\n@page tag-input\n\n@## Overlays\n\n@page overlay\n@page portal\n@page alert\n@page context-menu\n@page dialog\n@page drawer\n@page popover\n@page toast\n@page tooltip",
      "metadata": {}
    },
    "context-menu": {
      "reference": "context-menu",
      "route": "core/components/context-menu",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\context-menu\\context-menu.md",
      "title": "Context menu",
      "contents": [
        {
          "tag": "heading",
          "value": "Context menu",
          "level": 1,
          "route": "core/components/context-menu"
        },
        "<p>Context menus present the user with a list of actions upon a right-click.</p>\n<p>You can create context menus in either of the following ways:</p>\n<ol>\n<li>Adding the <code>@ContextMenuTarget</code> <a href=\"#core/components/context-menu.decorator-usage\">decorator</a>\nto a React component that implements <code>renderContextMenu(): JSX.Element</code>.</li>\n<li>Use the <a href=\"#core/components/context-menu.imperative-usage\">imperative</a> <code>ContextMenu.show</code>\nand <code>ContextMenu.hide</code> API methods, ideal for non-React-based applications.</li>\n</ol>\n",
        {
          "tag": "reactExample",
          "value": "ContextMenuExample"
        },
        {
          "tag": "heading",
          "value": "Decorator usage",
          "level": 2,
          "route": "core/components/context-menu.decorator-usage"
        },
        "<p>The <code>@ContextMenuTarget</code> <a href=\"https://github.com/Microsoft/TypeScript-Handbook/blob/master/pages/Decorators.md\">class decorator</a> can be applied to any <code>React.Component</code>\nclass that meets the following requirements:</p>\n<ul>\n<li>It defines an instance method called <code>renderContextMenu()</code> that returns a single <code>JSX.Element</code>\n(most likely a <a href=\"#core/components/menu\"><code>Menu</code></a>) or <code>undefined</code>.</li>\n<li><p>Its root element supports the <code>&quot;contextmenu&quot;</code> event and the <code>onContextMenu</code> prop.</p>\n<p>This is always true if the decorated class uses an intrinsic element, such\nas <code>&lt;div&gt;</code>, as its root. If it uses a custom element as its root, you must\nensure that the prop is implemented correctly for that element.</p>\n</li>\n</ul>\n<p>When the user triggers the <code>&quot;contextmenu&quot;</code> event on the decorated class, <code>renderContextMenu()</code> is\ncalled. If <code>renderContextMenu()</code> returns an element, the browser&#39;s native <a href=\"https://en.wikipedia.org/wiki/Context_menu\">context menu</a> is\nblocked and the returned element is displayed instead in a <code>Popover</code> at the cursor&#39;s location.</p>\n<p>If the instance has a <code>onContextMenuClose</code> method, the decorator will call this function when\nthe context menu is closed.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>ContextMenuTarget</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Menu</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>MenuItem</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta decorator tsx\"><span class=\"punctuation decorator tsx\"><span>@</span></span><span class=\"variable other readwrite tsx\"><span>ContextMenuTarget</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"storage type class tsx\"><span>class</span></span><span>&nbsp;</span><span class=\"entity name type class tsx\"><span>RightClickMe</span></span><span>&nbsp;</span><span class=\"storage modifier tsx\"><span>extends</span></span><span>&nbsp;</span><span class=\"entity name type module tsx\"><span>React</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity other inherited-class tsx\"><span>Component</span></span><span class=\"meta type parameters tsx\"><span class=\"punctuation definition typeparameters begin tsx\"><span>&lt;</span></span><span class=\"meta object type tsx\"><span class=\"punctuation definition block tsx\"><span>{</span><span>}</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta object type tsx\"><span class=\"punctuation definition block tsx\"><span>{</span><span>}</span></span></span><span class=\"punctuation definition typeparameters end tsx\"><span>&gt;</span></span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta method declaration tsx\"><span class=\"storage modifier tsx\"><span>public</span></span><span>&nbsp;</span><span class=\"meta definition method tsx entity name function tsx\"><span>render</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"punctuation whitespace comment leading tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;root&nbsp;element&nbsp;must&nbsp;support&nbsp;`onContextMenu`</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control flow tsx\"><span>return</span></span><span>&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"keyword operator spread tsx\"><span>...</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta method declaration tsx\"><span class=\"storage modifier tsx\"><span>public</span></span><span>&nbsp;</span><span class=\"meta definition method tsx entity name function tsx\"><span>renderContextMenu</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"punctuation whitespace comment leading tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;return&nbsp;a&nbsp;single&nbsp;element,&nbsp;or&nbsp;nothing&nbsp;to&nbsp;use&nbsp;default&nbsp;browser&nbsp;behavior</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control flow tsx\"><span>return</span></span><span>&nbsp;</span><span class=\"meta brace round tsx\"><span>(</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Menu</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>MenuItem</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onClick</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>handleSave</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Save</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>MenuItem</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onClick</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>handleDelete</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Delete</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Menu</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta method declaration tsx\"><span class=\"storage modifier tsx\"><span>public</span></span><span>&nbsp;</span><span class=\"meta definition method tsx entity name function tsx\"><span>onContextMenuClose</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"punctuation whitespace comment leading tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;Optional&nbsp;method&nbsp;called&nbsp;once&nbsp;the&nbsp;context&nbsp;menu&nbsp;is&nbsp;closed.</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></div></pre><p>If you&#39;re using Blueprint in Javascript, and don&#39;t have access to the Babel config (ie: using <code>create-react-app</code>), you won&#39;t be able to just use the decorator. You can, instead, use it as a <a href=\"https://reactjs.org/docs/higher-order-components.html\">Higher-Order Component</a>, and get to keep all the benefits of <code>ContextMenuTarget</code>:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>import&nbsp;{&nbsp;ContextMenuTarget,&nbsp;Menu,&nbsp;MenuItem&nbsp;}&nbsp;from&nbsp;&quot;@blueprintjs/core&quot;;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>const&nbsp;RightClickMe&nbsp;=&nbsp;ContextMenuTarget(class&nbsp;RightClickMeWithContext&nbsp;extends&nbsp;React.Component&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;render()&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;root&nbsp;element&nbsp;must&nbsp;support&nbsp;`onContextMenu`</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&lt;div&gt;{...}&lt;/div&gt;;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;renderContextMenu()&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;return&nbsp;a&nbsp;single&nbsp;element,&nbsp;or&nbsp;nothing&nbsp;to&nbsp;use&nbsp;default&nbsp;browser&nbsp;behavior</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Menu&gt;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;MenuItem&nbsp;onClick={this.handleSave}&nbsp;text=&quot;Save&quot;&nbsp;/&gt;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;MenuItem&nbsp;onClick={this.handleDelete}&nbsp;text=&quot;Delete&quot;&nbsp;/&gt;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Menu&gt;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;onContextMenuClose()&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Optional&nbsp;method&nbsp;called&nbsp;once&nbsp;the&nbsp;context&nbsp;menu&nbsp;is&nbsp;closed.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>});</span></span></div></pre>",
        {
          "tag": "heading",
          "value": "Imperative usage",
          "level": 2,
          "route": "core/components/context-menu.imperative-usage"
        },
        "<p>The imperative API provides a single static <code>ContextMenu</code> object, enforcing the\nprinciple that only one context menu can be open at a time. This API is ideal\nfor programmatically triggered menus or for non-React apps.</p>\n<ul>\n<li><p><code>ContextMenu.show(menu: JSX.Element, offset: IOffset, onClose?: () =&gt; void, isDarkTheme?: boolean): void</code></p>\n<p>Show the given element at the given offset from the top-left corner of the\nviewport. Showing a menu closes the previously shown one automatically. The\nmenu appears below-right of this point, but will flip to below-left instead if\nthere is not enough room on-screen. The optional callback is invoked when this\nmenu closes.</p>\n</li>\n<li><p><code>ContextMenu.hide(): void</code></p>\n<p>Hide the context menu, if it is open.</p>\n</li>\n<li><p><code>ContextMenu.isOpen(): boolean</code></p>\n<p>Whether a context menu is currently visible.</p>\n</li>\n</ul>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source ts\"><span class=\"meta import ts\"><span class=\"keyword control import ts\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block ts\"><span class=\"punctuation definition block ts\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias ts\"><span>ContextMenu</span></span><span class=\"punctuation separator comma ts\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias ts\"><span>Menu</span></span><span class=\"punctuation separator comma ts\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias ts\"><span>MenuItem</span></span><span>&nbsp;</span><span class=\"punctuation definition block ts\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from ts\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double ts\"><span class=\"punctuation definition string begin ts\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end ts\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement ts\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source ts\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta var expr ts\"><span class=\"storage type ts\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr ts\"><span class=\"meta definition variable ts variable other readwrite ts\"><span>rightClickMe</span></span><span>&nbsp;</span></span><span class=\"keyword operator assignment ts\"><span>=</span></span><span>&nbsp;</span><span class=\"meta function-call ts\"><span class=\"support variable dom ts\"><span>document</span></span><span class=\"punctuation accessor ts\"><span>.</span></span><span class=\"support function dom ts\"><span>querySelector</span></span></span><span class=\"meta brace round ts\"><span>(</span></span><span class=\"string quoted double ts\"><span class=\"punctuation definition string begin ts\"><span>&quot;</span></span><span>#right-click-me</span><span class=\"punctuation definition string end ts\"><span>&quot;</span></span></span><span class=\"meta brace round ts\"><span>)</span></span><span>&nbsp;</span><span class=\"keyword control as ts\"><span>as</span></span><span>&nbsp;</span><span class=\"entity name type ts\"><span>HTMLElement</span></span></span><span class=\"punctuation terminator statement ts\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"variable other object ts\"><span>rightClickMe</span></span><span class=\"punctuation accessor ts\"><span>.</span></span><span class=\"entity name function ts\"><span>oncontextmenu</span></span><span>&nbsp;</span><span class=\"keyword operator assignment ts\"><span>=</span></span><span class=\"meta arrow ts\"><span>&nbsp;</span><span class=\"meta parameters ts\"><span class=\"punctuation definition parameters begin ts\"><span>(</span></span><span class=\"variable parameter ts\"><span>e</span></span><span class=\"meta type annotation ts\"><span class=\"keyword operator type annotation ts\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type ts\"><span>MouseEvent</span></span></span><span class=\"punctuation definition parameters end ts\"><span>)</span></span></span><span>&nbsp;</span><span class=\"storage type function arrow ts\"><span>=&gt;</span></span><span>&nbsp;</span><span class=\"meta block ts\"><span class=\"punctuation definition block ts\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta arrow ts\"><span class=\"meta block ts\"><span class=\"punctuation whitespace comment leading ts\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"comment line double-slash ts\"><span class=\"punctuation definition comment ts\"><span>//</span></span><span>&nbsp;prevent&nbsp;the&nbsp;browser&#39;s&nbsp;native&nbsp;context&nbsp;menu</span></span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta arrow ts\"><span class=\"meta block ts\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta function-call ts\"><span class=\"variable other object ts\"><span>e</span></span><span class=\"punctuation accessor ts\"><span>.</span></span><span class=\"support function dom ts\"><span>preventDefault</span></span></span><span class=\"meta brace round ts\"><span>(</span><span>)</span></span><span class=\"punctuation terminator statement ts\"><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta arrow ts\"><span class=\"meta block ts\"><span>&nbsp;</span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta arrow ts\"><span class=\"meta block ts\"><span class=\"punctuation whitespace comment leading ts\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"comment line double-slash ts\"><span class=\"punctuation definition comment ts\"><span>//</span></span><span>&nbsp;render&nbsp;a&nbsp;Menu&nbsp;without&nbsp;JSX...</span></span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta arrow ts\"><span class=\"meta block ts\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta var expr ts\"><span class=\"storage type ts\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr ts\"><span class=\"meta definition variable ts variable other readwrite ts\"><span>menu</span></span><span>&nbsp;</span></span><span class=\"keyword operator assignment ts\"><span>=</span></span><span>&nbsp;</span><span class=\"meta function-call ts\"><span class=\"variable other object ts\"><span>React</span></span><span class=\"punctuation accessor ts\"><span>.</span></span><span class=\"support function dom ts\"><span>createElement</span></span></span><span class=\"meta brace round ts\"><span>(</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta arrow ts\"><span class=\"meta block ts\"><span class=\"meta var expr ts\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"variable other readwrite ts\"><span>Menu</span></span><span class=\"punctuation separator comma ts\"><span>,</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta arrow ts\"><span class=\"meta block ts\"><span class=\"meta var expr ts\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta objectliteral ts\"><span class=\"punctuation definition block ts\"><span>{</span><span>}</span></span></span><span class=\"punctuation separator comma ts\"><span>,</span></span><span>&nbsp;</span><span class=\"comment line double-slash ts\"><span class=\"punctuation definition comment ts\"><span>//</span></span><span>&nbsp;empty&nbsp;props</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta arrow ts\"><span class=\"meta block ts\"><span class=\"meta var expr ts\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta function-call ts\"><span class=\"variable other object ts\"><span>React</span></span><span class=\"punctuation accessor ts\"><span>.</span></span><span class=\"support function dom ts\"><span>createElement</span></span></span><span class=\"meta brace round ts\"><span>(</span></span><span class=\"variable other readwrite ts\"><span>MenuItem</span></span><span class=\"punctuation separator comma ts\"><span>,</span></span><span>&nbsp;</span><span class=\"meta objectliteral ts\"><span class=\"punctuation definition block ts\"><span>{</span></span><span>&nbsp;</span><span class=\"meta object member ts\"><span class=\"meta object-literal key ts\"><span>onClick</span></span><span class=\"meta object-literal key ts punctuation separator key-value ts\"><span>:</span></span><span>&nbsp;</span><span class=\"variable other readwrite ts\"><span>handleSave</span></span></span><span class=\"punctuation separator comma ts\"><span>,</span></span><span>&nbsp;</span><span class=\"meta object member ts\"><span class=\"meta object-literal key ts\"><span>text</span></span><span class=\"meta object-literal key ts punctuation separator key-value ts\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted double ts\"><span class=\"punctuation definition string begin ts\"><span>&quot;</span></span><span>Save</span><span class=\"punctuation definition string end ts\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition block ts\"><span>}</span></span></span><span class=\"meta brace round ts\"><span>)</span></span><span class=\"punctuation separator comma ts\"><span>,</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta arrow ts\"><span class=\"meta block ts\"><span class=\"meta var expr ts\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta function-call ts\"><span class=\"variable other object ts\"><span>React</span></span><span class=\"punctuation accessor ts\"><span>.</span></span><span class=\"support function dom ts\"><span>createElement</span></span></span><span class=\"meta brace round ts\"><span>(</span></span><span class=\"variable other readwrite ts\"><span>MenuItem</span></span><span class=\"punctuation separator comma ts\"><span>,</span></span><span>&nbsp;</span><span class=\"meta objectliteral ts\"><span class=\"punctuation definition block ts\"><span>{</span></span><span>&nbsp;</span><span class=\"meta object member ts\"><span class=\"meta object-literal key ts\"><span>onClick</span></span><span class=\"meta object-literal key ts punctuation separator key-value ts\"><span>:</span></span><span>&nbsp;</span><span class=\"variable other readwrite ts\"><span>handleDelete</span></span></span><span class=\"punctuation separator comma ts\"><span>,</span></span><span>&nbsp;</span><span class=\"meta object member ts\"><span class=\"meta object-literal key ts\"><span>text</span></span><span class=\"meta object-literal key ts punctuation separator key-value ts\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted double ts\"><span class=\"punctuation definition string begin ts\"><span>&quot;</span></span><span>Delete</span><span class=\"punctuation definition string end ts\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition block ts\"><span>}</span></span></span><span class=\"meta brace round ts\"><span>)</span></span><span class=\"punctuation separator comma ts\"><span>,</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta arrow ts\"><span class=\"meta block ts\"><span class=\"meta var expr ts\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta brace round ts\"><span>)</span></span></span><span class=\"punctuation terminator statement ts\"><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta arrow ts\"><span class=\"meta block ts\"><span>&nbsp;</span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta arrow ts\"><span class=\"meta block ts\"><span class=\"punctuation whitespace comment leading ts\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"comment line double-slash ts\"><span class=\"punctuation definition comment ts\"><span>//</span></span><span>&nbsp;mouse&nbsp;position&nbsp;is&nbsp;available&nbsp;on&nbsp;event</span></span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta arrow ts\"><span class=\"meta block ts\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta function-call ts\"><span class=\"variable other object ts\"><span>ContextMenu</span></span><span class=\"punctuation accessor ts\"><span>.</span></span><span class=\"entity name function ts\"><span>show</span></span></span><span class=\"meta brace round ts\"><span>(</span></span><span class=\"variable other readwrite ts\"><span>menu</span></span><span class=\"punctuation separator comma ts\"><span>,</span></span><span>&nbsp;</span><span class=\"meta objectliteral ts\"><span class=\"punctuation definition block ts\"><span>{</span></span><span>&nbsp;</span><span class=\"meta object member ts\"><span class=\"meta object-literal key ts\"><span>left</span></span><span class=\"meta object-literal key ts punctuation separator key-value ts\"><span>:</span></span><span>&nbsp;</span><span class=\"variable other object ts\"><span>e</span></span><span class=\"punctuation accessor ts\"><span>.</span></span><span class=\"variable other property ts\"><span>clientX</span></span></span><span class=\"punctuation separator comma ts\"><span>,</span></span><span>&nbsp;</span><span class=\"meta object member ts\"><span class=\"meta object-literal key ts\"><span>top</span></span><span class=\"meta object-literal key ts punctuation separator key-value ts\"><span>:</span></span><span>&nbsp;</span><span class=\"variable other object ts\"><span>e</span></span><span class=\"punctuation accessor ts\"><span>.</span></span><span class=\"variable other property ts\"><span>clientY</span></span><span>&nbsp;</span></span><span class=\"punctuation definition block ts\"><span>}</span></span></span><span class=\"punctuation separator comma ts\"><span>,</span></span><span class=\"meta arrow ts\"><span>&nbsp;</span><span class=\"meta parameters ts\"><span class=\"punctuation definition parameters begin ts\"><span>(</span></span><span class=\"punctuation definition parameters end ts\"><span>)</span></span></span><span>&nbsp;</span><span class=\"storage type function arrow ts\"><span>=&gt;</span></span><span>&nbsp;</span><span class=\"meta block ts\"><span class=\"punctuation definition block ts\"><span>{</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta arrow ts\"><span class=\"meta block ts\"><span class=\"meta arrow ts\"><span class=\"meta block ts\"><span class=\"punctuation whitespace comment leading ts\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"comment line double-slash ts\"><span class=\"punctuation definition comment ts\"><span>//</span></span><span>&nbsp;menu&nbsp;was&nbsp;closed;&nbsp;callback&nbsp;optional</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta arrow ts\"><span class=\"meta block ts\"><span class=\"meta arrow ts\"><span class=\"meta block ts\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block ts\"><span>}</span></span></span></span><span class=\"meta brace round ts\"><span>)</span></span><span class=\"punctuation terminator statement ts\"><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta arrow ts\"><span class=\"meta block ts\"><span class=\"punctuation definition block ts\"><span>}</span></span></span></span><span class=\"punctuation terminator statement ts\"><span>;</span></span></span></div></pre>"
      ],
      "contentsRaw": "@# Context menu\n\nContext menus present the user with a list of actions upon a right-click.\n\nYou can create context menus in either of the following ways:\n\n1. Adding the `@ContextMenuTarget` [decorator](#core/components/context-menu.decorator-usage)\n  to a React component that implements `renderContextMenu(): JSX.Element`.\n1. Use the [imperative](#core/components/context-menu.imperative-usage) `ContextMenu.show`\n  and `ContextMenu.hide` API methods, ideal for non-React-based applications.\n\n@reactExample ContextMenuExample\n\n@## Decorator usage\n\nThe `@ContextMenuTarget` [class decorator][ts-decorator] can be applied to any `React.Component`\nclass that meets the following requirements:\n\n- It defines an instance method called `renderContextMenu()` that returns a single `JSX.Element`\n(most likely a [`Menu`](#core/components/menu)) or `undefined`.\n- Its root element supports the `\"contextmenu\"` event and the `onContextMenu` prop.\n\n  This is always true if the decorated class uses an intrinsic element, such\n  as `<div>`, as its root. If it uses a custom element as its root, you must\n  ensure that the prop is implemented correctly for that element.\n\nWhen the user triggers the `\"contextmenu\"` event on the decorated class, `renderContextMenu()` is\ncalled. If `renderContextMenu()` returns an element, the browser's native [context menu][wiki-cm] is\nblocked and the returned element is displayed instead in a `Popover` at the cursor's location.\n\nIf the instance has a `onContextMenuClose` method, the decorator will call this function when\nthe context menu is closed.\n\n```tsx\nimport { ContextMenuTarget, Menu, MenuItem } from \"@blueprintjs/core\";\n\n@ContextMenuTarget\nclass RightClickMe extends React.Component<{}, {}> {\n    public render() {\n        // root element must support `onContextMenu`\n        return <div>{...}</div>;\n    }\n\n    public renderContextMenu() {\n        // return a single element, or nothing to use default browser behavior\n        return (\n            <Menu>\n                <MenuItem onClick={this.handleSave} text=\"Save\" />\n                <MenuItem onClick={this.handleDelete} text=\"Delete\" />\n            </Menu>\n        );\n    }\n\n    public onContextMenuClose() {\n        // Optional method called once the context menu is closed.\n    }\n}\n```\n\nIf you're using Blueprint in Javascript, and don't have access to the Babel config (ie: using `create-react-app`), you won't be able to just use the decorator. You can, instead, use it as a [Higher-Order Component][react-hoc], and get to keep all the benefits of `ContextMenuTarget`:\n\n```jsx\nimport { ContextMenuTarget, Menu, MenuItem } from \"@blueprintjs/core\";\n\nconst RightClickMe = ContextMenuTarget(class RightClickMeWithContext extends React.Component {\n    render() {\n        // root element must support `onContextMenu`\n        return <div>{...}</div>;\n    }\n\n    renderContextMenu() {\n        // return a single element, or nothing to use default browser behavior\n        return (\n            <Menu>\n                <MenuItem onClick={this.handleSave} text=\"Save\" />\n                <MenuItem onClick={this.handleDelete} text=\"Delete\" />\n            </Menu>\n        );\n    }\n\n    onContextMenuClose() {\n        // Optional method called once the context menu is closed.\n    }\n});\n```\n\n[ts-decorator]: https://github.com/Microsoft/TypeScript-Handbook/blob/master/pages/Decorators.md\n[wiki-cm]: https://en.wikipedia.org/wiki/Context_menu\n[react-hoc]: https://reactjs.org/docs/higher-order-components.html\n\n@## Imperative usage\n\nThe imperative API provides a single static `ContextMenu` object, enforcing the\nprinciple that only one context menu can be open at a time. This API is ideal\nfor programmatically triggered menus or for non-React apps.\n\n- `ContextMenu.show(menu: JSX.Element, offset: IOffset, onClose?: () => void, isDarkTheme?: boolean): void`\n\n  Show the given element at the given offset from the top-left corner of the\n  viewport. Showing a menu closes the previously shown one automatically. The\n  menu appears below-right of this point, but will flip to below-left instead if\n  there is not enough room on-screen. The optional callback is invoked when this\n  menu closes.\n\n- `ContextMenu.hide(): void`\n\n  Hide the context menu, if it is open.\n\n- `ContextMenu.isOpen(): boolean`\n\n  Whether a context menu is currently visible.\n\n\n```ts\nimport { ContextMenu, Menu, MenuItem } from \"@blueprintjs/core\";\n\nconst rightClickMe = document.querySelector(\"#right-click-me\") as HTMLElement;\nrightClickMe.oncontextmenu = (e: MouseEvent) => {\n    // prevent the browser's native context menu\n    e.preventDefault();\n\n    // render a Menu without JSX...\n    const menu = React.createElement(\n        Menu,\n        {}, // empty props\n        React.createElement(MenuItem, { onClick: handleSave, text: \"Save\" }),\n        React.createElement(MenuItem, { onClick: handleDelete, text: \"Delete\" }),\n    );\n\n    // mouse position is available on event\n    ContextMenu.show(menu, { left: e.clientX, top: e.clientY }, () => {\n        // menu was closed; callback optional\n    });\n};\n```",
      "metadata": {}
    },
    "dialog": {
      "reference": "dialog",
      "route": "core/components/dialog",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\dialog\\dialog.md",
      "title": "Dialog",
      "contents": [
        {
          "tag": "heading",
          "value": "Dialog",
          "level": 1,
          "route": "core/components/dialog"
        },
        "<p>Dialogs present content overlaid over other parts of the UI.</p>\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Terminology note</h4>\n\nThe term &quot;modal&quot; is sometimes used to mean &quot;dialog,&quot; but this is a misnomer.\n<em>Modal</em> is an adjective that describes parts of a UI.\nAn element is considered modal if it\n<a href=\"https://en.wikipedia.org/wiki/Modal_window\">blocks interaction with the rest of the application</a>.\nWe use the term &quot;dialog&quot; to avoid confusion with the adjective.\n\n</div>\n\n",
        {
          "tag": "reactExample",
          "value": "DialogExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/dialog.props"
        },
        "<p><code>Dialog</code> is a stateless React component controlled by the <code>isOpen</code> prop.</p>\n<p>The children you provide to this component are rendered as contents inside the\n<code>Classes.DIALOG</code> element. Typically, you will want to provide a child with\n<code>Classes.DIALOG_BODY</code> that contains the body content and a child with\n<code>Classes.DIALOG_FOOTER</code> that contains the action buttons.</p>\n",
        {
          "tag": "interface",
          "value": "IDialogProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/dialog.css"
        },
        "<p>You can create dialogs manually using the HTML markup and <code>bp3-dialog-*</code> classes below.\nHowever, you should use the <a href=\"#core/components/dialog.props\"><code>Dialog</code> component</a>\nwhenever possible, as they automatically generate some of this markup.</p>\n<p>More examples of dialog content are shown below.</p>\n",
        {
          "tag": "css",
          "value": "dialog"
        }
      ],
      "contentsRaw": "@# Dialog\n\nDialogs present content overlaid over other parts of the UI.\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Terminology note</h4>\n\nThe term \"modal\" is sometimes used to mean \"dialog,\" but this is a misnomer.\n_Modal_ is an adjective that describes parts of a UI.\nAn element is considered modal if it\n[blocks interaction with the rest of the application](https://en.wikipedia.org/wiki/Modal_window).\nWe use the term \"dialog\" to avoid confusion with the adjective.\n\n</div>\n\n@reactExample DialogExample\n\n@## Props\n\n`Dialog` is a stateless React component controlled by the `isOpen` prop.\n\nThe children you provide to this component are rendered as contents inside the\n`Classes.DIALOG` element. Typically, you will want to provide a child with\n`Classes.DIALOG_BODY` that contains the body content and a child with\n`Classes.DIALOG_FOOTER` that contains the action buttons.\n\n@interface IDialogProps\n\n@## CSS\n\nYou can create dialogs manually using the HTML markup and `bp3-dialog-*` classes below.\nHowever, you should use the [`Dialog` component](#core/components/dialog.props)\nwhenever possible, as they automatically generate some of this markup.\n\nMore examples of dialog content are shown below.\n\n@css dialog",
      "metadata": {}
    },
    "divider": {
      "reference": "divider",
      "route": "core/components/divider",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\divider\\divider.md",
      "title": "Divider",
      "contents": [
        {
          "tag": "heading",
          "value": "Divider",
          "level": 1,
          "route": "core/components/divider"
        },
        "<p><code>Divider</code> visually separate contents with a thin line and margin on all sides.</p>\n<p>Dividers work best in flex layouts where they will adapt to orientation without\nadditional styles. Otherwise, a divider will appear as a full-width 1px-high\nblock element.</p>\n",
        {
          "tag": "reactExample",
          "value": "DividerExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/divider.props"
        },
        {
          "tag": "interface",
          "value": "IDividerProps"
        }
      ],
      "contentsRaw": "\n@# Divider\n\n`Divider` visually separate contents with a thin line and margin on all sides.\n\nDividers work best in flex layouts where they will adapt to orientation without\nadditional styles. Otherwise, a divider will appear as a full-width 1px-high\nblock element.\n\n@reactExample DividerExample\n\n@## Props\n\n@interface IDividerProps",
      "metadata": {
        "tag": "new"
      }
    },
    "drawer": {
      "reference": "drawer",
      "route": "core/components/drawer",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\drawer\\drawer.md",
      "title": "Drawer",
      "contents": [
        {
          "tag": "heading",
          "value": "Drawer",
          "level": 1,
          "route": "core/components/drawer"
        },
        "<p>Drawers overlay content over existing parts of the UI and are anchored to the edge of the screen.</p>\n",
        {
          "tag": "reactExample",
          "value": "DrawerExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/drawer.props"
        },
        "<p><code>Drawer</code> is a stateless React component controlled by the <code>isOpen</code> prop.</p>\n<p>Use the <code>size</code> prop to set the size of the <code>Drawer</code>. This prop sets CSS <code>width</code> if <code>vertical={false}</code> (default) and <code>height</code> otherwise. Constants are available for common sizes:</p>\n<ul>\n<li><code>Drawer.SIZE_SMALL = 360px</code></li>\n<li><code>Drawer.SIZE_STANDARD = 50%</code> (default)</li>\n<li><code>Drawer.SIZE_LARGE = 90%</code></li>\n</ul>\n",
        {
          "tag": "interface",
          "value": "IDrawerProps"
        }
      ],
      "contentsRaw": "\n@# Drawer\n\nDrawers overlay content over existing parts of the UI and are anchored to the edge of the screen.\n\n@reactExample DrawerExample\n\n@## Props\n\n`Drawer` is a stateless React component controlled by the `isOpen` prop.\n\nUse the `size` prop to set the size of the `Drawer`. This prop sets CSS `width` if `vertical={false}` (default) and `height` otherwise. Constants are available for common sizes:\n\n- `Drawer.SIZE_SMALL = 360px`\n- `Drawer.SIZE_STANDARD = 50%` (default)\n- `Drawer.SIZE_LARGE = 90%`\n\n@interface IDrawerProps",
      "metadata": {
        "tag": "new"
      }
    },
    "editable-text": {
      "reference": "editable-text",
      "route": "core/components/editable-text",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\editable-text\\editable-text.md",
      "title": "Editable text",
      "contents": [
        {
          "tag": "heading",
          "value": "Editable text",
          "level": 1,
          "route": "core/components/editable-text"
        },
        "<p><code>EditableText</code> appears as normal UI text but transforms into a text input field\nwhen the user focuses it.</p>\n<p>The text input inherits all font styling from its ancestors, making for a\nseamless transition between reading and editing text.</p>\n<p>You might use this component for inline renaming, or for an\n<a href=\"#core/components/editable-text.multiline-mode\">editable multiline description</a>.\nYou should not use <code>EditableText</code> when a static always-editable <code>&lt;input&gt;</code> or\n<code>&lt;textarea&gt;</code> tag would suffice.</p>\n",
        {
          "tag": "reactExample",
          "value": "EditableTextExample"
        },
        "<div class=\"bp3-callout bp3-intent-danger bp3-icon-error\">\n    <h4 class=\"bp3-heading\">Centering the component</h4>\n\n<strong>Do not center this component</strong> using <code>text-align: center</code>, as it will cause an infinite loop\nin the browser (<a href=\"https://github.com/JedWatson/react-select/issues/540\">more details</a>). Instead,\nyou should center the component via flexbox or with <code>position</code> and <code>transform: translateX(-50%)</code>.\n\n</div>\n\n\n",
        {
          "tag": "heading",
          "value": "Multiline mode",
          "level": 2,
          "route": "core/components/editable-text.multiline-mode"
        },
        "<p>By default, <code>EditableText</code> supports <em>exactly one line of text</em> and will grow or\nshrink horizontally based on the length of text.</p>\n<p>Enable the <code>multiline</code> prop to use a <code>&lt;textarea&gt;</code> that spans multiple lines\ninstead of an <code>&lt;input type=&quot;text&quot;&gt;</code>. Multiline mode always appears at 100% width\nand adjusts <em>vertically</em> based on length of text. Use the <code>minLines</code> and\n<code>maxLines</code> props to constrain the height of the component.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>EditableText</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>multiline</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant language boolean true tsx\"><span>true</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>minLines</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant numeric decimal tsx\"><span>3</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>maxLines</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant numeric decimal tsx\"><span>12</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"keyword operator spread tsx\"><span>...</span></span><span class=\"variable other readwrite tsx\"><span>props</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></div></pre><p>Users confirm text in multiline mode by pressing <code>ctrl</code>+<code>enter</code> or <code>cmd</code>+<code>enter</code>\nrather than simply <code>enter</code>. (Pressing the <code>enter</code> key by itself moves the cursor\nto the next line.) This behavior can be inverted with the <code>confirmOnEnterKey</code>\nprop.</p>\n",
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/editable-text.props"
        },
        "<p><code>EditableText</code> is used like an <a href=\"https://facebook.github.io/react/docs/forms.html\"><code>input</code>\nelement</a> and supports\ncontrolled or uncontrolled usage through the <code>value</code> or <code>defaultValue</code> props,\nrespectively. Use <code>onChange</code> to listen to ongoing updates and use <code>onConfirm</code>\nand <code>onCancel</code> to listen only to completed or canceled edits.</p>\n<p>The <code>onConfirm</code> and <code>onCancel</code> callbacks are invoked based on user interaction.\nThe user presses <code>enter</code> (or <code>cmd</code>+<code>enter</code> when multiline) or blurs the input to\nconfirm the current value, or presses <code>esc</code> to cancel. Canceling resets the\nfield to the last confirmed value. Neither callback is invoked if the value is\nunchanged.</p>\n",
        {
          "tag": "interface",
          "value": "IEditableTextProps"
        }
      ],
      "contentsRaw": "@# Editable text\n\n`EditableText` appears as normal UI text but transforms into a text input field\nwhen the user focuses it.\n\nThe text input inherits all font styling from its ancestors, making for a\nseamless transition between reading and editing text.\n\nYou might use this component for inline renaming, or for an\n[editable multiline description](#core/components/editable-text.multiline-mode).\nYou should not use `EditableText` when a static always-editable `<input>` or\n`<textarea>` tag would suffice.\n\n@reactExample EditableTextExample\n\n<div class=\"bp3-callout bp3-intent-danger bp3-icon-error\">\n    <h4 class=\"bp3-heading\">Centering the component</h4>\n\n**Do not center this component** using `text-align: center`, as it will cause an infinite loop\nin the browser ([more details](https://github.com/JedWatson/react-select/issues/540)). Instead,\nyou should center the component via flexbox or with `position` and `transform: translateX(-50%)`.\n\n</div>\n\n\n@## Multiline mode\n\nBy default, `EditableText` supports _exactly one line of text_ and will grow or\nshrink horizontally based on the length of text.\n\nEnable the `multiline` prop to use a `<textarea>` that spans multiple lines\ninstead of an `<input type=\"text\">`. Multiline mode always appears at 100% width\nand adjusts _vertically_ based on length of text. Use the `minLines` and\n`maxLines` props to constrain the height of the component.\n\n```tsx\n<EditableText multiline={true} minLines={3} maxLines={12} {...props} />\n```\n\nUsers confirm text in multiline mode by pressing `ctrl`+`enter` or `cmd`+`enter`\nrather than simply `enter`. (Pressing the `enter` key by itself moves the cursor\nto the next line.) This behavior can be inverted with the `confirmOnEnterKey`\nprop.\n\n@## Props\n\n`EditableText` is used like an [`input`\nelement](https://facebook.github.io/react/docs/forms.html) and supports\ncontrolled or uncontrolled usage through the `value` or `defaultValue` props,\nrespectively. Use `onChange` to listen to ongoing updates and use `onConfirm`\nand `onCancel` to listen only to completed or canceled edits.\n\nThe `onConfirm` and `onCancel` callbacks are invoked based on user interaction.\nThe user presses `enter` (or `cmd`+`enter` when multiline) or blurs the input to\nconfirm the current value, or presses `esc` to cancel. Canceling resets the\nfield to the last confirmed value. Neither callback is invoked if the value is\nunchanged.\n\n@interface IEditableTextProps",
      "metadata": {}
    },
    "checkbox": {
      "reference": "checkbox",
      "route": "core/components/checkbox",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\forms\\checkbox.md",
      "title": "Checkbox",
      "contents": [
        {
          "tag": "heading",
          "value": "Checkbox",
          "level": 1,
          "route": "core/components/checkbox"
        },
        "<p>A checkbox allows the user to toggle between checked, unchecked, and (rarely)\nindeterminate states.</p>\n",
        {
          "tag": "reactExample",
          "value": "CheckboxExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/checkbox.props"
        },
        "<p>Use the <code>checked</code> prop instead of <code>value</code> in controlled mode to avoid typings\nissues. Enable the <code>indeterminate</code> prop for a third in-between state.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;simple&nbsp;usage&nbsp;for&nbsp;string&nbsp;labels</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Checkbox</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>checked</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>state</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>isEnabled</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>label</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Enabled</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onChange</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>handleEnabledChange</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;advanced&nbsp;usage&nbsp;for&nbsp;JSX&nbsp;content</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Checkbox</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>checked</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>state</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>isEnabled</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onChange</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>handleEnabledChange</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Icon</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>icon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>user</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Gilad&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>strong</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Gray</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>strong</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Checkbox</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre><p>This component supports the full range of HTML <code>&lt;input&gt;</code> props. The most common\noptions are detailed below.</p>\n",
        {
          "tag": "interface",
          "value": "ICheckboxProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/checkbox.css"
        },
        "<p>Blueprint&#39;s custom checkboxes use an extra <code>.bp3-control-indicator</code> element\nafter the <code>&lt;input&gt;</code> to achieve their custom styling. You should then wrap the\nwhole thing in a <code>&lt;label&gt;</code> with the classes <code>.bp3-control.bp3-checkbox</code>.</p>\n<p>Note that attribute modifiers (<code>:checked</code>, <code>:disabled</code>) are applied on the\ninternal <code>&lt;input&gt;</code> element. Further note that <code>:indeterminate</code> can only be set\nvia JavaScript (the <code>Checkbox</code> React component supports it handily with a prop).</p>\n",
        {
          "tag": "css",
          "value": "checkbox"
        }
      ],
      "contentsRaw": "@# Checkbox\n\nA checkbox allows the user to toggle between checked, unchecked, and (rarely)\nindeterminate states.\n\n@reactExample CheckboxExample\n\n@## Props\n\nUse the `checked` prop instead of `value` in controlled mode to avoid typings\nissues. Enable the `indeterminate` prop for a third in-between state.\n\n```tsx\n// simple usage for string labels\n<Checkbox checked={this.state.isEnabled} label=\"Enabled\" onChange={this.handleEnabledChange} />\n\n// advanced usage for JSX content\n<Checkbox checked={this.state.isEnabled} onChange={this.handleEnabledChange}>\n    <Icon icon=\"user\" />\n    Gilad <strong>Gray</strong>\n</Checkbox>\n```\n\nThis component supports the full range of HTML `<input>` props. The most common\noptions are detailed below.\n\n@interface ICheckboxProps\n\n@## CSS\n\nBlueprint's custom checkboxes use an extra `.bp3-control-indicator` element\nafter the `<input>` to achieve their custom styling. You should then wrap the\nwhole thing in a `<label>` with the classes `.bp3-control.bp3-checkbox`.\n\nNote that attribute modifiers (`:checked`, `:disabled`) are applied on the\ninternal `<input>` element. Further note that `:indeterminate` can only be set\nvia JavaScript (the `Checkbox` React component supports it handily with a prop).\n\n@css checkbox",
      "metadata": {}
    },
    "control-group": {
      "reference": "control-group",
      "route": "core/components/control-group",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\forms\\control-group.md",
      "title": "Control group",
      "contents": [
        {
          "tag": "heading",
          "value": "Control group",
          "level": 1,
          "route": "core/components/control-group"
        },
        "<p>A control group renders several distinct form controls as one unit, squaring the\nborders between them. It supports any number of buttons, text inputs, input\ngroups, and HTML selects as direct children.</p>\n<div class=\"bp3-callout bp3-intent-success bp3-icon-comparison\">\n    <h4 class=\"bp3-heading\">Control group vs. input group</h4>\n\nBoth components group multiple elements into a single unit, but their usage patterns are\nquite different.\n\nThink of <code>ControlGroup</code> as a parent with multiple children, with each one a separate\ncontrol.\n\nConversely, an <code>InputGroup</code> is a single control, and should function like so. A\nbutton inside of an input group should only affect that input; if its reach is further, then it\nshould be promoted to live in a control group.\n\n</div>\n\n",
        {
          "tag": "reactExample",
          "value": "ControlGroupExample"
        },
        {
          "tag": "heading",
          "value": "Flex layout",
          "level": 2,
          "route": "core/components/control-group.flex-layout"
        },
        "<p><code>ControlGroup</code> is a CSS inline flex row (or column if vertical) and provides\nsome modifer props for common flexbox patterns:</p>\n<ul>\n<li><p>Enable the <code>fill</code> prop on a control group to make all controls expand equally to\nfill the available space.</p>\n<ul>\n<li>Controls will expand horizontally by default, or vertically if the <code>vertical</code> prop is enabled.</li>\n<li>Add the class <code>Classes.FIXED</code> to individual controls to revert them to their initial sizes.</li>\n</ul>\n</li>\n<li><p>Alternatively, enable the <code>fill</code> prop on specific controls (instead of on the\ngroup) to expand them equally to fill the available space while other\ncontrols retain their original sizes.</p>\n</li>\n</ul>\n<p>You can adjust the specific size of a control with the <code>flex-basis</code> or <code>width</code>\nCSS properties.</p>\n",
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/control-group.props"
        },
        "<p>This component is a lightweight wrapper around its children. It supports all\nHTML <code>&lt;div&gt;</code> props, in addition to those listed below.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>ControlGroup</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>fill</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant language boolean true tsx\"><span>true</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>vertical</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant language boolean false tsx\"><span>false</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>icon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>filter</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Filter</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>InputGroup</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>placeholder</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Find&nbsp;filters...</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>ControlGroup</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre>",
        {
          "tag": "interface",
          "value": "IControlGroupProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/control-group.css"
        },
        "<p>A <code>.bp3-control-group</code> renders several distinct controls as one unit, squaring the borders between\nthem. It supports any number of <code>.bp3-button</code>, <code>.bp3-input</code>, <code>.bp3-input-group</code>, and <code>.bp3-select</code>\nelements as direct children.</p>\n<p>Note that <code>.bp3-control-group</code> does not cascade any modifiers to its children. For example, each\nchild must be marked individually as <code>.bp3-large</code> for uniform large appearance.</p>\n",
        {
          "tag": "css",
          "value": "control-group"
        }
      ],
      "contentsRaw": "@# Control group\n\nA control group renders several distinct form controls as one unit, squaring the\nborders between them. It supports any number of buttons, text inputs, input\ngroups, and HTML selects as direct children.\n\n<div class=\"bp3-callout bp3-intent-success bp3-icon-comparison\">\n    <h4 class=\"bp3-heading\">Control group vs. input group</h4>\n\nBoth components group multiple elements into a single unit, but their usage patterns are\nquite different.\n\nThink of `ControlGroup` as a parent with multiple children, with each one a separate\ncontrol.\n\nConversely, an `InputGroup` is a single control, and should function like so. A\nbutton inside of an input group should only affect that input; if its reach is further, then it\nshould be promoted to live in a control group.\n\n</div>\n\n@reactExample ControlGroupExample\n\n@## Flex layout\n\n`ControlGroup` is a CSS inline flex row (or column if vertical) and provides\nsome modifer props for common flexbox patterns:\n\n- Enable the `fill` prop on a control group to make all controls expand equally to\n  fill the available space.\n    - Controls will expand horizontally by default, or vertically if the `vertical` prop is enabled.\n    - Add the class `Classes.FIXED` to individual controls to revert them to their initial sizes.\n\n- Alternatively, enable the `fill` prop on specific controls (instead of on the\n  group) to expand them equally to fill the available space while other\n  controls retain their original sizes.\n\nYou can adjust the specific size of a control with the `flex-basis` or `width`\nCSS properties.\n\n@## Props\n\nThis component is a lightweight wrapper around its children. It supports all\nHTML `<div>` props, in addition to those listed below.\n\n```tsx\n<ControlGroup fill={true} vertical={false}>\n    <Button icon=\"filter\">Filter</Button>\n    <InputGroup placeholder=\"Find filters...\" />\n</ControlGroup>\n```\n\n@interface IControlGroupProps\n\n@## CSS\n\nA `.bp3-control-group` renders several distinct controls as one unit, squaring the borders between\nthem. It supports any number of `.bp3-button`, `.bp3-input`, `.bp3-input-group`, and `.bp3-select`\nelements as direct children.\n\nNote that `.bp3-control-group` does not cascade any modifiers to its children. For example, each\nchild must be marked individually as `.bp3-large` for uniform large appearance.\n\n@css control-group",
      "metadata": {}
    },
    "file-input": {
      "reference": "file-input",
      "route": "core/components/file-input",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\forms\\file-input.md",
      "title": "File input",
      "contents": [
        {
          "tag": "heading",
          "value": "File input",
          "level": 1,
          "route": "core/components/file-input"
        },
        "<p>Use the standard <code>input type=&quot;file&quot;</code> along with a <code>span</code> with class <code>bp3-file-upload-input</code>.\nWrap that all in a <code>label</code> with class <code>bp3-file-input</code>.</p>\n",
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/file-input.props"
        },
        "<p>This component is a lightweight wrapper around the underlying <code>&lt;label&gt;</code> element\nwhich contain an <code>&lt;input type=&quot;file&quot;&gt;</code>. It supports the full range of HTML <code>&lt;label&gt;</code> props.</p>\n<p>Use <code>inputProps</code> to apply props to the <code>&lt;input&gt;</code> element.</p>\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">Static file name</h4>\n\nFile name does not update on file selection. To get this behavior,\nyou must implement it separately in JS.\n\n</div>\n\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>FileInput</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>disabled</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant language boolean true tsx\"><span>true</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Choose&nbsp;file...</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onInputChange</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"keyword operator spread tsx\"><span>...</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></div></pre>",
        {
          "tag": "interface",
          "value": "IFileInputProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/file-input.css"
        },
        {
          "tag": "css",
          "value": "file-input"
        }
      ],
      "contentsRaw": "@# File input\n\nUse the standard `input type=\"file\"` along with a `span` with class `bp3-file-upload-input`.\nWrap that all in a `label` with class `bp3-file-input`.\n\n@## Props\n\nThis component is a lightweight wrapper around the underlying `<label>` element\nwhich contain an `<input type=\"file\">`. It supports the full range of HTML `<label>` props.\n\nUse `inputProps` to apply props to the `<input>` element.\n\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">Static file name</h4>\n\nFile name does not update on file selection. To get this behavior,\nyou must implement it separately in JS.\n\n</div>\n\n```tsx\n<FileInput disabled={true} text=\"Choose file...\" onInputChange={...} />\n```\n\n@interface IFileInputProps\n\n@## CSS\n\n@css file-input",
      "metadata": {}
    },
    "form-group": {
      "reference": "form-group",
      "route": "core/components/form-group",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\forms\\form-group.md",
      "title": "Form group",
      "contents": [
        {
          "tag": "heading",
          "value": "Form group",
          "level": 1,
          "route": "core/components/form-group"
        },
        "<p>Form groups support more complex form controls than <a href=\"#core/components/label\">simple labels</a>,\nsuch as <a href=\"#core/components/control-group\">control groups</a> or <a href=\"#core/components/numeric-input\"><code>NumericInput</code></a>.\nThey also support additional helper text to aid with user navigation.</p>\n",
        {
          "tag": "reactExample",
          "value": "FormGroupExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/form-group.props"
        },
        "<p>This component is a lightweight wrapper around its children with props for the\nlabel above and helper text below.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>FormGroup</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>helperText</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Helper&nbsp;text&nbsp;with&nbsp;details...</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>label</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Label&nbsp;A</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>labelFor</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>text-input</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>labelInfo</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>(required)</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>InputGroup</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>id</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>text-input</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>placeholder</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Placeholder&nbsp;text</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>FormGroup</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre>",
        {
          "tag": "interface",
          "value": "IFormGroupProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/form-group.css"
        },
        "<ul>\n<li><p>Link each label to its respective control element with a <code>for={#id}</code> attribute on the <code>&lt;label&gt;</code> and\n<code>id={#id}</code> on the control.</p>\n</li>\n<li><p>Add <code>.bp3-intent-*</code> or <code>.bp3-disabled</code> to <code>.bp3-form-group</code> to style the label and helper text.\nSimilar to labels, nested controls need to be styled separately.</p>\n</li>\n<li><p>Add <code>.bp3-inline</code> to <code>.bp3-form-group</code> to place the label to the left of the control.</p>\n</li>\n<li><p>Add <code>.bp3-large</code> to <code>.bp3-form-group</code> to align the label when used with large inline Blueprint controls.</p>\n</li>\n</ul>\n",
        {
          "tag": "css",
          "value": "form-group"
        }
      ],
      "contentsRaw": "@# Form group\n\nForm groups support more complex form controls than [simple labels](#core/components/label),\nsuch as [control groups](#core/components/control-group) or [`NumericInput`](#core/components/numeric-input).\nThey also support additional helper text to aid with user navigation.\n\n@reactExample FormGroupExample\n\n@## Props\n\nThis component is a lightweight wrapper around its children with props for the\nlabel above and helper text below.\n\n```tsx\n<FormGroup\n    helperText=\"Helper text with details...\"\n    label=\"Label A\"\n    labelFor=\"text-input\"\n    labelInfo=\"(required)\"\n>\n    <InputGroup id=\"text-input\" placeholder=\"Placeholder text\" />\n</FormGroup>\n```\n\n@interface IFormGroupProps\n\n@## CSS\n\n- Link each label to its respective control element with a `for={#id}` attribute on the `<label>` and\n`id={#id}` on the control.\n\n- Add `.bp3-intent-*` or `.bp3-disabled` to `.bp3-form-group` to style the label and helper text.\nSimilar to labels, nested controls need to be styled separately.\n\n- Add `.bp3-inline` to `.bp3-form-group` to place the label to the left of the control.\n\n- Add `.bp3-large` to `.bp3-form-group` to align the label when used with large inline Blueprint controls.\n\n@css form-group",
      "metadata": {}
    },
    "label": {
      "reference": "label",
      "route": "core/components/label",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\forms\\label.md",
      "title": "Label",
      "contents": [
        {
          "tag": "heading",
          "value": "Label",
          "level": 1,
          "route": "core/components/label"
        },
        "<p>Labels enhance the usability of your forms.</p>\n<p>Wrapping a <code>&lt;label&gt;</code> element around a form input effectively increases the area\nwhere the user can click to activate the control. Notice how in the examples\nbelow, clicking a label focuses its <code>&lt;input&gt;</code>.</p>\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">Prefer form groups over labels</h4>\n\nThe <a href=\"#core/components/form-group\">React <code>FormGroup</code> component</a> provides\nadditional functionality such as helper text and modifier props as well as\nfull label support. <code>FormGroup</code> supports both simple and complex use cases,\ntherefore we recommend using it exclusively when constructing forms.\n\n</div>\n\n",
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/label.props"
        },
        "<p>This component supports the full range of HTML props.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Label</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Label&nbsp;A</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>input</span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>className</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Classes</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>INPUT</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>placeholder</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Placeholder&nbsp;text</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Label</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Label</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>htmlFor</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>input-b</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Label&nbsp;B</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Label</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>input</span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>className</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Classes</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>INPUT</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>id</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>input-b</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>placeholder</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Placeholder&nbsp;text</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></div></pre>",
        {
          "tag": "interface",
          "value": "ILabelProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/label.css"
        },
        "<p>Simple labels are useful for basic forms for a single <code>&lt;input&gt;</code>.</p>\n<p>Apply disabled styles with the <code>bp3-disabled</code> class. This styles the label text,\nbut does not disable any nested children like inputs or selects. You must add\nthe <code>:disabled</code> attribute directly to any nested elements to disable them.\nSimilarly the respective <code>bp3-*</code> form control will need a <code>.bp3-disabled</code>\nmodifier. See the examples below.</p>\n",
        {
          "tag": "css",
          "value": "label"
        }
      ],
      "contentsRaw": "@# Label\n\nLabels enhance the usability of your forms.\n\nWrapping a `<label>` element around a form input effectively increases the area\nwhere the user can click to activate the control. Notice how in the examples\nbelow, clicking a label focuses its `<input>`.\n\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">Prefer form groups over labels</h4>\n\nThe [React `FormGroup` component](#core/components/form-group) provides\nadditional functionality such as helper text and modifier props as well as\nfull label support. `FormGroup` supports both simple and complex use cases,\ntherefore we recommend using it exclusively when constructing forms.\n\n</div>\n\n@## Props\n\nThis component supports the full range of HTML props.\n\n```tsx\n<Label>\n    Label A\n    <input className={Classes.INPUT} placeholder=\"Placeholder text\" />\n</Label>\n\n<Label htmlFor=\"input-b\">Label B</Label>\n<input className={Classes.INPUT} id=\"input-b\" placeholder=\"Placeholder text\" />\n```\n\n@interface ILabelProps\n\n@## CSS\n\nSimple labels are useful for basic forms for a single `<input>`.\n\nApply disabled styles with the `bp3-disabled` class. This styles the label text,\nbut does not disable any nested children like inputs or selects. You must add\nthe `:disabled` attribute directly to any nested elements to disable them.\nSimilarly the respective `bp3-*` form control will need a `.bp3-disabled`\nmodifier. See the examples below.\n\n@css label",
      "metadata": {}
    },
    "numeric-input": {
      "reference": "numeric-input",
      "route": "core/components/numeric-input",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\forms\\numeric-input.md",
      "title": "Numeric input",
      "contents": [
        {
          "tag": "heading",
          "value": "Numeric input",
          "level": 1,
          "route": "core/components/numeric-input"
        },
        "<p>The <code>NumericInput</code> component provides controls for easily inputting,\nincrementing, and decrementing numeric values.</p>\n",
        {
          "tag": "heading",
          "value": "Interactions",
          "level": 2,
          "route": "core/components/numeric-input.interactions"
        },
        "<p>Values in numeric inputs can be incremented or decremented using both keyboard and mouse interactions.</p>\n<h5 id=\"keyboard-interactions\">Keyboard interactions</h5>\n<ul>\n<li><code>↑/↓</code> - change the value by one step (default: <code>±1</code>)</li>\n<li><code>Shift + ↑/↓</code> - change the value by one major step (default: <code>±10</code>)</li>\n<li><code>Alt + ↑/↓</code> - change the value by one minor step (default: <code>±0.1</code>)</li>\n</ul>\n<h5 id=\"mouse-interactions\">Mouse interactions</h5>\n<ul>\n<li><code>Click ⌃/⌄</code> - change the value by one step (default: <code>±1</code>)</li>\n<li><code>Shift + Click ⌃/⌄</code> - change the value by one major step (default: <code>±10</code>)</li>\n<li><code>Alt + Click ⌃/⌄</code> - change the value by one minor step (default: <code>±0.1</code>)</li>\n</ul>\n",
        {
          "tag": "heading",
          "value": "Basic example",
          "level": 2,
          "route": "core/components/numeric-input.basic-example"
        },
        "<p>This example shows how <code>NumericInput</code> works out of the box. It supports the\nbasic keyboard and mouse interactions listed above, as well as basic keyboard\nentry:</p>\n",
        {
          "tag": "reactExample",
          "value": "NumericInputBasicExample"
        },
        {
          "tag": "heading",
          "value": "Extended example",
          "level": 2,
          "route": "core/components/numeric-input.extended-example"
        },
        "<p>This example shows how <code>NumericInput</code> can be extended beyond its core\nfunctionality. It supports the basic interactions above as well as each of the\nfollowing types of input:</p>\n<ul>\n<li><strong>Number abbreviations</strong> (e.g. <code>2.1k</code>, <code>-0.3m</code>)</li>\n<li><strong>Scientific notation</strong> (e.g. <code>2.1e3</code>, <code>-0.3e6</code>)</li>\n<li><strong>Addition and subtraction expressions</strong> (e.g. <code>3+2</code>, <code>0.1m - 5k + 1</code>)</li>\n</ul>\n<p>These special-case inputs are evaluated when <code>Enter</code> is pressed (via a\ncustom <code>onKeyDown</code> callback) and when the field loses focus (via a custom\n<code>onBlur</code> callback). If the input is invalid when either of these callbacks is\ntrigged, the field will be cleared.</p>\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n\nThis example contains non-core functionality that is meant to demonstrate\nthe extensibility of the <code>NumericInput</code> component. The correctness of the\ncustom evaluation code has not been tested robustly.\n\n</div>\n\n",
        {
          "tag": "reactExample",
          "value": "NumericInputExtendedExample"
        },
        {
          "tag": "heading",
          "value": "JavaScript API",
          "level": 2,
          "route": "core/components/numeric-input.javascript-api"
        },
        "<p>The <code>NumericInput</code> component is available in the <strong>@blueprintjs/core</strong> package.\nMake sure to review the <a href=\"#blueprint/getting-started\">getting started docs for installation info</a>.</p>\n",
        {
          "tag": "interface",
          "value": "INumericInputProps"
        },
        {
          "tag": "heading",
          "value": "Responsive numeric inputs",
          "level": 3,
          "route": "core/components/numeric-input.responsive-numeric-inputs"
        },
        "<p><code>NumericInput</code> can be styled with the same set of CSS classes that modify\nregular <a href=\"#core/components/control-group\">control groups</a>. The most appropriate\nsuch modifier for <code>NumericInput</code> is <code>bp3-fill</code>, which when passed as a\n<code>className</code> will make the component expand to fill all available width.</p>\n",
        {
          "tag": "heading",
          "value": "Uncontrolled mode",
          "level": 3,
          "route": "core/components/numeric-input.uncontrolled-mode"
        },
        "<p>By default, this component will function in uncontrolled mode, managing all of\nits own state. In uncontrolled mode, simply provide an <code>onValueChange</code> callback\nin the props to access the value as the user manipulates it. The value will be\nprovided to the callback both as a number and as a string.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>NumericInput</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"keyword control export tsx\"><span>export</span></span><span>&nbsp;</span><span class=\"storage type class tsx\"><span>class</span></span><span>&nbsp;</span><span class=\"entity name type class tsx\"><span>NumericInputExample</span></span><span>&nbsp;</span><span class=\"storage modifier tsx\"><span>extends</span></span><span>&nbsp;</span><span class=\"entity name type module tsx\"><span>React</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity other inherited-class tsx\"><span>Component</span></span><span class=\"meta type parameters tsx\"><span class=\"punctuation definition typeparameters begin tsx\"><span>&lt;</span></span><span class=\"meta object type tsx\"><span class=\"punctuation definition block tsx\"><span>{</span><span>}</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta object type tsx\"><span class=\"punctuation definition block tsx\"><span>{</span><span>}</span></span></span><span class=\"punctuation definition typeparameters end tsx\"><span>&gt;</span></span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta method declaration tsx\"><span class=\"storage modifier tsx\"><span>public</span></span><span>&nbsp;</span><span class=\"meta definition method tsx entity name function tsx\"><span>render</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control flow tsx\"><span>return</span></span><span>&nbsp;</span><span class=\"meta brace round tsx\"><span>(</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>NumericInput</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onValueChange</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>handleValueChange</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"storage modifier tsx\"><span>private</span></span><span>&nbsp;</span><span class=\"meta field declaration tsx\"><span class=\"meta definition property tsx entity name function tsx\"><span>handleValueChange</span></span><span>&nbsp;</span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta arrow tsx\"><span>&nbsp;</span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"variable parameter tsx\"><span>valueAsNumber</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"support type primitive tsx\"><span>number</span></span></span><span class=\"punctuation separator parameter tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable parameter tsx\"><span>valueAsString</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"support type primitive tsx\"><span>string</span></span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"storage type function arrow tsx\"><span>=&gt;</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta field declaration tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"support class console tsx\"><span>console</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function console tsx\"><span>log</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Value&nbsp;as&nbsp;number:</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>valueAsNumber</span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta field declaration tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"support class console tsx\"><span>console</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function console tsx\"><span>log</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Value&nbsp;as&nbsp;string:</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>valueAsString</span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta field declaration tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></div></pre>",
        {
          "tag": "heading",
          "value": "Controlled mode",
          "level": 3,
          "route": "core/components/numeric-input.controlled-mode"
        },
        "<p>If you prefer to have more control over your numeric input&#39;s behavior, you can\nspecify the <code>value</code> property to use the component in <strong>controlled mode</strong>.\nnumeric input supports arbitrary text entry--not just numeric digits–-so the\n<code>value</code> can be provided as either a number or a string.</p>\n<p>The combined support of arbitrary text entry, controlled mode, and custom\ncallbacks makes it possible to extend the numeric input&#39;s basic functionality in\npowerful ways. As shown in the example above, one could extend the numeric input\ncomponent with support for mathematical expressions as follows:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>NumericInput</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"constant language import-export-all tsx\"><span>*</span></span><span>&nbsp;</span><span class=\"keyword control as tsx\"><span>as</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>SomeLibrary</span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>some-library</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"keyword control export tsx\"><span>export</span></span><span>&nbsp;</span><span class=\"storage type class tsx\"><span>class</span></span><span>&nbsp;</span><span class=\"entity name type class tsx\"><span>NumericInputExample</span></span><span>&nbsp;</span><span class=\"storage modifier tsx\"><span>extends</span></span><span>&nbsp;</span><span class=\"entity name type module tsx\"><span>React</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity other inherited-class tsx\"><span>Component</span></span><span class=\"meta type parameters tsx\"><span class=\"punctuation definition typeparameters begin tsx\"><span>&lt;</span></span><span class=\"meta object type tsx\"><span class=\"punctuation definition block tsx\"><span>{</span><span>}</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta object type tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta field declaration tsx\"><span class=\"meta definition property tsx variable object property tsx\"><span>value</span></span><span class=\"keyword operator optional tsx\"><span>?</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"support type primitive tsx\"><span>number</span></span><span>&nbsp;</span><span class=\"keyword operator type tsx\"><span>|</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta type parameters tsx\"><span class=\"meta object type tsx\"><span class=\"support type primitive tsx\"><span>string</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span class=\"punctuation definition typeparameters end tsx\"><span>&gt;</span></span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"storage modifier tsx\"><span>public</span></span><span>&nbsp;</span><span class=\"meta field declaration tsx\"><span class=\"meta definition property tsx variable object property tsx\"><span>state</span></span><span>&nbsp;</span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>value</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"variable other object tsx\"><span>NumericInput</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>VALUE_EMPTY</span></span><span>&nbsp;</span></span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta method declaration tsx\"><span class=\"storage modifier tsx\"><span>public</span></span><span>&nbsp;</span><span class=\"meta definition method tsx entity name function tsx\"><span>render</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control flow tsx\"><span>return</span></span><span>&nbsp;</span><span class=\"meta brace round tsx\"><span>(</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>NumericInput</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onValueChange</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>handleValueChange</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>value</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>state</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support variable property dom tsx\"><span>value</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"storage modifier tsx\"><span>private</span></span><span>&nbsp;</span><span class=\"meta field declaration tsx\"><span class=\"meta definition property tsx entity name function tsx\"><span>handleValueChange</span></span><span>&nbsp;</span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta arrow tsx\"><span>&nbsp;</span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"variable parameter tsx\"><span>_valueAsNumber</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"support type primitive tsx\"><span>number</span></span></span><span class=\"punctuation separator parameter tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable parameter tsx\"><span>valueAsString</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"support type primitive tsx\"><span>string</span></span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span></span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta field declaration tsx\"><span class=\"meta objectliteral tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span><span class=\"meta object member tsx\"><span class=\"variable other readwrite tsx\"><span>result</span></span><span>&nbsp;</span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>SomeLibrary</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>evaluateMathExpression</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"variable other readwrite tsx\"><span>valueAsString</span></span><span class=\"meta brace round tsx\"><span>)</span></span><span>;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta field declaration tsx\"><span class=\"meta objectliteral tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.s</span><span class=\"meta method declaration tsx\"><span class=\"meta definition method tsx entity name function tsx\"><span>etState</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"meta parameter object-binding-pattern tsx\"><span class=\"punctuation definition binding-pattern object tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable object property tsx\"><span>value</span></span><span class=\"punctuation destructuring tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"variable parameter tsx\"><span>result</span></span><span>&nbsp;</span><span class=\"punctuation definition binding-pattern object tsx\"><span>}</span></span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span></span><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta field declaration tsx\"><span class=\"meta objectliteral tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></div></pre>"
      ],
      "contentsRaw": "@# Numeric input\n\nThe `NumericInput` component provides controls for easily inputting,\nincrementing, and decrementing numeric values.\n\n@## Interactions\n\nValues in numeric inputs can be incremented or decremented using both keyboard and mouse interactions.\n\n##### Keyboard interactions\n\n- `↑/↓` - change the value by one step (default: `±1`)\n- `Shift + ↑/↓` - change the value by one major step (default: `±10`)\n- `Alt + ↑/↓` - change the value by one minor step (default: `±0.1`)\n\n##### Mouse interactions\n\n- `Click ⌃/⌄` - change the value by one step (default: `±1`)\n- `Shift + Click ⌃/⌄` - change the value by one major step (default: `±10`)\n- `Alt + Click ⌃/⌄` - change the value by one minor step (default: `±0.1`)\n\n@## Basic example\n\nThis example shows how `NumericInput` works out of the box. It supports the\nbasic keyboard and mouse interactions listed above, as well as basic keyboard\nentry:\n\n@reactExample NumericInputBasicExample\n\n@## Extended example\n\nThis example shows how `NumericInput` can be extended beyond its core\nfunctionality. It supports the basic interactions above as well as each of the\nfollowing types of input:\n\n- **Number abbreviations** (e.g. `2.1k`, `-0.3m`)\n- **Scientific notation** (e.g. `2.1e3`, `-0.3e6`)\n- **Addition and subtraction expressions** (e.g. `3+2`, `0.1m - 5k + 1`)\n\nThese special-case inputs are evaluated when `Enter` is pressed (via a\ncustom `onKeyDown` callback) and when the field loses focus (via a custom\n`onBlur` callback). If the input is invalid when either of these callbacks is\ntrigged, the field will be cleared.\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n\nThis example contains non-core functionality that is meant to demonstrate\nthe extensibility of the `NumericInput` component. The correctness of the\ncustom evaluation code has not been tested robustly.\n\n</div>\n\n@reactExample NumericInputExtendedExample\n\n@## JavaScript API\n\nThe `NumericInput` component is available in the __@blueprintjs/core__ package.\nMake sure to review the [getting started docs for installation info](#blueprint/getting-started).\n\n@interface INumericInputProps\n\n@### Responsive numeric inputs\n\n`NumericInput` can be styled with the same set of CSS classes that modify\nregular [control groups](#core/components/control-group). The most appropriate\nsuch modifier for `NumericInput` is `bp3-fill`, which when passed as a\n`className` will make the component expand to fill all available width.\n\n@### Uncontrolled mode\n\nBy default, this component will function in uncontrolled mode, managing all of\nits own state. In uncontrolled mode, simply provide an `onValueChange` callback\nin the props to access the value as the user manipulates it. The value will be\nprovided to the callback both as a number and as a string.\n\n```tsx\nimport { NumericInput } from \"@blueprintjs/core\";\n\nexport class NumericInputExample extends React.Component<{}, {}> {\n    public render() {\n        return (\n            <NumericInput onValueChange={this.handleValueChange} />\n        );\n    }\n\n    private handleValueChange = (valueAsNumber: number, valueAsString: string) => {\n        console.log(\"Value as number:\", valueAsNumber);\n        console.log(\"Value as string:\", valueAsString);\n    }\n}\n```\n\n@### Controlled mode\n\nIf you prefer to have more control over your numeric input's behavior, you can\nspecify the `value` property to use the component in **controlled mode**.\nnumeric input supports arbitrary text entry--not just numeric digits–-so the\n`value` can be provided as either a number or a string.\n\nThe combined support of arbitrary text entry, controlled mode, and custom\ncallbacks makes it possible to extend the numeric input's basic functionality in\npowerful ways. As shown in the example above, one could extend the numeric input\ncomponent with support for mathematical expressions as follows:\n\n```tsx\nimport { NumericInput } from \"@blueprintjs/core\";\nimport * as SomeLibrary from \"some-library\";\n\nexport class NumericInputExample extends React.Component<{}, { value?: number |\nstring }> {\n    public state = { value: NumericInput.VALUE_EMPTY };\n\n    public render() {\n        return (\n            <NumericInput\n                onValueChange={this.handleValueChange}\n                value={this.state.value}\n            />\n        );\n    }\n\n    private handleValueChange = (_valueAsNumber: number, valueAsString: string) {\n        const result = SomeLibrary.evaluateMathExpression(valueAsString);\n        this.setState({ value: result });\n    }\n}\n```",
      "metadata": {}
    },
    "radio": {
      "reference": "radio",
      "route": "core/components/radio",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\forms\\radio.md",
      "title": "Radio",
      "contents": [
        {
          "tag": "heading",
          "value": "Radio",
          "level": 1,
          "route": "core/components/radio"
        },
        "<p>A radio button typically represents a single option in a mutually exclusive list\n(where only one item can be selected at a time). Blueprint provides <code>Radio</code> and\n<code>RadioGroup</code> components for these two layers.</p>\n",
        {
          "tag": "reactExample",
          "value": "RadioExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/radio.props"
        },
        "<p>Typically, radio buttons are used in a group to choose one option from several,\nsimilar to how a <code>&lt;select&gt;</code> tag contains several <code>&lt;option&gt;</code> tags. As such, you\ncan use the <code>RadioGroup</code> component with a series of <code>Radio</code> children.\n<code>RadioGroup</code> is responsible for managing state and interaction.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>RadioGroup</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>label</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Meal&nbsp;Choice</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onChange</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>handleMealChange</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>selectedValue</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>state</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>mealType</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Radio</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>label</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Soup</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>value</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>one</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Radio</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>label</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Salad</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>value</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>two</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Radio</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>label</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Sandwich</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>value</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>three</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>RadioGroup</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre><p><code>Radio</code> supports the full range of HTML <code>&lt;input&gt;</code> props.\nThe most common options are detailed below.</p>\n",
        {
          "tag": "interface",
          "value": "IRadioProps"
        },
        {
          "tag": "heading",
          "value": "RadioGroup",
          "level": 3,
          "route": "core/components/radio.radiogroup"
        },
        {
          "tag": "interface",
          "value": "IRadioGroupProps"
        },
        {
          "tag": "interface",
          "value": "IOptionProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/radio.css"
        },
        "<p>Blueprint&#39;s custom radio buttons use an extra <code>.bp3-control-indicator</code> element\nafter the <code>&lt;input&gt;</code> to achieve their custom styling. You should then wrap the\nwhole thing in a <code>&lt;label&gt;</code> with the classes <code>.bp3-control.bp3-radio</code>.</p>\n<p>Note that attribute modifiers (<code>:checked</code>, <code>:disabled</code>) are applied on the\ninternal <code>&lt;input&gt;</code> element.</p>\n",
        {
          "tag": "css",
          "value": "radio"
        }
      ],
      "contentsRaw": "@# Radio\n\nA radio button typically represents a single option in a mutually exclusive list\n(where only one item can be selected at a time). Blueprint provides `Radio` and\n`RadioGroup` components for these two layers.\n\n@reactExample RadioExample\n\n@## Props\n\nTypically, radio buttons are used in a group to choose one option from several,\nsimilar to how a `<select>` tag contains several `<option>` tags. As such, you\ncan use the `RadioGroup` component with a series of `Radio` children.\n`RadioGroup` is responsible for managing state and interaction.\n\n```tsx\n<RadioGroup\n    label=\"Meal Choice\"\n    onChange={this.handleMealChange}\n    selectedValue={this.state.mealType}\n>\n    <Radio label=\"Soup\" value=\"one\" />\n    <Radio label=\"Salad\" value=\"two\" />\n    <Radio label=\"Sandwich\" value=\"three\" />\n</RadioGroup>\n```\n\n`Radio` supports the full range of HTML `<input>` props.\nThe most common options are detailed below.\n\n@interface IRadioProps\n\n@### RadioGroup\n\n@interface IRadioGroupProps\n\n@interface IOptionProps\n\n@## CSS\n\nBlueprint's custom radio buttons use an extra `.bp3-control-indicator` element\nafter the `<input>` to achieve their custom styling. You should then wrap the\nwhole thing in a `<label>` with the classes `.bp3-control.bp3-radio`.\n\nNote that attribute modifiers (`:checked`, `:disabled`) are applied on the\ninternal `<input>` element.\n\n@css radio",
      "metadata": {}
    },
    "switch": {
      "reference": "switch",
      "route": "core/components/switch",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\forms\\switch.md",
      "title": "Switch",
      "contents": [
        {
          "tag": "heading",
          "value": "Switch",
          "level": 1,
          "route": "core/components/switch"
        },
        "<p>A switch is simply an alternate appearance for a <a href=\"#core/components/checkbox\">checkbox</a> that\nsimulates on/off instead of checked/unchecked.</p>\n",
        {
          "tag": "reactExample",
          "value": "SwitchExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/switch.props"
        },
        "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Switch</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>checked</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>state</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>isPublic</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>label</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Public</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onChange</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>handlePublicChange</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></div></pre><p>This component supports the full range of HTML <code>&lt;input&gt;</code> props.\nThe most common props are detailed below.</p>\n",
        {
          "tag": "interface",
          "value": "ISwitchProps"
        },
        {
          "tag": "heading",
          "value": "CSS API",
          "level": 2,
          "route": "core/components/switch.css-api"
        },
        {
          "tag": "css",
          "value": "switch"
        }
      ],
      "contentsRaw": "@# Switch\n\nA switch is simply an alternate appearance for a [checkbox](#core/components/checkbox) that\nsimulates on/off instead of checked/unchecked.\n\n@reactExample SwitchExample\n\n@## Props\n\n```tsx\n<Switch checked={this.state.isPublic} label=\"Public\" onChange={this.handlePublicChange} />\n```\n\nThis component supports the full range of HTML `<input>` props.\nThe most common props are detailed below.\n\n@interface ISwitchProps\n\n@## CSS API\n\n@css switch",
      "metadata": {}
    },
    "text-inputs": {
      "reference": "text-inputs",
      "route": "core/components/text-inputs",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\forms\\text-inputs.md",
      "title": "Text inputs",
      "contents": [
        {
          "tag": "heading",
          "value": "Text inputs",
          "level": 1,
          "route": "core/components/text-inputs"
        },
        "<p>Blueprint provides two ways to create a text input:</p>\n<ol>\n<li>React component: use the <code>InputGroup</code> component for an advanced single-line\ninput that supports an icon on the left and arbitrary content on the right.</li>\n<li>CSS only: apply <code>Classes.INPUT</code> to an <code>&lt;input&gt;</code> or <code>&lt;textarea&gt;</code> element to\nstyle the native HTML tag.</li>\n</ol>\n",
        {
          "tag": "heading",
          "value": "Input group",
          "level": 2,
          "route": "core/components/text-inputs.input-group"
        },
        "<p>An input group allows you to add icons and buttons <em>within</em> a text input to expand its\nfunctionality. For example, you might use an input group to build a visibility toggle for a password\nfield.</p>\n",
        {
          "tag": "reactExample",
          "value": "InputGroupExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 3,
          "route": "core/components/text-inputs.props"
        },
        "<p>The <code>InputGroup</code> React component supports one non-interactive icon on the left\nside and one arbitrary element on the right side. Unlike the CSS approach,\n<code>InputGroup</code> supports <em>content of any length</em> on the right side (not just\nicon buttons) because it is able to measure the content and ensure there is\nalways space for it.</p>\n<p><code>InputGroup</code> can be used just like a standard React <code>input</code> element, in\na controlled or uncontrolled fashion. In addition to its own props, it supports\nall valid props for HTML <code>&lt;input&gt;</code> elements and proxies them to that element in\nthe DOM; the most common ones are detailed below.</p>\n",
        {
          "tag": "interface",
          "value": "IInputGroupProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 3,
          "route": "core/components/text-inputs.css"
        },
        "<p>You can place a single <code>.bp3-icon</code> or <code>.bp3-button.bp3-icon-*</code> on either end of the input. The order is\ndictated by the HTML markup: an element specified before the <code>input</code> appears on the left edge, and\nvice versa. You do not need to apply sizing classes to the children&mdash;they inherit the size of\nthe parent input.</p>\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">Icons only</h4>\n\nYou cannot use buttons with text in the CSS API for input groups. The padding for text inputs\nin CSS cannot accommodate buttons whose width varies due to text content. You should use icons on\nbuttons instead.\n\nConversely, the <a href=\"#core/components/text-inputs.input-group\"><code>InputGroup</code></a> React\ncomponent <em>does</em> support arbitrary content in its right element.\n\n</div>\n\n",
        {
          "tag": "css",
          "value": "input-group"
        },
        {
          "tag": "heading",
          "value": "HTML input",
          "level": 2,
          "route": "core/components/text-inputs.html-input"
        },
        "<p>Apply <code>Classes.INPUT</code> on an <code>input[type=&quot;text&quot;]</code>. You should also specify <code>dir=&quot;auto&quot;</code>\n<a href=\"http://www.w3.org/International/questions/qa-html-dir#dirauto\">to better support RTL languages</a>\n(in all browsers except Internet Explorer).</p>\n",
        {
          "tag": "css",
          "value": "input"
        },
        {
          "tag": "heading",
          "value": "Text area",
          "level": 2,
          "route": "core/components/text-inputs.text-area"
        },
        "<p>Apply <code>Classes.INPUT</code> on a <code>&lt;textarea&gt;</code>, or use the <code>TextArea</code> React component.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>TextArea</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>growVertically</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant language boolean true tsx\"><span>true</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>large</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant language boolean true tsx\"><span>true</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>intent</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Intent</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>PRIMARY</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onChange</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>handleChange</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>value</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>state</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support variable property dom tsx\"><span>value</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></div></pre>",
        {
          "tag": "css",
          "value": "textarea"
        },
        {
          "tag": "interface",
          "value": "ITextAreaProps"
        },
        {
          "tag": "heading",
          "value": "Search field",
          "level": 2,
          "route": "core/components/text-inputs.search-field"
        },
        "<p>Changing the <code>&lt;input&gt;</code> element&#39;s <code>type</code> attribute to <code>&quot;search&quot;</code> styles it to look like a search\nfield, giving it a rounded appearance. This style is equivalent to the <code>.bp3-round</code> modifier, but it\nis applied automatically for <code>[type=&quot;search&quot;]</code> inputs.</p>\n<p>Note that some browsers also implement a handler for the <code>esc</code> key to clear the text in a search field.</p>\n",
        {
          "tag": "css",
          "value": "input-search"
        }
      ],
      "contentsRaw": "@# Text inputs\n\nBlueprint provides two ways to create a text input:\n\n1. React component: use the `InputGroup` component for an advanced single-line\n   input that supports an icon on the left and arbitrary content on the right.\n1. CSS only: apply `Classes.INPUT` to an `<input>` or `<textarea>` element to\n   style the native HTML tag.\n\n@## Input group\n\nAn input group allows you to add icons and buttons _within_ a text input to expand its\nfunctionality. For example, you might use an input group to build a visibility toggle for a password\nfield.\n\n@reactExample InputGroupExample\n\n@### Props\n\nThe `InputGroup` React component supports one non-interactive icon on the left\nside and one arbitrary element on the right side. Unlike the CSS approach,\n`InputGroup` supports _content of any length_ on the right side (not just\nicon buttons) because it is able to measure the content and ensure there is\nalways space for it.\n\n`InputGroup` can be used just like a standard React `input` element, in\na controlled or uncontrolled fashion. In addition to its own props, it supports\nall valid props for HTML `<input>` elements and proxies them to that element in\nthe DOM; the most common ones are detailed below.\n\n@interface IInputGroupProps\n\n@### CSS\n\nYou can place a single `.bp3-icon` or `.bp3-button.bp3-icon-*` on either end of the input. The order is\ndictated by the HTML markup: an element specified before the `input` appears on the left edge, and\nvice versa. You do not need to apply sizing classes to the children&mdash;they inherit the size of\nthe parent input.\n\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">Icons only</h4>\n\nYou cannot use buttons with text in the CSS API for input groups. The padding for text inputs\nin CSS cannot accommodate buttons whose width varies due to text content. You should use icons on\nbuttons instead.\n\nConversely, the [`InputGroup`](#core/components/text-inputs.input-group) React\ncomponent _does_ support arbitrary content in its right element.\n\n</div>\n\n@css input-group\n\n@## HTML input\n\nApply `Classes.INPUT` on an `input[type=\"text\"]`. You should also specify `dir=\"auto\"`\n[to better support RTL languages](http://www.w3.org/International/questions/qa-html-dir#dirauto)\n(in all browsers except Internet Explorer).\n\n@css input\n\n@## Text area\n\nApply `Classes.INPUT` on a `<textarea>`, or use the `TextArea` React component.\n\n```tsx\n<TextArea\n    growVertically={true}\n    large={true}\n    intent={Intent.PRIMARY}\n    onChange={this.handleChange}\n    value={this.state.value}\n/>\n```\n\n@css textarea\n\n@interface ITextAreaProps\n\n@## Search field\n\nChanging the `<input>` element's `type` attribute to `\"search\"` styles it to look like a search\nfield, giving it a rounded appearance. This style is equivalent to the `.bp3-round` modifier, but it\nis applied automatically for `[type=\"search\"]` inputs.\n\nNote that some browsers also implement a handler for the `esc` key to clear the text in a search field.\n\n@css input-search",
      "metadata": {}
    },
    "hotkeys": {
      "reference": "hotkeys",
      "route": "core/components/hotkeys",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\hotkeys\\hotkeys.md",
      "title": "Hotkeys",
      "contents": [
        {
          "tag": "heading",
          "value": "Hotkeys",
          "level": 1,
          "route": "core/components/hotkeys"
        },
        "<p>Hotkeys enable you to create interactions based on user keyboard events.</p>\n<p>To add hotkeys to your React component, use the <code>@HotkeysTarget</code> class decorator\nand add a <code>renderHotkeys()</code> method. The decorator will call <code>renderHotkeys()</code>\nand attach the appropriate key listeners.</p>\n",
        {
          "tag": "reactExample",
          "value": "HotkeyPiano"
        },
        {
          "tag": "heading",
          "value": "Usage",
          "level": 2,
          "route": "core/components/hotkeys.usage"
        },
        "<ol>\n<li>Add the <code>@HotkeysTarget</code> class decorator to your react component.</li>\n<li>Implement the <code>renderHotkeys()</code> method.</li>\n<li>Define your <code>&lt;Hotkey&gt;</code>s inside a <code>&lt;Hotkeys&gt;</code> element.</li>\n</ol>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Hotkey</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Hotkeys</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>HotkeysTarget</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"constant language import-export-all tsx\"><span>*</span></span><span>&nbsp;</span><span class=\"keyword control as tsx\"><span>as</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>React</span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>react</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta decorator tsx\"><span class=\"punctuation decorator tsx\"><span>@</span></span><span class=\"variable other readwrite tsx\"><span>HotkeysTarget</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"keyword control export tsx\"><span>export</span></span><span>&nbsp;</span><span class=\"storage type class tsx\"><span>class</span></span><span>&nbsp;</span><span class=\"entity name type class tsx\"><span>MyComponent</span></span><span>&nbsp;</span><span class=\"storage modifier tsx\"><span>extends</span></span><span>&nbsp;</span><span class=\"entity name type module tsx\"><span>React</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity other inherited-class tsx\"><span>Component</span></span><span class=\"meta type parameters tsx\"><span class=\"punctuation definition typeparameters begin tsx\"><span>&lt;</span></span><span class=\"meta object type tsx\"><span class=\"punctuation definition block tsx\"><span>{</span><span>}</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta object type tsx\"><span class=\"punctuation definition block tsx\"><span>{</span><span>}</span></span></span><span class=\"punctuation definition typeparameters end tsx\"><span>&gt;</span></span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta method declaration tsx\"><span class=\"storage modifier tsx\"><span>public</span></span><span>&nbsp;</span><span class=\"meta definition method tsx entity name function tsx\"><span>render</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control flow tsx\"><span>return</span></span><span>&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Custom&nbsp;content</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta method declaration tsx\"><span class=\"storage modifier tsx\"><span>public</span></span><span>&nbsp;</span><span class=\"meta definition method tsx entity name function tsx\"><span>renderHotkeys</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control flow tsx\"><span>return</span></span><span>&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Hotkeys</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Hotkey</span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>global</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant language boolean true tsx\"><span>true</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>combo</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>shift&nbsp;+&nbsp;a</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>label</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Be&nbsp;awesome&nbsp;all&nbsp;the&nbsp;time</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onKeyDown</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta arrow tsx\"><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"storage type function arrow tsx\"><span>=&gt;</span></span><span>&nbsp;</span></span><span class=\"meta function-call tsx\"><span class=\"support class console tsx\"><span>console</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function console tsx\"><span>log</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Awesome!</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Hotkey</span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>group</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Fancy&nbsp;shortcuts</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>combo</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>shift&nbsp;+&nbsp;f</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>label</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Be&nbsp;fancy&nbsp;only&nbsp;when&nbsp;focused</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onKeyDown</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta arrow tsx\"><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"storage type function arrow tsx\"><span>=&gt;</span></span><span>&nbsp;</span></span><span class=\"meta function-call tsx\"><span class=\"support class console tsx\"><span>console</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function console tsx\"><span>log</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>So&nbsp;fancy!</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Hotkeys</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></div></pre>",
        {
          "tag": "heading",
          "value": "Decorator",
          "level": 3,
          "route": "core/components/hotkeys.decorator"
        },
        "<p>The <code>@HotkeysTarget</code> decorator allows you to easily add global and local\nhotkeys to any React component. Add the decorator to the top of the class and\nmake sure to implement the <code>renderHotkeys</code> method.</p>\n",
        {
          "tag": "interface",
          "value": "IHotkeysTarget"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 3,
          "route": "core/components/hotkeys.props"
        },
        "<p>Wrap your <code>Hotkey</code>s in the <code>Hotkeys</code> element. For example:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Hotkeys</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Hotkey</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>label</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Quit</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>combo</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>ctrl+q</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>global</span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onKeyDown</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>handleQuit</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Hotkey</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>label</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Save</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>combo</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>ctrl+s</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>group</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>File</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onKeyDown</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>handleSave</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Hotkeys</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre>",
        {
          "tag": "interface",
          "value": "IHotkeysProps"
        },
        {
          "tag": "interface",
          "value": "IHotkeyProps"
        },
        {
          "tag": "heading",
          "value": "Scope",
          "level": 2,
          "route": "core/components/hotkeys.scope"
        },
        "<p><code>Hotkey</code>s can have either local or global scope. Local hotkeys will only be\ntriggered when the target is focused, while global hotkeys can be triggered no\nmatter which element is focused.</p>\n<p>Additionally, any keyboard input that occurs inside a text input (such as a\n<code>&lt;textarea&gt;</code>, <code>&lt;input&gt;</code>, or <code>&lt;div contenteditable&gt;</code>) is ignored.</p>\n",
        {
          "tag": "heading",
          "value": "Dialog",
          "level": 2,
          "route": "core/components/hotkeys.dialog"
        },
        "<p>If you define hotkeys for your page, you&#39;ll want to display the hotkeys in a\nnice format for the user. If you register any global or local hotkeys, we\nautomatically attach a hotkey <code>?</code>, which will display the hotkeys dialog.</p>\n<p>The dialog will always include all available global hotkeys, and if you are\nfocused on an element that has any hotkeys, those will be shown as well.</p>\n<p>If you would like to change the style of the dialog (for example, to apply the\ndark theme class), call the <code>setHotkeysDialogProps</code> function with <code>IDialogProps</code>.</p>\n",
        {
          "tag": "heading",
          "value": "Key combos",
          "level": 2,
          "route": "core/components/hotkeys.key-combos"
        },
        "<p>Each hotkey must be assigned a key combo that will trigger its events. A key\ncombo consists of zero or more modifier keys (<code>alt</code>, <code>ctrl</code>, <code>shift</code>, <code>meta</code>,\n<code>cmd</code>) and exactly one action key, such as <code>A</code>, <code>return</code>, or <code>up</code>.</p>\n<p>Some key combos have aliases. For example, <code>shift + 1</code> can equivalently be\nexpressed as <code>!</code> and <code>cmd</code> is equal to <code>meta</code>. However, normal alphabetic\ncharacters do not have this aliasing, so <code>X</code> is equivalent to <code>x</code> but is not\nequivalent to <code>shift + x</code>.</p>\n<p>Examples of valid key combos:</p>\n<ul>\n<li><code>cmd+plus</code></li>\n<li><code>!</code> or, equivalently <code>shift+1</code></li>\n<li><code>return</code> or, equivalently <code>enter</code></li>\n<li><code>alt + shift + x</code></li>\n<li><code>ctrl + left</code></li>\n</ul>\n<p>Note that spaces are ignored.</p>\n<h3 id=\"named-keys\">Named keys</h3>\n<ul>\n<li><code>plus</code></li>\n<li><code>minus</code></li>\n<li><code>backspace</code></li>\n<li><code>tab</code></li>\n<li><code>enter</code></li>\n<li><code>capslock</code></li>\n<li><code>esc</code></li>\n<li><code>space</code></li>\n<li><code>pageup</code></li>\n<li><code>pagedown</code></li>\n<li><code>end</code></li>\n<li><code>home</code></li>\n<li><code>left</code></li>\n<li><code>up</code></li>\n<li><code>right</code></li>\n<li><code>down</code></li>\n<li><code>ins</code></li>\n<li><code>del</code></li>\n</ul>\n<h3 id=\"aliased-keys\">Aliased keys</h3>\n<ul>\n<li><code>option</code> &rarr; <code>alt</code></li>\n<li><code>cmd</code> &rarr; <code>meta</code></li>\n<li><code>command</code> &rarr; <code>meta</code></li>\n<li><code>return</code> &rarr; <code>enter</code></li>\n<li><code>escape</code> &rarr; <code>esc</code></li>\n<li><code>win</code> &rarr; <code>meta</code></li>\n</ul>\n<p>The special modifier <code>mod</code> will choose the OS-preferred modifier key — <code>cmd</code>\nfor macOS and iOS, or <code>ctrl</code> for Windows and Linux.</p>\n<h3 id=\"hotkey-tester\">Hotkey tester</h3>\n<p>Below is a little widget to quickly help you try out hotkey combos and see how\nthey will look in the dialog. See the key combos section above for more about\nspecifying key combo props.</p>\n",
        {
          "tag": "reactExample",
          "value": "HotkeyTester"
        }
      ],
      "contentsRaw": "@# Hotkeys\n\nHotkeys enable you to create interactions based on user keyboard events.\n\nTo add hotkeys to your React component, use the `@HotkeysTarget` class decorator\nand add a `renderHotkeys()` method. The decorator will call `renderHotkeys()`\nand attach the appropriate key listeners.\n\n@reactExample HotkeyPiano\n\n@## Usage\n\n1. Add the `@HotkeysTarget` class decorator to your react component.\n1. Implement the `renderHotkeys()` method.\n1. Define your `<Hotkey>`s inside a `<Hotkeys>` element.\n\n```tsx\nimport { Hotkey, Hotkeys, HotkeysTarget } from \"@blueprintjs/core\";\nimport * as React from \"react\";\n\n@HotkeysTarget\nexport class MyComponent extends React.Component<{}, {}> {\n    public render() {\n        return <div>Custom content</div>;\n    }\n\n    public renderHotkeys() {\n        return <Hotkeys>\n            <Hotkey\n                global={true}\n                combo=\"shift + a\"\n                label=\"Be awesome all the time\"\n                onKeyDown={() => console.log(\"Awesome!\")}\n            />\n            <Hotkey\n                group=\"Fancy shortcuts\"\n                combo=\"shift + f\"\n                label=\"Be fancy only when focused\"\n                onKeyDown={() => console.log(\"So fancy!\")}\n            />\n        </Hotkeys>;\n    }\n}\n```\n\n@### Decorator\n\nThe `@HotkeysTarget` decorator allows you to easily add global and local\nhotkeys to any React component. Add the decorator to the top of the class and\nmake sure to implement the `renderHotkeys` method.\n\n@interface IHotkeysTarget\n\n@### Props\n\nWrap your `Hotkey`s in the `Hotkeys` element. For example:\n\n```tsx\n<Hotkeys>\n    <Hotkey label=\"Quit\" combo=\"ctrl+q\" global onKeyDown={handleQuit} />\n    <Hotkey label=\"Save\" combo=\"ctrl+s\" group=\"File\" onKeyDown={handleSave} />\n</Hotkeys>\n```\n\n@interface IHotkeysProps\n\n@interface IHotkeyProps\n\n@## Scope\n\n`Hotkey`s can have either local or global scope. Local hotkeys will only be\ntriggered when the target is focused, while global hotkeys can be triggered no\nmatter which element is focused.\n\nAdditionally, any keyboard input that occurs inside a text input (such as a\n`<textarea>`, `<input>`, or `<div contenteditable>`) is ignored.\n\n@## Dialog\n\nIf you define hotkeys for your page, you'll want to display the hotkeys in a\nnice format for the user. If you register any global or local hotkeys, we\nautomatically attach a hotkey `?`, which will display the hotkeys dialog.\n\nThe dialog will always include all available global hotkeys, and if you are\nfocused on an element that has any hotkeys, those will be shown as well.\n\nIf you would like to change the style of the dialog (for example, to apply the\ndark theme class), call the `setHotkeysDialogProps` function with `IDialogProps`.\n\n@## Key combos\n\nEach hotkey must be assigned a key combo that will trigger its events. A key\ncombo consists of zero or more modifier keys (`alt`, `ctrl`, `shift`, `meta`,\n`cmd`) and exactly one action key, such as `A`, `return`, or `up`.\n\nSome key combos have aliases. For example, `shift + 1` can equivalently be\nexpressed as `!` and `cmd` is equal to `meta`. However, normal alphabetic\ncharacters do not have this aliasing, so `X` is equivalent to `x` but is not\nequivalent to `shift + x`.\n\nExamples of valid key combos:\n* `cmd+plus`\n* `!` or, equivalently `shift+1`\n* `return` or, equivalently `enter`\n* `alt + shift + x`\n* `ctrl + left`\n\nNote that spaces are ignored.\n\n### Named keys\n\n* `plus`\n* `minus`\n* `backspace`\n* `tab`\n* `enter`\n* `capslock`\n* `esc`\n* `space`\n* `pageup`\n* `pagedown`\n* `end`\n* `home`\n* `left`\n* `up`\n* `right`\n* `down`\n* `ins`\n* `del`\n\n### Aliased keys\n\n* `option` &rarr; `alt`\n* `cmd` &rarr; `meta`\n* `command` &rarr; `meta`\n* `return` &rarr; `enter`\n* `escape` &rarr; `esc`\n* `win` &rarr; `meta`\n\nThe special modifier `mod` will choose the OS-preferred modifier key — `cmd`\nfor macOS and iOS, or `ctrl` for Windows and Linux.\n\n### Hotkey tester\n\nBelow is a little widget to quickly help you try out hotkey combos and see how\nthey will look in the dialog. See the key combos section above for more about\nspecifying key combo props.\n\n@reactExample HotkeyTester",
      "metadata": {}
    },
    "html-select": {
      "reference": "html-select",
      "route": "core/components/html-select",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\html-select\\html-select.md",
      "title": "HTML select",
      "contents": [
        {
          "tag": "heading",
          "value": "HTML select",
          "level": 1,
          "route": "core/components/html-select"
        },
        "<p>Styling HTML <code>&lt;select&gt;</code> tags requires a wrapper element to customize the\ndropdown caret, so we provide an <code>HTMLSelect</code> component to streamline this\nprocess.</p>\n<div class=\"bp3-callout bp3-intent-success bp3-icon-info-sign\">\n\nThe <a href=\"#select/multi-select\"><code>Select</code></a> component in the <a href=\"#select\"><strong>@blueprintjs/select</strong></a>\npackage provides a React alternative to the native HTML <code>&lt;select&gt;</code> tag. Notably, it\nsupports custom filtering logic and item rendering.\n\n</div>\n\n",
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/html-select.props"
        },
        "<p>Use <code>HTMLSelect</code> exactly like you would use a native <code>&lt;select&gt;</code> with <code>value</code> (or\n<code>defaultValue</code>) and <code>onChange</code>. Options can be passed as <code>&lt;option&gt;</code> children for\nfull flexibility or via the <code>options</code> prop for simple shorthand.</p>\n",
        {
          "tag": "interface",
          "value": "IHTMLSelectProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/html-select.css"
        },
        "<p>The CSS API for this component uses a different CSS class than the React component\nin order to apply the icon via the CSS-only icon font. (The React component\nrenders the icon as SVG.)</p>\n<p>Put class modifiers on the wrapper and attribute modifiers and event handlers\ndirectly on the <code>&lt;select&gt;</code>.</p>\n",
        {
          "tag": "css",
          "value": "select"
        }
      ],
      "contentsRaw": "@# HTML select\n\nStyling HTML `<select>` tags requires a wrapper element to customize the\ndropdown caret, so we provide an `HTMLSelect` component to streamline this\nprocess.\n\n<div class=\"bp3-callout bp3-intent-success bp3-icon-info-sign\">\n\nThe [`Select`](#select/multi-select) component in the [**@blueprintjs/select**](#select)\npackage provides a React alternative to the native HTML `<select>` tag. Notably, it\nsupports custom filtering logic and item rendering.\n\n</div>\n\n@## Props\n\nUse `HTMLSelect` exactly like you would use a native `<select>` with `value` (or\n`defaultValue`) and `onChange`. Options can be passed as `<option>` children for\nfull flexibility or via the `options` prop for simple shorthand.\n\n@interface IHTMLSelectProps\n\n@## CSS\n\nThe CSS API for this component uses a different CSS class than the React component\nin order to apply the icon via the CSS-only icon font. (The React component\nrenders the icon as SVG.)\n\nPut class modifiers on the wrapper and attribute modifiers and event handlers\ndirectly on the `<select>`.\n\n@css select",
      "metadata": {}
    },
    "html-table": {
      "reference": "html-table",
      "route": "core/components/html-table",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\html-table\\html-table.md",
      "title": "HTML table",
      "contents": [
        {
          "tag": "heading",
          "value": "HTML table",
          "level": 1,
          "route": "core/components/html-table"
        },
        "<p>This component provides Blueprint styling to native HTML tables.</p>\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">This is not @blueprintjs/table</h4>\n\nThis table component is a simple CSS-only skin for HTML <code>&lt;table&gt;</code> elements.\nIt is ideal for basic static tables. If you&#39;re looking for more complex\nspreadsheet-like features, check out <a href=\"#table\"><strong>@blueprintjs/table</strong></a>.\n\n</div>\n\n",
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/html-table.props"
        },
        "<p>The <code>&lt;HTMLTable&gt;</code> component provides modifier props to apply styles to an HTML\n<code>&lt;table&gt;</code> element. Note that you are responsible for rendering <code>&lt;thead&gt;</code> and\n<code>&lt;tbody&gt;</code> elements as children.</p>\n",
        {
          "tag": "interface",
          "value": "IHTMLTableProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/html-table.css"
        },
        "<p>Apply the <code>bp3-html-table</code> class to a <code>&lt;table&gt;</code> element. You can apply modifiers as additional classes.</p>\n",
        {
          "tag": "css",
          "value": "html-table"
        }
      ],
      "contentsRaw": "@# HTML table\n\nThis component provides Blueprint styling to native HTML tables.\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">This is not @blueprintjs/table</h4>\n\nThis table component is a simple CSS-only skin for HTML `<table>` elements.\nIt is ideal for basic static tables. If you're looking for more complex\nspreadsheet-like features, check out [**@blueprintjs/table**](#table).\n\n</div>\n\n@## Props\n\nThe `<HTMLTable>` component provides modifier props to apply styles to an HTML\n`<table>` element. Note that you are responsible for rendering `<thead>` and\n`<tbody>` elements as children.\n\n@interface IHTMLTableProps\n\n@## CSS\n\nApply the `bp3-html-table` class to a `<table>` element. You can apply modifiers as additional classes.\n\n@css html-table",
      "metadata": {}
    },
    "html": {
      "reference": "html",
      "route": "core/components/html",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\html\\html.md",
      "title": "HTML elements",
      "contents": [
        {
          "tag": "heading",
          "value": "HTML elements",
          "level": 1,
          "route": "core/components/html"
        },
        "<p>In order to avoid conflicts with other stylesheets, Blueprint does not style\nmost HTML elements directly. Instead, we provide several ways to style basic elements:</p>\n<ol>\n<li>Use Blueprint React components: <code>&lt;H1&gt;</code>.</li>\n<li>Apply the Blueprint <code>Classes</code> constant to an HTML tag: <code>&lt;h1 className={Classes.HEADING}&gt;</code>.</li>\n<li>Nest HTML tags inside a container with <code>Classes.RUNNING_TEXT</code> (see below).</li>\n</ol>\n<p>The following elements should be used in this manner:</p>\n<table>\n<thead>\n<tr>\n<th>Component</th>\n<th>HTML tag</th>\n<th><code>Classes</code> constant</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>H1</code> - <code>H6</code></td>\n<td><code>h1</code> - <code>h6</code></td>\n<td><code>HEADING</code></td>\n</tr>\n<tr>\n<td><code>Blockquote</code></td>\n<td><code>blockquote</code></td>\n<td><code>BLOCKQUOTE</code></td>\n</tr>\n<tr>\n<td><code>Code</code></td>\n<td><code>code</code></td>\n<td><code>CODE</code></td>\n</tr>\n<tr>\n<td><code>Label</code></td>\n<td><code>label</code></td>\n<td><code>LABEL</code> - see <a href=\"#core/components/label\">Labels</a></td>\n</tr>\n<tr>\n<td><code>Pre</code></td>\n<td><code>pre</code></td>\n<td><code>CODE_BLOCK</code></td>\n</tr>\n<tr>\n<td><code>OL</code></td>\n<td><code>ol</code></td>\n<td><code>LIST</code></td>\n</tr>\n<tr>\n<td><code>UL</code></td>\n<td><code>ul</code></td>\n<td><code>LIST</code></td>\n</tr>\n<tr>\n<td><code>HTMLTable</code></td>\n<td><code>table</code></td>\n<td><code>HTML_TABLE</code> - see <a href=\"#core/components/html-table\">HTML Table</a></td>\n</tr>\n</tbody>\n</table>\n<p>The React components listed above each support the full set of relevant HTML attributes <strong>and an\noptional <code>elementRef</code> prop</strong> to access the instance of the HTML element itself\n(not the React component).</p>\n",
        {
          "tag": "heading",
          "value": "Nested usage",
          "level": 2,
          "route": "core/components/html.nested-usage"
        },
        "<p>Applying <code>Classes.RUNNING_TEXT</code> to a container element allows the above HTML\nelements to be used directly without additional CSS classes.\nThis is very useful for rendering generated markup where you cannot control the\nexact HTML elements, such as a Markdown document.</p>\n<p>See the <a href=\"#core/typography.running-text\">Running text</a> documentation for more information.</p>\n",
        {
          "tag": "heading",
          "value": "Linting",
          "level": 2,
          "route": "core/components/html.linting"
        },
        "<p>The <a href=\"https://www.npmjs.com/package/@blueprintjs/tslint-config\"><strong>@blueprintjs/tslint-config</strong></a>\nNPM package provides advanced configuration for <a href=\"http://palantir.github.io/tslint/\">TSLint</a>,\nincluding a custom <code>blueprint-html-components</code> rule that will warn on usages of\nJSX intrinsic elements (<code>&lt;h1&gt;</code>) that have a Blueprint alternative (<code>&lt;H1&gt;</code>). See\nthe package&#39;s <a href=\"https://www.npmjs.com/package/@blueprintjs/tslint-config\">README</a>\nfor usage instructions.</p>\n"
      ],
      "contentsRaw": "\n@# HTML elements\n\nIn order to avoid conflicts with other stylesheets, Blueprint does not style\nmost HTML elements directly. Instead, we provide several ways to style basic elements:\n\n1. Use Blueprint React components: `<H1>`.\n1. Apply the Blueprint `Classes` constant to an HTML tag: `<h1 className={Classes.HEADING}>`.\n1. Nest HTML tags inside a container with `Classes.RUNNING_TEXT` (see below).\n\nThe following elements should be used in this manner:\n\n| Component | HTML tag | `Classes` constant |\n|-|-|-|\n| `H1` - `H6` | `h1` - `h6` | `HEADING` |\n| `Blockquote` | `blockquote` | `BLOCKQUOTE` |\n| `Code` | `code` | `CODE` |\n| `Label` | `label` | `LABEL` - see [Labels](#core/components/label) |\n| `Pre` | `pre` | `CODE_BLOCK` |\n| `OL` | `ol` | `LIST` |\n| `UL` | `ul` | `LIST` |\n| `HTMLTable` | `table` | `HTML_TABLE` - see [HTML Table](#core/components/html-table) |\n\nThe React components listed above each support the full set of relevant HTML attributes **and an\noptional `elementRef` prop** to access the instance of the HTML element itself\n(not the React component).\n\n@## Nested usage\n\nApplying `Classes.RUNNING_TEXT` to a container element allows the above HTML\nelements to be used directly without additional CSS classes.\nThis is very useful for rendering generated markup where you cannot control the\nexact HTML elements, such as a Markdown document.\n\nSee the [Running text](#core/typography.running-text) documentation for more information.\n\n@## Linting\n\nThe [**@blueprintjs/tslint-config**](https://www.npmjs.com/package/@blueprintjs/tslint-config)\nNPM package provides advanced configuration for [TSLint](http://palantir.github.io/tslint/),\nincluding a custom `blueprint-html-components` rule that will warn on usages of\nJSX intrinsic elements (`<h1>`) that have a Blueprint alternative (`<H1>`). See\nthe package's [README](https://www.npmjs.com/package/@blueprintjs/tslint-config)\nfor usage instructions.",
      "metadata": {
        "reference": "html",
        "tag": "new"
      }
    },
    "icon": {
      "reference": "icon",
      "route": "core/components/icon",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\icon\\icon.md",
      "title": "Icon",
      "contents": [
        {
          "tag": "heading",
          "value": "Icon",
          "level": 1,
          "route": "core/components/icon"
        },
        "<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n\nSee the <a href=\"#icons\"><strong>Icons package</strong></a> for a searchable list of all available UI icons.\n\n</div>\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">SVG icons in 2.0</h4>\n\nBlueprint 2.0 introduced SVG icon support and moved icon resources to a separate <strong>@blueprintjs/icons</strong> package.\nThe <code>Icon</code> component renders SVG paths and the icon classes are no longer used by any Blueprint React component.\nIcon font support has been preserved but should be considered a legacy feature that will be removed in a\nfuture major version.\n\n</div>\n\n<p>This section describes two ways of using the UI icon font: via React <code>Icon</code>\ncomponent to render SVG images or via CSS classes to use the icon font.</p>\n<p>Many Blueprint components provide an <code>icon</code> prop which accepts an icon name\n(such as <code>&quot;history&quot;</code>) or a JSX element to use as the icon.</p>\n",
        {
          "tag": "reactExample",
          "value": "IconExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/icon.props"
        },
        "<p>Use the <code>&lt;Icon&gt;</code> component to easily render <strong>SVG icons</strong> in React. The <code>icon</code>\nprop is typed such that editors can offer autocomplete for known icon names. The\noptional <code>iconSize</code> prop determines the exact width and height of the icon\nimage; the icon element itself can be sized separately using CSS.</p>\n<p>The HTML element rendered by <code>&lt;Icon&gt;</code> can be customized with the <code>tagName</code> prop\n(defaults to <code>span</code>), and additional props are passed to this element.</p>\n<p>Data files in the <strong>@blueprintjs/icons</strong> package provide SVG path information\nfor Blueprint&#39;s 300+ icons for 16px and 20px grids. The <code>icon</code> prop dictates\nwhich SVG is rendered and <code>iconSize</code> determines which pixel grid is used:\n<code>iconSize &gt;= 20</code> will use the 20px grid and smaller icons will use the 16px\ngrid.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Icon</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Intent</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>IconNames</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/icons</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;string&nbsp;literals&nbsp;are&nbsp;supported&nbsp;through&nbsp;IconName&nbsp;union&nbsp;type</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Icon</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>icon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>cross</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Icon</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>icon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>globe</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>iconSize</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant numeric decimal tsx\"><span>20</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;constants&nbsp;are&nbsp;provided&nbsp;for&nbsp;name&nbsp;and&nbsp;size</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Icon</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>icon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>IconNames</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>GRAPH</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>iconSize</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Icon</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>SIZE_LARGE</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>intent</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Intent</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>PRIMARY</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;can&nbsp;pass&nbsp;all&nbsp;valid&nbsp;HTML&nbsp;props</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Icon</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>icon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>add</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onClick</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>handleAdd</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onKeyDown</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>handleAddKeys</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></div></pre><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag other html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag other html\"><span>Icon</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>icon</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>globe</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>iconSize</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span>{30}&nbsp;/</span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"comment block html\"><span class=\"punctuation definition comment html\"><span>&lt;!--</span></span><span>&nbsp;renders&nbsp;the&nbsp;following&nbsp;HTML&nbsp;markup:&nbsp;</span><span class=\"punctuation definition comment html\"><span>--&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag other html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag other html\"><span>svg</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-icon</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>data-icon</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>globe</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>width</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>30</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>height</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>30</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>viewBox</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0&nbsp;0&nbsp;20&nbsp;20</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>title</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>globe</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>title</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag other html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag other html\"><span>path</span></span><span>&nbsp;...&nbsp;/</span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag other html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag other html\"><span>svg</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
        {
          "tag": "interface",
          "value": "IIconProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/icon.css"
        },
        "<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">Icon fonts are legacy in 2.0</h4>\n\nBlueprint&#39;s icon fonts should be considered a legacy feature and will be removed in a future major version.\nThe SVGs rendered by the React component do not suffer from the blurriness of icon fonts, and browser\nsupport is equivalent.\n\n</div>\n\n<p>The CSS-only icons API uses the <strong>icon fonts</strong> from the <strong>@blueprintjs/icons</strong> package.</p>\n<p>To use Blueprint UI icons via CSS, you must apply two classes to a <code>&lt;span&gt;</code> element:</p>\n<ul>\n<li>a <strong>sizing class</strong>, either <code>bp3-icon-standard</code> (16px) or <code>bp3-icon-large</code> (20px)</li>\n<li>an <strong>icon name class</strong>, such as <code>bp3-icon-projects</code></li>\n</ul>\n<p>Icon classes also support the four <code>.bp3-intent-*</code> modifiers to color the image.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-icon-</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>size</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span>&nbsp;bp3-icon-</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>name</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-icon-standard&nbsp;bp3-icon-projects</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-icon-large&nbsp;bp3-icon-geosearch&nbsp;bp3-intent-success</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre><div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Non-standard sizes</h4>\n\nGenerally, font icons should only be used at either 16px or 20px. However, if a non-standard size is\nnecessary, set a <code>font-size</code> that is whole multiple of 16 or 20 with the relevant size class.\nYou can instead use the class <code>bp3-icon</code> to make the icon inherit its size from surrounding text.\n\n</div>"
      ],
      "contentsRaw": "@# Icon\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n\nSee the [**Icons package**](#icons) for a searchable list of all available UI icons.\n\n</div>\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">SVG icons in 2.0</h4>\n\nBlueprint 2.0 introduced SVG icon support and moved icon resources to a separate __@blueprintjs/icons__ package.\nThe `Icon` component renders SVG paths and the icon classes are no longer used by any Blueprint React component.\nIcon font support has been preserved but should be considered a legacy feature that will be removed in a\nfuture major version.\n\n</div>\n\nThis section describes two ways of using the UI icon font: via React `Icon`\ncomponent to render SVG images or via CSS classes to use the icon font.\n\nMany Blueprint components provide an `icon` prop which accepts an icon name\n(such as `\"history\"`) or a JSX element to use as the icon.\n\n@reactExample IconExample\n\n@## Props\n\nUse the `<Icon>` component to easily render __SVG icons__ in React. The `icon`\nprop is typed such that editors can offer autocomplete for known icon names. The\noptional `iconSize` prop determines the exact width and height of the icon\nimage; the icon element itself can be sized separately using CSS.\n\nThe HTML element rendered by `<Icon>` can be customized with the `tagName` prop\n(defaults to `span`), and additional props are passed to this element.\n\nData files in the __@blueprintjs/icons__ package provide SVG path information\nfor Blueprint's 300+ icons for 16px and 20px grids. The `icon` prop dictates\nwhich SVG is rendered and `iconSize` determines which pixel grid is used:\n`iconSize >= 20` will use the 20px grid and smaller icons will use the 16px\ngrid.\n\n```tsx\nimport { Icon, Intent } from \"@blueprintjs/core\";\nimport { IconNames } from \"@blueprintjs/icons\";\n\n// string literals are supported through IconName union type\n<Icon icon=\"cross\" />\n<Icon icon=\"globe\" iconSize={20} />\n\n// constants are provided for name and size\n<Icon icon={IconNames.GRAPH} iconSize={Icon.SIZE_LARGE} intent={Intent.PRIMARY} />\n\n// can pass all valid HTML props\n<Icon icon=\"add\" onClick={this.handleAdd} onKeyDown={this.handleAddKeys} />\n```\n\n```html\n<Icon icon=\"globe\" iconSize={30} />\n<!-- renders the following HTML markup: -->\n<svg class=\"bp3-icon\" data-icon=\"globe\" width=\"30\" height=\"30\" viewBox=\"0 0 20 20\">\n    <title>globe</title>\n    <path ... />\n</svg>\n```\n\n@interface IIconProps\n\n@## CSS\n\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">Icon fonts are legacy in 2.0</h4>\n\nBlueprint's icon fonts should be considered a legacy feature and will be removed in a future major version.\nThe SVGs rendered by the React component do not suffer from the blurriness of icon fonts, and browser\nsupport is equivalent.\n\n</div>\n\nThe CSS-only icons API uses the __icon fonts__ from the __@blueprintjs/icons__ package.\n\nTo use Blueprint UI icons via CSS, you must apply two classes to a `<span>` element:\n- a __sizing class__, either `bp3-icon-standard` (16px) or `bp3-icon-large` (20px)\n- an __icon name class__, such as `bp3-icon-projects`\n\nIcon classes also support the four `.bp3-intent-*` modifiers to color the image.\n\n```html\n<span class=\"bp3-icon-{{size}} bp3-icon-{{name}}\"></span>\n\n<span class=\"bp3-icon-standard bp3-icon-projects\"></span>\n<span class=\"bp3-icon-large bp3-icon-geosearch bp3-intent-success\"></span>\n```\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Non-standard sizes</h4>\n\nGenerally, font icons should only be used at either 16px or 20px. However, if a non-standard size is\nnecessary, set a `font-size` that is whole multiple of 16 or 20 with the relevant size class.\nYou can instead use the class `bp3-icon` to make the icon inherit its size from surrounding text.\n\n</div>",
      "metadata": {}
    },
    "menu": {
      "reference": "menu",
      "route": "core/components/menu",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\menu\\menu.md",
      "title": "Menu",
      "contents": [
        {
          "tag": "heading",
          "value": "Menu",
          "level": 1,
          "route": "core/components/menu"
        },
        "<p>Menus display lists of interactive items.</p>\n",
        {
          "tag": "reactExample",
          "value": "MenuExample"
        },
        {
          "tag": "heading",
          "value": "Dropdowns",
          "level": 2,
          "route": "core/components/menu.dropdowns"
        },
        "<p>The <code>Menu</code> component by itself simply renders a list of items. To make a\ndropdown menu, compose a <code>Menu</code> as the <code>content</code> property of a <code>Popover</code>:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Popover</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>content</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Menu</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>...</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Menu</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>position</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"support class dom tsx\"><span>Position</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>RIGHT_TOP</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>icon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>share</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Open&nbsp;in...</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Popover</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre><p>By default, the popover is automatically dismissed when the user clicks a menu\nitem (<a href=\"#core/components/popover.opening-and-closing\">Popover docs</a> have more\ndetails). If you want to opt out of this behavior, set\n<code>shouldDismissPopover={false}</code> on a <code>MenuItem</code>.</p>\n<p>In the example below, clicking the menu item labeled &quot;Table&quot; will not dismiss\nthe <code>Popover</code>.</p>\n",
        {
          "tag": "reactExample",
          "value": "DropdownMenuExample"
        },
        {
          "tag": "heading",
          "value": "Submenus",
          "level": 2,
          "route": "core/components/menu.submenus"
        },
        "<p>To add a submenu to a <code>Menu</code>, simply nest <code>MenuItem</code>s within another <code>MenuItem</code>.\nThe submenu opens to the right of its parent by default, but will adjust and flip to the left if\nthere is not enough room to the right.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Menu</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>MenuItem</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Submenu</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>MenuItem</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Child&nbsp;one</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>MenuItem</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Child&nbsp;two</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>MenuItem</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Child&nbsp;three</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>MenuItem</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Menu</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre><div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">JavaScript only</h4>\n\nSubmenus are only supported in the React components. They cannot be created with CSS alone because\nthey rely on the <a href=\"#core/components/popover\"><code>Popover</code></a> component for positioning and transitions.\n\n</div>\n\n",
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/menu.props"
        },
        "<p>The <code>Menu</code> API includes three stateless React components:</p>\n<ul>\n<li><a href=\"#core/components/menu.menu\"><code>Menu</code></a></li>\n<li><a href=\"#core/components/menu.menu-item\"><code>MenuItem</code></a> (aliased as <code>Menu.Item</code>)</li>\n<li><a href=\"#core/components/menu.menu-divider\"><code>MenuDivider</code></a> (aliased as <code>Menu.Divider</code>)</li>\n</ul>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Menu</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Menu.Item</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>icon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>new-text-box</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onClick</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>handleClick</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>New&nbsp;text&nbsp;box</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Menu.Item</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>icon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>new-object</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onClick</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>handleClick</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>New&nbsp;object</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Menu.Item</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>icon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>new-link</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onClick</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>handleClick</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>New&nbsp;link</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Menu.Divider</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Menu.Item</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Settings...</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>icon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>cog</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Menu.Item</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>icon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>tick</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Save&nbsp;on&nbsp;edit</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Menu.Item</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>icon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>blank</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Compile&nbsp;on&nbsp;edit</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Menu.Item</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Menu</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre>",
        {
          "tag": "heading",
          "value": "Menu",
          "level": 3,
          "route": "core/components/menu.menu"
        },
        "<p>A <code>Menu</code> is a <code>&lt;ul&gt;</code> container for menu items and dividers.</p>\n",
        {
          "tag": "interface",
          "value": "IMenuProps"
        },
        {
          "tag": "heading",
          "value": "Menu item",
          "level": 3,
          "route": "core/components/menu.menu-item"
        },
        "<p>A <code>MenuItem</code> is a single interactive item in a <code>Menu</code>.</p>\n<p>This component renders an <code>&lt;li&gt;</code> containing an <code>&lt;a&gt;</code>. Make the <code>MenuItem</code>\ninteractive by providing the <code>href</code>, <code>target</code>, and <code>onClick</code> props as necessary.</p>\n<p>Create submenus by nesting <code>MenuItem</code>s inside each other as <code>children</code>. Use the\nrequired <code>text</code> prop for <code>MenuItem</code> content.</p>\n",
        {
          "tag": "interface",
          "value": "IMenuItemProps"
        },
        {
          "tag": "heading",
          "value": "Menu divider",
          "level": 3,
          "route": "core/components/menu.menu-divider"
        },
        "<p>Use <code>MenuDivider</code> to separate menu sections. Optionally, add a title to the divider.</p>\n",
        {
          "tag": "interface",
          "value": "IMenuDividerProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/menu.css"
        },
        "<p>Menus can be constructed manually using the HTML markup and <code>bp3-menu-*</code> classes below. However, you\nshould use the menu <a href=\"#core/components/menu.javscript-api\">React components</a> instead wherever possible,\nas they abstract away the tedious parts of implementing a menu.</p>\n<ul>\n<li><p>Begin with a <code>ul.bp3-menu</code>. Each <code>li</code> child denotes a single entry in the menu.</p>\n</li>\n<li><p>Put a <code>.bp3-menu-item</code> element inside an <code>li</code> to create a clickable entry. Use either <code>&lt;button&gt;</code> or\n<code>&lt;a&gt;</code> tags for menu items to denote interactivity.</p>\n</li>\n<li><p>Add icons to menu items the same way you would to buttons: simply add the appropriate\n<code>bp3-icon-&lt;name&gt;</code> class*.</p>\n</li>\n<li><p>Make menu items active with the class <code>bp3-active</code> (along with <code>bp3-intent-*</code> if suitable).</p>\n</li>\n<li><p>Make menu items non-interactive with the class <code>bp3-disabled</code>.</p>\n</li>\n<li><p>Wrap menu item text in a <code>&lt;span&gt;</code> element for proper alignment. (Note that React automatically\ndoes this.)</p>\n</li>\n<li><p>Add a right-aligned label to a menu item by adding a <code>span.bp3-menu-item-label</code> inside the\n<code>.bp3-menu-item</code>, after the content. Add an icon to the label by adding icon classes to the label\nelement (<code>bp3-icon-standard</code> size is recommended).</p>\n</li>\n<li><p>Add a divider between items with <code>li.bp3-menu-divider</code>.</p>\n</li>\n<li><p>If you want the popover to close when the user clicks a menu item, add the class\n<code>bp3-popover-dismiss</code> to any relevant menu items.</p>\n</li>\n</ul>\n<p><small>* You do not need to add a <code>bp3-icon-&lt;sizing&gt;</code> class to menu items—icon sizing is\ndefined as part of <code>.bp3-menu-item</code>.</small></p>\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n\nNote that the following examples are <code>display: inline-block</code>; you may need to adjust\nmenu width in your own usage.\n\n</div>\n\n",
        {
          "tag": "css",
          "value": "menu"
        },
        {
          "tag": "heading",
          "value": "Section headers",
          "level": 3,
          "route": "core/components/menu.section-headers"
        },
        "<p>Add an <code>li.bp3-menu-header</code>. Wrap the text in an <code>&lt;h6&gt;</code> tag for proper typography and borders.</p>\n",
        {
          "tag": "css",
          "value": "menu-header"
        }
      ],
      "contentsRaw": "@# Menu\n\nMenus display lists of interactive items.\n\n@reactExample MenuExample\n\n@## Dropdowns\n\nThe `Menu` component by itself simply renders a list of items. To make a\ndropdown menu, compose a `Menu` as the `content` property of a `Popover`:\n\n```tsx\n<Popover content={<Menu>...</Menu>} position={Position.RIGHT_TOP}>\n    <Button icon=\"share\" text=\"Open in...\" />\n</Popover>\n```\n\nBy default, the popover is automatically dismissed when the user clicks a menu\nitem ([Popover docs](#core/components/popover.opening-and-closing) have more\ndetails). If you want to opt out of this behavior, set\n`shouldDismissPopover={false}` on a `MenuItem`.\n\nIn the example below, clicking the menu item labeled \"Table\" will not dismiss\nthe `Popover`.\n\n@reactExample DropdownMenuExample\n\n@## Submenus\n\nTo add a submenu to a `Menu`, simply nest `MenuItem`s within another `MenuItem`.\nThe submenu opens to the right of its parent by default, but will adjust and flip to the left if\nthere is not enough room to the right.\n\n```tsx\n<Menu>\n    <MenuItem text=\"Submenu\">\n        <MenuItem text=\"Child one\" />\n        <MenuItem text=\"Child two\" />\n        <MenuItem text=\"Child three\" />\n    </MenuItem>\n</Menu>\n```\n\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">JavaScript only</h4>\n\nSubmenus are only supported in the React components. They cannot be created with CSS alone because\nthey rely on the [`Popover`](#core/components/popover) component for positioning and transitions.\n\n</div>\n\n@## Props\n\nThe `Menu` API includes three stateless React components:\n\n* [`Menu`](#core/components/menu.menu)\n* [`MenuItem`](#core/components/menu.menu-item) (aliased as `Menu.Item`)\n* [`MenuDivider`](#core/components/menu.menu-divider) (aliased as `Menu.Divider`)\n\n```tsx\n<Menu>\n    <Menu.Item icon=\"new-text-box\" onClick={this.handleClick} text=\"New text box\" />\n    <Menu.Item icon=\"new-object\" onClick={this.handleClick} text=\"New object\" />\n    <Menu.Item icon=\"new-link\" onClick={this.handleClick} text=\"New link\" />\n    <Menu.Divider />\n    <Menu.Item text=\"Settings...\" icon=\"cog\">\n        <Menu.Item icon=\"tick\" text=\"Save on edit\" />\n        <Menu.Item icon=\"blank\" text=\"Compile on edit\" />\n    </Menu.Item>\n</Menu>\n```\n\n@### Menu\n\nA `Menu` is a `<ul>` container for menu items and dividers.\n\n@interface IMenuProps\n\n@### Menu item\n\nA `MenuItem` is a single interactive item in a `Menu`.\n\nThis component renders an `<li>` containing an `<a>`. Make the `MenuItem`\ninteractive by providing the `href`, `target`, and `onClick` props as necessary.\n\nCreate submenus by nesting `MenuItem`s inside each other as `children`. Use the\nrequired `text` prop for `MenuItem` content.\n\n@interface IMenuItemProps\n\n@### Menu divider\n\nUse `MenuDivider` to separate menu sections. Optionally, add a title to the divider.\n\n@interface IMenuDividerProps\n\n@## CSS\n\nMenus can be constructed manually using the HTML markup and `bp3-menu-*` classes below. However, you\nshould use the menu [React components](#core/components/menu.javscript-api) instead wherever possible,\nas they abstract away the tedious parts of implementing a menu.\n\n* Begin with a `ul.bp3-menu`. Each `li` child denotes a single entry in the menu.\n\n* Put a `.bp3-menu-item` element inside an `li` to create a clickable entry. Use either `<button>` or\n  `<a>` tags for menu items to denote interactivity.\n\n* Add icons to menu items the same way you would to buttons: simply add the appropriate\n  `bp3-icon-<name>` class\\*.\n\n* Make menu items active with the class `bp3-active` (along with `bp3-intent-*` if suitable).\n\n* Make menu items non-interactive with the class `bp3-disabled`.\n\n* Wrap menu item text in a `<span>` element for proper alignment. (Note that React automatically\n  does this.)\n\n* Add a right-aligned label to a menu item by adding a `span.bp3-menu-item-label` inside the\n  `.bp3-menu-item`, after the content. Add an icon to the label by adding icon classes to the label\n  element (`bp3-icon-standard` size is recommended).\n\n* Add a divider between items with `li.bp3-menu-divider`.\n\n* If you want the popover to close when the user clicks a menu item, add the class\n  `bp3-popover-dismiss` to any relevant menu items.\n\n<small>\\* You do not need to add a `bp3-icon-<sizing>` class to menu items—icon sizing is\ndefined as part of `.bp3-menu-item`.</small>\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n\nNote that the following examples are `display: inline-block`; you may need to adjust\nmenu width in your own usage.\n\n</div>\n\n@css menu\n\n@### Section headers\n\nAdd an `li.bp3-menu-header`. Wrap the text in an `<h6>` tag for proper typography and borders.\n\n@css menu-header",
      "metadata": {}
    },
    "navbar": {
      "reference": "navbar",
      "route": "core/components/navbar",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\navbar\\navbar.md",
      "title": "Navbar",
      "contents": [
        {
          "tag": "heading",
          "value": "Navbar",
          "level": 1,
          "route": "core/components/navbar"
        },
        "<p>Navbars present useful navigation controls at the top of an application.</p>\n",
        {
          "tag": "reactExample",
          "value": "NavbarExample"
        },
        {
          "tag": "heading",
          "value": "Fixed to viewport top",
          "level": 3,
          "route": "core/components/navbar.fixed-to-viewport-top"
        },
        "<p>Enable the <code>fixedToTop</code> prop to attach a navbar to the top of the viewport using\n<code>position: fixed; top: 0;</code>. This is so-called &quot;sticky&quot; behavior: the navbar\nstays at the top of the screen as the user scrolls through the document.</p>\n<p>This modifier is not illustrated here because it breaks the document flow.</p>\n<div class=\"bp3-callout bp3-intent-danger bp3-icon-error\">\n    <h4 class=\"bp3-heading\">Body padding required</h4>\n\nThe fixed navbar will lie on top of your other content unless you add padding to the top of the\n<code>&lt;body&gt;</code> element equal to the height of the navbar. Use the <code>$pt-navbar-height</code> Sass variable.\n\n</div>\n\n",
        {
          "tag": "heading",
          "value": "Fixed width",
          "level": 3,
          "route": "core/components/navbar.fixed-width"
        },
        "<p>If your application is inside a fixed-width container (instead of spanning the\nentire viewport), you can align the navbar to match by wrap your navbar groups\nin an element with your desired <code>width</code> and <code>margin: 0 auto;</code> to horizontally\ncenter it.</p>\n",
        {
          "tag": "css",
          "value": "navbar-container"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/navbar.props"
        },
        "<p>The <code>Navbar</code> API includes four stateless React components:</p>\n<ul>\n<li><code>Navbar</code></li>\n<li><code>NavbarGroup</code> (aliased as <code>Navbar.Group</code>)</li>\n<li><code>NavbarHeading</code> (aliased as <code>Navbar.Heading</code>)</li>\n<li><code>NavbarDivider</code> (aliased as <code>Navbar.Divider</code>)</li>\n</ul>\n<p>These components are simple containers for their children. Each of them supports\nthe full range of HTML <code>&lt;div&gt;</code> props.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Navbar</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Navbar.Group</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>align</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Alignment</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>LEFT</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Navbar.Heading</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Blueprint</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Navbar.Heading</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Navbar.Divider</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>className</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>bp3-minimal</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>icon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>home</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Home</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>className</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>bp3-minimal</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>icon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>document</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Files</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Navbar.Group</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Navbar</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre>",
        {
          "tag": "interface",
          "value": "INavbarProps"
        },
        {
          "tag": "interface",
          "value": "INavbarGroupProps"
        },
        {
          "tag": "interface",
          "value": "INavbarHeadingProps"
        },
        {
          "tag": "interface",
          "value": "INavbarDividerProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/navbar.css"
        },
        "<p>Use the following classes to construct a navbar:</p>\n<ul>\n<li><code>nav.bp3-navbar</code> &ndash; The parent element. Use a <code>&lt;nav&gt;</code> element for accessibility.</li>\n<li><code>.bp3-navbar-group.bp3-align-(left|right)</code> &ndash; Left- or right-aligned group.</li>\n<li><code>.bp3-navbar-heading</code> &ndash; Larger text for your application title.</li>\n<li><code>.bp3-navbar-divider</code> &ndash; Thin vertical line that can be placed between groups of elements.</li>\n</ul>\n",
        {
          "tag": "css",
          "value": "navbar"
        }
      ],
      "contentsRaw": "@# Navbar\n\nNavbars present useful navigation controls at the top of an application.\n\n@reactExample NavbarExample\n\n@### Fixed to viewport top\n\nEnable the `fixedToTop` prop to attach a navbar to the top of the viewport using\n`position: fixed; top: 0;`. This is so-called \"sticky\" behavior: the navbar\nstays at the top of the screen as the user scrolls through the document.\n\nThis modifier is not illustrated here because it breaks the document flow.\n\n<div class=\"bp3-callout bp3-intent-danger bp3-icon-error\">\n    <h4 class=\"bp3-heading\">Body padding required</h4>\n\nThe fixed navbar will lie on top of your other content unless you add padding to the top of the\n`<body>` element equal to the height of the navbar. Use the `$pt-navbar-height` Sass variable.\n\n</div>\n\n@### Fixed width\n\nIf your application is inside a fixed-width container (instead of spanning the\nentire viewport), you can align the navbar to match by wrap your navbar groups\nin an element with your desired `width` and `margin: 0 auto;` to horizontally\ncenter it.\n\n@css navbar-container\n\n@## Props\n\nThe `Navbar` API includes four stateless React components:\n\n* `Navbar`\n* `NavbarGroup` (aliased as `Navbar.Group`)\n* `NavbarHeading` (aliased as `Navbar.Heading`)\n* `NavbarDivider` (aliased as `Navbar.Divider`)\n\nThese components are simple containers for their children. Each of them supports\nthe full range of HTML `<div>` props.\n\n```tsx\n<Navbar>\n    <Navbar.Group align={Alignment.LEFT}>\n        <Navbar.Heading>Blueprint</Navbar.Heading>\n        <Navbar.Divider />\n        <Button className=\"bp3-minimal\" icon=\"home\" text=\"Home\" />\n        <Button className=\"bp3-minimal\" icon=\"document\" text=\"Files\" />\n    </Navbar.Group>\n</Navbar>\n```\n\n@interface INavbarProps\n\n@interface INavbarGroupProps\n\n@interface INavbarHeadingProps\n\n@interface INavbarDividerProps\n\n@## CSS\n\nUse the following classes to construct a navbar:\n\n* `nav.bp3-navbar` &ndash; The parent element. Use a `<nav>` element for accessibility.\n* `.bp3-navbar-group.bp3-align-(left|right)` &ndash; Left- or right-aligned group.\n* `.bp3-navbar-heading` &ndash; Larger text for your application title.\n* `.bp3-navbar-divider` &ndash; Thin vertical line that can be placed between groups of elements.\n\n@css navbar",
      "metadata": {}
    },
    "non-ideal-state": {
      "reference": "non-ideal-state",
      "route": "core/components/non-ideal-state",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\non-ideal-state\\non-ideal-state.md",
      "title": "Non-ideal state",
      "contents": [
        {
          "tag": "heading",
          "value": "Non-ideal state",
          "level": 1,
          "route": "core/components/non-ideal-state"
        },
        "<p>Non-ideal UI states inform the user that some content is unavailable. There are several types of\nnon-ideal states, including:</p>\n<ul>\n<li><strong>Empty state:</strong> a container has just been created and has no data in it yet,\nor a container&#39;s contents have been intentionally removed.</li>\n<li><strong>Loading state:</strong> a container is awaiting data. A good practice is to show a\nspinner for this state, with optional explanatory text below the spinner.</li>\n<li><strong>Error state:</strong> something went wrong (for instance, 404 and 500 HTTP errors).\nIn this case, a good practice is to add a call to action directing the user\nwhat to do next.</li>\n</ul>\n",
        {
          "tag": "reactExample",
          "value": "NonIdealStateExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/non-ideal-state.props"
        },
        "<p>The props are rendered in this order in the DOM, with comfortable vertical\nspacing between each child:</p>\n<ol>\n<li><code>icon</code></li>\n<li><code>title</code></li>\n<li><code>description</code></li>\n<li><code>action</code></li>\n<li><code>children</code></li>\n</ol>\n",
        {
          "tag": "interface",
          "value": "INonIdealStateProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/non-ideal-state.css"
        },
        "<p>Apply <code>.bp3-non-ideal-state</code> to the container and <code>.bp3-non-ideal-state-visual</code>\nto the icon element. The container should only have direct element children (all\ntext should be wrapped in an enclosing element) for proper spacing between each\nchild.</p>\n",
        {
          "tag": "css",
          "value": "non-ideal-state"
        }
      ],
      "contentsRaw": "\n@# Non-ideal state\n\nNon-ideal UI states inform the user that some content is unavailable. There are several types of\nnon-ideal states, including:\n\n* **Empty state:** a container has just been created and has no data in it yet,\n  or a container's contents have been intentionally removed.\n* **Loading state:** a container is awaiting data. A good practice is to show a\n  spinner for this state, with optional explanatory text below the spinner.\n* **Error state:** something went wrong (for instance, 404 and 500 HTTP errors).\n  In this case, a good practice is to add a call to action directing the user\n  what to do next.\n\n@reactExample NonIdealStateExample\n\n@## Props\n\nThe props are rendered in this order in the DOM, with comfortable vertical\nspacing between each child:\n\n1. `icon`\n1. `title`\n1. `description`\n1. `action`\n1. `children`\n\n@interface INonIdealStateProps\n\n@## CSS\n\nApply `.bp3-non-ideal-state` to the container and `.bp3-non-ideal-state-visual`\nto the icon element. The container should only have direct element children (all\ntext should be wrapped in an enclosing element) for proper spacing between each\nchild.\n\n@css non-ideal-state",
      "metadata": {
        "parent": "components"
      }
    },
    "overflow-list": {
      "reference": "overflow-list",
      "route": "core/components/overflow-list",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\overflow-list\\overflow-list.md",
      "title": "Overflow list",
      "contents": [
        {
          "tag": "heading",
          "value": "Overflow list",
          "level": 1,
          "route": "core/components/overflow-list"
        },
        "<p><code>OverflowList</code> takes a generic list of items and renders as many items as can\nfit inside itself. Overflowed items that do not fit are collapsed into a single\nelement. The visible items will be recomputed when a resize is detected.</p>\n<p>The <code>items</code> prop accepts an array of generic objects. The required\n<code>visibleItemRenderer</code> callback prop determines the appearance of a visible item.\nThe required <code>overflowRenderer</code> callback prop receives all overflowed items\nand renders the overflow indicator.</p>\n<p>This component uses a polyfill for the <a href=\"https://developers.google.com/web/updates/2016/10/resizeobserver\">proposed <code>ResizeObserver</code> API</a>\nto efficiently detect when its dimensions change. Use the <code>observeParents</code> prop\nto watch for resizing further up in the DOM tree.</p>\n",
        {
          "tag": "reactExample",
          "value": "OverflowListExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/overflow-list.props"
        },
        {
          "tag": "interface",
          "value": "IOverflowListProps"
        }
      ],
      "contentsRaw": "\n@# Overflow list\n\n`OverflowList` takes a generic list of items and renders as many items as can\nfit inside itself. Overflowed items that do not fit are collapsed into a single\nelement. The visible items will be recomputed when a resize is detected.\n\nThe `items` prop accepts an array of generic objects. The required\n`visibleItemRenderer` callback prop determines the appearance of a visible item.\nThe required `overflowRenderer` callback prop receives all overflowed items\nand renders the overflow indicator.\n\nThis component uses a polyfill for the [proposed `ResizeObserver` API][resizeobserver]\nto efficiently detect when its dimensions change. Use the `observeParents` prop\nto watch for resizing further up in the DOM tree.\n\n[resizeobserver]: https://developers.google.com/web/updates/2016/10/resizeobserver\n\n@reactExample OverflowListExample\n\n@## Props\n\n@interface IOverflowListProps",
      "metadata": {
        "tag": "new"
      }
    },
    "overlay": {
      "reference": "overlay",
      "route": "core/components/overlay",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\overlay\\overlay.md",
      "title": "Overlay",
      "contents": [
        {
          "tag": "heading",
          "value": "Overlay",
          "level": 1,
          "route": "core/components/overlay"
        },
        "<p><code>Overlay</code> is a generic low-level component for rendering content <em>on top of</em> its\nsiblings, or above the entire application.</p>\n<p>It combines a <a href=\"#core/components/portal\"><code>Portal</code></a>, which allows JSX children to\nbe rendered at a different place in the DOM tree, with a\n<a href=\"https://reactcommunity.org/react-transition-group/\"><code>CSSTransition</code></a> to support\nelegant enter and leave transitions.</p>\n<p>An optional &quot;backdrop&quot; element can be rendered behind the overlaid children to\nprovide modal behavior, whereby the overlay prevents interaction with anything\nbehind it.</p>\n<p><code>Overlay</code> is the backbone of all the components listed in the <strong>Overlays</strong> group\nin the sidebar. Using <code>Overlay</code> directly should be rare in your app; it should\nonly be necessary if no existing component meets your needs.</p>\n",
        {
          "tag": "reactExample",
          "value": "OverlayExample"
        },
        {
          "tag": "heading",
          "value": "Scroll support",
          "level": 2,
          "route": "core/components/overlay.scroll-support"
        },
        "<p>Overlays rely heavily on fixed and absolute positioning. By default, an overlay\nlarger than the viewport will not be scrollable, so any overflowing content will\nbe hidden. Fortunately, making an overlay scrollable is very easy: simply pass\n<code>Classes.OVERLAY_SCROLL_CONTAINER</code> as the Overlay <code>className</code>, and we&#39;ll take\ncare of the rest.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Overlay</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>className</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Classes</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>OVERLAY_SCROLL_CONTAINER</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"invalid illegal attribute tsx\"><span>...</span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></div></pre><p>The <code>Dialog</code> component applies this CSS class automatically.</p>\n",
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/overlay.props"
        },
        "<p><code>Overlay</code> is a controlled component that renders its children only when\n<code>isOpen={true}</code>. The optional backdrop element will be inserted before the\nchildren if <code>hasBackdrop={true}</code>.</p>\n<p>The <code>onClose</code> callback prop is invoked when user interaction causes the overlay\nto close, but your application is responsible for updating the state that\nactually closes the overlay.</p>\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">A note about overlay content positioning</h4>\n\nWhen rendered inline, content will automatically be set to <code>position: absolute</code> to respect\ndocument flow. Otherwise, content will be set to <code>position: fixed</code> to cover the entire viewport.\n</div>\n\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Show&nbsp;overlay</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onClick</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>toggleOverlay</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Overlay</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>isOpen</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>state</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>isOpen</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onClose</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>toggleOverlay</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Overlaid&nbsp;contents...</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Overlay</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre>",
        {
          "tag": "interface",
          "value": "IOverlayProps"
        }
      ],
      "contentsRaw": "@# Overlay\n\n`Overlay` is a generic low-level component for rendering content _on top of_ its\nsiblings, or above the entire application.\n\nIt combines a [`Portal`](#core/components/portal), which allows JSX children to\nbe rendered at a different place in the DOM tree, with a\n[`CSSTransition`](https://reactcommunity.org/react-transition-group/) to support\nelegant enter and leave transitions.\n\nAn optional \"backdrop\" element can be rendered behind the overlaid children to\nprovide modal behavior, whereby the overlay prevents interaction with anything\nbehind it.\n\n`Overlay` is the backbone of all the components listed in the **Overlays** group\nin the sidebar. Using `Overlay` directly should be rare in your app; it should\nonly be necessary if no existing component meets your needs.\n\n@reactExample OverlayExample\n\n@## Scroll support\n\nOverlays rely heavily on fixed and absolute positioning. By default, an overlay\nlarger than the viewport will not be scrollable, so any overflowing content will\nbe hidden. Fortunately, making an overlay scrollable is very easy: simply pass\n`Classes.OVERLAY_SCROLL_CONTAINER` as the Overlay `className`, and we'll take\ncare of the rest.\n\n```tsx\n<Overlay className={Classes.OVERLAY_SCROLL_CONTAINER} ... />\n```\n\nThe `Dialog` component applies this CSS class automatically.\n\n@## Props\n\n`Overlay` is a controlled component that renders its children only when\n`isOpen={true}`. The optional backdrop element will be inserted before the\nchildren if `hasBackdrop={true}`.\n\nThe `onClose` callback prop is invoked when user interaction causes the overlay\nto close, but your application is responsible for updating the state that\nactually closes the overlay.\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">A note about overlay content positioning</h4>\n\nWhen rendered inline, content will automatically be set to `position: absolute` to respect\ndocument flow. Otherwise, content will be set to `position: fixed` to cover the entire viewport.\n</div>\n\n```tsx\n<div>\n    <Button text=\"Show overlay\" onClick={this.toggleOverlay} />\n    <Overlay isOpen={this.state.isOpen} onClose={this.toggleOverlay}>\n        Overlaid contents...\n    </Overlay>\n</div>\n```\n\n@interface IOverlayProps",
      "metadata": {}
    },
    "panel-stack": {
      "reference": "panel-stack",
      "route": "core/components/panel-stack",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\panel-stack\\panel-stack.md",
      "title": "Panel stack",
      "contents": [
        {
          "tag": "heading",
          "value": "Panel stack",
          "level": 1,
          "route": "core/components/panel-stack"
        },
        "<p><code>PanelStack</code> manages a stack of panels and displays only the topmost panel.</p>\n<p>Each panel appears with a header containing a &quot;back&quot; button to return to the\nprevious panel. The bottom-most <code>initialPanel</code> cannot be closed or removed from\nthe stack. Panels use\n<a href=\"http://reactcommunity.org/react-transition-group/css-transition\"><code>CSSTransition</code></a>\nfor seamless transitions.</p>\n",
        {
          "tag": "reactExample",
          "value": "PanelStackExample"
        },
        {
          "tag": "heading",
          "value": "Panels",
          "level": 2,
          "route": "core/components/panel-stack.panels"
        },
        "<p>Panels are supplied as <code>IPanel</code> objects like <code>{ component, props, title }</code>,\nwhere <code>component</code> and <code>props</code> are used to render the panel element and <code>title</code>\nwill appear in the header and back button. This breakdown allows the component\nto avoid cloning elements. Note that each panel is only mounted when it is atop\nthe stack and is unmounted when it is closed or when a panel opens above it.</p>\n<p><code>PanelStack</code> injects its own <code>IPanelProps</code> into each panel (in addition to the\n<code>props</code> defined alongside the <code>component</code>), providing methods to imperatively\nclose the current panel or open a new one on top of it.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Button</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>IPanelProps</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>PanelStack</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"storage type class tsx\"><span>class</span></span><span>&nbsp;</span><span class=\"entity name type class tsx\"><span>MyPanel</span></span><span>&nbsp;</span><span class=\"storage modifier tsx\"><span>extends</span></span><span>&nbsp;</span><span class=\"entity name type module tsx\"><span>React</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity other inherited-class tsx\"><span>Component</span></span><span class=\"meta type parameters tsx\"><span class=\"punctuation definition typeparameters begin tsx\"><span>&lt;</span></span><span class=\"entity name type tsx\"><span>IPanelProps</span></span><span class=\"punctuation definition typeparameters end tsx\"><span>&gt;</span></span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta method declaration tsx\"><span class=\"storage modifier tsx\"><span>public</span></span><span>&nbsp;</span><span class=\"meta definition method tsx entity name function tsx\"><span>render</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control flow tsx\"><span>return</span></span><span>&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onClick</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>openSettingsPanel</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Settings</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta method declaration tsx\"><span class=\"storage modifier tsx\"><span>private</span></span><span>&nbsp;</span><span class=\"meta definition method tsx entity name function tsx\"><span>openSettingsPanel</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"punctuation whitespace comment leading tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;openPanel&nbsp;(and&nbsp;closePanel)&nbsp;are&nbsp;injected&nbsp;by&nbsp;PanelStack</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>props</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>openPanel</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta objectliteral tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>component</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>SettingsPanel</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;&lt;-&nbsp;class&nbsp;or&nbsp;stateless&nbsp;function&nbsp;type</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta objectliteral tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>props</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>enabled</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"constant language boolean true tsx\"><span>true</span></span><span>&nbsp;</span></span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;&lt;-&nbsp;SettingsPanel&nbsp;props&nbsp;without&nbsp;IPanelProps</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta objectliteral tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>title</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Settings</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;&lt;-&nbsp;appears&nbsp;in&nbsp;header&nbsp;and&nbsp;back&nbsp;button</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta objectliteral tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"storage type class tsx\"><span>class</span></span><span>&nbsp;</span><span class=\"entity name type class tsx\"><span>SettingsPanel</span></span><span>&nbsp;</span><span class=\"storage modifier tsx\"><span>extends</span></span><span>&nbsp;</span><span class=\"entity name type module tsx\"><span>React</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity other inherited-class tsx\"><span>Component</span></span><span class=\"meta type parameters tsx\"><span class=\"punctuation definition typeparameters begin tsx\"><span>&lt;</span></span><span class=\"entity name type tsx\"><span>IPanelProps</span></span><span>&nbsp;</span><span class=\"keyword operator type tsx\"><span>&amp;</span></span><span>&nbsp;</span><span class=\"meta object type tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta field declaration tsx\"><span class=\"meta definition property tsx variable object property tsx\"><span>enabled</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"support type primitive tsx\"><span>boolean</span></span><span>&nbsp;</span></span></span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span class=\"punctuation definition typeparameters end tsx\"><span>&gt;</span></span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"punctuation whitespace comment leading tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;...</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>PanelStack</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>initialPanel</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>component</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>MyPanel</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>title</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Home</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></div></pre>",
        {
          "tag": "interface",
          "value": "IPanel"
        },
        {
          "tag": "interface",
          "value": "IPanelProps"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/panel-stack.props"
        },
        "<p>The panel stack cannot be controlled but <code>onClose</code> and <code>onOpen</code> callbacks are\navailable to listen for changes.</p>\n",
        {
          "tag": "interface",
          "value": "IPanelStackProps"
        }
      ],
      "contentsRaw": "\n@# Panel stack\n\n`PanelStack` manages a stack of panels and displays only the topmost panel.\n\nEach panel appears with a header containing a \"back\" button to return to the\nprevious panel. The bottom-most `initialPanel` cannot be closed or removed from\nthe stack. Panels use\n[`CSSTransition`](http://reactcommunity.org/react-transition-group/css-transition)\nfor seamless transitions.\n\n\n@reactExample PanelStackExample\n\n@## Panels\n\nPanels are supplied as `IPanel` objects like `{ component, props, title }`,\nwhere `component` and `props` are used to render the panel element and `title`\nwill appear in the header and back button. This breakdown allows the component\nto avoid cloning elements. Note that each panel is only mounted when it is atop\nthe stack and is unmounted when it is closed or when a panel opens above it.\n\n`PanelStack` injects its own `IPanelProps` into each panel (in addition to the\n`props` defined alongside the `component`), providing methods to imperatively\nclose the current panel or open a new one on top of it.\n\n```tsx\nimport { Button, IPanelProps, PanelStack } from \"@blueprintjs/core\";\n\nclass MyPanel extends React.Component<IPanelProps> {\n    public render() {\n        return <Button onClick={this.openSettingsPanel} text=\"Settings\" />\n    }\n\n    private openSettingsPanel() {\n        // openPanel (and closePanel) are injected by PanelStack\n        this.props.openPanel({\n            component: SettingsPanel, // <- class or stateless function type\n            props: { enabled: true }, // <- SettingsPanel props without IPanelProps\n            title: \"Settings\",        // <- appears in header and back button\n        });\n    }\n}\n\nclass SettingsPanel extends React.Component<IPanelProps & { enabled: boolean }> {\n    // ...\n}\n\n<PanelStack initialPanel={{ component: MyPanel, title: \"Home\" }} />\n```\n\n@interface IPanel\n\n@interface IPanelProps\n\n@## Props\n\nThe panel stack cannot be controlled but `onClose` and `onOpen` callbacks are\navailable to listen for changes.\n\n@interface IPanelStackProps",
      "metadata": {
        "tag": "new"
      }
    },
    "popover": {
      "reference": "popover",
      "route": "core/components/popover",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\popover\\popover.md",
      "title": "Popover",
      "contents": [
        {
          "tag": "heading",
          "value": "Popover",
          "level": 1,
          "route": "core/components/popover"
        },
        "<p>Popovers display floating content next to a target element.</p>\n<p><code>Popover</code> is built on top of the <a href=\"https://popper.js.org\"><strong>Popper.js</strong></a> library.\nPopper.js is a small (<code>~6kb</code>) library that offers a powerful, customizable\npositioning engine and operates at blazing speed (<code>~60fps</code>).</p>\n",
        {
          "tag": "reactExample",
          "value": "PopoverExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/popover.props"
        },
        "<p><code>Popover</code> supports controlled and uncontrolled usage through <code>isOpen</code> and\n<code>defaultIsOpen</code>, respectively. Use <code>onInteraction</code> in controlled mode to respond\nto changes in the <code>isOpen</code> state.</p>\n<p>Supported user interactions are dictated by the <code>interactionKind</code> prop.</p>\n<p>This component is quite powerful and has a wide range of features. Explore the\n<a href=\"#core/components/popover.concepts\"><strong>Concepts</strong></a> section below for more advanced\nguides.</p>\n",
        {
          "tag": "interface",
          "value": "IPopoverProps"
        },
        {
          "tag": "heading",
          "value": "Concepts",
          "level": 2,
          "route": "core/components/popover.concepts"
        },
        {
          "tag": "heading",
          "value": "Structure",
          "level": 3,
          "route": "core/components/popover.structure"
        },
        "<p>When creating a popover, you must specify both its <strong>content</strong> and its <strong>target</strong>.\nThis can be done a few ways:</p>\n<ol>\n<li><p>Provide both the <code>content</code> and <code>target</code> props, which accept a string or a JSX element.\nOmitting the <code>target</code> prop will produce an error.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Popover</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>content</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Content</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>target</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Open</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></div></pre></li>\n<li><p>Provide one or two <code>children</code>. Omitting a <code>target</code> element will produce an error.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Popover</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Open</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Content</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Popover</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre></li>\n<li><p>It is possible to mix the two: provide the <code>content</code> prop and one React child as the target.\n(Using the <code>target</code> prop with <code>children</code> is not supported and will produce a warning.)</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Popover</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>content</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Content</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Open</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Popover</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre></li>\n</ol>\n<p>The <strong>target</strong> acts as the trigger for the popover; user interaction will show the popover based on\n<code>interactionKind</code>. The <strong>content</strong> will be shown in the popover itself. The popover&#39;s will always be\npositioned on the page next to the target; the <code>position</code> prop determines the relative position (on\nwhich side of the target).</p>\n<p>Internally, the provided target is wrapped in a <code>span.bp3-popover-target</code>. This\nin turn is wrapped in a <code>span.bp3-popover-wrapper</code>. The extra\n<code>bp3-popover-wrapper</code> is present so that both the popover and target will be\nwrapped in a single element when rendering\n<a href=\"#core/components/popover.portal-rendering\">popovers without a portal</a>.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>span</span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>class</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>bp3-popover-wrapper</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>span</span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>class</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>bp3-popover-target</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>My&nbsp;target</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>span</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;inline&nbsp;Popover&nbsp;would&nbsp;render&nbsp;here&nbsp;--&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>span</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre><div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">Button targets</h4>\n\nButtons make great popover targets, but the <code>disabled</code> attribute on a <code>&lt;button&gt;</code> blocks all\nevents, which interferes with the popover functioning. If you need to disable a button that\ntriggers a popover, you should use <a href=\"#core/components/button.anchor-button\"><code>AnchorButton</code></a> instead.\nSee the <a href=\"#core/components/button.props\">callout here</a> for more details.\n\n</div>\n\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>const</span></span><span class=\"meta object-binding-pattern-variable tsx\"><span>&nbsp;</span><span class=\"punctuation definition binding-pattern object tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>Button</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>Intent</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>Popover</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>PopoverInteractionKind</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>Position</span></span><span>&nbsp;</span><span class=\"punctuation definition binding-pattern object tsx\"><span>}</span></span><span>&nbsp;</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"keyword control export tsx\"><span>export</span></span><span>&nbsp;</span><span class=\"storage type class tsx\"><span>class</span></span><span>&nbsp;</span><span class=\"entity name type class tsx\"><span>PopoverExample</span></span><span>&nbsp;</span><span class=\"storage modifier tsx\"><span>extends</span></span><span>&nbsp;</span><span class=\"entity name type module tsx\"><span>React</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity other inherited-class tsx\"><span>Component</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta method declaration tsx\"><span class=\"storage modifier tsx\"><span>public</span></span><span>&nbsp;</span><span class=\"meta definition method tsx entity name function tsx\"><span>render</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"punctuation whitespace comment leading tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;popover&nbsp;content&nbsp;gets&nbsp;no&nbsp;padding&nbsp;by&nbsp;default;&nbsp;add&nbsp;the&nbsp;&quot;bp3-popover-content-sizing&quot;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"punctuation whitespace comment leading tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;class&nbsp;to&nbsp;the&nbsp;popover&nbsp;to&nbsp;set&nbsp;nice&nbsp;padding&nbsp;between&nbsp;its&nbsp;border&nbsp;and&nbsp;content,</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"punctuation whitespace comment leading tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;and&nbsp;a&nbsp;default&nbsp;width&nbsp;when&nbsp;inline.</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control flow tsx\"><span>return</span></span><span>&nbsp;</span><span class=\"meta brace round tsx\"><span>(</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Popover</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>interactionKind</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>PopoverInteractionKind</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>CLICK</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>popoverClassName</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>bp3-popover-content-sizing</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>position</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"support class dom tsx\"><span>Position</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>RIGHT</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>intent</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Intent</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>PRIMARY</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Popover&nbsp;target</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>h5</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Popover&nbsp;title</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>h5</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>p</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>...</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>p</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>className</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>bp3-popover-dismiss</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Dismiss</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Popover</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></div></pre>",
        {
          "tag": "heading",
          "value": "Position",
          "level": 3,
          "route": "core/components/popover.position"
        },
        "<p>The <code>position</code> prop controls the Popover&#39;s position relative to the target.\nThe <code>Position</code> enumeration defines the full set of supported values. There are two attributes of positioning to consider:</p>\n<ul>\n<li>Which <span class=\"docs-popover-position-label-side\"><strong>side</strong></span> of the target the popover should render on.</li>\n<li>The popover&#39;s <span class=\"docs-popover-position-label-alignment\"><strong>alignment</strong></span> relative to the target.</li>\n</ul>\n<p>These two attributes can be expressed with a single value having the following structure:</p>\n<pre class=\"docs-popover-position-value-code-block\">\n    <span class=\"docs-popover-position-label-side\">[SIDE]</span>_<span class=\"docs-popover-position-label-alignment\">[ALIGNMENT]</span>\n</pre>\n\n<p>The following example shows all supported <code>Position</code> values and how each behaves in practice.\nNote that if <strong><code>_<span class=\"docs-popover-position-label-alignment\">[ALIGNMENT]</span></code></strong> is ommitted,\nthe popover will align to the <strong>center</strong> of the target.</p>\n",
        {
          "tag": "reactExample",
          "value": "PopoverPositionExample"
        },
        "<h4 id=\"automatic-positioning\">Automatic positioning</h4>\n<p>The Popover&#39;s <code>position</code> can also be chosen <em>automatically</em> via <code>&quot;auto&quot;</code>, <code>&quot;auto-start&quot;</code>, or <code>&quot;auto-end&quot;</code>.\nAll of these options choose and continually update the <span class=\"docs-popover-position-label-side\"><strong>side</strong></span>\nfor you to avoid overflowing the boundary element (when scrolling within it, for instance).\nThe options differ in how they handle <span class=\"docs-popover-position-label-alignment\"><strong>alignment</strong></span>:</p>\n<ul>\n<li>In <code>&quot;auto&quot;</code> mode (the default for <code>position</code>), the Popover will align itself to the center of the target as it flips sides.</li>\n<li>In <code>&quot;auto-start&quot;</code> mode, the Popover will align itself to the <code>start</code> of the target (i.e., the top edge when the popover is on the left or right, or the left edge when the popover is on the top or bottom).</li>\n<li>In <code>&quot;auto-end&quot;</code> mode, the Popover will align itself to the <code>end</code> of the target (i.e., the bottom edge when the popover is on the left or right, or the right edge when the popover is on the top or bottom).</li>\n</ul>\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n\nYou can also specify a specific initial position (e.g. <code>LEFT</code>, <code>TOP_RIGHT</code>) and still update the Popover&#39;s position\nautomatically by enabling the modifiers <code>flip</code> and <code>preventOverflow</code>.\n<a href=\"#core/components/popover.modifiers\">See below</a> for information about modifiers.\n\n</div>\n\n",
        {
          "tag": "heading",
          "value": "Modifiers",
          "level": 3,
          "route": "core/components/popover.modifiers"
        },
        "<p>Modifiers are the tools through which you customize Popper.js&#39;s behavior. Popper.js defines several of its own modifiers\nto handle things such as flipping, preventing overflow from a boundary element, and positioning the arrow.\n<code>Popover</code> defines a few additional modifiers to support itself. You can even define your own modifiers, and customize\nthe Popper.js defaults, through the <code>modifiers</code> prop. (Note: it is not currently possible to configure <code>Popover</code>&#39;s modifiers\nthrough the <code>modifiers</code> prop, nor can you define your own with the same name.)</p>\n<p><strong>Popper.js modifiers that can be customized via the <code>modifiers</code> prop:</strong></p>\n<ul>\n<li><a href=\"https://popper.js.org/popper-documentation.html#modifiers..shift\"><code>shift</code></a> applies the <code>-start</code>/<code>-end</code> portion of placement</li>\n<li><a href=\"https://popper.js.org/popper-documentation.html#modifiers..offset\"><code>offset</code></a> can be configured to move the popper on both axes using a CSS-like syntax</li>\n<li><a href=\"https://popper.js.org/popper-documentation.html#modifiers..preventOverflow\"><code>preventOverflow</code></a> prevents the popper from being positioned outside the boundary</li>\n<li><a href=\"https://popper.js.org/popper-documentation.html#modifiers..keepTogether\"><code>keepTogether</code></a> ensures the popper stays near to its reference without leaving any gap.</li>\n<li><a href=\"https://popper.js.org/popper-documentation.html#modifiers..arrow\"><code>arrow</code></a> computes the arrow position.</li>\n<li><a href=\"https://popper.js.org/popper-documentation.html#modifiers..flip\"><code>flip</code></a> flips the popper&#39;s placement when it starts to overlap its reference element.</li>\n<li><a href=\"https://popper.js.org/popper-documentation.html#modifiers..inner\"><code>inner</code></a> makes the popper flow toward the inner of the reference element (disabled by default).</li>\n<li><a href=\"https://popper.js.org/popper-documentation.html#modifiers..hide\"><code>hide</code></a> hides the popper when its reference element is outside of the popper boundaries.</li>\n<li><a href=\"https://popper.js.org/popper-documentation.html#modifiers..computeStyle\"><code>computeStyle</code></a> generates the CSS styles to apply to the DOM</li>\n</ul>\n<p><strong>Popper.js modifiers that <code>Popover</code> manages and that cannot be customized:</strong></p>\n<ul>\n<li><code>arrowOffset</code> moves the popper a little bit to make room for the arrow</li>\n<li><code>updatePopoverState</code> saves off some popper data to <code>Popover</code> React state for fancy things</li>\n</ul>\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n\nSee <a href=\"https://popper.js.org/popper-documentation.html#modifiers\">the Popper.js Modifiers documentation</a>\nfor more details on all the available modifiers.\n\n</div>\n\n",
        {
          "tag": "heading",
          "value": "Controlled mode",
          "level": 3,
          "route": "core/components/popover.controlled-mode"
        },
        "<p>If you prefer to have more control over your popover&#39;s behavior, you can specify the <code>isOpen</code>\nproperty to use the component in <strong>controlled mode</strong>. You are now in charge of the component&#39;s\nopen state.</p>\n<p>Providing a non-null value for <code>isOpen</code> disables all automatic interaction and instead invokes\nthe <code>onInteraction</code> callback prop any time the opened state <em>would have changed</em> in response to\nuser interaction under the current <code>interactionKind</code>.</p>\n<p>Note that there are cases where <code>onInteraction</code> is invoked with an unchanged open state.\nIt is important to pay attention to the value of the <code>nextOpenState</code> parameter and determine\nin your application logic whether you should care about a particular invocation (for instance,\nif the <code>nextOpenState</code> is not the same as the <code>Popover</code>&#39;s current state).</p>\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">Disabling controlled popovers</h4>\n\nIf <code>disabled={true}</code>, a controlled popover will remain closed even if <code>isOpen={true}</code>.\nThe popover will re-open when <code>disabled</code> is set to <code>false</code>.\n\n</div>\n\n<h4 id=\"example-controlled-usage\">Example controlled usage</h4>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>const</span></span><span class=\"meta object-binding-pattern-variable tsx\"><span>&nbsp;</span><span class=\"punctuation definition binding-pattern object tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>Popover</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>Position</span></span><span>&nbsp;</span><span class=\"punctuation definition binding-pattern object tsx\"><span>}</span></span><span>&nbsp;</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"keyword control export tsx\"><span>export</span></span><span>&nbsp;</span><span class=\"storage type class tsx\"><span>class</span></span><span>&nbsp;</span><span class=\"entity name type class tsx\"><span>ControlledPopoverExample</span></span><span>&nbsp;</span><span class=\"storage modifier tsx\"><span>extends</span></span><span>&nbsp;</span><span class=\"entity name type module tsx\"><span>React</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity other inherited-class tsx\"><span>Component</span></span><span class=\"meta type parameters tsx\"><span class=\"punctuation definition typeparameters begin tsx\"><span>&lt;</span></span><span class=\"meta object type tsx\"><span class=\"punctuation definition block tsx\"><span>{</span><span>}</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta object type tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta field declaration tsx\"><span class=\"meta definition property tsx variable object property tsx\"><span>isOpen</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"support type primitive tsx\"><span>boolean</span></span><span>&nbsp;</span></span></span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span class=\"punctuation definition typeparameters end tsx\"><span>&gt;</span></span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"storage modifier tsx\"><span>public</span></span><span>&nbsp;</span><span class=\"meta field declaration tsx\"><span class=\"meta definition property tsx variable object property tsx\"><span>state</span></span><span>&nbsp;</span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>isOpen</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"constant language boolean false tsx\"><span>false</span></span><span>&nbsp;</span></span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta method declaration tsx\"><span class=\"storage modifier tsx\"><span>public</span></span><span>&nbsp;</span><span class=\"meta definition method tsx entity name function tsx\"><span>render</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>let</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr tsx\"><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>popoverContent</span></span><span>&nbsp;</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta brace round tsx\"><span>(</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta var expr tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta var expr tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>h5</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Popover&nbsp;Title</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>h5</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta var expr tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>p</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>...</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>p</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta var expr tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>button</span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>class</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-popover-dismiss</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Close&nbsp;popover</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>button</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta var expr tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta var expr tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta brace round tsx\"><span>)</span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control flow tsx\"><span>return</span></span><span>&nbsp;</span><span class=\"meta brace round tsx\"><span>(</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Popover</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>content</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>popoverContent</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>interactionKind</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>PopoverInteractionKind</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>CLICK</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>isOpen</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>state</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>isOpen</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onInteraction</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta arrow tsx\"><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"variable parameter tsx\"><span>state</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"storage type function arrow tsx\"><span>=&gt;</span></span><span>&nbsp;</span></span><span class=\"meta function-call tsx\"><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>handleInteraction</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"variable other readwrite tsx\"><span>state</span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>position</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"support class dom tsx\"><span>Position</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>RIGHT</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>button</span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>className</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-intent-primary</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Popover&nbsp;target</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>button</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Popover</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta method declaration tsx\"><span class=\"storage modifier tsx\"><span>private</span></span><span>&nbsp;</span><span class=\"meta definition method tsx entity name function tsx\"><span>handleInteraction</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"variable parameter tsx\"><span>nextOpenState</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"support type primitive tsx\"><span>boolean</span></span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>setState</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>isOpen</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>nextOpenState</span></span><span>&nbsp;</span></span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></div></pre>",
        {
          "tag": "heading",
          "value": "Interactions",
          "level": 3,
          "route": "core/components/popover.interactions"
        },
        "<p>The <code>interactionKind</code> prop governs how the popover should open and close in response to user interactions.\nThe supported values are:</p>\n<ul>\n<li><code>HOVER</code><ul>\n<li><strong>Opens when:</strong> the target is hovered</li>\n<li><strong>Closes when:</strong> the cursor is no longer inside the target _or_ the popover</li>\n</ul>\n</li>\n<li><code>HOVER_TARGET_ONLY</code>:<ul>\n<li><strong>Opens when:</strong> the target is hovered</li>\n<li><strong>Closes when:</strong> the cursor is no longer inside the target</li>\n</ul>\n</li>\n<li><code>CLICK</code>:<ul>\n<li><strong>Opens when:</strong> the target is clicked</li>\n<li><strong>Closes when:</strong> the user clicks anywhere outside of the popover (including the target)</li>\n</ul>\n</li>\n<li><code>CLICK_TARGET_ONLY</code>:<ul>\n<li><strong>Opens when:</strong> the target is clicked</li>\n<li><strong>Closes when:</strong> the target is clicked</li>\n</ul>\n</li>\n</ul>\n<p>The following example demonstrates the various interaction kinds (note: these Popovers contain <a href=\"#core/components/menu.menu-item\"><code>MenuItem</code></a>s with <code>shouldDismissPopover={false}</code>, for clarity):</p>\n",
        {
          "tag": "reactExample",
          "value": "PopoverInteractionKindExample"
        },
        "<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Conditionally styling popover targets</h4>\n\nWhen a popover is open, <code>Classes.POPOVER_OPEN</code> is applied to the target.\nYou can use this to style the target differently when the popover is open.\n\n</div>\n\n",
        {
          "tag": "heading",
          "value": "Closing on click",
          "level": 3,
          "route": "core/components/popover.closing-on-click"
        },
        "<p>Sometimes it is desirable for an element inside a <code>Popover</code> to close the popover\non click. <code>Popover</code> supports a pair of CSS classes, <code>Classes.POPOVER_DISMISS</code>\nand <code>Classes.POPOVER_DISMISS_OVERRIDE</code>, that can be attached to elements to\ndescribe whether click events should dismiss the enclosing popover.</p>\n<p>To mark an element (and its children) as &quot;dismiss elements&quot;, simply add the\nclass <code>Classes.POPOVER_DISMISS</code>. For example, the <strong>Dismiss</strong> button in the\ntop-level <a href=\"#core/components/popover\">Popover example</a> has this class, and all\n<code>MenuItem</code>s receive this class by default (see <code>shouldDismissPopover</code> prop). To\nenable this behavior on the entire popover body, pass\n<code>popoverClassName={Classes.POPOVER_DISMISS}</code>.</p>\n<p>Cancel the dismiss behavior on subtrees by nesting\n<code>Classes.POPOVER_DISMISS_OVERRIDE</code> inside <code>Classes.POPOVER_DISMISS</code>. Clicks\noriginating inside disabled elements (either via the <code>disabled</code> attribute or\n<code>Classes.DISABLED</code>) will never dismiss a popover.</p>\n<p>Additionally, the prop <code>captureDismiss</code> (disabled by default) will prevent click\nevents from dismissing <em>grandparent</em> popovers (not the <code>Popover</code> immediately\ncontaining the dismiss element). <code>MenuItem</code> disables this feature such that\nclicking any submenu item will close all submenus, which is desirable behavior\nfor a menu tree.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>className</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Classes</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>POPOVER_DISMISS</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>button</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Click&nbsp;me&nbsp;to&nbsp;dismiss</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>button</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>button</span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>disabled</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant language boolean true tsx\"><span>true</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>I&nbsp;will&nbsp;not&nbsp;dismiss</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>button</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>className</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Classes</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>POPOVER_DISMISS_OVERRIDE</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>button</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>I&nbsp;too&nbsp;shall&nbsp;not&nbsp;dismiss</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>button</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre>",
        {
          "tag": "reactExample",
          "value": "PopoverDismissExample"
        },
        "<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n\nDismiss elements won&#39;t have any effect in a popover with\n<code>PopoverInteractionKind.HOVER_TARGET_ONLY</code>, because there is no way to\ninteract with the popover content itself: the popover is dismissed the\nmoment the user mouses away from the target.\n\n</div>\n\n",
        {
          "tag": "heading",
          "value": "Backdrop",
          "level": 3,
          "route": "core/components/popover.backdrop"
        },
        "<p>The <code>hasBackdrop</code> prop governs whether a backdrop appears while the popover is open. When <code>true</code>:</p>\n<ul>\n<li><strong>A transparent backdrop will render beneath the popover</strong>. This backdrop\ncovers the entire viewport and prevents interaction with the document until\nthe popover is closed. This is useful for preventing stray clicks or hovers in\nyour app when the user tries to close a popover.</li>\n<li><strong>The popover will receive focus when opened</strong>, allowing for better keyboard accessibility.</li>\n</ul>\n<p>Clicking the backdrop will:</p>\n<ul>\n<li><em>in uncontrolled mode</em>, close the popover.</li>\n<li><em>in controlled mode</em>, invoke the <code>onInteraction</code> callback with an argument of <code>false</code>.</li>\n</ul>\n<p>This backdrop behavior is only available for popovers having <code>interactionKind={PopoverInteractionKind.CLICK}</code>.\nAn error is thrown if used otherwise.</p>\n<h4 id=\"styling-the-backdrop\">Styling the backdrop</h4>\n<p>By default, the popover backdrop is invisible, but you can easily add your own styles to\n<code>.bp3-popover-backdrop</code> to customize the appearance of the backdrop (for example, you could give it\na translucent background color, like the backdrop for the <a href=\"#core/components/dialog\"><code>Dialog</code></a> component).</p>\n<p>The backdrop element has the same opacity-fade transition as the <code>Dialog</code> backdrop.</p>\n<div class=\"bp3-callout bp3-intent-danger bp3-icon-error\">\n    <h4 class=\"bp3-heading\">Dangerous edge case</h4>\n\nRendering a <code>&lt;Popover isOpen={true} hasBackdrop={true}&gt;</code> outside the viewport bounds can easily break\nyour application by covering the UI with an invisible non-interactive backdrop. This edge case\nmust be handled by your application code or simply avoided if possible.\n\n</div>\n\n",
        {
          "tag": "heading",
          "value": "Portal rendering",
          "level": 3,
          "route": "core/components/popover.portal-rendering"
        },
        "<p>By default, popover contents are rendered in a <a href=\"#core/components/portal\"><code>Portal</code></a> appended to <code>document.body</code>. This\nallows the popover contents to &quot;escape&quot; the application DOM tree to avoid incompatible styles on ancestor elements.\n(Incompatible styles typically include hidden <code>overflow</code> or complex <code>position</code> logic.) It also ensures that the popover\nwill appear above all other content, as its container element appears after the application container in the DOM.</p>\n<p>Disable the <code>usePortal</code> prop to render popover contents in the normal document flow as a sibling of the target.\nThis behavior can be desirable to inherit CSS styles from surrounding elements, and can result in smoother performance\nwhen scrolling. Not using a <code>Portal</code> works well for most layouts, because popovers style themselves to appear above\neverything else on the page without needing to manually adjust z-indices, and Popper.js will keep them nicely positioned.</p>\n",
        {
          "tag": "reactExample",
          "value": "PopoverPortalExample"
        },
        {
          "tag": "heading",
          "value": "Style",
          "level": 2,
          "route": "core/components/popover.style"
        },
        {
          "tag": "heading",
          "value": "Dark theme",
          "level": 3,
          "route": "core/components/popover.dark-theme"
        },
        "<p>The <code>Popover</code> component automatically detects whether its trigger is nested inside a <code>.bp3-dark</code>\ncontainer and applies the same class to itself. You can also explicitly apply the dark theme to\nthe React component by providing the prop <code>popoverClassName=&quot;bp3-dark&quot;</code>.</p>\n<p>As a result, any component that you place inside a <code>Popover</code> (such as a <code>Menu</code>) automatically\ninherits the dark theme styles. Note that <a href=\"#core/components/tooltip\"><code>Tooltip</code></a> uses <code>Popover</code> internally, so it also benefits\nfrom this behavior.</p>\n<p>This behavior can be disabled (if the <code>Popover</code> uses a <code>Portal</code>) via the <code>inheritDarkTheme</code> prop.</p>\n",
        {
          "tag": "heading",
          "value": "Sizing",
          "level": 3,
          "route": "core/components/popover.sizing"
        },
        "<p>Popovers by default have a <code>max-width</code> but no <code>max-height</code>. To constrain the height of a popover\nand make its content scrollable, add a custom class to your popover content element and attach\nstyles to that class:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Popover</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>content</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>class</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>custom-class</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>...</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;...</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Popover</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source css scss\"><span class=\"entity other attribute-name class css\"><span class=\"punctuation definition entity css\"><span>.</span></span><span>custom-class</span></span><span>&nbsp;</span><span class=\"meta property-list scss\"><span class=\"punctuation section property-list begin scss\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"meta property-list scss\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta property-name scss\"><span class=\"support type property-name scss\"><span>max-height</span></span></span><span class=\"meta property-value scss\"><span class=\"punctuation separator key-value scss\"><span>:</span></span><span>&nbsp;</span><span class=\"variable scss\"><span class=\"variable scss\"><span>$pt-grid-size</span></span><span>&nbsp;</span></span><span>*</span><span class=\"constant numeric scss\"><span>&nbsp;15</span></span><span class=\"punctuation terminator rule scss\"><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"meta property-list scss\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta property-name scss\"><span class=\"support type property-name scss\"><span>overflow-y</span></span></span><span class=\"meta property-value scss\"><span class=\"punctuation separator key-value scss\"><span>:</span></span><span>&nbsp;</span><span class=\"support constant property-value scss\"><span>auto</span></span><span class=\"punctuation terminator rule scss\"><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"meta property-list scss\"><span class=\"punctuation section property-list end scss\"><span>}</span></span></span></span></div></pre>",
        {
          "tag": "reactExample",
          "value": "PopoverSizingExample"
        },
        {
          "tag": "heading",
          "value": "Minimal style",
          "level": 3,
          "route": "core/components/popover.minimal-style"
        },
        "<p>You can create a minimal popover by setting <code>minimal={true}</code>.\nThis removes the arrow from the popover and makes the transitions more subtle.</p>\n",
        {
          "tag": "reactExample",
          "value": "PopoverMinimalExample"
        },
        "<p>This minimal style is recommended for popovers that are not triggered by an obvious action like the\nuser clicking or hovering over something. For example, a minimal popover is useful for making\ntypeahead menus where the menu appears almost instantly after the user starts typing.</p>\n<p>Minimal popovers are also useful for context menus that require quick enter and leave animations to\nsupport fast workflows. You can see an example in the <a href=\"#core/components/context-menu\">context menus</a>\ndocumentation.</p>\n",
        {
          "tag": "heading",
          "value": "Testing",
          "level": 2,
          "route": "core/components/popover.testing"
        },
        "<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n\nYour best resource for strategies in popover testing is\n<a href=\"https://github.com/palantir/blueprint/blob/develop/packages/core/test/popover/popoverTests.tsx\">its own unit test suite.</a>\n\n</div>\n\n<h4 id=\"animation-delays\">Animation delays</h4>\n<p><code>Popover</code> can be difficult to test because it uses <code>Portal</code> to inject its contents elsewhere in the\nDOM (outside the usual flow); this can be simplified by setting <code>usePortal={false}</code> in tests.\nHover interactions can also be tricky due to delays and transitions; this can be resolved by\nzeroing the default hover delays.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Popover</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"keyword operator spread tsx\"><span>...</span></span><span class=\"variable other readwrite tsx\"><span>yourProps</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>usePortal</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant language boolean false tsx\"><span>false</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>hoverCloseDelay</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant numeric decimal tsx\"><span>0</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>hoverOpenDelay</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant numeric decimal tsx\"><span>0</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>yourTarget</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Popover</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre><h4 id=\"rendering-delays\">Rendering delays</h4>\n<p><code>Popover</code> delays rendering updates triggered on <code>mouseleave</code>, because the mouse might have moved from the popover to the target, which may require special handling depending on the current <a href=\"#core/components/popover.opening-and-closing\"><code>interactionKind</code></a>. Popper.js also throttles rendering updates to improve performance. If your components are not updating in a synchronous fashion as expected, you may need to introduce a <code>setTimeout</code> to wait for asynchronous Popover rendering to catch up:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Classes</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Overlay</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Popover</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>PopoverInteractionKind</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>assert</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>chai</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>mount</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>enzyme</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Target</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>react-popper</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"variable other readwrite tsx\"><span>wrapper</span></span><span>&nbsp;</span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"entity name function tsx\"><span>mount</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Popover</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>usePortal</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant language boolean false tsx\"><span>false</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>interactionKind</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>PopoverInteractionKind</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>HOVER</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Target</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Content</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Popover</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>wrapper</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function tsx\"><span>find</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"variable other readwrite tsx\"><span>Target</span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"meta function-call tsx\"><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>simulate</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>mouseenter</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;hostNodes()&nbsp;is&nbsp;an&nbsp;Enzyme&nbsp;3&nbsp;helper&nbsp;that&nbsp;retains&nbsp;only&nbsp;native-HTML&nbsp;nodes.</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>wrapper</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function tsx\"><span>find</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"string template tsx\"><span class=\"punctuation definition string template begin tsx\"><span>`</span></span><span>.</span><span class=\"meta template expression tsx\"><span class=\"punctuation definition template-expression begin tsx\"><span>${</span></span><span class=\"meta embedded line tsx\"><span class=\"variable other object tsx\"><span>Classes</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>POPOVER</span></span></span><span class=\"punctuation definition template-expression end tsx\"><span>}</span></span></span><span class=\"punctuation definition string template end tsx\"><span>`</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"meta function-call tsx\"><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>hostNodes</span></span></span><span class=\"meta brace round tsx\"><span>(</span><span>)</span></span><span class=\"meta function-call tsx\"><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>simulate</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>mouseenter</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>wrapper</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function tsx\"><span>find</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"string template tsx\"><span class=\"punctuation definition string template begin tsx\"><span>`</span></span><span>.</span><span class=\"meta template expression tsx\"><span class=\"punctuation definition template-expression begin tsx\"><span>${</span></span><span class=\"meta embedded line tsx\"><span class=\"variable other object tsx\"><span>Classes</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>POPOVER</span></span></span><span class=\"punctuation definition template-expression end tsx\"><span>}</span></span></span><span class=\"punctuation definition string template end tsx\"><span>`</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"meta function-call tsx\"><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>hostNodes</span></span></span><span class=\"meta brace round tsx\"><span>(</span><span>)</span></span><span class=\"meta function-call tsx\"><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>simulate</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>mouseleave</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function-call tsx\"><span class=\"support function tsx\"><span>setTimeout</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"meta arrow tsx\"><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"storage type function arrow tsx\"><span>=&gt;</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"punctuation whitespace comment leading tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;Popover&nbsp;delays&nbsp;closing&nbsp;using&nbsp;setTimeout,&nbsp;so&nbsp;need&nbsp;to&nbsp;defer&nbsp;this&nbsp;check&nbsp;too.</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr tsx\"><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>isOpen</span></span><span>&nbsp;</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>wrapper</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function tsx\"><span>find</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"variable other readwrite tsx\"><span>Overlay</span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"meta function-call tsx\"><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>prop</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>isOpen</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>assert</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>equal</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"variable other readwrite tsx\"><span>isOpen</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"constant language boolean false tsx\"><span>false</span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div></pre><h4 id=\"element-refs\">Element refs</h4>\n<p>If <code>usePortal={false}</code> rendering is not an option, <code>Popover</code> instances expose <code>popoverElement</code> and\n<code>targetElement</code> refs of the actual DOM elements. Importantly, <code>popoverElement</code> points to the\n<code>.bp3-popover</code> element inside the <code>Portal</code> so you can use it to easily query popover contents without\nknowing precisely where they are in the DOM. These properties exist primarily to simplify testing;\ndo not rely on them for feature work.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;using&nbsp;mount()&nbsp;from&nbsp;enzyme</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr tsx\"><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>wrapper</span></span><span>&nbsp;</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"entity name function tsx\"><span>mount</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Popover</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>content</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>className</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>test</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>test</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>const</span></span><span class=\"meta object-binding-pattern-variable tsx\"><span>&nbsp;</span><span class=\"punctuation definition binding-pattern object tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>popoverElement</span></span><span>&nbsp;</span><span class=\"punctuation definition binding-pattern object tsx\"><span>}</span></span><span>&nbsp;</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>wrapper</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>instance</span></span></span><span class=\"meta brace round tsx\"><span>(</span><span>)</span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;popoverElement&nbsp;is&nbsp;the&nbsp;parent&nbsp;element&nbsp;of&nbsp;.bp3-popover</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>popoverElement</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function dom tsx\"><span>querySelector</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>.test</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>textContent</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span><span>&nbsp;</span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;&quot;test&quot;</span></span></span></div></pre>"
      ],
      "contentsRaw": "@# Popover\n\nPopovers display floating content next to a target element.\n\n`Popover` is built on top of the [__Popper.js__](https://popper.js.org) library.\nPopper.js is a small (`~6kb`) library that offers a powerful, customizable\npositioning engine and operates at blazing speed (`~60fps`).\n\n@reactExample PopoverExample\n\n@## Props\n\n`Popover` supports controlled and uncontrolled usage through `isOpen` and\n`defaultIsOpen`, respectively. Use `onInteraction` in controlled mode to respond\nto changes in the `isOpen` state.\n\nSupported user interactions are dictated by the `interactionKind` prop.\n\nThis component is quite powerful and has a wide range of features. Explore the\n[**Concepts**](#core/components/popover.concepts) section below for more advanced\nguides.\n\n@interface IPopoverProps\n\n@## Concepts\n\n@### Structure\n\nWhen creating a popover, you must specify both its __content__ and its __target__.\nThis can be done a few ways:\n\n1. Provide both the `content` and `target` props, which accept a string or a JSX element.\n  Omitting the `target` prop will produce an error.\n  ```tsx\n  <Popover content={<Content />} target={<Button text=\"Open\" />} />\n  ```\n\n1. Provide one or two `children`. Omitting a `target` element will produce an error.\n  ```tsx\n  <Popover>\n      <Button text=\"Open\" />\n      <Content />\n  </Popover>\n  ```\n\n1. It is possible to mix the two: provide the `content` prop and one React child as the target.\n  (Using the `target` prop with `children` is not supported and will produce a warning.)\n  ```tsx\n  <Popover content={<Content />}>\n      <Button text=\"Open\" />\n  </Popover>\n  ```\n\nThe __target__ acts as the trigger for the popover; user interaction will show the popover based on\n`interactionKind`. The __content__ will be shown in the popover itself. The popover's will always be\npositioned on the page next to the target; the `position` prop determines the relative position (on\nwhich side of the target).\n\nInternally, the provided target is wrapped in a `span.bp3-popover-target`. This\nin turn is wrapped in a `span.bp3-popover-wrapper`. The extra\n`bp3-popover-wrapper` is present so that both the popover and target will be\nwrapped in a single element when rendering\n[popovers without a portal](#core/components/popover.portal-rendering).\n\n```tsx\n<span class=\"bp3-popover-wrapper\">\n    <span class=\"bp3-popover-target\">\n        <Button text=\"My target\" />\n    </span>\n    <!-- inline Popover would render here -->\n</span>\n```\n\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">Button targets</h4>\n\nButtons make great popover targets, but the `disabled` attribute on a `<button>` blocks all\nevents, which interferes with the popover functioning. If you need to disable a button that\ntriggers a popover, you should use [`AnchorButton`](#core/components/button.anchor-button) instead.\nSee the [callout here](#core/components/button.props) for more details.\n\n</div>\n\n```tsx\nconst { Button, Intent, Popover, PopoverInteractionKind, Position } = \"@blueprintjs/core\";\n\nexport class PopoverExample extends React.Component {\n    public render() {\n        // popover content gets no padding by default; add the \"bp3-popover-content-sizing\"\n        // class to the popover to set nice padding between its border and content,\n        // and a default width when inline.\n        return (\n            <Popover\n                interactionKind={PopoverInteractionKind.CLICK}\n                popoverClassName=\"bp3-popover-content-sizing\"\n                position={Position.RIGHT}\n            >\n                <Button intent={Intent.PRIMARY}>Popover target</Button>\n                <div>\n                    <h5>Popover title</h5>\n                    <p>...</p>\n                    <Button className=\"bp3-popover-dismiss\">Dismiss</Button>\n                </div>\n            </Popover>\n        );\n    }\n}\n```\n\n@### Position\n\nThe `position` prop controls the Popover's position relative to the target.\nThe `Position` enumeration defines the full set of supported values. There are two attributes of positioning to consider:\n\n- Which <span class=\"docs-popover-position-label-side\">__side__</span> of the target the popover should render on.\n- The popover's <span class=\"docs-popover-position-label-alignment\">__alignment__</span> relative to the target.\n\nThese two attributes can be expressed with a single value having the following structure:\n\n<pre class=\"docs-popover-position-value-code-block\">\n    <span class=\"docs-popover-position-label-side\">[SIDE]</span>_<span class=\"docs-popover-position-label-alignment\">[ALIGNMENT]</span>\n</pre>\n\nThe following example shows all supported `Position` values and how each behaves in practice.\nNote that if <strong><code>_<span class=\"docs-popover-position-label-alignment\">[ALIGNMENT]</span></code></strong> is ommitted,\nthe popover will align to the __center__ of the target.\n\n@reactExample PopoverPositionExample\n\n#### Automatic positioning\n\nThe Popover's `position` can also be chosen _automatically_ via `\"auto\"`, `\"auto-start\"`, or `\"auto-end\"`.\nAll of these options choose and continually update the <span class=\"docs-popover-position-label-side\">__side__</span>\nfor you to avoid overflowing the boundary element (when scrolling within it, for instance).\nThe options differ in how they handle <span class=\"docs-popover-position-label-alignment\">__alignment__</span>:\n\n- In `\"auto\"` mode (the default for `position`), the Popover will align itself to the center of the target as it flips sides.\n- In `\"auto-start\"` mode, the Popover will align itself to the `start` of the target (i.e., the top edge when the popover is on the left or right, or the left edge when the popover is on the top or bottom).\n- In `\"auto-end\"` mode, the Popover will align itself to the `end` of the target (i.e., the bottom edge when the popover is on the left or right, or the right edge when the popover is on the top or bottom).\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n\nYou can also specify a specific initial position (e.g. `LEFT`, `TOP_RIGHT`) and still update the Popover's position\nautomatically by enabling the modifiers `flip` and `preventOverflow`.\n[See below](#core/components/popover.modifiers) for information about modifiers.\n\n</div>\n\n@### Modifiers\n\nModifiers are the tools through which you customize Popper.js's behavior. Popper.js defines several of its own modifiers\nto handle things such as flipping, preventing overflow from a boundary element, and positioning the arrow.\n`Popover` defines a few additional modifiers to support itself. You can even define your own modifiers, and customize\nthe Popper.js defaults, through the `modifiers` prop. (Note: it is not currently possible to configure `Popover`'s modifiers\nthrough the `modifiers` prop, nor can you define your own with the same name.)\n\n\n**Popper.js modifiers that can be customized via the `modifiers` prop:**\n\n- [`shift`](https://popper.js.org/popper-documentation.html#modifiers..shift) applies the `-start`/`-end` portion of placement\n- [`offset`](https://popper.js.org/popper-documentation.html#modifiers..offset) can be configured to move the popper on both axes using a CSS-like syntax\n- [`preventOverflow`](https://popper.js.org/popper-documentation.html#modifiers..preventOverflow) prevents the popper from being positioned outside the boundary\n- [`keepTogether`](https://popper.js.org/popper-documentation.html#modifiers..keepTogether) ensures the popper stays near to its reference without leaving any gap.\n- [`arrow`](https://popper.js.org/popper-documentation.html#modifiers..arrow) computes the arrow position.\n- [`flip`](https://popper.js.org/popper-documentation.html#modifiers..flip) flips the popper's placement when it starts to overlap its reference element.\n- [`inner`](https://popper.js.org/popper-documentation.html#modifiers..inner) makes the popper flow toward the inner of the reference element (disabled by default).\n- [`hide`](https://popper.js.org/popper-documentation.html#modifiers..hide) hides the popper when its reference element is outside of the popper boundaries.\n- [`computeStyle`](https://popper.js.org/popper-documentation.html#modifiers..computeStyle) generates the CSS styles to apply to the DOM\n\n**Popper.js modifiers that `Popover` manages and that cannot be customized:**\n\n- `arrowOffset` moves the popper a little bit to make room for the arrow\n- `updatePopoverState` saves off some popper data to `Popover` React state for fancy things\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n\nSee [the Popper.js Modifiers documentation](https://popper.js.org/popper-documentation.html#modifiers)\nfor more details on all the available modifiers.\n\n</div>\n\n@### Controlled mode\n\nIf you prefer to have more control over your popover's behavior, you can specify the `isOpen`\nproperty to use the component in __controlled mode__. You are now in charge of the component's\nopen state.\n\nProviding a non-null value for `isOpen` disables all automatic interaction and instead invokes\nthe `onInteraction` callback prop any time the opened state _would have changed_ in response to\nuser interaction under the current `interactionKind`.\n\nNote that there are cases where `onInteraction` is invoked with an unchanged open state.\nIt is important to pay attention to the value of the `nextOpenState` parameter and determine\nin your application logic whether you should care about a particular invocation (for instance,\nif the `nextOpenState` is not the same as the `Popover`'s current state).\n\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">Disabling controlled popovers</h4>\n\nIf `disabled={true}`, a controlled popover will remain closed even if `isOpen={true}`.\nThe popover will re-open when `disabled` is set to `false`.\n\n</div>\n\n#### Example controlled usage\n\n```tsx\nconst { Popover, Position } = \"@blueprintjs/core\";\n\nexport class ControlledPopoverExample extends React.Component<{}, { isOpen: boolean }> {\n    public state = { isOpen: false };\n\n    public render() {\n        let popoverContent = (\n            <div>\n                <h5>Popover Title</h5>\n                <p>...</p>\n                <button class=\"bp3-button bp3-popover-dismiss\">Close popover</button>\n            </div>\n        );\n\n        return (\n            <Popover\n                content={popoverContent}\n                interactionKind={PopoverInteractionKind.CLICK}\n                isOpen={this.state.isOpen}\n                onInteraction={(state) => this.handleInteraction(state)}\n                position={Position.RIGHT}\n            >\n                <button className=\"bp3-button bp3-intent-primary\">Popover target</button>\n            </Popover>\n        );\n    }\n\n    private handleInteraction(nextOpenState: boolean) {\n        this.setState({ isOpen: nextOpenState });\n    }\n}\n```\n\n@### Interactions\n\nThe `interactionKind` prop governs how the popover should open and close in response to user interactions.\nThe supported values are:\n\n- `HOVER`\n    - __Opens when:__ the target is hovered\n    - __Closes when:__ the cursor is no longer inside the target _or_ the popover\n- `HOVER_TARGET_ONLY`:\n    - __Opens when:__ the target is hovered\n    - __Closes when:__ the cursor is no longer inside the target\n- `CLICK`:\n    - __Opens when:__ the target is clicked\n    - __Closes when:__ the user clicks anywhere outside of the popover (including the target)\n- `CLICK_TARGET_ONLY`:\n    - __Opens when:__ the target is clicked\n    - __Closes when:__ the target is clicked\n\nThe following example demonstrates the various interaction kinds (note: these Popovers contain [`MenuItem`](#core/components/menu.menu-item)s with `shouldDismissPopover={false}`, for clarity):\n\n@reactExample PopoverInteractionKindExample\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Conditionally styling popover targets</h4>\n\nWhen a popover is open, `Classes.POPOVER_OPEN` is applied to the target.\nYou can use this to style the target differently when the popover is open.\n\n</div>\n\n@### Closing on click\n\nSometimes it is desirable for an element inside a `Popover` to close the popover\non click. `Popover` supports a pair of CSS classes, `Classes.POPOVER_DISMISS`\nand `Classes.POPOVER_DISMISS_OVERRIDE`, that can be attached to elements to\ndescribe whether click events should dismiss the enclosing popover.\n\nTo mark an element (and its children) as \"dismiss elements\", simply add the\nclass `Classes.POPOVER_DISMISS`. For example, the **Dismiss** button in the\ntop-level [Popover example](#core/components/popover) has this class, and all\n`MenuItem`s receive this class by default (see `shouldDismissPopover` prop). To\nenable this behavior on the entire popover body, pass\n`popoverClassName={Classes.POPOVER_DISMISS}`.\n\nCancel the dismiss behavior on subtrees by nesting\n`Classes.POPOVER_DISMISS_OVERRIDE` inside `Classes.POPOVER_DISMISS`. Clicks\noriginating inside disabled elements (either via the `disabled` attribute or\n`Classes.DISABLED`) will never dismiss a popover.\n\nAdditionally, the prop `captureDismiss` (disabled by default) will prevent click\nevents from dismissing _grandparent_ popovers (not the `Popover` immediately\ncontaining the dismiss element). `MenuItem` disables this feature such that\nclicking any submenu item will close all submenus, which is desirable behavior\nfor a menu tree.\n\n```tsx\n<div className={Classes.POPOVER_DISMISS}>\n    <button>Click me to dismiss</button>\n    <button disabled={true}>I will not dismiss</button>\n    <div className={Classes.POPOVER_DISMISS_OVERRIDE}>\n        <button>I too shall not dismiss</button>\n    </div>\n</div>\n```\n\n@reactExample PopoverDismissExample\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n\nDismiss elements won't have any effect in a popover with\n`PopoverInteractionKind.HOVER_TARGET_ONLY`, because there is no way to\ninteract with the popover content itself: the popover is dismissed the\nmoment the user mouses away from the target.\n\n</div>\n\n@### Backdrop\n\nThe `hasBackdrop` prop governs whether a backdrop appears while the popover is open. When `true`:\n\n- __A transparent backdrop will render beneath the popover__. This backdrop\n  covers the entire viewport and prevents interaction with the document until\n  the popover is closed. This is useful for preventing stray clicks or hovers in\n  your app when the user tries to close a popover.\n- __The popover will receive focus when opened__, allowing for better keyboard accessibility.\n\nClicking the backdrop will:\n\n- _in uncontrolled mode_, close the popover.\n- _in controlled mode_, invoke the `onInteraction` callback with an argument of `false`.\n\nThis backdrop behavior is only available for popovers having `interactionKind={PopoverInteractionKind.CLICK}`.\nAn error is thrown if used otherwise.\n\n#### Styling the backdrop\n\nBy default, the popover backdrop is invisible, but you can easily add your own styles to\n`.bp3-popover-backdrop` to customize the appearance of the backdrop (for example, you could give it\na translucent background color, like the backdrop for the [`Dialog`](#core/components/dialog) component).\n\nThe backdrop element has the same opacity-fade transition as the `Dialog` backdrop.\n\n<div class=\"bp3-callout bp3-intent-danger bp3-icon-error\">\n    <h4 class=\"bp3-heading\">Dangerous edge case</h4>\n\nRendering a `<Popover isOpen={true} hasBackdrop={true}>` outside the viewport bounds can easily break\nyour application by covering the UI with an invisible non-interactive backdrop. This edge case\nmust be handled by your application code or simply avoided if possible.\n\n</div>\n\n@### Portal rendering\n\nBy default, popover contents are rendered in a [`Portal`](#core/components/portal) appended to `document.body`. This\nallows the popover contents to \"escape\" the application DOM tree to avoid incompatible styles on ancestor elements.\n(Incompatible styles typically include hidden `overflow` or complex `position` logic.) It also ensures that the popover\nwill appear above all other content, as its container element appears after the application container in the DOM.\n\nDisable the `usePortal` prop to render popover contents in the normal document flow as a sibling of the target.\nThis behavior can be desirable to inherit CSS styles from surrounding elements, and can result in smoother performance\nwhen scrolling. Not using a `Portal` works well for most layouts, because popovers style themselves to appear above\neverything else on the page without needing to manually adjust z-indices, and Popper.js will keep them nicely positioned.\n\n@reactExample PopoverPortalExample\n\n@## Style\n\n@### Dark theme\n\nThe `Popover` component automatically detects whether its trigger is nested inside a `.bp3-dark`\ncontainer and applies the same class to itself. You can also explicitly apply the dark theme to\nthe React component by providing the prop `popoverClassName=\"bp3-dark\"`.\n\nAs a result, any component that you place inside a `Popover` (such as a `Menu`) automatically\ninherits the dark theme styles. Note that [`Tooltip`](#core/components/tooltip) uses `Popover` internally, so it also benefits\nfrom this behavior.\n\nThis behavior can be disabled (if the `Popover` uses a `Portal`) via the `inheritDarkTheme` prop.\n\n@### Sizing\n\nPopovers by default have a `max-width` but no `max-height`. To constrain the height of a popover\nand make its content scrollable, add a custom class to your popover content element and attach\nstyles to that class:\n\n```tsx\n<Popover content={<div class=\"custom-class\">...</div>}>\n    ...\n</Popover>\n```\n\n```css.scss\n.custom-class {\n    max-height: $pt-grid-size * 15;\n    overflow-y: auto;\n}\n```\n\n@reactExample PopoverSizingExample\n\n@### Minimal style\n\nYou can create a minimal popover by setting `minimal={true}`.\nThis removes the arrow from the popover and makes the transitions more subtle.\n\n@reactExample PopoverMinimalExample\n\nThis minimal style is recommended for popovers that are not triggered by an obvious action like the\nuser clicking or hovering over something. For example, a minimal popover is useful for making\ntypeahead menus where the menu appears almost instantly after the user starts typing.\n\nMinimal popovers are also useful for context menus that require quick enter and leave animations to\nsupport fast workflows. You can see an example in the [context menus](#core/components/context-menu)\ndocumentation.\n\n@## Testing\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n\nYour best resource for strategies in popover testing is\n[its own unit test suite.](https://github.com/palantir/blueprint/blob/develop/packages/core/test/popover/popoverTests.tsx)\n\n</div>\n\n#### Animation delays\n\n`Popover` can be difficult to test because it uses `Portal` to inject its contents elsewhere in the\nDOM (outside the usual flow); this can be simplified by setting `usePortal={false}` in tests.\nHover interactions can also be tricky due to delays and transitions; this can be resolved by\nzeroing the default hover delays.\n\n```tsx\n<Popover {...yourProps} usePortal={false} hoverCloseDelay={0} hoverOpenDelay={0}>\n    {yourTarget}\n</Popover>\n```\n\n#### Rendering delays\n\n`Popover` delays rendering updates triggered on `mouseleave`, because the mouse might have moved from the popover to the target, which may require special handling depending on the current [`interactionKind`](#core/components/popover.opening-and-closing). Popper.js also throttles rendering updates to improve performance. If your components are not updating in a synchronous fashion as expected, you may need to introduce a `setTimeout` to wait for asynchronous Popover rendering to catch up:\n\n```tsx\nimport { Classes, Overlay, Popover, PopoverInteractionKind } from \"@blueprintjs/core\";\nimport { assert } from \"chai\";\nimport { mount } from \"enzyme\";\nimport { Target } from \"react-popper\";\n\nwrapper = mount(\n    <Popover usePortal={false} interactionKind={PopoverInteractionKind.HOVER}>\n        <div>Target</div>\n        <div>Content</div>\n    </Popover>\n);\n\nwrapper.find(Target).simulate(\"mouseenter\");\n\n// hostNodes() is an Enzyme 3 helper that retains only native-HTML nodes.\nwrapper.find(`.${Classes.POPOVER}`).hostNodes().simulate(\"mouseenter\");\nwrapper.find(`.${Classes.POPOVER}`).hostNodes().simulate(\"mouseleave\");\n\nsetTimeout(() => {\n    // Popover delays closing using setTimeout, so need to defer this check too.\n    const isOpen = wrapper.find(Overlay).prop(\"isOpen\");\n    assert.equal(isOpen, false);\n});\n```\n\n#### Element refs\n\nIf `usePortal={false}` rendering is not an option, `Popover` instances expose `popoverElement` and\n`targetElement` refs of the actual DOM elements. Importantly, `popoverElement` points to the\n`.bp3-popover` element inside the `Portal` so you can use it to easily query popover contents without\nknowing precisely where they are in the DOM. These properties exist primarily to simplify testing;\ndo not rely on them for feature work.\n\n```tsx\n// using mount() from enzyme\nconst wrapper = mount(<Popover content={<div className=\"test\">test</div>} />);\nconst { popoverElement } = wrapper.instance();\n// popoverElement is the parent element of .bp3-popover\npopoverElement.querySelector(\".test\").textContent; // \"test\"\n```",
      "metadata": {}
    },
    "portal": {
      "reference": "portal",
      "route": "core/components/portal",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\portal\\portal.md",
      "title": "Portal",
      "contents": [
        {
          "tag": "heading",
          "value": "Portal",
          "level": 1,
          "route": "core/components/portal"
        },
        "<p>The <code>Portal</code> component renders its children into a new &quot;subtree&quot; outside of the current component\nhierarchy. It is an essential piece of <a href=\"#core/components/overlay\"><code>Overlay</code></a>, responsible for ensuring that\nthe overlay contents cover the application below. In most cases you do not need to use a <code>Portal</code>\ndirectly; this documentation is provided simply for reference.</p>\n",
        {
          "tag": "heading",
          "value": "React 15",
          "level": 2,
          "route": "core/components/portal.react-15"
        },
        "<p>In a <strong>React 15</strong> environment, <code>Portal</code> will use <code>ReactDOM.unstable_renderSubtreeIntoContainer</code> to achieve the teleportation effect, which has a few caveats:</p>\n<ol>\n<li><code>Portal</code> <code>children</code> are wrapped in an extra <code>&lt;div&gt;</code> inside the portal container element.</li>\n<li>Test harnesses such as <code>enzyme</code> cannot trivially find elements &quot;through&quot; Portals as they&#39;re not in the same React tree.</li>\n<li>React <code>context</code> _is_ preserved (this one&#39;s a good thing).</li>\n</ol>\n<p>In a <strong>React 16+</strong> environment, the <code>Portal</code> component will use <a href=\"https://reactjs.org/docs/portals.html\"><code>ReactDOM.createPortal</code></a> which preserves the React tree perfectly and does not require any of the above caveats.</p>\n",
        {
          "tag": "heading",
          "value": "React context",
          "level": 2,
          "route": "core/components/portal.react-context"
        },
        "<p><code>Portal</code> supports the following options on its <a href=\"https://facebook.github.io/react/docs/context.html\">React context</a>.\nTo use them, supply a child context to a subtree that contains the Portals you want to customize.</p>\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n\nBlueprint uses the React 15-compatible <code>getChildContext()</code> API instead of the newer React 16.3 <code>React.createContext()</code> API.\n\n</div>\n\n",
        {
          "tag": "interface",
          "value": "IPortalContext"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/portal.props"
        },
        "<p>The <code>Portal</code> component functions like a declarative <code>appendChild()</code>, or jQuery&#39;s\n<code>$.fn.appendTo()</code>. The children of a <code>Portal</code> component are inserted into a new\nchild of the <code>&lt;body&gt;</code>.</p>\n<p><code>Portal</code> is used inside <a href=\"#core/components/overlay\"><code>Overlay</code></a> to actually overlay the content on the\napplication.</p>\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">A note about responsive layouts</h4>\n\nFor a single-page app, if the <code>&lt;body&gt;</code> is styled with <code>width: 100%</code> and <code>height: 100%</code>, a <code>Portal</code>\nmay take up extra whitespace and cause the window to undesirably scroll. To fix this, instead\napply <code>position: absolute</code> to the <code>&lt;body&gt;</code> tag.\n\n</div>\n\n",
        {
          "tag": "interface",
          "value": "IPortalProps"
        }
      ],
      "contentsRaw": "@# Portal\n\nThe `Portal` component renders its children into a new \"subtree\" outside of the current component\nhierarchy. It is an essential piece of [`Overlay`](#core/components/overlay), responsible for ensuring that\nthe overlay contents cover the application below. In most cases you do not need to use a `Portal`\ndirectly; this documentation is provided simply for reference.\n\n@## React 15\n\nIn a **React 15** environment, `Portal` will use `ReactDOM.unstable_renderSubtreeIntoContainer` to achieve the teleportation effect, which has a few caveats:\n\n1. `Portal` `children` are wrapped in an extra `<div>` inside the portal container element.\n1. Test harnesses such as `enzyme` cannot trivially find elements \"through\" Portals as they're not in the same React tree.\n1. React `context` _is_ preserved (this one's a good thing).\n\nIn a **React 16+** environment, the `Portal` component will use [`ReactDOM.createPortal`](https://reactjs.org/docs/portals.html) which preserves the React tree perfectly and does not require any of the above caveats.\n\n@## React context\n\n`Portal` supports the following options on its [React context](https://facebook.github.io/react/docs/context.html).\nTo use them, supply a child context to a subtree that contains the Portals you want to customize.\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n\nBlueprint uses the React 15-compatible `getChildContext()` API instead of the newer React 16.3 `React.createContext()` API.\n\n</div>\n\n@interface IPortalContext\n\n@## Props\n\nThe `Portal` component functions like a declarative `appendChild()`, or jQuery's\n`$.fn.appendTo()`. The children of a `Portal` component are inserted into a new\nchild of the `<body>`.\n\n`Portal` is used inside [`Overlay`](#core/components/overlay) to actually overlay the content on the\napplication.\n\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">A note about responsive layouts</h4>\n\nFor a single-page app, if the `<body>` is styled with `width: 100%` and `height: 100%`, a `Portal`\nmay take up extra whitespace and cause the window to undesirably scroll. To fix this, instead\napply `position: absolute` to the `<body>` tag.\n\n</div>\n\n@interface IPortalProps",
      "metadata": {}
    },
    "progress-bar": {
      "reference": "progress-bar",
      "route": "core/components/progress-bar",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\progress-bar\\progress-bar.md",
      "title": "Progress bar",
      "contents": [
        {
          "tag": "heading",
          "value": "Progress bar",
          "level": 1,
          "route": "core/components/progress-bar"
        },
        "<p>Progress bars indicate progress towards the completion of a task or an\nindeterminate loading state.</p>\n",
        {
          "tag": "reactExample",
          "value": "ProgressExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/progress-bar.props"
        },
        "<p><code>ProgressBar</code> is a simple stateless component that renders the appropriate HTML\nmarkup. It supports a <code>value</code> prop between 0 and 1 that determines the width of\nthe progress meter. Omitting <code>value</code> will result in an &quot;indeterminate&quot; progress\nmeter that fills the entire bar.</p>\n",
        {
          "tag": "interface",
          "value": "IProgressBarProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/progress-bar.css"
        },
        "<p>Set the current progress of the bar via a <code>width</code> style rule on the inner\n<code>.bp3-progress-meter</code> element. This is a very simple CSS-only component, and\ninput validation for <code>width</code> values is limited: values above <code>100%</code> appear as\n100% progress and values below <code>0%</code> appear as 0%.</p>\n<p>Omitting <code>width</code> will result in an &quot;indeterminate&quot; progress meter that fills the\nentire bar.</p>\n",
        {
          "tag": "css",
          "value": "progress-bar"
        }
      ],
      "contentsRaw": "@# Progress bar\n\nProgress bars indicate progress towards the completion of a task or an\nindeterminate loading state.\n\n@reactExample ProgressExample\n\n@## Props\n\n`ProgressBar` is a simple stateless component that renders the appropriate HTML\nmarkup. It supports a `value` prop between 0 and 1 that determines the width of\nthe progress meter. Omitting `value` will result in an \"indeterminate\" progress\nmeter that fills the entire bar.\n\n@interface IProgressBarProps\n\n@## CSS\n\nSet the current progress of the bar via a `width` style rule on the inner\n`.bp3-progress-meter` element. This is a very simple CSS-only component, and\ninput validation for `width` values is limited: values above `100%` appear as\n100% progress and values below `0%` appear as 0%.\n\nOmitting `width` will result in an \"indeterminate\" progress meter that fills the\nentire bar.\n\n@css progress-bar",
      "metadata": {}
    },
    "resize-sensor": {
      "reference": "resize-sensor",
      "route": "core/components/resize-sensor",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\resize-sensor\\resize-sensor.md",
      "title": "Resize sensor",
      "contents": [
        {
          "tag": "heading",
          "value": "Resize sensor",
          "level": 1,
          "route": "core/components/resize-sensor"
        },
        "<p><code>ResizeSensor</code> is a component that provides a <code>&quot;resize&quot;</code> event for its single\nDOM element child. It is a thin wrapper around\n<a href=\"https://developers.google.com/web/updates/2016/10/resizeobserver\"><code>ResizeObserver</code></a> to provide React bindings.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>IResizeEntry</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>ResizeSensor</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"storage type function tsx\"><span>function</span></span><span>&nbsp;</span><span class=\"meta definition function tsx entity name function tsx\"><span>handleResize</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"variable parameter tsx\"><span>entries</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type tsx\"><span>IResizeEntry</span></span><span class=\"meta type tuple tsx\"><span class=\"meta brace square tsx\"><span>[</span><span>]</span></span></span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"support class console tsx\"><span>console</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function console tsx\"><span>log</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>entries</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>map</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"meta arrow tsx\"><span class=\"variable parameter tsx\"><span>e</span></span><span>&nbsp;</span><span class=\"storage type function arrow tsx\"><span>=&gt;</span></span><span>&nbsp;</span></span><span class=\"string template tsx\"><span class=\"punctuation definition string template begin tsx\"><span>`</span></span><span class=\"meta template expression tsx\"><span class=\"punctuation definition template-expression begin tsx\"><span>${</span></span><span class=\"meta embedded line tsx\"><span class=\"variable other object tsx\"><span>e</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>contentRect</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support variable property dom tsx\"><span>width</span></span></span><span class=\"punctuation definition template-expression end tsx\"><span>}</span></span></span><span>&nbsp;x&nbsp;</span><span class=\"meta template expression tsx\"><span class=\"punctuation definition template-expression begin tsx\"><span>${</span></span><span class=\"meta embedded line tsx\"><span class=\"variable other object tsx\"><span>e</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>contentRect</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support variable property dom tsx\"><span>height</span></span></span><span class=\"punctuation definition template-expression end tsx\"><span>}</span></span></span><span class=\"punctuation definition string template end tsx\"><span>`</span></span></span><span class=\"meta brace round tsx\"><span>)</span><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>ResizeSensor</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onResize</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>handleResize</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>style</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>width</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>props</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support variable property dom tsx\"><span>width</span></span><span>&nbsp;</span></span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>ResizeSensor</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre>",
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/resize-sensor.props"
        },
        "<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">Asynchronous behavior</h4>\n\nThe <code>onResize</code> callback is invoked asynchronously after a resize is detected\nand typically happens at the end of a frame (after layout, before paint).\nTherefore, testing behavior that relies on this component involves setting a\ntimeout for the next frame.\n</div>\n\n",
        {
          "tag": "interface",
          "value": "IResizeSensorProps"
        }
      ],
      "contentsRaw": "\n@# Resize sensor\n\n`ResizeSensor` is a component that provides a `\"resize\"` event for its single\nDOM element child. It is a thin wrapper around\n[`ResizeObserver`][resizeobserver] to provide React bindings.\n\n[resizeobserver]: https://developers.google.com/web/updates/2016/10/resizeobserver\n\n```tsx\nimport { IResizeEntry, ResizeSensor } from \"@blueprintjs/core\";\n\nfunction handleResize(entries: IResizeEntry[]) {\n    console.log(entries.map(e => `${e.contentRect.width} x ${e.contentRect.height}`));\n}\n\n<ResizeSensor onResize={handleResize}>\n    <div style={{ width: this.props.width }} />\n</ResizeSensor>\n```\n\n@## Props\n\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">Asynchronous behavior</h4>\n\nThe `onResize` callback is invoked asynchronously after a resize is detected\nand typically happens at the end of a frame (after layout, before paint).\nTherefore, testing behavior that relies on this component involves setting a\ntimeout for the next frame.\n</div>\n\n@interface IResizeSensorProps",
      "metadata": {
        "tag": "new"
      }
    },
    "skeleton": {
      "reference": "skeleton",
      "route": "core/components/skeleton",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\skeleton\\skeleton.md",
      "title": "Skeleton",
      "contents": [
        {
          "tag": "heading",
          "value": "Skeleton",
          "level": 1,
          "route": "core/components/skeleton"
        },
        "<p>Skeletons provide a loading state that mimics the shape of your yet-to-load content.</p>\n<p>This &quot;component&quot; is a single constant <code>Classes.SKELETON</code> that, when applied to\nan element through <code>className</code>, will cover its content with a loading animation.\nThe skeleton inherits the dimensions of whatever element the class is applied\nto, so you should supply a placeholder while awaiting real content.</p>\n",
        {
          "tag": "css",
          "value": "skeleton"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/skeleton.css"
        },
        "<p>Apply the class <code>.bp3-skeleton</code> to elements that you would like to cover up with\na loading animation.</p>\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">Manually disable focusable elements</h4>\n\nWhen using the <code>.bp3-skeleton</code> class on focusable elements such as inputs\nand buttons, be sure to disable the element, via either the <code>disabled</code> or\n<code>tabindex=&quot;-1&quot;</code> attributes. Failing to do so will allow these skeleton\nelements to be focused when they shouldn&#39;t be.\n\n</div>"
      ],
      "contentsRaw": "@# Skeleton\n\nSkeletons provide a loading state that mimics the shape of your yet-to-load content.\n\nThis \"component\" is a single constant `Classes.SKELETON` that, when applied to\nan element through `className`, will cover its content with a loading animation.\nThe skeleton inherits the dimensions of whatever element the class is applied\nto, so you should supply a placeholder while awaiting real content.\n\n@css skeleton\n\n@## CSS\n\nApply the class `.bp3-skeleton` to elements that you would like to cover up with\na loading animation.\n\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">Manually disable focusable elements</h4>\n\nWhen using the `.bp3-skeleton` class on focusable elements such as inputs\nand buttons, be sure to disable the element, via either the `disabled` or\n`tabindex=\"-1\"` attributes. Failing to do so will allow these skeleton\nelements to be focused when they shouldn't be.\n\n</div>",
      "metadata": {}
    },
    "sliders": {
      "reference": "sliders",
      "route": "core/components/sliders",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\slider\\sliders.md",
      "title": "Slider",
      "contents": [
        {
          "tag": "heading",
          "value": "Slider",
          "level": 1,
          "route": "core/components/sliders"
        },
        "<p>A slider is a numeric input for choosing numbers between lower and upper bounds.\nIt also has a labeled axis that supports custom formatting.</p>\n<p>To adjust a slider value, the user clicks and drags a handle or clicks the axis\nto move the nearest handle to that spot. Users can also use arrow keys on the\nkeyboard to adjust individual handles.</p>\n<p>Use <code>Slider</code> for choosing a single value, <code>RangeSlider</code> for choosing two values,\nand <code>MultiSlider</code> for more advanced use cases.</p>\n",
        {
          "tag": "heading",
          "value": "Slider",
          "level": 2,
          "route": "core/components/sliders.slider"
        },
        "<p>Use <code>Slider</code> to choose a single value on a number line. It is a controlled\ncomponent, so the <code>value</code> prop determines its current appearance. Provide an\n<code>onChange</code> handler to receive updates and an <code>onRelease</code> handler to determine\nwhen the user has stopped interacting with the slider.</p>\n",
        {
          "tag": "reactExample",
          "value": "SliderExample"
        },
        {
          "tag": "interface",
          "value": "ISliderProps"
        },
        {
          "tag": "heading",
          "value": "Range slider",
          "level": 2,
          "route": "core/components/sliders.range-slider"
        },
        "<p>Use <code>RangeSlider</code> to choose a range between upper and lower bounds. The\ncomponent functions identically to <code>Slider</code> with the addition of a second\nhandle. It exposes its selected value as <code>[number, number]</code>: a two-element array\nwith minimum and maximum range bounds.</p>\n<p><code>RangeSlider</code> is a controlled component, so the <code>value</code> prop determines its\ncurrent appearance. Provide an <code>onChange</code> handler to receive updates and an\n<code>onRelease</code> handler to determine when the user has stopped interacting with the\nslider.</p>\n",
        {
          "tag": "reactExample",
          "value": "RangeSliderExample"
        },
        {
          "tag": "interface",
          "value": "IRangeSliderProps"
        },
        {
          "tag": "heading",
          "value": "Multi slider",
          "level": 2,
          "route": "core/components/sliders.multi-slider"
        },
        "<p><code>MultiSlider</code> is a flexible solution for picking arbitrary values on a number\nline. It powers both <code>Slider</code> and <code>RangeSlider</code> internally and can be used for\nimplementing more advanced use cases than one or two numbers.</p>\n",
        {
          "tag": "reactExample",
          "value": "MultiSliderExample"
        },
        {
          "tag": "interface",
          "value": "IMultiSliderProps"
        },
        {
          "tag": "heading",
          "value": "Handle",
          "level": 3,
          "route": "core/components/sliders.handle"
        },
        "<p>Handles for a <code>MultiSlider</code> are configured as <code>MultiSlider.Handle</code> children\nelements, each with their own <code>value</code> and other properties.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;RangeSlider&nbsp;looks&nbsp;roughly&nbsp;like&nbsp;this:</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>MultiSlider</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onChange</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"keyword operator spread tsx\"><span>...</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>MultiSlider.Handle</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>value</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>startValue</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>type</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>start</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>intentAfter</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Intent</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>PRIMARY</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>MultiSlider.Handle</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>value</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>endValue</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>type</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>end</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>MultiSlider</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre>",
        {
          "tag": "interface",
          "value": "IHandleProps"
        }
      ],
      "contentsRaw": "\n@# Slider\n\nA slider is a numeric input for choosing numbers between lower and upper bounds.\nIt also has a labeled axis that supports custom formatting.\n\nTo adjust a slider value, the user clicks and drags a handle or clicks the axis\nto move the nearest handle to that spot. Users can also use arrow keys on the\nkeyboard to adjust individual handles.\n\nUse `Slider` for choosing a single value, `RangeSlider` for choosing two values,\nand `MultiSlider` for more advanced use cases.\n\n@## Slider\n\nUse `Slider` to choose a single value on a number line. It is a controlled\ncomponent, so the `value` prop determines its current appearance. Provide an\n`onChange` handler to receive updates and an `onRelease` handler to determine\nwhen the user has stopped interacting with the slider.\n\n@reactExample SliderExample\n\n@interface ISliderProps\n\n@## Range slider\n\nUse `RangeSlider` to choose a range between upper and lower bounds. The\ncomponent functions identically to `Slider` with the addition of a second\nhandle. It exposes its selected value as `[number, number]`: a two-element array\nwith minimum and maximum range bounds.\n\n`RangeSlider` is a controlled component, so the `value` prop determines its\ncurrent appearance. Provide an `onChange` handler to receive updates and an\n`onRelease` handler to determine when the user has stopped interacting with the\nslider.\n\n@reactExample RangeSliderExample\n\n@interface IRangeSliderProps\n\n@## Multi slider\n\n`MultiSlider` is a flexible solution for picking arbitrary values on a number\nline. It powers both `Slider` and `RangeSlider` internally and can be used for\nimplementing more advanced use cases than one or two numbers.\n\n@reactExample MultiSliderExample\n\n@interface IMultiSliderProps\n\n@### Handle\n\nHandles for a `MultiSlider` are configured as `MultiSlider.Handle` children\nelements, each with their own `value` and other properties.\n\n```tsx\n// RangeSlider looks roughly like this:\n<MultiSlider onChange={...}>\n    <MultiSlider.Handle value={startValue} type=\"start\" intentAfter={Intent.PRIMARY} />\n    <MultiSlider.Handle value={endValue} type=\"end\" />\n</MultiSlider>\n```\n\n@interface IHandleProps",
      "metadata": {
        "tag": "new"
      }
    },
    "spinner": {
      "reference": "spinner",
      "route": "core/components/spinner",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\spinner\\spinner.md",
      "title": "Spinner",
      "contents": [
        {
          "tag": "heading",
          "value": "Spinner",
          "level": 1,
          "route": "core/components/spinner"
        },
        "<p>Spinners indicate progress in a circular fashion. They&#39;re great for ongoing\noperations and can also represent known progress.</p>\n",
        {
          "tag": "reactExample",
          "value": "SpinnerExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/spinner.props"
        },
        "<p><code>Spinner</code> is a simple stateless component that renders SVG markup. It can be\nused safely in DOM and SVG containers as it only renders SVG elements.</p>\n<p>The <code>value</code> prop determines how much of the track is filled by the head. When\nthis prop is defined, the spinner head will smoothly animate as <code>value</code>\nchanges. Omitting <code>value</code> will result in an &quot;indeterminate&quot; spinner where the\nhead spins indefinitely (this is the default appearance).</p>\n<p>The <code>size</code> prop determines the pixel width/height of the spinner. Size constants\nare provided as static properties: <code>Spinner.SIZE_SMALL</code>,\n<code>Spinner.SIZE_STANDARD</code>, <code>Spinner.SIZE_LARGE</code>. Small and large sizes can be set\nby including <code>Classes.SMALL</code> or <code>Classes.LARGE</code> in <code>className</code> instead of the\n<code>size</code> prop (this prevents an API break when upgrading to 3.x).</p>\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">IE11 compatibility note</h4>\n\nIE11 <a href=\"https://developer.microsoft.com/en-us/microsoft-edge/platform/status/csstransitionsforsvgelements/?q=svg\">does not support CSS transitions on SVG elements</a> so spinners with known\n<code>value</code> will not smoothly transition as <code>value</code> changes. Indeterminate spinners still animate\ncorrectly because they rely on CSS animations.\n\n</div>\n\n",
        {
          "tag": "interface",
          "value": "ISpinnerProps"
        }
      ],
      "contentsRaw": "@# Spinner\n\nSpinners indicate progress in a circular fashion. They're great for ongoing\noperations and can also represent known progress.\n\n@reactExample SpinnerExample\n\n@## Props\n\n`Spinner` is a simple stateless component that renders SVG markup. It can be\nused safely in DOM and SVG containers as it only renders SVG elements.\n\nThe `value` prop determines how much of the track is filled by the head. When\nthis prop is defined, the spinner head will smoothly animate as `value`\nchanges. Omitting `value` will result in an \"indeterminate\" spinner where the\nhead spins indefinitely (this is the default appearance).\n\nThe `size` prop determines the pixel width/height of the spinner. Size constants\nare provided as static properties: `Spinner.SIZE_SMALL`,\n`Spinner.SIZE_STANDARD`, `Spinner.SIZE_LARGE`. Small and large sizes can be set\nby including `Classes.SMALL` or `Classes.LARGE` in `className` instead of the\n`size` prop (this prevents an API break when upgrading to 3.x).\n\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">IE11 compatibility note</h4>\n\nIE11 [does not support CSS transitions on SVG elements][msdn-css-svg] so spinners with known\n`value` will not smoothly transition as `value` changes. Indeterminate spinners still animate\ncorrectly because they rely on CSS animations.\n\n</div>\n\n[msdn-css-svg]: https://developer.microsoft.com/en-us/microsoft-edge/platform/status/csstransitionsforsvgelements/?q=svg\n\n@interface ISpinnerProps",
      "metadata": {}
    },
    "tabs": {
      "reference": "tabs",
      "route": "core/components/tabs",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\tabs\\tabs.md",
      "title": "Tabs",
      "contents": [
        {
          "tag": "heading",
          "value": "Tabs",
          "level": 1,
          "route": "core/components/tabs"
        },
        {
          "tag": "reactExample",
          "value": "TabsExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/tabs.props"
        },
        "<p>Tab selection is managed by <code>id</code>, much like the HTML <code>&lt;select&gt;</code> element respects\n<code>&lt;option value&gt;</code>. This is more reliable than using a numeric index as it does\nnot require translating between arbitrary indices and tab names. It does,\nhowever, require that every <code>Tab</code> have a <em>locally unique <code>id</code> value</em>.</p>\n<p>Arbitrary elements are supported in the tab list, and order is respected. Yes,\nyou can even insert things <em>between</em> <code>Tab</code>s.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Tab</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Tabs</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Tabs</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>id</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>TabsExample</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onChange</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>handleTabChange</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>selectedTabId</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>rx</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Tab</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>id</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>ng</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>title</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Angular</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>panel</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>AngularPanel</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Tab</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>id</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>mb</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>title</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Ember</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>panel</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>EmberPanel</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>panelClassName</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>ember-panel</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Tab</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>id</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>rx</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>title</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>React</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>panel</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>ReactPanel</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Tab</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>id</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>bb</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>disabled</span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>title</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Backbone</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>panel</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>BackbonePanel</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Tabs.Expander</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>input</span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>className</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>bp3-input</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>type</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>text</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>placeholder</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Search...</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Tabs</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre>",
        {
          "tag": "heading",
          "value": "Tabs",
          "level": 3,
          "route": "core/components/tabs.tabs"
        },
        "<p><code>Tabs</code> is the top-level component responsible for rendering the tab list and coordinating selection.\nIt can be used in controlled mode by providing <code>selectedTabId</code> and <code>onChange</code> props, or in\nuncontrolled mode by optionally providing <code>defaultSelectedTabId</code> and <code>onChange</code>.</p>\n<p>Children of the <code>Tabs</code> are rendered in order in the tab list, which is a flex container.\n<code>Tab</code> children are managed by the component; clicking one will change selection. Arbitrary other\nchildren are simply rendered in order; interactions are your responsibility.</p>\n<p>Insert a <code>&lt;Tabs.Expander /&gt;</code> between any two children to right-align all\nsubsequent children (or bottom-align when <code>vertical</code>).</p>\n",
        {
          "tag": "interface",
          "value": "ITabsProps"
        },
        {
          "tag": "heading",
          "value": "Tab",
          "level": 3,
          "route": "core/components/tabs.tab"
        },
        "<p><code>Tab</code> is a minimal wrapper with no functionality of its own&mdash;it is managed entirely by its\nparent <code>Tabs</code> wrapper. Tab title text can be set either via <code>title</code> prop or via React children\n(for more complex content).</p>\n<p>The associated tab <code>panel</code> will be visible when the <code>Tab</code> is active. Omitting\n<code>panel</code> is supported and can be useful when you want the associated panel to\nappear elsewhere in the DOM (by rendering it yourself as needed).</p>\n",
        {
          "tag": "interface",
          "value": "ITabProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/tabs.css"
        },
        "<p>Blueprint offers tab styles with the class <code>bp3-tabs</code>. You should add the proper\naccessibility attributes (<code>role</code>, <code>aria-selected</code>, and <code>aria-hidden</code>) as\nnecessary if you choose to implement tabs with CSS.</p>\n<p><code>.bp3-tab-panel</code> elements with <code>aria-hidden=&quot;true&quot;</code> are hidden automatically by\nthe Blueprint CSS. You may also simply omit hidden tabs from your markup to\nimprove performance (the <code>Tabs</code> JavaScript component supports this through the\n<code>renderActiveTabPanelOnly</code> prop).</p>\n",
        {
          "tag": "css",
          "value": "tabs"
        }
      ],
      "contentsRaw": "@# Tabs\n\n@reactExample TabsExample\n\n@## Props\n\nTab selection is managed by `id`, much like the HTML `<select>` element respects\n`<option value>`. This is more reliable than using a numeric index as it does\nnot require translating between arbitrary indices and tab names. It does,\nhowever, require that every `Tab` have a _locally unique `id` value_.\n\nArbitrary elements are supported in the tab list, and order is respected. Yes,\nyou can even insert things _between_ `Tab`s.\n\n```tsx\nimport { Tab, Tabs } from \"@blueprintjs/core\";\n\n<Tabs id=\"TabsExample\" onChange={this.handleTabChange} selectedTabId=\"rx\">\n    <Tab id=\"ng\" title=\"Angular\" panel={<AngularPanel />} />\n    <Tab id=\"mb\" title=\"Ember\" panel={<EmberPanel />} panelClassName=\"ember-panel\" />\n    <Tab id=\"rx\" title=\"React\" panel={<ReactPanel />} />\n    <Tab id=\"bb\" disabled title=\"Backbone\" panel={<BackbonePanel />} />\n    <Tabs.Expander />\n    <input className=\"bp3-input\" type=\"text\" placeholder=\"Search...\" />\n</Tabs>\n```\n\n@### Tabs\n\n`Tabs` is the top-level component responsible for rendering the tab list and coordinating selection.\nIt can be used in controlled mode by providing `selectedTabId` and `onChange` props, or in\nuncontrolled mode by optionally providing `defaultSelectedTabId` and `onChange`.\n\nChildren of the `Tabs` are rendered in order in the tab list, which is a flex container.\n`Tab` children are managed by the component; clicking one will change selection. Arbitrary other\nchildren are simply rendered in order; interactions are your responsibility.\n\nInsert a `<Tabs.Expander />` between any two children to right-align all\nsubsequent children (or bottom-align when `vertical`).\n\n@interface ITabsProps\n\n@### Tab\n\n`Tab` is a minimal wrapper with no functionality of its own&mdash;it is managed entirely by its\nparent `Tabs` wrapper. Tab title text can be set either via `title` prop or via React children\n(for more complex content).\n\nThe associated tab `panel` will be visible when the `Tab` is active. Omitting\n`panel` is supported and can be useful when you want the associated panel to\nappear elsewhere in the DOM (by rendering it yourself as needed).\n\n@interface ITabProps\n\n@## CSS\n\nBlueprint offers tab styles with the class `bp3-tabs`. You should add the proper\naccessibility attributes (`role`, `aria-selected`, and `aria-hidden`) as\nnecessary if you choose to implement tabs with CSS.\n\n`.bp3-tab-panel` elements with `aria-hidden=\"true\"` are hidden automatically by\nthe Blueprint CSS. You may also simply omit hidden tabs from your markup to\nimprove performance (the `Tabs` JavaScript component supports this through the\n`renderActiveTabPanelOnly` prop).\n\n@css tabs",
      "metadata": {}
    },
    "tag-input": {
      "reference": "tag-input",
      "route": "core/components/tag-input",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\tag-input\\tag-input.md",
      "title": "Tag input",
      "contents": [
        {
          "tag": "heading",
          "value": "Tag input",
          "level": 1,
          "route": "core/components/tag-input"
        },
        "<p>Tag inputs render <a href=\"#core/components/tag\"><code>Tag</code></a>s inside an input, followed by an\nactual text input. The container is merely styled to look like a Blueprint\ninput; the actual editable element appears after the last tag. Clicking anywhere\non the container will focus the text input for seamless interaction.</p>\n",
        {
          "tag": "reactExample",
          "value": "TagInputExample"
        },
        "<div class=\"bp3-callout bp3-intent-success bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Looking for a dropdown menu?</h4>\n\n<a href=\"#select/multi-select\"><code>MultiSelect</code> in the <strong>@blueprintjs/select</strong> package</a>\ncomposes this component with a dropdopwn menu of suggestions.\n\n</div>\n\n",
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/tag-input.props"
        },
        "<p><strong><code>TagInput</code> must be controlled,</strong> meaning the <code>values</code> prop is required and\nevent handlers are strongly suggested. Typing in the input and pressing\n<kbd>enter</kbd> will <strong>add new items</strong> by invoking callbacks. If <code>addOnBlur</code> is\nset to true, clicking out of the component will also trigger the callback to add\nnew items. A <code>separator</code> prop is supported to allow multiple items to be added\nat once; the default splits on commas and newlines.</p>\n<p><strong>Tags can be removed</strong> by clicking their <span class=\"bp3-icon-standard bp3-icon-cross\"></span>\nbuttons, or by pressing <kbd>backspace</kbd> repeatedly.\nArrow keys can also be used to focus on a particular tag before removing it. The\ncursor must be at the beginning of the text input for these interactions.</p>\n<p><strong><code>Tag</code> appearance can be customized</strong> with <code>tagProps</code>: supply an object to\napply the same props to every tag, or supply a callback to apply dynamic props\nper tag. Tag <code>values</code> must be an array of strings so you may need a\ntransformation step between your state and these props.</p>\n<p><code>TagInput</code> provides granular <code>onAdd</code> and <code>onRemove</code> <strong>event props</strong>, which are\npassed the added or removed items in response to the user interactions above. It\nalso provides <code>onChange</code>, which combines both events and is passed the updated\n<code>values</code> array, with new items appended to the end and removed items filtered\naway.</p>\n<p>The <code>&lt;input&gt;</code> element can be controlled directly via the <code>inputValue</code> and\n<code>onInputChange</code> props. Additional properties (such as custom event handlers) can\nbe applied to the input via <code>inputProps</code>.</p>\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Handling long words</h4>\n\nSet an explicit <code>width</code> on the container element to cause long tags to wrap onto multiple lines.\nEither supply a specific pixel value, or use <code>&lt;TagInput className={Classes.FILL}&gt;</code>\nto fill its container&#39;s width (try this in the example above).\n\n</div>\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Disabling a tag input</h4>\n\nDisabling this component requires setting the <code>disabled</code> prop to <code>true</code>\nand separately disabling the component&#39;s <code>rightElement</code> as appropriate\n(because <code>TagInput</code> accepts any <code>JSX.Element</code> as its <code>rightElement</code>).\n\n</div>\n\n",
        {
          "tag": "interface",
          "value": "ITagInputProps"
        }
      ],
      "contentsRaw": "@# Tag input\n\nTag inputs render [`Tag`](#core/components/tag)s inside an input, followed by an\nactual text input. The container is merely styled to look like a Blueprint\ninput; the actual editable element appears after the last tag. Clicking anywhere\non the container will focus the text input for seamless interaction.\n\n@reactExample TagInputExample\n\n<div class=\"bp3-callout bp3-intent-success bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Looking for a dropdown menu?</h4>\n\n[`MultiSelect` in the **@blueprintjs/select** package](#select/multi-select)\ncomposes this component with a dropdopwn menu of suggestions.\n\n</div>\n\n@## Props\n\n**`TagInput` must be controlled,** meaning the `values` prop is required and\nevent handlers are strongly suggested. Typing in the input and pressing\n<kbd>enter</kbd> will **add new items** by invoking callbacks. If `addOnBlur` is\nset to true, clicking out of the component will also trigger the callback to add\nnew items. A `separator` prop is supported to allow multiple items to be added\nat once; the default splits on commas and newlines.\n\n**Tags can be removed** by clicking their <span class=\"bp3-icon-standard bp3-icon-cross\"></span>\nbuttons, or by pressing <kbd>backspace</kbd> repeatedly.\nArrow keys can also be used to focus on a particular tag before removing it. The\ncursor must be at the beginning of the text input for these interactions.\n\n**`Tag` appearance can be customized** with `tagProps`: supply an object to\napply the same props to every tag, or supply a callback to apply dynamic props\nper tag. Tag `values` must be an array of strings so you may need a\ntransformation step between your state and these props.\n\n`TagInput` provides granular `onAdd` and `onRemove` **event props**, which are\npassed the added or removed items in response to the user interactions above. It\nalso provides `onChange`, which combines both events and is passed the updated\n`values` array, with new items appended to the end and removed items filtered\naway.\n\nThe `<input>` element can be controlled directly via the `inputValue` and\n`onInputChange` props. Additional properties (such as custom event handlers) can\nbe applied to the input via `inputProps`.\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Handling long words</h4>\n\nSet an explicit `width` on the container element to cause long tags to wrap onto multiple lines.\nEither supply a specific pixel value, or use `<TagInput className={Classes.FILL}>`\nto fill its container's width (try this in the example above).\n\n</div>\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Disabling a tag input</h4>\n\nDisabling this component requires setting the `disabled` prop to `true`\nand separately disabling the component's `rightElement` as appropriate\n(because `TagInput` accepts any `JSX.Element` as its `rightElement`).\n\n</div>\n\n@interface ITagInputProps",
      "metadata": {}
    },
    "tag": {
      "reference": "tag",
      "route": "core/components/tag",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\tag\\tag.md",
      "title": "Tag",
      "contents": [
        {
          "tag": "heading",
          "value": "Tag",
          "level": 1,
          "route": "core/components/tag"
        },
        "<p>Tags are great for lists of strings.</p>\n",
        {
          "tag": "reactExample",
          "value": "TagExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/tag.props"
        },
        "<p><code>Tag</code> is a stateless wrapper around its children with support for an optional\nclose button. It also supports all HTML <code>&lt;span&gt;</code> props.</p>\n",
        {
          "tag": "interface",
          "value": "ITagProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/tag.css"
        },
        "<p>Create a tag with a <code>span.bp3-tag</code>. An optional &quot;remove&quot; button can be added\nwith a <code>button.bp3-tag-remove</code> as the last child. The button is a separate\nelement to support interaction handlers in your framework of choice.</p>\n",
        {
          "tag": "css",
          "value": "tag"
        }
      ],
      "contentsRaw": "@# Tag\n\nTags are great for lists of strings.\n\n@reactExample TagExample\n\n@## Props\n\n`Tag` is a stateless wrapper around its children with support for an optional\nclose button. It also supports all HTML `<span>` props.\n\n@interface ITagProps\n\n@## CSS\n\nCreate a tag with a `span.bp3-tag`. An optional \"remove\" button can be added\nwith a `button.bp3-tag-remove` as the last child. The button is a separate\nelement to support interaction handlers in your framework of choice.\n\n@css tag",
      "metadata": {}
    },
    "text": {
      "reference": "text",
      "route": "core/components/text",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\text\\text.md",
      "title": "Text",
      "contents": [
        {
          "tag": "heading",
          "value": "Text",
          "level": 1,
          "route": "core/components/text"
        },
        "<p>The <code>Text</code> component adds accessible overflow behavior to a line of text by\nconditionally adding the title attribute and truncating with an ellipsis when content overflows its container.</p>\n",
        {
          "tag": "reactExample",
          "value": "TextExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/text.props"
        },
        "<p><code>Text</code> accepts and renders arbitrary children. It is intended that these children render as text.</p>\n",
        {
          "tag": "interface",
          "value": "ITextProps"
        }
      ],
      "contentsRaw": "@# Text\n\nThe `Text` component adds accessible overflow behavior to a line of text by\nconditionally adding the title attribute and truncating with an ellipsis when content overflows its container.\n\n@reactExample TextExample\n\n@## Props\n\n`Text` accepts and renders arbitrary children. It is intended that these children render as text.\n\n@interface ITextProps",
      "metadata": {}
    },
    "toast": {
      "reference": "toast",
      "route": "core/components/toast",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\toast\\toast.md",
      "title": "Toast",
      "contents": [
        {
          "tag": "heading",
          "value": "Toast",
          "level": 1,
          "route": "core/components/toast"
        },
        "<p>A toast is a lightweight, ephemeral notice from an application in direct response to a user&#39;s action.</p>\n<p>Toasts can be configured to appear at either the top or the bottom of an application window, and it is possible to\nhave more than one toast onscreen at a time.</p>\n",
        {
          "tag": "reactExample",
          "value": "ToastExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/toast.props"
        },
        {
          "tag": "heading",
          "value": "Toast",
          "level": 3,
          "route": "core/components/toast.toast"
        },
        "<p><code>Toast</code>s have a built-in timeout of five seconds. Users can also dismiss them manually by clicking the &times; button.\nHovering the cursor over a toast prevents it from disappearing. When the cursor leaves the toast, the toast&#39;s timeout restarts.\nSimilarly, focusing the toast (for example, by hitting the <code>tab</code> key) halts the timeout, and blurring restarts the timeout.</p>\n<p>You can add one additional action button to a toast. You might use this to provide an undo button, for example.</p>\n<p>You can also apply the same visual intent styles to <code>Toast</code>s that you can to <a href=\"#core/components/button.css\"><code>Button</code>s</a>.</p>\n",
        {
          "tag": "interface",
          "value": "IToastProps"
        },
        {
          "tag": "heading",
          "value": "Toaster",
          "level": 3,
          "route": "core/components/toast.toaster"
        },
        "<p>The <code>Toaster</code> React component is a stateful container for a single list of toasts. Internally, it\nuses <a href=\"#core/components/overlay\"><code>Overlay</code></a> to manage children and transitions. It can be vertically\naligned along the top or bottom edge of its container (new toasts will slide in from that edge) and\nhorizontally aligned along the left edge, center, or right edge of its container.</p>\n<p>There are three ways to use the <code>Toaster</code> component:</p>\n<ol>\n<li><code>Toaster.create(props)</code> static method returns a new <code>IToaster</code> instance. Use the instance method <code>toaster.show()</code> to manipulate this instance. <strong>(recommended)</strong></li>\n<li><code>&lt;Toaster&gt;&lt;Toast /&gt;...&lt;/Toaster&gt;</code>: Render a <code>&lt;Toaster&gt;</code> element with React <code>children</code>.</li>\n<li><code>&lt;Toaster ref={ref =&gt; ref.show({ ...toast })} /&gt;</code>: Render a <code>&lt;Toaster&gt;</code> element and use the <code>ref</code> prop to access its instance methods.</li>\n</ol>\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Working with multiple toasters</h4>\n\nYou can have multiple toasters in a single application, but you must ensure that each has a unique\n<code>position</code> to prevent overlap.\n\n</div>\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Toaster focus</h4>\n\n<code>Toaster</code> always disables <code>Overlay</code>&#39;s <code>enforceFocus</code> behavior (meaning that you&#39;re not blocked\nfrom accessing other parts of the application while a toast is active), and by default also\ndisables <code>autoFocus</code> (meaning that focus will not switch to a toast when it appears). You can\nenable <code>autoFocus</code> for an individual <code>Toaster</code> via a prop, if desired.\n\n</div>\n\n\n",
        {
          "tag": "interface",
          "value": "IToasterProps"
        },
        {
          "tag": "heading",
          "value": "Static usage",
          "level": 2,
          "route": "core/components/toast.static-usage"
        },
        "<p>The <code>Toaster</code> component provides the static <code>create</code> method that returns a new <code>Toaster</code> instance, rendered into an\nelement attached to <code>&lt;body&gt;</code>. A <code>Toaster</code> instance\nhas a collection of methods to show and hide toasts in its given container.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source ts\"><span class=\"meta function-call ts\"><span class=\"variable other object ts\"><span>Toaster</span></span><span class=\"punctuation accessor ts\"><span>.</span></span><span class=\"entity name function ts\"><span>create</span></span></span><span class=\"meta brace round ts\"><span>(</span></span><span class=\"variable other readwrite ts\"><span>props</span></span><span class=\"keyword operator ternary ts\"><span>?</span><span>:</span></span><span>&nbsp;</span><span class=\"variable other readwrite ts\"><span>IToasterProps</span></span><span class=\"punctuation separator comma ts\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite ts\"><span>container</span></span><span>&nbsp;</span><span class=\"keyword operator assignment ts\"><span>=</span></span><span>&nbsp;</span><span class=\"support variable dom ts\"><span>document</span></span><span class=\"punctuation accessor ts\"><span>.</span></span><span class=\"support variable property dom ts\"><span>body</span></span><span class=\"meta brace round ts\"><span>)</span></span><span>:&nbsp;</span><span class=\"variable other readwrite ts\"><span>IToaster</span></span></span></div></pre><p>The <code>Toaster</code> will be rendered into a new element appended to the given <code>container</code>.\nThe <code>container</code> determines which element toasts are positioned relative to; the default value of <code>&lt;body&gt;</code> allows them to use the entire viewport.</p>\n<p>Note that the return type is <code>IToaster</code>, which is a minimal interface that exposes only the instance\nmethods detailed below. It can be thought of as <code>Toaster</code> minus the <code>React.Component</code> methods,\nbecause the <code>Toaster</code> should not be treated as a normal React component.</p>\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">React 16 usage</h4>\n\n<code>Toaster.create()</code> will throw an error if invoked inside a component lifecycle method in React 16, as <code>ReactDOM.render()</code> will return\n<code>null</code> resulting in an inaccessible toaster instance. See the second bullet point on the <a href=\"https://reactjs.org/blog/2017/09/26/react-v16.0.html#breaking-changes\">React 16 release notes</a> for more information.\n\n</div>\n\n",
        {
          "tag": "interface",
          "value": "IToaster"
        },
        {
          "tag": "heading",
          "value": "Example",
          "level": 3,
          "route": "core/components/toast.example"
        },
        "<p>Your application can contain several <code>Toaster</code> instances and easily share them across the codebase as modules.</p>\n<p>The following code samples demonstrate our preferred pattern for intergrating a toaster into a React application:</p>\n<h4 id=\"toaster-ts\"><code>toaster.ts</code></h4>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Position</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Toaster</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"comment block documentation tsx\"><span class=\"punctuation definition comment tsx\"><span>/**</span></span><span>&nbsp;Singleton&nbsp;toaster&nbsp;instance.&nbsp;Create&nbsp;separate&nbsp;instances&nbsp;for&nbsp;different&nbsp;options.&nbsp;</span><span class=\"punctuation definition comment tsx\"><span>*/</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"keyword control export tsx\"><span>export</span></span><span>&nbsp;</span><span class=\"storage type tsx\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr tsx\"><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>AppToaster</span></span><span>&nbsp;</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>Toaster</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>create</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta objectliteral tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>className</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>recipe-toaster</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta objectliteral tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>position</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"support class dom tsx\"><span>Position</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>TOP</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div></pre><h4 id=\"application-ts\"><code>application.ts</code></h4>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Button</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"constant language import-export-all tsx\"><span>*</span></span><span>&nbsp;</span><span class=\"keyword control as tsx\"><span>as</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>React</span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>react</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>AppToaster</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>./toaster</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"keyword control export tsx\"><span>export</span></span><span>&nbsp;</span><span class=\"storage type class tsx\"><span>class</span></span><span>&nbsp;</span><span class=\"entity name type class tsx\"><span>App</span></span><span>&nbsp;</span><span class=\"storage modifier tsx\"><span>extends</span></span><span>&nbsp;</span><span class=\"entity name type module tsx\"><span>React</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity other inherited-class tsx\"><span>PureComponent</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta method declaration tsx\"><span class=\"meta definition method tsx entity name function tsx\"><span>render</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control flow tsx\"><span>return</span></span><span>&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onClick</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>showToast</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Toast&nbsp;please</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta field declaration tsx\"><span class=\"meta definition property tsx entity name function tsx\"><span>showToast</span></span><span>&nbsp;</span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta arrow tsx\"><span>&nbsp;</span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"storage type function arrow tsx\"><span>=&gt;</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta field declaration tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"punctuation whitespace comment leading tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;create&nbsp;toasts&nbsp;in&nbsp;response&nbsp;to&nbsp;interactions.</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta field declaration tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"punctuation whitespace comment leading tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;in&nbsp;most&nbsp;cases,&nbsp;it&#39;s&nbsp;enough&nbsp;to&nbsp;simply&nbsp;create&nbsp;and&nbsp;forget&nbsp;(thanks&nbsp;to&nbsp;timeout).</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta field declaration tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>AppToaster</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>show</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>message</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Toasted.</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta field declaration tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></div></pre>",
        {
          "tag": "heading",
          "value": "React component usage",
          "level": 2,
          "route": "core/components/toast.react-component-usage"
        },
        "<p>Render the <code>&lt;Toaster&gt;</code> component like any other element and supply <code>&lt;Toast&gt;</code> elements as <code>children</code>. You can\noptionally attach a <code>ref</code> handler to access the instance methods, but we strongly recommend using the\n<a href=\"#core/components/toast.static-usage\"><code>Toaster.create</code> static method</a> documented above instead. Note that\n<code>children</code> and <code>ref</code> can be used together, but <code>children</code> will always appear <em>after</em> toasts created with\n<code>ref.show()</code>.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Button</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Position</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Toast</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Toaster</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"constant language import-export-all tsx\"><span>*</span></span><span>&nbsp;</span><span class=\"keyword control as tsx\"><span>as</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>React</span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>react</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"storage type class tsx\"><span>class</span></span><span>&nbsp;</span><span class=\"entity name type class tsx\"><span>MyComponent</span></span><span>&nbsp;</span><span class=\"storage modifier tsx\"><span>extends</span></span><span>&nbsp;</span><span class=\"entity name type module tsx\"><span>React</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity other inherited-class tsx\"><span>PureComponent</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"storage modifier tsx\"><span>public</span></span><span>&nbsp;</span><span class=\"meta field declaration tsx\"><span class=\"meta definition property tsx variable object property tsx\"><span>state</span></span><span>&nbsp;</span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>toasts</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"meta array literal tsx\"><span class=\"meta brace square tsx\"><span>[</span></span><span>&nbsp;</span><span class=\"comment block tsx\"><span class=\"punctuation definition comment tsx\"><span>/*</span></span><span>&nbsp;IToastProps[]&nbsp;</span><span class=\"punctuation definition comment tsx\"><span>*/</span></span></span><span>&nbsp;</span><span class=\"meta brace square tsx\"><span>]</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"storage modifier tsx\"><span>private</span></span><span>&nbsp;</span><span class=\"meta field declaration tsx\"><span class=\"meta definition property tsx variable object property tsx\"><span>toaster</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type tsx\"><span>Toaster</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"storage modifier tsx\"><span>private</span></span><span>&nbsp;</span><span class=\"meta field declaration tsx\"><span class=\"meta definition property tsx variable object property tsx\"><span>refHandlers</span></span><span>&nbsp;</span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta field declaration tsx\"><span class=\"meta objectliteral tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span class=\"entity name function tsx\"><span>toaster</span></span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span class=\"meta arrow tsx\"><span>&nbsp;</span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"variable parameter tsx\"><span>ref</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type tsx\"><span>Toaster</span></span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"storage type function arrow tsx\"><span>=&gt;</span></span><span>&nbsp;</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>toaster</span></span><span>&nbsp;</span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>ref</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta field declaration tsx\"><span class=\"meta objectliteral tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta method declaration tsx\"><span class=\"storage modifier tsx\"><span>public</span></span><span>&nbsp;</span><span class=\"meta definition method tsx entity name function tsx\"><span>render</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control flow tsx\"><span>return</span></span><span>&nbsp;</span><span class=\"meta brace round tsx\"><span>(</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onClick</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>addToast</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Procure&nbsp;toast</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Toaster</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>position</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"support class dom tsx\"><span>Position</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>TOP_RIGHT</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>ref</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>refHandlers</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>toaster</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"comment block tsx\"><span class=\"punctuation definition comment tsx\"><span>/*</span></span><span>&nbsp;&quot;Toasted!&quot;&nbsp;will&nbsp;appear&nbsp;here&nbsp;after&nbsp;clicking&nbsp;button.&nbsp;</span><span class=\"punctuation definition comment tsx\"><span>*/</span></span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta function-call tsx\"><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>state</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>toasts</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>map</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"meta arrow tsx\"><span class=\"variable parameter tsx\"><span>toast</span></span><span>&nbsp;</span><span class=\"storage type function arrow tsx\"><span>=&gt;</span></span><span>&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Toast</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"keyword operator spread tsx\"><span>...</span></span><span class=\"variable other readwrite tsx\"><span>toast</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Toaster</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;addToast&nbsp;=&nbsp;()&nbsp;=&gt;&nbsp;</span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta embedded expression tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>toaster</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>show</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>message</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>Toasted!</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span><span>;</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta embedded expression tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"meta method declaration tsx\"><span class=\"meta block tsx\"><span class=\"meta tag without-attributes tsx\"><span class=\"meta jsx children tsx\"><span>}</span></span></span></span></span></span></span></div></pre>"
      ],
      "contentsRaw": "@# Toast\n\nA toast is a lightweight, ephemeral notice from an application in direct response to a user's action.\n\nToasts can be configured to appear at either the top or the bottom of an application window, and it is possible to\nhave more than one toast onscreen at a time.\n\n@reactExample ToastExample\n\n@## Props\n\n@### Toast\n\n`Toast`s have a built-in timeout of five seconds. Users can also dismiss them manually by clicking the &times; button.\nHovering the cursor over a toast prevents it from disappearing. When the cursor leaves the toast, the toast's timeout restarts.\nSimilarly, focusing the toast (for example, by hitting the `tab` key) halts the timeout, and blurring restarts the timeout.\n\nYou can add one additional action button to a toast. You might use this to provide an undo button, for example.\n\nYou can also apply the same visual intent styles to `Toast`s that you can to [`Button`s](#core/components/button.css).\n\n@interface IToastProps\n\n@### Toaster\n\nThe `Toaster` React component is a stateful container for a single list of toasts. Internally, it\nuses [`Overlay`](#core/components/overlay) to manage children and transitions. It can be vertically\naligned along the top or bottom edge of its container (new toasts will slide in from that edge) and\nhorizontally aligned along the left edge, center, or right edge of its container.\n\nThere are three ways to use the `Toaster` component:\n\n1. `Toaster.create(props)` static method returns a new `IToaster` instance. Use the instance method `toaster.show()` to manipulate this instance. __(recommended)__\n1. `<Toaster><Toast />...</Toaster>`: Render a `<Toaster>` element with React `children`.\n1. `<Toaster ref={ref => ref.show({ ...toast })} />`: Render a `<Toaster>` element and use the `ref` prop to access its instance methods.\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Working with multiple toasters</h4>\n\nYou can have multiple toasters in a single application, but you must ensure that each has a unique\n`position` to prevent overlap.\n\n</div>\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Toaster focus</h4>\n\n`Toaster` always disables `Overlay`'s `enforceFocus` behavior (meaning that you're not blocked\nfrom accessing other parts of the application while a toast is active), and by default also\ndisables `autoFocus` (meaning that focus will not switch to a toast when it appears). You can\nenable `autoFocus` for an individual `Toaster` via a prop, if desired.\n\n</div>\n\n\n@interface IToasterProps\n\n@## Static usage\n\nThe `Toaster` component provides the static `create` method that returns a new `Toaster` instance, rendered into an\nelement attached to `<body>`. A `Toaster` instance\nhas a collection of methods to show and hide toasts in its given container.\n\n```ts\nToaster.create(props?: IToasterProps, container = document.body): IToaster\n```\n\nThe `Toaster` will be rendered into a new element appended to the given `container`.\nThe `container` determines which element toasts are positioned relative to; the default value of `<body>` allows them to use the entire viewport.\n\nNote that the return type is `IToaster`, which is a minimal interface that exposes only the instance\nmethods detailed below. It can be thought of as `Toaster` minus the `React.Component` methods,\nbecause the `Toaster` should not be treated as a normal React component.\n\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">React 16 usage</h4>\n\n`Toaster.create()` will throw an error if invoked inside a component lifecycle method in React 16, as `ReactDOM.render()` will return\n`null` resulting in an inaccessible toaster instance. See the second bullet point on the [React 16 release notes](https://reactjs.org/blog/2017/09/26/react-v16.0.html#breaking-changes) for more information.\n\n</div>\n\n@interface IToaster\n\n@### Example\n\nYour application can contain several `Toaster` instances and easily share them across the codebase as modules.\n\nThe following code samples demonstrate our preferred pattern for intergrating a toaster into a React application:\n\n#### `toaster.ts`\n```tsx\nimport { Position, Toaster } from \"@blueprintjs/core\";\n\n/** Singleton toaster instance. Create separate instances for different options. */\nexport const AppToaster = Toaster.create({\n    className: \"recipe-toaster\",\n    position: Position.TOP,\n});\n```\n\n#### `application.ts`\n```tsx\nimport { Button } from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport { AppToaster } from \"./toaster\";\n\nexport class App extends React.PureComponent {\n    render() {\n        return <Button onClick={this.showToast} text=\"Toast please\" />;\n    }\n\n    showToast = () => {\n        // create toasts in response to interactions.\n        // in most cases, it's enough to simply create and forget (thanks to timeout).\n        AppToaster.show({ message: \"Toasted.\" });\n    }\n}\n```\n\n@## React component usage\n\nRender the `<Toaster>` component like any other element and supply `<Toast>` elements as `children`. You can\noptionally attach a `ref` handler to access the instance methods, but we strongly recommend using the\n[`Toaster.create` static method](#core/components/toast.static-usage) documented above instead. Note that\n`children` and `ref` can be used together, but `children` will always appear _after_ toasts created with\n`ref.show()`.\n\n```tsx\nimport { Button, Position, Toast, Toaster } from \"@blueprintjs/core\";\nimport * as React from \"react\";\n\nclass MyComponent extends React.PureComponent {\n    public state = { toasts: [ /* IToastProps[] */ ] }\n\n    private toaster: Toaster;\n    private refHandlers = {\n        toaster: (ref: Toaster) => this.toaster = ref,\n    };\n\n    public render() {\n        return (\n            <div>\n                <Button onClick={this.addToast} text=\"Procure toast\" />\n                <Toaster position={Position.TOP_RIGHT} ref={this.refHandlers.toaster}>\n                    {/* \"Toasted!\" will appear here after clicking button. */}\n                    {this.state.toasts.map(toast => <Toast {...toast} />)}\n                </Toaster>\n            </div\n        )\n    }\n\n    private addToast = () => {\n        this.toaster.show({ message: \"Toasted!\" });\n    }\n}\n```",
      "metadata": {}
    },
    "tooltip": {
      "reference": "tooltip",
      "route": "core/components/tooltip",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\tooltip\\tooltip.md",
      "title": "Tooltip",
      "contents": [
        {
          "tag": "heading",
          "value": "Tooltip",
          "level": 1,
          "route": "core/components/tooltip"
        },
        "<p>A tooltip is a lightweight popover for showing additional infromation on hover.</p>\n",
        {
          "tag": "reactExample",
          "value": "TooltipExample"
        },
        {
          "tag": "heading",
          "value": "Combining with popover",
          "level": 2,
          "route": "core/components/tooltip.combining-with-popover"
        },
        "<p>A single target can be wrapped in both a popover and a tooltip.</p>\n<p>You must put the <code>Tooltip</code> <em>inside</em> the <code>Popover</code> (and the target inside the\n<code>Tooltip</code>), so the final hierarchy is <code>Popover &gt; Tooltip &gt; target</code> This order is\nrequired because the popover will disable the tooltip when it is open,\npreventing both elements from appearing at the same time.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Button</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Popover</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Position</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Tooltip</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Popover</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>content</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>h1</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Popover!</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>h1</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>position</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"support class dom tsx\"><span>Position</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>RIGHT</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Tooltip</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>content</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>I&nbsp;has&nbsp;a&nbsp;popover!</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>position</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"support class dom tsx\"><span>Position</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>RIGHT</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag without-attributes tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Hover&nbsp;and&nbsp;click&nbsp;me</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Tooltip</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Popover</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre>",
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/tooltip.props"
        },
        "<p><code>Tooltip</code> simply passes its props to <a href=\"#core/components/popover\"><code>Popover</code></a>, with\nsome exceptions. Notably, it only supports <code>HOVER</code> interactions and the <code>target</code>\nprop is not supported.</p>\n<p>When creating a tooltip, you must specify both:</p>\n<ul>\n<li>its <em>content</em> via the <code>content</code> prop, and</li>\n<li>its <em>target</em> as a single child element or string.</li>\n</ul>\n<p>The content will appear in a contrasting popover when the target is hovered.</p>\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">Button targets</h4>\n\nButtons make great tooltip targets, but the <code>disabled</code> attribute will prevent all\nevents so the enclosing <code>Tooltip</code> will not know when to respond.\nUse <a href=\"#core/components/button.anchor-button\"><code>AnchorButton</code></a> instead;\nsee the <a href=\"#core/components/button.props\">callout here</a> for more details.\n\n</div>\n\n",
        {
          "tag": "interface",
          "value": "ITooltipProps"
        }
      ],
      "contentsRaw": "@# Tooltip\n\nA tooltip is a lightweight popover for showing additional infromation on hover.\n\n@reactExample TooltipExample\n\n@## Combining with popover\n\nA single target can be wrapped in both a popover and a tooltip.\n\nYou must put the `Tooltip` _inside_ the `Popover` (and the target inside the\n`Tooltip`), so the final hierarchy is `Popover > Tooltip > target` This order is\nrequired because the popover will disable the tooltip when it is open,\npreventing both elements from appearing at the same time.\n\n```tsx\nimport { Button, Popover, Position, Tooltip } from \"@blueprintjs/core\";\n\n<Popover content={<h1>Popover!</h1>} position={Position.RIGHT}>\n    <Tooltip content=\"I has a popover!\" position={Position.RIGHT}>\n        <Button>Hover and click me</Button>\n    </Tooltip>\n</Popover>\n```\n\n@## Props\n\n`Tooltip` simply passes its props to [`Popover`](#core/components/popover), with\nsome exceptions. Notably, it only supports `HOVER` interactions and the `target`\nprop is not supported.\n\nWhen creating a tooltip, you must specify both:\n- its _content_ via the `content` prop, and\n- its _target_ as a single child element or string.\n\nThe content will appear in a contrasting popover when the target is hovered.\n\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-warning-sign\">\n    <h4 class=\"bp3-heading\">Button targets</h4>\n\nButtons make great tooltip targets, but the `disabled` attribute will prevent all\nevents so the enclosing `Tooltip` will not know when to respond.\nUse [`AnchorButton`](#core/components/button.anchor-button) instead;\nsee the [callout here](#core/components/button.props) for more details.\n\n</div>\n\n@interface ITooltipProps",
      "metadata": {}
    },
    "tree": {
      "reference": "tree",
      "route": "core/components/tree",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\components\\tree\\tree.md",
      "title": "Tree",
      "contents": [
        {
          "tag": "heading",
          "value": "Tree",
          "level": 1,
          "route": "core/components/tree"
        },
        "<p>Trees display hierarchical data.</p>\n",
        {
          "tag": "reactExample",
          "value": "TreeExample"
        },
        {
          "tag": "heading",
          "value": "Props",
          "level": 2,
          "route": "core/components/tree.props"
        },
        "<p><code>Tree</code> is a stateless component. Its contents are dictated by the <code>contents</code> prop, which is an array\nof <code>ITreeNode</code>s (see <a href=\"#components/tree.tree-node\">below</a>). The tree is multi-rooted if\n<code>contents</code> contains more than one top-level object.</p>\n<p>A variety of interaction callbacks are also exposed as props. All interaction callbacks supply a\nparameter <code>nodePath</code>, which is an array of numbers representing a node&#39;s position in the tree. For\nexample, <code>[2, 0]</code> represents the first child (<code>0</code>) of the third top-level node (<code>2</code>).</p>\n",
        {
          "tag": "interface",
          "value": "ITreeProps"
        },
        {
          "tag": "heading",
          "value": "Instance methods",
          "level": 3,
          "route": "core/components/tree.instance-methods"
        },
        "<ul>\n<li><code>Tree.getNodeContentElement(nodeId: string | number): HTMLElement | undefined</code> &ndash;\nReturns the underlying HTML element of the <code>Tree</code> node with an id of <code>nodeId</code>.\nThis element does not contain the children of the node, only its label and controls.\nIf the node is not currently mounted, <code>undefined</code> is returned.</li>\n</ul>\n",
        {
          "tag": "heading",
          "value": "Tree node",
          "level": 3,
          "route": "core/components/tree.tree-node"
        },
        "<p><code>ITreeNode</code> objects determine the contents, appearance, and state of each node in the tree.</p>\n<p>For example, <code>icon</code> controls the icon displayed for the node, and <code>isExpanded</code> determines\nwhether the node&#39;s children are shown.</p>\n",
        {
          "tag": "interface",
          "value": "ITreeNodeProps"
        },
        {
          "tag": "heading",
          "value": "CSS",
          "level": 2,
          "route": "core/components/tree.css"
        },
        "<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n\nNote that the following examples set a maximum width and background color for the tree;\nyou may want to do this as well in your own usage.\n\n</div>\n\n",
        {
          "tag": "css",
          "value": "tree"
        }
      ],
      "contentsRaw": "@# Tree\n\nTrees display hierarchical data.\n\n@reactExample TreeExample\n\n@## Props\n\n`Tree` is a stateless component. Its contents are dictated by the `contents` prop, which is an array\nof `ITreeNode`s (see [below](#components/tree.tree-node)). The tree is multi-rooted if\n`contents` contains more than one top-level object.\n\nA variety of interaction callbacks are also exposed as props. All interaction callbacks supply a\nparameter `nodePath`, which is an array of numbers representing a node's position in the tree. For\nexample, `[2, 0]` represents the first child (`0`) of the third top-level node (`2`).\n\n@interface ITreeProps\n\n@### Instance methods\n\n* `Tree.getNodeContentElement(nodeId: string | number): HTMLElement | undefined` &ndash;\n  Returns the underlying HTML element of the `Tree` node with an id of `nodeId`.\n  This element does not contain the children of the node, only its label and controls.\n  If the node is not currently mounted, `undefined` is returned.\n\n@### Tree node\n\n`ITreeNode` objects determine the contents, appearance, and state of each node in the tree.\n\nFor example, `icon` controls the icon displayed for the node, and `isExpanded` determines\nwhether the node's children are shown.\n\n@interface ITreeNodeProps\n\n@## CSS\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n\nNote that the following examples set a maximum width and background color for the tree;\nyou may want to do this as well in your own usage.\n\n</div>\n\n@css tree",
      "metadata": {}
    },
    "accessibility": {
      "reference": "accessibility",
      "route": "core/accessibility",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\docs\\accessibility.md",
      "title": "Accessibility",
      "contents": [
        {
          "tag": "heading",
          "value": "Accessibility",
          "level": 1,
          "route": "core/accessibility"
        },
        "<p>Blueprint strives to provide accessible components out of the box. Many of the JS components\nwill apply accessible HTML attributes to support different modes of usage.</p>\n",
        {
          "tag": "heading",
          "value": "Focus management",
          "level": 2,
          "route": "core/accessibility.focus-management"
        },
        "<p>Focus states (that glowy blue outline around the active element) are essential for keyboard\nnavigation to indicate which element is currently active. They are less important, and\noccasionally outright intrusive, when using a mouse because you can click wherever you want at\nany time.</p>\n<p>Blueprint includes a utility that manages the appearance of focus styles. When enabled, focus styles\nwill be hidden while the user interacts using the mouse and will appear when the\n<kbd>tab</kbd> key is pressed to begin keyboard navigation. Try this out for yourself\nbelow.</p>\n<p><strong>You must explictly enable this feature in your app (and you probably want to):</strong></p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source ts\"><span class=\"meta import ts\"><span class=\"keyword control import ts\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block ts\"><span class=\"punctuation definition block ts\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias ts\"><span>FocusStyleManager</span></span><span>&nbsp;</span><span class=\"punctuation definition block ts\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from ts\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double ts\"><span class=\"punctuation definition string begin ts\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end ts\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement ts\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source ts\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta function-call ts\"><span class=\"variable other object ts\"><span>FocusStyleManager</span></span><span class=\"punctuation accessor ts\"><span>.</span></span><span class=\"entity name function ts\"><span>onlyShowFocusOnTabs</span></span></span><span class=\"meta brace round ts\"><span>(</span><span>)</span></span><span class=\"punctuation terminator statement ts\"><span>;</span></span></span></div></pre><p>Note that the focus style for text inputs (a slightly thicker colored border) is not removed by this\nutility because it is always useful to know where you&#39;re typing.</p>\n",
        {
          "tag": "reactExample",
          "value": "FocusExample"
        },
        {
          "tag": "heading",
          "value": "JavaScript API",
          "level": 3,
          "route": "core/accessibility.javascript-api"
        },
        "<p>This behavior is controlled by a singleton instance called <code>FocusStyleManager</code> that lives in the\n<strong>@blueprintjs/core</strong> package. It supports the following public methods:</p>\n<ul>\n<li><code>FocusStyleManager.isActive(): boolean</code>: Returns whether the <code>FocusStyleManager</code> is currently running.</li>\n<li><code>FocusStyleManager.onlyShowFocusOnTabs(): void</code>: Enable behavior which hides focus styles during mouse interaction.</li>\n<li><code>FocusStyleManager.alwaysShowFocus(): void</code>: Stop this behavior (focus styles are always visible).</li>\n</ul>\n",
        {
          "tag": "heading",
          "value": "Color contrast",
          "level": 2,
          "route": "core/accessibility.color-contrast"
        },
        "<p>Colors have been designed to be accessible to as many people as possible, even those who are\nvisually impaired or experiencing any kind of colorblindness. Our colors have not only been chosen\nto go well together but to also adhere to <a href=\"https://www.w3.org/TR/WCAG20/\">WCAG 2.0</a> standards.</p>\n"
      ],
      "contentsRaw": "@# Accessibility\n\nBlueprint strives to provide accessible components out of the box. Many of the JS components\nwill apply accessible HTML attributes to support different modes of usage.\n\n@## Focus management\n\nFocus states (that glowy blue outline around the active element) are essential for keyboard\nnavigation to indicate which element is currently active. They are less important, and\noccasionally outright intrusive, when using a mouse because you can click wherever you want at\nany time.\n\nBlueprint includes a utility that manages the appearance of focus styles. When enabled, focus styles\nwill be hidden while the user interacts using the mouse and will appear when the\n<kbd>tab</kbd> key is pressed to begin keyboard navigation. Try this out for yourself\nbelow.\n\n**You must explictly enable this feature in your app (and you probably want to):**\n\n```ts\nimport { FocusStyleManager } from \"@blueprintjs/core\";\n\nFocusStyleManager.onlyShowFocusOnTabs();\n```\n\nNote that the focus style for text inputs (a slightly thicker colored border) is not removed by this\nutility because it is always useful to know where you're typing.\n\n@reactExample FocusExample\n\n@### JavaScript API\n\nThis behavior is controlled by a singleton instance called `FocusStyleManager` that lives in the\n__@blueprintjs/core__ package. It supports the following public methods:\n\n- `FocusStyleManager.isActive(): boolean`: Returns whether the `FocusStyleManager` is currently running.\n- `FocusStyleManager.onlyShowFocusOnTabs(): void`: Enable behavior which hides focus styles during mouse interaction.\n- `FocusStyleManager.alwaysShowFocus(): void`: Stop this behavior (focus styles are always visible).\n\n@## Color contrast\n\nColors have been designed to be accessible to as many people as possible, even those who are\nvisually impaired or experiencing any kind of colorblindness. Our colors have not only been chosen\nto go well together but to also adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards.",
      "metadata": {}
    },
    "classes": {
      "reference": "classes",
      "route": "core/classes",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\docs\\classes.md",
      "title": "Classes",
      "contents": [
        {
          "tag": "heading",
          "value": "Classes",
          "level": 1,
          "route": "core/classes"
        },
        "<p>Blueprint packages provide React components in JS files and associated styles in\na CSS file. Each package exports a <code>Classes</code> constants object in JavaScript that\ncontains keys of the form <code>NAMED_CONSTANT</code> for every CSS class used. This\nseparation allows us to change CSS classes between versions without breaking\ndownstream users (although in practice this happens very rarely).</p>\n<p><strong>Avoid referencing hardcoded Blueprint class names in your JS or CSS code.</strong></p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;Don&#39;t&nbsp;do&nbsp;this!&nbsp;Avoid&nbsp;hardcoding&nbsp;Blueprint&nbsp;class&nbsp;names.</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>button</span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>className</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-large</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Don&#39;t&nbsp;do&nbsp;this!</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>button</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre><p>The <strong>best practice</strong> is to add your own class to an element and then reference\nthat class whenever needed.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>className</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>my-custom-class</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>customized&nbsp;button</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></div></pre><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source css scss\"><span class=\"entity other attribute-name class css\"><span class=\"punctuation definition entity css\"><span>.</span></span><span>my-custom-class</span></span><span>&nbsp;</span><span class=\"meta property-list scss\"><span class=\"punctuation section property-list begin scss\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"meta property-list scss\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta property-name scss\"><span class=\"support type property-name scss\"><span>width</span></span></span><span class=\"meta property-value scss\"><span class=\"punctuation separator key-value scss\"><span>:</span></span><span>&nbsp;</span><span class=\"constant numeric scss\"><span>4000</span></span><span class=\"keyword other unit scss\"><span>px</span></span><span class=\"punctuation terminator rule scss\"><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"meta property-list scss\"><span class=\"punctuation section property-list end scss\"><span>}</span></span></span></span></div></pre><p>In cases where adding and styling a new class is impractical or undesirable, use\nthe <code>Classes</code> constants or <code>$ns</code> Sass/Less variable. The <code>Classes</code> constants can\nbe particularly useful when writing UI tests.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;use&nbsp;Classes&nbsp;constants&nbsp;for&nbsp;forward-compatible&nbsp;custom&nbsp;elements.</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Classes</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>a</span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>className</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Classes</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>MENU_ITEM</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>custom&nbsp;menu&nbsp;item</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span>a</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source css scss\"><span class=\"comment line scss\"><span>//</span><span>&nbsp;interpolate&nbsp;the&nbsp;$ns&nbsp;variable&nbsp;to&nbsp;generate&nbsp;forward-compatible&nbsp;class&nbsp;names.</span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"comment line scss\"><span>//</span><span>&nbsp;this&nbsp;approach&nbsp;is&nbsp;*not&nbsp;encouraged*&nbsp;as&nbsp;it&nbsp;increases&nbsp;maintenance&nbsp;cost.</span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"meta at-rule import scss\"><span class=\"keyword control at-rule import scss\"><span class=\"punctuation definition keyword scss\"><span>@</span></span><span>import</span></span><span>&nbsp;</span><span class=\"string quoted double scss\"><span class=\"punctuation definition string begin scss\"><span>&quot;</span></span><span>~@blueprintjs/core/lib/scss/variables</span><span class=\"punctuation definition string end scss\"><span>&quot;</span></span></span></span><span>;</span></span></div><div class=\"line\"><span class=\"source css scss\"><span>.</span><span class=\"variable interpolation scss\"><span>#{</span><span class=\"variable scss\"><span class=\"variable scss\"><span>$ns</span></span></span><span>}-menu-item</span></span><span>&nbsp;</span><span class=\"meta property-list scss\"><span class=\"punctuation section property-list begin scss\"><span>{</span></span><span class=\"punctuation section property-list end scss\"><span>}</span></span></span></span></div></pre>",
        {
          "tag": "heading",
          "value": "Modifiers",
          "level": 2,
          "route": "core/classes.modifiers"
        },
        "<p>Blueprint components support a range of <strong>modifiers</strong> to adjust their\nappearance. Some commonly used modifiers are <code>intent</code>, <code>large</code>, and <code>minimal</code>.\nWhile modifiers are typically implemented as simple CSS classes, it is always\npreferrable to use the corresponding prop on a React component.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;Prefer&nbsp;props&nbsp;over&nbsp;modifier&nbsp;classes.</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>intent</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>primary</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>minimal</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant language boolean true tsx\"><span>true</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Good&nbsp;stuff</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;Don&#39;t&nbsp;do&nbsp;this!</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>className</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta function-call tsx\"><span class=\"entity name function tsx\"><span>classNames</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"variable other object tsx\"><span>Classes</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>INTENT_PRIMARY</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other object tsx\"><span>Classes</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>MINIMAL</span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span><span class=\"meta jsx children tsx\"><span>Don&#39;t&nbsp;do&nbsp;this!</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div></pre><p>Another important note: Since modifiers typically correspond directly to CSS classes, they will often\ncascade to children and <em>cannot be disabled</em> on descendants. If a <code>&lt;ButtonGroup&gt;</code>\nis marked <code>minimal={true}</code>, then setting <code>&lt;Button minimal={false}&gt;</code> on a child\nwill have <em>no effect</em> since <code>Classes.MINIMAL</code> cannot be removed or overriden\nby a descendant.</p>\n",
        {
          "tag": "heading",
          "value": "Namespacing",
          "level": 2,
          "route": "core/classes.namespacing"
        },
        "<p>All Blueprint CSS classes begin with a namespace prefix to isolate our styles\nfrom other frameworks: <code>.button</code> is a very common name, but only Blueprint\ndefines <code>.bp3-button</code>.</p>\n<p>Beginning with Blueprint 3.0, this namespace will be versioned by major version\nof the library so two major versions can be used together on a single page. This\nmeans the namespace at the beginning of every class <em>will change in each\nsubsequent major version</em>. In Blueprint 1.x and 2.x this namespace was <code>pt-</code>,\nbut in Blueprint 3.0 it will change to <code>bp3-</code> and increase accordingly.</p>\n<h3 id=\"custom-namespace\">Custom namespace</h3>\n<p>The namespace can be changed <em>at build time</em> to produce a custom Blueprint build\n(though this usage is not recommended and we cannot offer support for it). This\nrequires several things:</p>\n<ol>\n<li>You must use Sass and import Blueprint Sass source into your app, rather than using the CSS file distributed in the NPM package.<ul>\n<li>Compiling Blueprint Sass source requires two additional tools:\n<a href=\"https://www.npmjs.com/package/node-sass-package-importer\">node-sass-package-importer</a>\nfor resolving node_modules imports and\n<a href=\"https://github.com/haithembelhaj/sass-inline-svg\">sass-inline-svg</a> for\ninlining SVG images.</li>\n</ul>\n</li>\n<li>Define the <code>$ns</code> Sass variable in your app styles before importing <code>blueprint.scss</code> to update the generated CSS.</li>\n<li>When bundling your code, set the <code>BLUEPRINT_NAMESPACE</code> environment variable to the same value to update the generated <code>Classes</code> constants. The easiest way to do this is on the command line: <code>BLUEPRINT_NAMESPACE=&quot;custom&quot; webpack ...args</code></li>\n</ol>\n",
        {
          "tag": "heading",
          "value": "Linting",
          "level": 2,
          "route": "core/classes.linting"
        },
        "<p>The <a href=\"https://www.npmjs.com/package/@blueprintjs/tslint-config\"><strong>@blueprintjs/tslint-config</strong></a> NPM package provides advanced configuration for <a href=\"http://palantir.github.io/tslint/\">TSLint</a>, including a custom <code>blueprint-classes-constants</code> rule that will detect and warn about hardcoded <code>pt-</code>prefixed strings. See the package&#39;s <a href=\"https://www.npmjs.com/package/@blueprintjs/tslint-config\">README</a> for usage instructions.</p>\n"
      ],
      "contentsRaw": "\n@# Classes\n\nBlueprint packages provide React components in JS files and associated styles in\na CSS file. Each package exports a `Classes` constants object in JavaScript that\ncontains keys of the form `NAMED_CONSTANT` for every CSS class used. This\nseparation allows us to change CSS classes between versions without breaking\ndownstream users (although in practice this happens very rarely).\n\n**Avoid referencing hardcoded Blueprint class names in your JS or CSS code.**\n\n```tsx\n// Don't do this! Avoid hardcoding Blueprint class names.\n<button className=\"bp3-button bp3-large\">Don't do this!</button>\n```\n\nThe **best practice** is to add your own class to an element and then reference\nthat class whenever needed.\n\n```tsx\n<Button className=\"my-custom-class\" text=\"customized button\" />\n```\n```css.scss\n.my-custom-class {\n    width: 4000px;\n}\n```\n\nIn cases where adding and styling a new class is impractical or undesirable, use\nthe `Classes` constants or `$ns` Sass/Less variable. The `Classes` constants can\nbe particularly useful when writing UI tests.\n\n```tsx\n// use Classes constants for forward-compatible custom elements.\nimport { Classes } from \"@blueprintjs/core\"\n<a className={Classes.MENU_ITEM}>custom menu item</a>\n```\n\n```css.scss\n// interpolate the $ns variable to generate forward-compatible class names.\n// this approach is *not encouraged* as it increases maintenance cost.\n@import \"~@blueprintjs/core/lib/scss/variables\";\n.bp3-menu-item {}\n```\n\n@## Modifiers\n\nBlueprint components support a range of **modifiers** to adjust their\nappearance. Some commonly used modifiers are `intent`, `large`, and `minimal`.\nWhile modifiers are typically implemented as simple CSS classes, it is always\npreferrable to use the corresponding prop on a React component.\n\n```tsx\n// Prefer props over modifier classes.\n<Button intent=\"primary\" minimal={true}>Good stuff</Button>\n\n// Don't do this!\n<Button className={classNames(Classes.INTENT_PRIMARY, Classes.MINIMAL)}>Don't do this!</Button>\n```\n\nAnother important note: Since modifiers typically correspond directly to CSS classes, they will often\ncascade to children and _cannot be disabled_ on descendants. If a `<ButtonGroup>`\nis marked `minimal={true}`, then setting `<Button minimal={false}>` on a child\nwill have _no effect_ since `Classes.MINIMAL` cannot be removed or overriden\nby a descendant.\n\n@## Namespacing\n\nAll Blueprint CSS classes begin with a namespace prefix to isolate our styles\nfrom other frameworks: `.button` is a very common name, but only Blueprint\ndefines `.bp3-button`.\n\nBeginning with Blueprint 3.0, this namespace will be versioned by major version\nof the library so two major versions can be used together on a single page. This\nmeans the namespace at the beginning of every class _will change in each\nsubsequent major version_. In Blueprint 1.x and 2.x this namespace was `pt-`,\nbut in Blueprint 3.0 it will change to `bp3-` and increase accordingly.\n\n### Custom namespace\n\nThe namespace can be changed _at build time_ to produce a custom Blueprint build\n(though this usage is not recommended and we cannot offer support for it). This\nrequires several things:\n\n1. You must use Sass and import Blueprint Sass source into your app, rather than using the CSS file distributed in the NPM package.\n    - Compiling Blueprint Sass source requires two additional tools:\n      [node-sass-package-importer](https://www.npmjs.com/package/node-sass-package-importer)\n      for resolving node_modules imports and\n      [sass-inline-svg](https://github.com/haithembelhaj/sass-inline-svg) for\n      inlining SVG images.\n1. Define the `$ns` Sass variable in your app styles before importing `blueprint.scss` to update the generated CSS.\n1. When bundling your code, set the `BLUEPRINT_NAMESPACE` environment variable to the same value to update the generated `Classes` constants. The easiest way to do this is on the command line: `BLUEPRINT_NAMESPACE=\"custom\" webpack ...args`\n\n@## Linting\n\nThe [**@blueprintjs/tslint-config**](https://www.npmjs.com/package/@blueprintjs/tslint-config) NPM package provides advanced configuration for [TSLint](http://palantir.github.io/tslint/), including a custom `blueprint-classes-constants` rule that will detect and warn about hardcoded `pt-`prefixed strings. See the package's [README](https://www.npmjs.com/package/@blueprintjs/tslint-config) for usage instructions.",
      "metadata": {
        "tag": "new"
      }
    },
    "colors": {
      "reference": "colors",
      "route": "core/colors",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\docs\\colors.md",
      "title": "Colors",
      "contents": [
        {
          "tag": "heading",
          "value": "Colors",
          "level": 1,
          "route": "core/colors"
        },
        {
          "tag": "heading",
          "value": "Gray scale",
          "level": 2,
          "route": "core/colors.gray-scale"
        },
        "<p>Black, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the <a href=\"#core/colors.core-colors\">core colors</a>.</p>\n",
        {
          "tag": "reactDocs",
          "value": "BlackWhitePalette"
        },
        {
          "tag": "reactDocs",
          "value": "GrayscalePalette"
        },
        {
          "tag": "heading",
          "value": "Core colors",
          "level": 2,
          "route": "core/colors.core-colors"
        },
        "<p>Core colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a <strong>visual intent</strong>. We use intents\nto convey the status of UI elements:</p>\n<ul>\n<li><em>Blue</em> (intent: primary) elevates elements from the typical gray scale UI frame.</li>\n<li><em>Green</em> (intent: success) indicates successful operations.</li>\n<li><em>Orange</em> (intent: warning) indicates warnings and intermediate states.</li>\n<li><em>Red</em> (intent: danger) indicates errors and potentially destructive operations.</li>\n</ul>\n<p>Core colors are also designed to:</p>\n<ul>\n<li>go well together and be used alongside each other in any application.</li>\n<li>adhere to <a href=\"https://www.w3.org/TR/WCAG20/\">WCAG 2.0</a> standards, and therefore are\nhighly accessible to visually impaired and color blind users.</li>\n</ul>\n",
        {
          "tag": "reactDocs",
          "value": "CoreColorsPalette"
        },
        {
          "tag": "heading",
          "value": "Extended colors",
          "level": 2,
          "route": "core/colors.extended-colors"
        },
        "<p>Extended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on <a href=\"https://www.w3.org/TR/WCAG20/\">WCAG 2.0</a>\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at <a href=\"#colors.core-colors\">core colors</a> instead.</p>\n",
        {
          "tag": "reactDocs",
          "value": "ExtendedColorsPalette"
        },
        {
          "tag": "heading",
          "value": "Usage",
          "level": 2,
          "route": "core/colors.usage"
        },
        "<p>Blueprint provides variables for colors in Sass, Less, and JavaScript.\n<a href=\"#core/variables.color-aliases\">Semantic aliases for common colors</a> are also provided in Sass and Less.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source css scss\"><span class=\"meta at-rule import scss\"><span class=\"keyword control at-rule import scss\"><span class=\"punctuation definition keyword scss\"><span>@</span></span><span>import</span></span><span>&nbsp;</span><span class=\"string quoted double scss\"><span class=\"punctuation definition string begin scss\"><span>&quot;</span></span><span>~@blueprintjs/core/lib/scss/variables</span><span class=\"punctuation definition string end scss\"><span>&quot;</span></span></span></span><span>;</span></span></div><div class=\"line\"><span class=\"source css scss\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"entity other attribute-name class css\"><span class=\"punctuation definition entity css\"><span>.</span></span><span>rule</span></span><span>&nbsp;</span><span class=\"meta property-list scss\"><span class=\"punctuation section property-list begin scss\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"meta property-list scss\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta property-name scss\"><span class=\"support type property-name scss\"><span>color</span></span></span><span class=\"meta property-value scss\"><span class=\"punctuation separator key-value scss\"><span>:</span></span><span>&nbsp;</span><span class=\"variable scss\"><span class=\"variable scss\"><span>$pt-link-color</span></span></span><span class=\"punctuation terminator rule scss\"><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"meta property-list scss\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta property-name scss\"><span class=\"support type property-name scss\"><span>background</span></span></span><span class=\"meta property-value scss\"><span class=\"punctuation separator key-value scss\"><span>:</span></span><span>&nbsp;</span><span class=\"variable scss\"><span class=\"variable scss\"><span>$black</span></span></span><span class=\"punctuation terminator rule scss\"><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"meta property-list scss\"><span class=\"punctuation section property-list end scss\"><span>}</span></span></span></span></div></pre><p>Hex values for these colors can be accessed in JavaScript through the <code>Colors</code> export.\nNote that aliases are not currently available in JavaScript.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Colors</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span>div</span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>style</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>color</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"variable other object tsx\"><span>Colors</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>BLUE3</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>background</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"variable other object tsx\"><span>Colors</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>BLACK</span></span><span>&nbsp;</span></span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></div></pre>",
        {
          "tag": "heading",
          "value": "Color schemes",
          "level": 2,
          "route": "core/colors.color-schemes"
        },
        "<p>Use the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!</p>\n<p>The following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.</p>\n",
        {
          "tag": "heading",
          "value": "Sequential color schemes",
          "level": 3,
          "route": "core/colors.sequential-color-schemes"
        },
        "<p>Sequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.</p>\n",
        {
          "tag": "reactDocs",
          "value": "SequentialSchemePalette"
        },
        {
          "tag": "heading",
          "value": "Diverging color schemes",
          "level": 3,
          "route": "core/colors.diverging-color-schemes"
        },
        "<p>Diverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.</p>\n",
        {
          "tag": "reactDocs",
          "value": "DivergingSchemePalette"
        },
        {
          "tag": "heading",
          "value": "Qualitative color schemes",
          "level": 3,
          "route": "core/colors.qualitative-color-schemes"
        },
        "<p>Qualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.</p>\n",
        {
          "tag": "reactDocs",
          "value": "QualitativeSchemePalette"
        }
      ],
      "contentsRaw": "@# Colors\n\n@## Gray scale\n\nBlack, white and everything in between. The gray scale should be used for\nthe main UI frame: containers, headers, sections, boxes, etc.\nIf you need to call attention to a particular element (buttons, icons, tooltips, etc.),\nuse one of the [core colors](#core/colors.core-colors).\n\n@reactDocs BlackWhitePalette\n@reactDocs GrayscalePalette\n\n@## Core colors\n\nCore colors are reserved for user interface design. Use these to help call\nattention to specific UI elements, such as buttons, callouts, icons, etc.\nEach core color is mapped to what we call a __visual intent__. We use intents\nto convey the status of UI elements:\n\n- _Blue_ (intent: primary) elevates elements from the typical gray scale UI frame.\n- _Green_ (intent: success) indicates successful operations.\n- _Orange_ (intent: warning) indicates warnings and intermediate states.\n- _Red_ (intent: danger) indicates errors and potentially destructive operations.\n\nCore colors are also designed to:\n\n- go well together and be used alongside each other in any application.\n- adhere to [WCAG 2.0](https://www.w3.org/TR/WCAG20/) standards, and therefore are\nhighly accessible to visually impaired and color blind users.\n\n@reactDocs CoreColorsPalette\n\n@## Extended colors\n\nExtended colors should typically be reserved for data visualizations: any time\nyou need to represent data of some sort, you can use these.\nThese colors are less strict on [WCAG 2.0](https://www.w3.org/TR/WCAG20/)\naccessibility standards and should therefore not be used for typical user\ninterface design — take a look at [core colors](#colors.core-colors) instead.\n\n@reactDocs ExtendedColorsPalette\n\n@## Usage\n\nBlueprint provides variables for colors in Sass, Less, and JavaScript.\n[Semantic aliases for common colors](#core/variables.color-aliases) are also provided in Sass and Less.\n\n```css.scss\n@import \"~@blueprintjs/core/lib/scss/variables\";\n\n.rule {\n    color: $pt-link-color;\n    background: $black;\n}\n```\n\nHex values for these colors can be accessed in JavaScript through the `Colors` export.\nNote that aliases are not currently available in JavaScript.\n\n```tsx\nimport { Colors } from \"@blueprintjs/core\";\n\n<div style={{ color: Colors.BLUE3, background: Colors.BLACK }} />\n```\n\n@## Color schemes\n\nUse the following color scheme generators to produce color schemes for your data visualizations.\nFirst, choose the kind of scheme based on the type of your data, then customize the number of values\nusing the forms below. Finally, copy the colors array into your application and make it live!\n\nThe following schemes have been carefully crafted to be visually striking and easily understandable\nwhile remaining accessible to visually impaired and color blind users.\n\n@### Sequential color schemes\n\nSequential color schemes imply order and are best suited for representing data that\nranges from low-to-high values either on an ordinal or on a numerical scale.\n\n@reactDocs SequentialSchemePalette\n\n@### Diverging color schemes\n\nDiverging color schemes put equal emphasis on mid-range values and extremes\nat both ends of the data range.\n\n@reactDocs DivergingSchemePalette\n\n@### Qualitative color schemes\n\nQualitative color schemes use a series of unrelated colors to create a\nscheme that does not imply order, merely difference in kind.\n\n@reactDocs QualitativeSchemePalette",
      "metadata": {}
    },
    "core": {
      "reference": "core",
      "route": "core",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\docs\\index.md",
      "title": "Core",
      "contents": [
        {
          "tag": "heading",
          "value": "Core",
          "level": 1,
          "route": "core"
        },
        "<p>The <strong>@blueprintjs/core</strong> NPM package is the basis of any Blueprint app. It includes many (30+)\nReact components covering all the basic bases, from buttons to form controls to tooltips and trees.\nIt also includes CSS styles for every component and the tools to style your own components and apps\nwith Sass and Less variables and an elegant color palette.</p>\n<p>The core package depends on <strong>@blueprintjs/icons</strong> which provides 300+ UI icons in two sizes: small (&lt;= 16px) and large.\nBe sure to include the icons CSS file in your app alongside the core CSS file.</p>\n",
        {
          "tag": "page",
          "value": "accessibility"
        },
        {
          "tag": "page",
          "value": "classes"
        },
        {
          "tag": "page",
          "value": "colors"
        },
        {
          "tag": "page",
          "value": "typography"
        },
        {
          "tag": "page",
          "value": "variables"
        },
        {
          "tag": "page",
          "value": "components"
        }
      ],
      "contentsRaw": "\n@# Core\n\nThe __@blueprintjs/core__ NPM package is the basis of any Blueprint app. It includes many (30+)\nReact components covering all the basic bases, from buttons to form controls to tooltips and trees.\nIt also includes CSS styles for every component and the tools to style your own components and apps\nwith Sass and Less variables and an elegant color palette.\n\nThe core package depends on __@blueprintjs/icons__ which provides 300+ UI icons in two sizes: small (<= 16px) and large.\nBe sure to include the icons CSS file in your app alongside the core CSS file.\n\n@page accessibility\n@page classes\n@page colors\n@page typography\n@page variables\n@page components",
      "metadata": {
        "reference": "core"
      }
    },
    "typography": {
      "reference": "typography",
      "route": "core/typography",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\docs\\typography.md",
      "title": "Typography",
      "contents": [
        {
          "tag": "heading",
          "value": "Typography",
          "level": 1,
          "route": "core/typography"
        },
        {
          "tag": "heading",
          "value": "Usage",
          "level": 2,
          "route": "core/typography.usage"
        },
        "<p>Keep in mind these general web typography guidelines when building your applications.</p>\n<ul>\n<li>The default text color in all components is compliant with the recommended\n<a href=\"https://www.w3.org/TR/WCAG20/\">WCAG 2.0</a> minimum contrast ratio.</li>\n<li>If you choose to go with a custom text color, make sure the background behind it provides\nproper contrast.</li>\n<li>Try not to explicitly write pixel values for your font-size or line-height CSS rules.\nInstead, reference the classes and variables we provide in Blueprint (<code>.bp3-ui-text</code>,\n<code>$bp3-font-size-large</code>, etc.).</li>\n</ul>\n",
        {
          "tag": "heading",
          "value": "UI text",
          "level": 2,
          "route": "core/typography.ui-text"
        },
        "<p>Blueprint does not include any fonts of its own; it will use the default sans-serif operating system font.\nA handful of utility CSS classes can be combined freely to further customize a block of text.</p>\n<p>The base font size for Blueprint web applications is 14px. This should be the default type size\nfor most short strings of text which are not headings or titles. If you wish to reset some\nelement&#39;s font size and line height to the default base styles, use the <code>.bp3-ui-text</code> class.</p>\n<p>For longer blocks of running text, such as articles or documents, see <a href=\"#core/typography.running-text\">running text styles</a>.</p>\n",
        {
          "tag": "css",
          "value": "ui-text"
        },
        {
          "tag": "heading",
          "value": "Running text",
          "level": 2,
          "route": "core/typography.running-text"
        },
        "<p>Longform text, such as rendered Markdown documents, benefit from increased spacing and support for unclassed textual elements.\nApply <code>.bp3-running-text</code> to the parent element to apply the following styles to all children:</p>\n<ul>\n<li><code>&lt;h*&gt;</code>, <code>&lt;ul&gt;</code>, <code>&lt;ol&gt;</code>, <code>&lt;blockquote&gt;</code>, <code>&lt;code&gt;</code>, <code>&lt;pre&gt;</code>, <code>&lt;kbd&gt;</code> tags do not require additional CSS classes for styles. This is great for rendered Markdown documents.</li>\n<li><code>&lt;h*&gt;</code> tag margins are adjusted to provide clear separation between sections in a document.</li>\n<li><code>&lt;ul&gt;</code> and <code>&lt;ol&gt;</code> tags receive <a href=\"#core/typography.lists\"><code>.bp3-list</code></a> styles for legibility.</li>\n</ul>\n",
        {
          "tag": "css",
          "value": "running-text"
        },
        {
          "tag": "heading",
          "value": "Headings",
          "level": 2,
          "route": "core/typography.headings"
        },
        "<p>Apply the <code>.bp3-heading</code> class to one of the six <code>&lt;h*&gt;</code> tags (or nest them inside a <code>.bp3-running-text</code> container)\nto adjust font size and line height.</p>\n",
        {
          "tag": "css",
          "value": "headings"
        },
        {
          "tag": "heading",
          "value": "Links",
          "level": 2,
          "route": "core/typography.links"
        },
        "<p>Simply use an <code>&lt;a href=&quot;&quot;&gt;</code> tag as you normally would. No class is necessary for Blueprint styles.\nLinks are underlined only when hovered.</p>\n<p>Putting an icon inside a link will cause it to inherit the link&#39;s text color.</p>\n",
        {
          "tag": "heading",
          "value": "Preformatted text",
          "level": 2,
          "route": "core/typography.preformatted-text"
        },
        "<p>Use <code>.bp3-code</code> for inline code elements (typically with the <code>&lt;code&gt;</code> tag).\nUse <code>.bp3-code-block</code> for mulitline blocks of code (typically on a <code>&lt;pre&gt;</code> tag).\nNote that <code>&lt;pre&gt;</code> blocks will retain <em>all</em> whitespace so you&#39;ll have to format the content accordingly.</p>\n<p>When nested inside a <code>.bp3-running-text</code> container, use the <code>&lt;pre&gt;</code> or <code>&lt;code&gt;</code> tags directly without CSS classes.</p>\n",
        {
          "tag": "css",
          "value": "preformatted"
        },
        {
          "tag": "heading",
          "value": "Block quotes",
          "level": 2,
          "route": "core/typography.block-quotes"
        },
        "<p>Block quotes receive a left border and padding to distinguish them from body text.</p>\n<p>Use the <code>.bp3-blockquote</code> class or nest a <code>&lt;blockquote&gt;</code> element inside a <code>.bp3-running-text</code> container.</p>\n",
        {
          "tag": "css",
          "value": "blockquote"
        },
        {
          "tag": "heading",
          "value": "Lists",
          "level": 2,
          "route": "core/typography.lists"
        },
        "<p>Blueprint provides a small amount of global styling and a few modifier classes for list elements.</p>\n<p><code>&lt;ul&gt;</code> and <code>&lt;ol&gt;</code> elements in blocks with the <code>.bp3-running-text</code> modifier class will\nautomatically assume the <code>.bp3-list</code> styles to promote readability.</p>\n<p>Use <code>.bp3-list-unstyled</code> to remove list item decorations and margins and padding.</p>\n<p>Note that these classes must be applied to each nested <code>&lt;ul&gt;</code> or <code>&lt;ol&gt;</code> element in a tree.</p>\n",
        {
          "tag": "css",
          "value": "lists"
        },
        {
          "tag": "heading",
          "value": "Internationalization",
          "level": 2,
          "route": "core/typography.internationalization"
        },
        "<p>I18n in Blueprint is straightforward. React components expose props for customizing any strings;\nuse the library of your choice for managing internationalized strings.</p>\n",
        {
          "tag": "heading",
          "value": "Right-to-left text",
          "level": 3,
          "route": "core/typography.right-to-left-text"
        },
        "<p>Use the utility class <code>.bp3-rtl</code>.</p>\n",
        {
          "tag": "css",
          "value": "rtl"
        },
        {
          "tag": "heading",
          "value": "Dark theme",
          "level": 2,
          "route": "core/typography.dark-theme"
        },
        "<p>Blueprint provides two UI color themes: light and dark. The light theme is active by default. The\ndark theme can be applied by adding the class <code>bp3-dark</code> to a container element to theme all nested\nelements.</p>\n<p>Once applied, the dark theme will cascade to nested <code>.bp3-*</code> elements inside a <code>.bp3-dark</code> container.\nThere is no way to nest light-themed elements inside a dark container.</p>\n<p>Most elements only support the dark theme when nested inside a <code>.bp3-dark</code> container because it does\nnot make sense to mark individual elements as dark. The dark container is therefore responsible for\nsetting a dark background color.</p>\n<p>The following elements and components support the <code>.bp3-dark</code> class directly (i.e, <code>.bp3-card.bp3-dark</code>)\nand can be used as a container for nested dark children:</p>\n<ul>\n<li><code>Card</code></li>\n<li>Overlays: <code>Dialog</code>, <code>Popover</code>, <code>Tooltip</code>, <code>Toast</code></li>\n<li><code>Popover</code> and <code>Tooltip</code> will automatically detect when their trigger is inside a <code>.bp3-dark</code>\ncontainer and add the same class to themselves.</li>\n</ul>\n<p>Rather than illustrating dark components inline, this documentation site provides a site-wide switch\nin the sidebar to enable the dark theme. Try it out as you read the docs.</p>\n"
      ],
      "contentsRaw": "@# Typography\n\n@## Usage\n\nKeep in mind these general web typography guidelines when building your applications.\n\n- The default text color in all components is compliant with the recommended\n[WCAG 2.0](https://www.w3.org/TR/WCAG20/) minimum contrast ratio.\n- If you choose to go with a custom text color, make sure the background behind it provides\nproper contrast.\n- Try not to explicitly write pixel values for your font-size or line-height CSS rules.\nInstead, reference the classes and variables we provide in Blueprint (`.bp3-ui-text`,\n`$bp3-font-size-large`, etc.).\n\n@## UI text\n\nBlueprint does not include any fonts of its own; it will use the default sans-serif operating system font.\nA handful of utility CSS classes can be combined freely to further customize a block of text.\n\nThe base font size for Blueprint web applications is 14px. This should be the default type size\nfor most short strings of text which are not headings or titles. If you wish to reset some\nelement's font size and line height to the default base styles, use the `.bp3-ui-text` class.\n\nFor longer blocks of running text, such as articles or documents, see [running text styles](#core/typography.running-text).\n\n@css ui-text\n\n@## Running text\n\nLongform text, such as rendered Markdown documents, benefit from increased spacing and support for unclassed textual elements.\nApply `.bp3-running-text` to the parent element to apply the following styles to all children:\n\n- `<h*>`, `<ul>`, `<ol>`, `<blockquote>`, `<code>`, `<pre>`, `<kbd>` tags do not require additional CSS classes for styles. This is great for rendered Markdown documents.\n- `<h*>` tag margins are adjusted to provide clear separation between sections in a document.\n- `<ul>` and `<ol>` tags receive [`.bp3-list`](#core/typography.lists) styles for legibility.\n\n@css running-text\n\n@## Headings\n\nApply the `.bp3-heading` class to one of the six `<h*>` tags (or nest them inside a `.bp3-running-text` container)\nto adjust font size and line height.\n\n@css headings\n\n@## Links\n\nSimply use an `<a href=\"\">` tag as you normally would. No class is necessary for Blueprint styles.\nLinks are underlined only when hovered.\n\nPutting an icon inside a link will cause it to inherit the link's text color.\n\n@## Preformatted text\n\nUse `.bp3-code` for inline code elements (typically with the `<code>` tag).\nUse `.bp3-code-block` for mulitline blocks of code (typically on a `<pre>` tag).\nNote that `<pre>` blocks will retain _all_ whitespace so you'll have to format the content accordingly.\n\nWhen nested inside a `.bp3-running-text` container, use the `<pre>` or `<code>` tags directly without CSS classes.\n\n@css preformatted\n\n@## Block quotes\n\nBlock quotes receive a left border and padding to distinguish them from body text.\n\nUse the `.bp3-blockquote` class or nest a `<blockquote>` element inside a `.bp3-running-text` container.\n\n@css blockquote\n\n@## Lists\n\nBlueprint provides a small amount of global styling and a few modifier classes for list elements.\n\n`<ul>` and `<ol>` elements in blocks with the `.bp3-running-text` modifier class will\nautomatically assume the `.bp3-list` styles to promote readability.\n\nUse `.bp3-list-unstyled` to remove list item decorations and margins and padding.\n\nNote that these classes must be applied to each nested `<ul>` or `<ol>` element in a tree.\n\n@css lists\n\n@## Internationalization\n\nI18n in Blueprint is straightforward. React components expose props for customizing any strings;\nuse the library of your choice for managing internationalized strings.\n\n@### Right-to-left text\n\nUse the utility class `.bp3-rtl`.\n\n@css rtl\n\n@## Dark theme\n\nBlueprint provides two UI color themes: light and dark. The light theme is active by default. The\ndark theme can be applied by adding the class `bp3-dark` to a container element to theme all nested\nelements.\n\nOnce applied, the dark theme will cascade to nested `.bp3-*` elements inside a `.bp3-dark` container.\nThere is no way to nest light-themed elements inside a dark container.\n\nMost elements only support the dark theme when nested inside a `.bp3-dark` container because it does\nnot make sense to mark individual elements as dark. The dark container is therefore responsible for\nsetting a dark background color.\n\nThe following elements and components support the `.bp3-dark` class directly (i.e, `.bp3-card.bp3-dark`)\nand can be used as a container for nested dark children:\n\n- `Card`\n- Overlays: `Dialog`, `Popover`, `Tooltip`, `Toast`\n- `Popover` and `Tooltip` will automatically detect when their trigger is inside a `.bp3-dark`\ncontainer and add the same class to themselves.\n\nRather than illustrating dark components inline, this documentation site provides a site-wide switch\nin the sidebar to enable the dark theme. Try it out as you read the docs.",
      "metadata": {}
    },
    "variables": {
      "reference": "variables",
      "route": "core/variables",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\core\\src\\docs\\variables.md",
      "title": "Variables",
      "contents": [
        {
          "tag": "heading",
          "value": "Variables",
          "level": 1,
          "route": "core/variables"
        },
        "<p>Available for use with Sass and Less.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source css scss\"><span class=\"comment line scss\"><span>//</span><span>&nbsp;Sass</span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"meta at-rule import scss\"><span class=\"keyword control at-rule import scss\"><span class=\"punctuation definition keyword scss\"><span>@</span></span><span>import</span></span><span>&nbsp;</span><span class=\"string quoted double scss\"><span class=\"punctuation definition string begin scss\"><span>&quot;</span></span><span>path/to/@blueprintjs/core/lib/scss/variables</span><span class=\"punctuation definition string end scss\"><span>&quot;</span></span></span></span><span>;</span></span></div></pre><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source css less\"><span class=\"comment line double-slash less\"><span class=\"punctuation definition comment less\"><span>//</span></span><span>&nbsp;Less</span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source css less\"><span class=\"meta at-rule import css\"><span class=\"keyword control at-rule import less\"><span class=\"punctuation definition keyword less\"><span>@</span></span><span>import</span></span><span>&nbsp;</span><span class=\"string quoted double css\"><span class=\"punctuation definition string begin css\"><span>&quot;</span></span><span>path/to/@blueprintjs/core/lib/less/variables</span><span class=\"punctuation definition string end css\"><span>&quot;</span></span></span><span class=\"punctuation terminator rule css\"><span>;</span></span></span></span></div></pre><p>The Sass <code>$</code> convention is used in this documentation for consistency with the original source code.\nEvery variable mentioned below is also available in <code>variables.less</code> with an <code>@</code> prefix instead of <code>$</code>.</p>\n",
        {
          "tag": "heading",
          "value": "Font variables",
          "level": 2,
          "route": "core/variables.font-variables"
        },
        "<p>Typically, correct typography styles should be achieved by using the proper HTML tag (<code>&lt;p&gt;</code> for\ntext, <code>&lt;h*&gt;</code> for headings, <code>&lt;code&gt;</code> for code, etc.). The following variables are provided for the\nrare cases where custom styling is necessary and should be used sparingly:</p>\n<ul>\n<li><code>$pt-font-family</code></li>\n<li><code>$pt-font-family-monospace</code></li>\n<li><code>$pt-font-size</code></li>\n<li><code>$pt-font-size-small</code></li>\n<li><code>$pt-font-size-large</code></li>\n<li><code>$pt-line-height</code></li>\n</ul>\n",
        {
          "tag": "heading",
          "value": "Icon variables",
          "level": 2,
          "route": "core/variables.icon-variables"
        },
        "<p>Most icons should be displayed using the <code>span.bp3-icon-*</code> classes or via modifier classes on\ncomponents like <code>.bp3-button</code>. In rare cases, you may need direct access to the content\nstring that generates each icon in the icon font. Blueprint provides these variables with\nstraightforward names (see the <a href=\"#icons\">Icons section</a> for the full list of identifiers):</p>\n<ul>\n<li><code>$pt-icon-style</code></li>\n<li><code>$pt-icon-align-left</code></li>\n<li><code>$pt-icon-align-center</code></li>\n<li>...</li>\n</ul>\n<p>Variables are also provided for the two icon font families and their pixel sizes:</p>\n<ul>\n<li><code>$icons16-family</code></li>\n<li><code>$icons20-family</code></li>\n<li><code>$pt-icon-size-standard</code></li>\n<li><code>$pt-icon-size-large</code></li>\n</ul>\n",
        {
          "tag": "heading",
          "value": "Grids & dimensions",
          "level": 2,
          "route": "core/variables.grids---dimensions"
        },
        "<p>Sizes of common components. Most sizing variables are based on <code>$pt-grid-size</code>, which has\na value of <code>10px</code>. Custom components should adhere to the relevant <code>height</code> variable.</p>\n<ul>\n<li><code>$pt-grid-size</code></li>\n<li><code>$pt-border-radius</code></li>\n<li><code>$pt-button-height</code></li>\n<li><code>$pt-button-height-large</code></li>\n<li><code>$pt-input-height</code></li>\n<li><code>$pt-input-height-large</code></li>\n<li><code>$pt-navbar-height</code></li>\n</ul>\n",
        {
          "tag": "heading",
          "value": "Grid system",
          "level": 3,
          "route": "core/variables.grid-system"
        },
        "<p>Blueprint doesn&#39;t provide a grid system. In general, you should try to use the <code>$pt-grid-size</code>\nvariable to generate layout &amp; sizing style rules in your CSS codebase.</p>\n<p>In lieu of a full grid system, you should try to use the <strong>CSS flexible box layout model</strong> (a.k.a.\n&quot;flexbox&quot;). It&#39;s quite powerful on its own and allows you to build robust, responsive layouts\nwithout writing much CSS. Here are some resources for learning flexbox:</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes\">MDN guide</a></li>\n<li><a href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\">CSS Tricks guide</a></li>\n</ul>\n",
        {
          "tag": "heading",
          "value": "Layering",
          "level": 2,
          "route": "core/variables.layering"
        },
        "<p>Blueprint provides variables for three z-index layers. This should be enough for most use cases,\nespecially if you make correct use of <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\">stacking context</a>. <a href=\"#core/components/overlay\">Overlay</a>\ncomponents such as dialogs and popovers use these z-index values to configure their stacking\ncontexts.</p>\n<ul>\n<li><code>$pt-z-index-base</code></li>\n<li><code>$pt-z-index-content</code></li>\n<li><code>$pt-z-index-overlay</code></li>\n</ul>\n",
        {
          "tag": "heading",
          "value": "Light theme styles",
          "level": 2,
          "route": "core/variables.light-theme-styles"
        },
        "<p>Use these when you need to build custom UI components that look similar to Blueprint&#39;s\nlight theme components.</p>\n<ul>\n<li><code>$pt-dialog-box-shadow</code></li>\n<li><code>$pt-input-box-shadow</code></li>\n<li><code>$pt-popover-box-shadow</code></li>\n<li><code>$pt-tooltip-box-shadow</code></li>\n</ul>\n",
        {
          "tag": "heading",
          "value": "Dark theme styles",
          "level": 2,
          "route": "core/variables.dark-theme-styles"
        },
        "<p>Use these when you need to build custom UI components that look similar to Blueprint&#39;s\ndark theme components.</p>\n<ul>\n<li><code>$pt-dark-dialog-box-shadow</code></li>\n<li><code>$pt-dark-input-box-shadow</code></li>\n<li><code>$pt-dark-popover-box-shadow</code></li>\n<li><code>$pt-dark-tooltip-box-shadow</code></li>\n</ul>\n",
        {
          "tag": "heading",
          "value": "Elevation drop shadows",
          "level": 2,
          "route": "core/variables.elevation-drop-shadows"
        },
        "<p>Use these when you need to apply a drop shadow to custom UI components to simulate height.\nThese elevations correspond to those of the <a href=\"#core/components/card.elevation\">Card</a> component.</p>\n<ul>\n<li><code>$pt-elevation-shadow-0</code></li>\n<li><code>$pt-elevation-shadow-1</code></li>\n<li><code>$pt-elevation-shadow-2</code></li>\n<li><code>$pt-elevation-shadow-3</code></li>\n<li><code>$pt-elevation-shadow-4</code></li>\n</ul>\n<p>Use these for drop shadows in dark theme.</p>\n<ul>\n<li><code>$pt-dark-elevation-shadow-0</code></li>\n<li><code>$pt-dark-elevation-shadow-1</code></li>\n<li><code>$pt-dark-elevation-shadow-2</code></li>\n<li><code>$pt-dark-elevation-shadow-3</code></li>\n<li><code>$pt-dark-elevation-shadow-4</code></li>\n</ul>\n",
        {
          "tag": "heading",
          "value": "Color aliases",
          "level": 2,
          "route": "core/variables.color-aliases"
        },
        "<p>These variables are semantic aliases of our <a href=\"#core/colors\">colors</a>.\nThey are used throughout Blueprint itself to ensure consistent color usage across components\nand are available in the Sass or Less variables files.</p>\n<table class=\"bp3-html-table docs-color-aliases-table\">\n    <thead>\n        <tr>\n            <th></th>\n            <th>Variable</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-intent-primary\"></div>\n            </td>\n            <td><code>$pt-intent-primary</code></td>\n            <td>Primary intent color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-intent-success\"></div>\n            </td>\n            <td><code>$pt-intent-success</code></td>\n            <td>Success intent color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-intent-warning\"></div>\n            </td>\n            <td><code>$pt-intent-warning</code></td>\n            <td>Warning intent color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-intent-danger\"></div>\n            </td>\n            <td><code>$pt-intent-danger</code></td>\n            <td>Danger intent color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-app-background-color\"></div>\n            </td>\n            <td><code>$pt-app-background-color</code></td>\n            <td>Application background color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-app-background-color\"></div>\n            </td>\n            <td><code>$pt-dark-app-background-color</code></td>\n            <td>Dark theme application background color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-text-color\"></div>\n            </td>\n            <td><code>$pt-text-color</code></td>\n            <td>Default text color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-text-color-muted\"></div>\n            </td>\n            <td><code>$pt-text-color-muted</code></td>\n            <td>Muted text color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-text-color-disabled\"></div>\n            </td>\n            <td><code>$pt-text-color-disabled</code></td>\n            <td>Disabled text color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-heading-color\"></div>\n            </td>\n            <td><code>$pt-heading-color</code></td>\n            <td>Text color for headers</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-link-color\"></div>\n            </td>\n            <td><code>$pt-link-color</code></td>\n            <td>Text color for links</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-text-color\"></div>\n            </td>\n            <td><code>$pt-dark-text-color</code></td>\n            <td>Dark theme default text color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-text-color-muted\"></div>\n            </td>\n            <td><code>$pt-dark-text-color-muted</code></td>\n            <td>Dark theme muted text color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div>\n            </td>\n            <td><code>$pt-dark-text-color-disabled</code></td>\n            <td>Dark theme disabled text color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-heading-color\"></div>\n            </td>\n            <td><code>$pt-dark-heading-color</code></td>\n            <td>Dark theme text color for headers</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-link-color\"></div>\n            </td>\n            <td><code>$pt-dark-link-color</code></td>\n            <td>Dark theme text color for links</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-text-selection-color\"></div>\n            </td>\n            <td><code>$pt-text-selection-color</code></td>\n            <td>Text selection color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-icon-color\"></div>\n            </td>\n            <td><code>$pt-icon-color</code></td>\n            <td>Default icon color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-icon-color-hover\"></div>\n            </td>\n            <td><code>$pt-icon-color-hover</code></td>\n            <td>Hovered icon color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-icon-color-disabled\"></div>\n            </td>\n            <td><code>$pt-icon-color-disabled</code></td>\n            <td>Disabled icon color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-icon-color-selected\"></div>\n            </td>\n            <td><code>$pt-icon-color-selected</code></td>\n            <td>Selected icon color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-icon-color\"></div>\n            </td>\n            <td><code>$pt-dark-icon-color</code></td>\n            <td>Dark theme default icon color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div>\n            </td>\n            <td><code>$pt-dark-icon-color-hover</code></td>\n            <td>Dark theme hovered icon color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div>\n            </td>\n            <td><code>$pt-dark-icon-color-disabled</code></td>\n            <td>Dark theme disabled icon color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div>\n            </td>\n            <td><code>$pt-dark-icon-color-selected</code></td>\n            <td>Dark theme selected icon color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-divider-black\"></div>\n            </td>\n            <td><code>$pt-divider-black</code></td>\n            <td>Black divider color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-divider-black\"></div>\n            </td>\n            <td><code>$pt-dark-divider-black</code></td>\n            <td>Dark theme black divider color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-divider-white\"></div>\n            </td>\n            <td><code>$pt-dark-divider-white</code></td>\n            <td>Dark theme white divider color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-code-text-color\"></div>\n            </td>\n            <td><code>$pt-code-text-color</code></td>\n            <td>Code text color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-code-background-color\"></div>\n            </td>\n            <td><code>$pt-code-background-color</code></td>\n            <td>Code background color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-code-text-color\"></div>\n            </td>\n            <td><code>$pt-dark-code-text-color</code></td>\n            <td>Dark theme code text color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-code-background-color\"></div>\n            </td>\n            <td><code>$pt-dark-code-background-color</code></td>\n            <td>Dark theme code background color</td>\n        </tr>\n    </tbody>\n</table>"
      ],
      "contentsRaw": "@# Variables\n\nAvailable for use with Sass and Less.\n\n```css.scss\n// Sass\n@import \"path/to/@blueprintjs/core/lib/scss/variables\";\n```\n\n```css.less\n// Less\n@import \"path/to/@blueprintjs/core/lib/less/variables\";\n```\n\nThe Sass `$` convention is used in this documentation for consistency with the original source code.\nEvery variable mentioned below is also available in `variables.less` with an `@` prefix instead of `$`.\n\n@## Font variables\n\nTypically, correct typography styles should be achieved by using the proper HTML tag (`<p>` for\ntext, `<h*>` for headings, `<code>` for code, etc.). The following variables are provided for the\nrare cases where custom styling is necessary and should be used sparingly:\n\n- `$pt-font-family`\n- `$pt-font-family-monospace`\n- `$pt-font-size`\n- `$pt-font-size-small`\n- `$pt-font-size-large`\n- `$pt-line-height`\n\n@## Icon variables\n\nMost icons should be displayed using the `span.bp3-icon-*` classes or via modifier classes on\ncomponents like `.bp3-button`. In rare cases, you may need direct access to the content\nstring that generates each icon in the icon font. Blueprint provides these variables with\nstraightforward names (see the [Icons section](#icons) for the full list of identifiers):\n\n- `$pt-icon-style`\n- `$pt-icon-align-left`\n- `$pt-icon-align-center`\n- ...\n\nVariables are also provided for the two icon font families and their pixel sizes:\n\n- `$icons16-family`\n- `$icons20-family`\n- `$pt-icon-size-standard`\n- `$pt-icon-size-large`\n\n@## Grids & dimensions\n\nSizes of common components. Most sizing variables are based on `$pt-grid-size`, which has\na value of `10px`. Custom components should adhere to the relevant `height` variable.\n\n- `$pt-grid-size`\n- `$pt-border-radius`\n- `$pt-button-height`\n- `$pt-button-height-large`\n- `$pt-input-height`\n- `$pt-input-height-large`\n- `$pt-navbar-height`\n\n@### Grid system\n\nBlueprint doesn't provide a grid system. In general, you should try to use the `$pt-grid-size`\nvariable to generate layout & sizing style rules in your CSS codebase.\n\nIn lieu of a full grid system, you should try to use the __CSS flexible box layout model__ (a.k.a.\n\"flexbox\"). It's quite powerful on its own and allows you to build robust, responsive layouts\nwithout writing much CSS. Here are some resources for learning flexbox:\n- [MDN guide](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes)\n- [CSS Tricks guide](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\n\n@## Layering\n\nBlueprint provides variables for three z-index layers. This should be enough for most use cases,\nespecially if you make correct use of [stacking context][MDN]. [Overlay](#core/components/overlay)\ncomponents such as dialogs and popovers use these z-index values to configure their stacking\ncontexts.\n\n- `$pt-z-index-base`\n- `$pt-z-index-content`\n- `$pt-z-index-overlay`\n\n[MDN]: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n\n@## Light theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\nlight theme components.\n\n- `$pt-dialog-box-shadow`\n- `$pt-input-box-shadow`\n- `$pt-popover-box-shadow`\n- `$pt-tooltip-box-shadow`\n\n@## Dark theme styles\n\nUse these when you need to build custom UI components that look similar to Blueprint's\ndark theme components.\n\n- `$pt-dark-dialog-box-shadow`\n- `$pt-dark-input-box-shadow`\n- `$pt-dark-popover-box-shadow`\n- `$pt-dark-tooltip-box-shadow`\n\n@## Elevation drop shadows\n\nUse these when you need to apply a drop shadow to custom UI components to simulate height.\nThese elevations correspond to those of the [Card](#core/components/card.elevation) component.\n\n- `$pt-elevation-shadow-0`\n- `$pt-elevation-shadow-1`\n- `$pt-elevation-shadow-2`\n- `$pt-elevation-shadow-3`\n- `$pt-elevation-shadow-4`\n\nUse these for drop shadows in dark theme.\n\n- `$pt-dark-elevation-shadow-0`\n- `$pt-dark-elevation-shadow-1`\n- `$pt-dark-elevation-shadow-2`\n- `$pt-dark-elevation-shadow-3`\n- `$pt-dark-elevation-shadow-4`\n\n@## Color aliases\n\nThese variables are semantic aliases of our [colors](#core/colors).\nThey are used throughout Blueprint itself to ensure consistent color usage across components\nand are available in the Sass or Less variables files.\n\n<table class=\"bp3-html-table docs-color-aliases-table\">\n    <thead>\n        <tr>\n            <th></th>\n            <th>Variable</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-intent-primary\"></div>\n            </td>\n            <td><code>$pt-intent-primary</code></td>\n            <td>Primary intent color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-intent-success\"></div>\n            </td>\n            <td><code>$pt-intent-success</code></td>\n            <td>Success intent color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-intent-warning\"></div>\n            </td>\n            <td><code>$pt-intent-warning</code></td>\n            <td>Warning intent color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-intent-danger\"></div>\n            </td>\n            <td><code>$pt-intent-danger</code></td>\n            <td>Danger intent color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-app-background-color\"></div>\n            </td>\n            <td><code>$pt-app-background-color</code></td>\n            <td>Application background color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-app-background-color\"></div>\n            </td>\n            <td><code>$pt-dark-app-background-color</code></td>\n            <td>Dark theme application background color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-text-color\"></div>\n            </td>\n            <td><code>$pt-text-color</code></td>\n            <td>Default text color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-text-color-muted\"></div>\n            </td>\n            <td><code>$pt-text-color-muted</code></td>\n            <td>Muted text color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-text-color-disabled\"></div>\n            </td>\n            <td><code>$pt-text-color-disabled</code></td>\n            <td>Disabled text color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-heading-color\"></div>\n            </td>\n            <td><code>$pt-heading-color</code></td>\n            <td>Text color for headers</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-link-color\"></div>\n            </td>\n            <td><code>$pt-link-color</code></td>\n            <td>Text color for links</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-text-color\"></div>\n            </td>\n            <td><code>$pt-dark-text-color</code></td>\n            <td>Dark theme default text color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-text-color-muted\"></div>\n            </td>\n            <td><code>$pt-dark-text-color-muted</code></td>\n            <td>Dark theme muted text color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-text-color-disabled\"></div>\n            </td>\n            <td><code>$pt-dark-text-color-disabled</code></td>\n            <td>Dark theme disabled text color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-heading-color\"></div>\n            </td>\n            <td><code>$pt-dark-heading-color</code></td>\n            <td>Dark theme text color for headers</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-link-color\"></div>\n            </td>\n            <td><code>$pt-dark-link-color</code></td>\n            <td>Dark theme text color for links</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-text-selection-color\"></div>\n            </td>\n            <td><code>$pt-text-selection-color</code></td>\n            <td>Text selection color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-icon-color\"></div>\n            </td>\n            <td><code>$pt-icon-color</code></td>\n            <td>Default icon color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-icon-color-hover\"></div>\n            </td>\n            <td><code>$pt-icon-color-hover</code></td>\n            <td>Hovered icon color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-icon-color-disabled\"></div>\n            </td>\n            <td><code>$pt-icon-color-disabled</code></td>\n            <td>Disabled icon color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-icon-color-selected\"></div>\n            </td>\n            <td><code>$pt-icon-color-selected</code></td>\n            <td>Selected icon color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-icon-color\"></div>\n            </td>\n            <td><code>$pt-dark-icon-color</code></td>\n            <td>Dark theme default icon color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-icon-color-hover\"></div>\n            </td>\n            <td><code>$pt-dark-icon-color-hover</code></td>\n            <td>Dark theme hovered icon color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-icon-color-disabled\"></div>\n            </td>\n            <td><code>$pt-dark-icon-color-disabled</code></td>\n            <td>Dark theme disabled icon color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-icon-color-selected\"></div>\n            </td>\n            <td><code>$pt-dark-icon-color-selected</code></td>\n            <td>Dark theme selected icon color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-divider-black\"></div>\n            </td>\n            <td><code>$pt-divider-black</code></td>\n            <td>Black divider color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-divider-black\"></div>\n            </td>\n            <td><code>$pt-dark-divider-black</code></td>\n            <td>Dark theme black divider color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-divider-white\"></div>\n            </td>\n            <td><code>$pt-dark-divider-white</code></td>\n            <td>Dark theme white divider color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-code-text-color\"></div>\n            </td>\n            <td><code>$pt-code-text-color</code></td>\n            <td>Code text color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-code-background-color\"></div>\n            </td>\n            <td><code>$pt-code-background-color</code></td>\n            <td>Code background color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-code-text-color\"></div>\n            </td>\n            <td><code>$pt-dark-code-text-color</code></td>\n            <td>Dark theme code text color</td>\n        </tr>\n        <tr>\n            <td>\n                <div class=\"docs-color-bubble alias-dark-code-background-color\"></div>\n            </td>\n            <td><code>$pt-dark-code-background-color</code></td>\n            <td>Dark theme code background color</td>\n        </tr>\n    </tbody>\n</table>",
      "metadata": {}
    },
    "icons": {
      "reference": "icons",
      "route": "icons",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\icons\\src\\index.md",
      "title": "Icons",
      "contents": [
        {
          "tag": "heading",
          "value": "Icons",
          "level": 1,
          "route": ""
        },
        "<p>Blueprint provides over 300 vector UI icons in two sizes (16px and 20px) and two formats (SVG and fonts).\nIt&#39;s easy to change their color or apply effects like text shadows via standard SVG or CSS properties.</p>\n<p>Many Blueprint components support an <code>icon</code> prop which accepts an icon name (such as <code>&quot;history&quot;</code>) or a JSX element to use as the icon.</p>\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    See the <a href=\"#core/components/icon\"><strong><code>Icon</code> component documentation</strong></a> for full API details.\n</div>\n\n",
        {
          "tag": "reactExample",
          "value": "IconExample"
        },
        {
          "tag": "reactDocs",
          "value": "Icons"
        }
      ],
      "contentsRaw": "\n@# Icons\n\nBlueprint provides over 300 vector UI icons in two sizes (16px and 20px) and two formats (SVG and fonts).\nIt's easy to change their color or apply effects like text shadows via standard SVG or CSS properties.\n\nMany Blueprint components support an `icon` prop which accepts an icon name (such as `\"history\"`) or a JSX element to use as the icon.\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    See the [**`Icon` component documentation**](#core/components/icon) for full API details.\n</div>\n\n@reactExample IconExample\n\n@reactDocs Icons",
      "metadata": {
        "reference": "icons"
      }
    },
    "omnibar": {
      "reference": "omnibar",
      "route": "omnibar",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\select\\src\\components\\omnibar\\omnibar.md",
      "title": "Omnibar",
      "contents": [
        {
          "tag": "heading",
          "value": "Omnibar",
          "level": 1,
          "route": ""
        },
        "<p><code>Omnibar&lt;T&gt;</code> is a macOS Spotlight-style typeahead component composing <code>Overlay</code> and <code>QueryList&lt;T&gt;</code>. Usage is similar to <code>Select&lt;T&gt;</code>: provide your items and a predicate to customize the filtering algorithm. The component is fully controlled via the <code>isOpen</code> prop, which means you can decide exactly how to trigger the component. The following example responds to a button and a hotkey.</p>\n",
        {
          "tag": "reactExample",
          "value": "OmnibarExample"
        },
        {
          "tag": "interface",
          "value": "IOmnibarProps"
        }
      ],
      "contentsRaw": "@# Omnibar\n\n`Omnibar<T>` is a macOS Spotlight-style typeahead component composing `Overlay` and `QueryList<T>`. Usage is similar to `Select<T>`: provide your items and a predicate to customize the filtering algorithm. The component is fully controlled via the `isOpen` prop, which means you can decide exactly how to trigger the component. The following example responds to a button and a hotkey.\n\n@reactExample OmnibarExample\n\n@interface IOmnibarProps",
      "metadata": {}
    },
    "query-list": {
      "reference": "query-list",
      "route": "query-list",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\select\\src\\components\\query-list\\query-list.md",
      "title": "QueryList",
      "contents": [
        {
          "tag": "heading",
          "value": "QueryList",
          "level": 1,
          "route": ""
        },
        "<p><code>QueryList&lt;T&gt;</code> is a higher-order component that provides interactions between a query string and a list of items. Specifically, it implements the two predicate props describe above and provides keyboard selection. It does not render anything on its own, instead deferring to a <code>renderer</code> prop to perform the actual composition of components.</p>\n<p><code>QueryList&lt;T&gt;</code> is a generic component where <code>&lt;T&gt;</code> represents the type of one item in the array of <code>items</code>. The static method <code>QueryList.ofType&lt;T&gt;()</code> is available to simplify the TypeScript usage.</p>\n<p>If the <code>Select</code> interactions are not sufficient for your use case, you can use <code>QueryList</code> directly to render your own components while leveraging basic interactions for keyboard selection and filtering. The <code>Select</code> source code is a great place to start when implementing a custom <code>QueryList</code> <code>renderer</code>.</p>\n",
        {
          "tag": "interface",
          "value": "IQueryListProps"
        },
        {
          "tag": "heading",
          "value": "Renderer API",
          "level": 2,
          "route": ""
        },
        "<p>An object with the following properties will be passed to an <code>QueryList</code> <code>renderer</code>. Required properties will always be defined;  optional ones will only be defined if they are passed as props to the <code>QueryList</code>.</p>\n<p>This interface is generic, accepting a type parameter <code>&lt;T&gt;</code> for an item in the list.</p>\n",
        {
          "tag": "interface",
          "value": "IQueryListRendererProps"
        }
      ],
      "contentsRaw": "@# QueryList\n\n`QueryList<T>` is a higher-order component that provides interactions between a query string and a list of items. Specifically, it implements the two predicate props describe above and provides keyboard selection. It does not render anything on its own, instead deferring to a `renderer` prop to perform the actual composition of components.\n\n`QueryList<T>` is a generic component where `<T>` represents the type of one item in the array of `items`. The static method `QueryList.ofType<T>()` is available to simplify the TypeScript usage.\n\nIf the `Select` interactions are not sufficient for your use case, you can use `QueryList` directly to render your own components while leveraging basic interactions for keyboard selection and filtering. The `Select` source code is a great place to start when implementing a custom `QueryList` `renderer`.\n\n@interface IQueryListProps\n\n@## Renderer API\n\nAn object with the following properties will be passed to an `QueryList` `renderer`. Required properties will always be defined;  optional ones will only be defined if they are passed as props to the `QueryList`.\n\nThis interface is generic, accepting a type parameter `<T>` for an item in the list.\n\n@interface IQueryListRendererProps",
      "metadata": {}
    },
    "multi-select": {
      "reference": "multi-select",
      "route": "multi-select",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\select\\src\\components\\select\\multi-select.md",
      "title": "MultiSelect",
      "contents": [
        {
          "tag": "heading",
          "value": "MultiSelect",
          "level": 1,
          "route": ""
        },
        "<p>Use <code>MultiSelect&lt;T&gt;</code> for choosing multiple items in a list. The component renders a <a href=\"#core/components/tag-input\"><code>TagInput</code></a> wrapped in a <code>Popover</code>. Similarly to <a href=\"#select/select-component\"><code>Select</code></a>, you can pass in a predicate to customize the filtering algorithm. Selection of a <code>MultiSelect&lt;T&gt;</code> is controlled: listen to changes with <code>onItemSelect</code>.</p>\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Generic components and custom filtering</h4>\n    For more information on controlled usage, generic components, creating new items, and custom filtering, visit the documentation for <a href=\"#select/select-component\"><code>Select&lt;T&gt;</code></a>.\n</div>\n\n",
        {
          "tag": "reactExample",
          "value": "MultiSelectExample"
        },
        {
          "tag": "interface",
          "value": "IMultiSelectProps"
        },
        {
          "tag": "interface",
          "value": "ISelectItemRendererProps"
        }
      ],
      "contentsRaw": "@# MultiSelect\n\nUse `MultiSelect<T>` for choosing multiple items in a list. The component renders a [`TagInput`](#core/components/tag-input) wrapped in a `Popover`. Similarly to [`Select`](#select/select-component), you can pass in a predicate to customize the filtering algorithm. Selection of a `MultiSelect<T>` is controlled: listen to changes with `onItemSelect`.\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Generic components and custom filtering</h4>\n    For more information on controlled usage, generic components, creating new items, and custom filtering, visit the documentation for [`Select<T>`](#select/select-component).\n</div>\n\n@reactExample MultiSelectExample\n\n@interface IMultiSelectProps\n\n@interface ISelectItemRendererProps",
      "metadata": {}
    },
    "select-component": {
      "reference": "select-component",
      "route": "select-component",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\select\\src\\components\\select\\select-component.md",
      "title": "Select",
      "contents": [
        {
          "tag": "heading",
          "value": "Select",
          "level": 1,
          "route": ""
        },
        "<p>Use <code>Select&lt;T&gt;</code> for choosing one item from a list. The component&#39;s children will be wrapped in a <a href=\"#core/components/popover\"><code>Popover</code></a> that contains the list and an optional <code>InputGroup</code> to filter it. Provide a predicate to customize the filtering algorithm. The value of a <code>Select&lt;T&gt;</code> (the currently chosen item) is uncontrolled: listen to changes with <code>onItemSelect</code>.</p>\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Disabling a Select</h4>\n    <p>Disabling the component requires setting the <code>disabled</code> prop to <code>true</code>\n    and separately disabling the component&#39;s children as appropriate (because <code>Select</code> accepts arbitrary children).</p>\n    <p>For example, <code>&lt;Select ... disabled={true}&gt;&lt;Button ... disabled={true} /&gt;&lt;/Select&gt;</code></p>\n</div>\n\n",
        {
          "tag": "reactExample",
          "value": "SelectExample"
        },
        "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Button</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>MenuItem</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Select</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/select</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"constant language import-export-all tsx\"><span>*</span></span><span>&nbsp;</span><span class=\"keyword control as tsx\"><span>as</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Films</span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>./films</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;Select&lt;T&gt;&nbsp;is&nbsp;a&nbsp;generic&nbsp;component&nbsp;to&nbsp;work&nbsp;with&nbsp;your&nbsp;data&nbsp;types.</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;In&nbsp;TypeScript,&nbsp;you&nbsp;must&nbsp;first&nbsp;obtain&nbsp;a&nbsp;non-generic&nbsp;reference:</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr tsx\"><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>FilmSelect</span></span><span>&nbsp;</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>Select</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>ofType</span></span></span><span class=\"meta type parameters tsx\"><span class=\"punctuation definition typeparameters begin tsx\"><span>&lt;</span></span><span class=\"entity name type module tsx\"><span>Films</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name type tsx\"><span>Film</span></span><span class=\"punctuation definition typeparameters end tsx\"><span>&gt;</span></span></span><span class=\"meta brace round tsx\"><span>(</span><span>)</span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>ReactDOM</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>render</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>FilmSelect</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>items</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Films</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>items</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>itemPredicate</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Films</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>itemPredicate</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>itemRenderer</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Films</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>itemRenderer</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>noResults</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>MenuItem</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>disabled</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant language boolean true tsx\"><span>true</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>No&nbsp;results.</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onItemSelect</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"keyword operator spread tsx\"><span>...</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"comment block tsx\"><span class=\"punctuation definition comment tsx\"><span>/*</span></span><span>&nbsp;children&nbsp;become&nbsp;the&nbsp;popover&nbsp;target;&nbsp;render&nbsp;value&nbsp;here&nbsp;</span><span class=\"punctuation definition comment tsx\"><span>*/</span></span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Button</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Films</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>items</span></span><span class=\"meta array literal tsx\"><span class=\"meta brace square tsx\"><span>[</span></span><span class=\"constant numeric decimal tsx\"><span>0</span></span><span class=\"meta brace square tsx\"><span>]</span></span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support variable property dom tsx\"><span>title</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>rightIcon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>double-caret-vertical</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>FilmSelect</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"support variable dom tsx\"><span>document</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function dom tsx\"><span>querySelector</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>#root</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div></pre><p>In TypeScript, <code>Select&lt;T&gt;</code> is a <em>generic component</em> so you must define a local type that specifies <code>&lt;T&gt;</code>, the type of one item in <code>items</code>. The props on this local type will now operate on your data type (speak your language) so you can easily define handlers without transformation steps, but most props are required as a result. The static <code>Select.ofType&lt;T&gt;()</code> method is available to streamline this process. (Note that this has no effect on JavaScript usage: the <code>Select</code> export is a perfectly valid React component class.)</p>\n",
        {
          "tag": "heading",
          "value": "Querying",
          "level": 2,
          "route": ""
        },
        "<p>Supply a predicate to automatically query items based on the <code>InputGroup</code> value. Use <code>itemPredicate</code> to filter each item individually; this is great for lightweight searches. Use <code>itemListPredicate</code> to query the entire array in one go, and even reorder it, such as with <a href=\"https://github.com/jeancroy/fuzz-aldrin-plus\">fuzz-aldrin-plus</a>. The array of filtered items is cached internally by <code>QueryList</code> state and only recomputed when <code>query</code> or <code>items</code>-related props change.</p>\n<p>Omitting both <code>itemPredicate</code> and <code>itemListPredicate</code> props will cause the component to always render all <code>items</code>. It will not hide the <code>InputGroup</code>; use the <code>filterable</code> prop for that. In this case, you can implement your own filtering and simply change the <code>items</code> prop.</p>\n<p>The <strong>@blueprintjs/select</strong> package exports <code>ItemPredicate&lt;T&gt;</code> and <code>ItemListPredicate&lt;T&gt;</code> type aliases to simplify the process of implementing these functions.\nSee the code sample in <a href=\"#select/select-component.item-renderer\">Item Renderer API</a> below for usage.</p>\n",
        {
          "tag": "heading",
          "value": "Non-ideal states",
          "level": 3,
          "route": ""
        },
        "<p>If the query returns no results or <code>items</code> is empty, then <code>noResults</code> will be rendered in place of the usual list. You also have the option to provide <code>initialContent</code>, which will render in place of the item list if the query is empty.</p>\n",
        {
          "tag": "heading",
          "value": "Custom menu",
          "level": 2,
          "route": ""
        },
        "<p>By default, <code>Select</code> renders the displayed items in a <a href=\"#core/components/menu\"><code>Menu</code></a>. This behavior can be overridden by providing the <code>itemListRenderer</code> prop, giving you full control over the layout of the items. For example, you can group items under a common heading, or render large data sets using <a href=\"https://github.com/bvaughn/react-virtualized\">react-virtualized</a>.</p>\n<p>Note that the non-ideal states of <code>noResults</code> and <code>initialContent</code> are specific to the default renderer. If you provide the <code>itemListRenderer</code> prop, these props will be ignored.</p>\n<p>See the code sample in <a href=\"#select/select-component.item-list-renderer\">Item List Renderer API</a> below for usage.</p>\n",
        {
          "tag": "heading",
          "value": "Controlled usage",
          "level": 2,
          "route": ""
        },
        "<p>The input value can be controlled with the <code>query</code> and <code>onQueryChange</code> props. <em>Do not use <code>inputProps</code> for this;</em> the component ignores <code>inputProps.value</code> and <code>inputProps.onChange</code> in favor of <code>query</code> and <code>onQueryChange</code> (as noted in the prop documentation).</p>\n<p>The focused item (for keyboard interactions) can be controlled with the <code>activeItem</code> and <code>onActiveItemChange</code> props.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>FilmSelect</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>items</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta function-call tsx\"><span class=\"entity name function tsx\"><span>myFilter</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"variable other constant tsx\"><span>ALL_ITEMS</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>state</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>myQuery</span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>itemRenderer</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"keyword operator spread tsx\"><span>...</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onItemSelect</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"keyword operator spread tsx\"><span>...</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span class=\"punctuation whitespace comment leading tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;controlled&nbsp;active&nbsp;item</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>activeItem</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>state</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>myActiveItem</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onActiveItemChange</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>handleActiveItemChange</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span class=\"punctuation whitespace comment leading tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;controlled&nbsp;query</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>query</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other object property tsx\"><span>state</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>myQuery</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onQueryChange</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable language this tsx\"><span>this</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>handleQueryChange</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></div></pre><p>This controlled usage allows you to implement all sorts of advanced behavior on\ntop of the basic <code>Select</code> interactions, such as windowed filtering for large\ndata sets.</p>\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    To control the active item when a &quot;Create Item&quot; option is present, See <a href=\"#select/select-component.controlling-the-active-item\">Controlling the active item</a> in the &quot;Creating new items&quot; section below.\n</div>\n\n",
        {
          "tag": "heading",
          "value": "Creating new items",
          "level": 2,
          "route": ""
        },
        "<p>If you wish, you can allow users to select a brand new item that doesn&#39;t appear\nin the list, based on the current query string. Use <code>createNewItemFromQuery</code> and\n<code>createNewItemRenderer</code> to enable this:</p>\n<ul>\n<li><code>createNewItemFromQuery</code>: Specifies how to convert a user-entered query string\ninto an item of type <code>&lt;T&gt;</code> that <code>Select</code> understands.</li>\n<li><code>createNewItemRenderer</code>: Renders a custom &quot;Create Item&quot; element that will be\nshown at the bottom of the list. When selected via click or <code>Enter</code>, this element\nwill invoke <code>onItemSelect</code> with the item returned from <code>createNewItemFromQuery</code>.</li>\n</ul>\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Avoiding type conflicts</h4>\n    The &quot;Create Item&quot; option is represented by the reserved type <code>ICreateNewItem</code>\n    exported from this package. It is exceedingly unlikely but technically possible\n    for your custom type <code>&lt;T&gt;</code> to conflict with this type. If your type conflicts,\n    you may see unexpected behavior; to resolve, consider changing the schema for\n    your items.\n</div>\n\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"storage type function tsx\"><span>function</span></span><span>&nbsp;</span><span class=\"meta definition function tsx entity name function tsx\"><span>createFilm</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"variable parameter tsx\"><span>title</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"support type primitive tsx\"><span>string</span></span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span class=\"meta return type tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type tsx\"><span>IFilm</span></span><span>&nbsp;</span></span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control flow tsx\"><span>return</span></span><span class=\"meta objectliteral tsx\"><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span class=\"meta objectliteral tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>rank</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"comment block tsx\"><span class=\"punctuation definition comment tsx\"><span>/*</span></span><span>&nbsp;...&nbsp;</span><span class=\"punctuation definition comment tsx\"><span>*/</span></span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span class=\"meta objectliteral tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta object member tsx\"><span class=\"variable other readwrite tsx\"><span>title</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span class=\"meta objectliteral tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>year</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"comment block tsx\"><span class=\"punctuation definition comment tsx\"><span>/*</span></span><span>&nbsp;...&nbsp;</span><span class=\"punctuation definition comment tsx\"><span>*/</span></span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span class=\"meta objectliteral tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"storage type function tsx\"><span>function</span></span><span>&nbsp;</span><span class=\"meta definition function tsx entity name function tsx\"><span>renderCreateFilmOption</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta parameters tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"variable parameter tsx\"><span>query</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"support type primitive tsx\"><span>string</span></span></span><span class=\"punctuation separator parameter tsx\"><span>,</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta parameters tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"variable parameter tsx\"><span>active</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"support type primitive tsx\"><span>boolean</span></span></span><span class=\"punctuation separator parameter tsx\"><span>,</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta parameters tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"variable parameter tsx\"><span>handleClick</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type module tsx\"><span>React</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name type tsx\"><span>MouseEventHandler</span></span><span class=\"meta type parameters tsx\"><span class=\"punctuation definition typeparameters begin tsx\"><span>&lt;</span></span><span class=\"entity name type tsx\"><span>HTMLElement</span></span><span class=\"punctuation definition typeparameters end tsx\"><span>&gt;</span></span></span></span><span class=\"punctuation separator parameter tsx\"><span>,</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control flow tsx\"><span>return</span></span><span>&nbsp;</span><span class=\"meta brace round tsx\"><span>(</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>MenuItem</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>icon</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>add</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"string template tsx\"><span class=\"punctuation definition string template begin tsx\"><span>`</span></span><span>Create&nbsp;&quot;</span><span class=\"meta template expression tsx\"><span class=\"punctuation definition template-expression begin tsx\"><span>${</span></span><span class=\"meta embedded line tsx\"><span class=\"variable other readwrite tsx\"><span>query</span></span></span><span class=\"punctuation definition template-expression end tsx\"><span>}</span></span></span><span>&quot;</span><span class=\"punctuation definition string template end tsx\"><span>`</span></span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>active</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>active</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onClick</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>handleClick</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>shouldDismissPopover</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant language boolean false tsx\"><span>false</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta brace round tsx\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>ReactDOM</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>render</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>FilmSelect</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>createNewItemFromQuery</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>createFilm</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>createNewItemRenderer</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>renderCreateFilmOption</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>items</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Films</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>items</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>itemPredicate</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Films</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>itemPredicate</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>itemRenderer</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Films</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>itemRenderer</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>noResults</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>MenuItem</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>disabled</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant language boolean true tsx\"><span>true</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>No&nbsp;results.</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onItemSelect</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"keyword operator spread tsx\"><span>...</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"support variable dom tsx\"><span>document</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function dom tsx\"><span>querySelector</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>#root</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div></pre>",
        {
          "tag": "heading",
          "value": "Controlling the active item",
          "level": 3,
          "route": ""
        },
        "<p>Controlling the active item is slightly more involved when the &quot;Create Item&quot;\noption is present. At a high level, the process works the same way as before:\ncontrol the <code>activeItem</code> value and listen for updates via <code>onActiveItemChange</code>.\nHowever, some special handling is required.</p>\n<p>When the &quot;Create Item&quot; option is present, the callback will emit\n<code>activeItem=null</code> and <code>isCreateNewItem=true</code>:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function-call tsx\"><span class=\"entity name function tsx\"><span>onActiveItemChange</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"constant language null tsx\"><span>null</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"constant language boolean true tsx\"><span>true</span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div></pre><p>You can then make the &quot;Create Item&quot; option active by passing the result of\n<code>getCreateNewItem()</code> to the <code>activeItem</code> prop (the <code>getCreateNewItem</code> function\nis exported from this package):</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"variable other readwrite tsx\"><span>activeItem</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>isCreateNewItemActive&nbsp;?&nbsp;</span><span class=\"meta method declaration tsx\"><span class=\"meta definition method tsx entity name function tsx\"><span>getCreateNewItem</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span class=\"meta return type tsx\"><span>&nbsp;</span><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type tsx\"><span>activeItem</span></span></span></span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></div></pre><p>Altogether, the code might look something like this:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr tsx\"><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>currentActiveItem</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type tsx\"><span>Film</span></span><span>&nbsp;</span><span class=\"keyword operator type tsx\"><span>|</span></span><span>&nbsp;</span><span class=\"entity name type tsx\"><span>ICreateNewItem</span></span><span>&nbsp;</span><span class=\"keyword operator type tsx\"><span>|</span></span><span>&nbsp;</span><span class=\"support type builtin tsx\"><span>null</span></span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr tsx\"><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>isCreateNewItemActive</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type tsx\"><span>Film</span></span><span>&nbsp;</span><span class=\"keyword operator type tsx\"><span>|</span></span><span>&nbsp;</span><span class=\"entity name type tsx\"><span>ICreateNewItem</span></span><span>&nbsp;</span><span class=\"keyword operator type tsx\"><span>|</span></span><span>&nbsp;</span><span class=\"support type builtin tsx\"><span>null</span></span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"storage type function tsx\"><span>function</span></span><span>&nbsp;</span><span class=\"meta definition function tsx entity name function tsx\"><span>handleActiveItemChange</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta parameters tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"variable parameter tsx\"><span>activeItem</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type tsx\"><span>Film</span></span><span>&nbsp;</span><span class=\"keyword operator type tsx\"><span>|</span></span><span>&nbsp;</span><span class=\"entity name type tsx\"><span>ICreateNewItem</span></span><span>&nbsp;</span><span class=\"keyword operator type tsx\"><span>|</span></span><span>&nbsp;</span><span class=\"support type builtin tsx\"><span>null</span></span></span><span class=\"punctuation separator parameter tsx\"><span>,</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta parameters tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"variable parameter tsx\"><span>isCreateNewItem</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"support type primitive tsx\"><span>boolean</span></span></span><span class=\"punctuation separator parameter tsx\"><span>,</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"variable other readwrite tsx\"><span>currentActiveItem</span></span><span>&nbsp;</span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>activeItem</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"variable other readwrite tsx\"><span>isCreateNewItemActive</span></span><span>&nbsp;</span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>isCreateNewItem</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"storage type function tsx\"><span>function</span></span><span>&nbsp;</span><span class=\"meta definition function tsx entity name function tsx\"><span>getActiveItem</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control flow tsx\"><span>return</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>isCreateNewItemActive</span></span><span>&nbsp;</span><span class=\"keyword operator ternary tsx\"><span>?</span></span><span>&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"entity name function tsx\"><span>getCreateNewItem</span></span></span><span class=\"meta brace round tsx\"><span>(</span><span>)</span></span><span>&nbsp;</span><span class=\"keyword operator ternary tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>currentActiveItem</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>ReactDOM</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>render</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>FilmSelect</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"keyword operator spread tsx\"><span>...</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;Other&nbsp;required&nbsp;props&nbsp;(see&nbsp;previous&nbsp;examples).</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>activeItem</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"meta function-call tsx\"><span class=\"entity name function tsx\"><span>getActiveItem</span></span></span><span class=\"meta brace round tsx\"><span>(</span><span>)</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>createNewItemFromQuery</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"keyword operator spread tsx\"><span>...</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>createNewItemRenderer</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"keyword operator spread tsx\"><span>...</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onActiveItemChange</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>handleActiveItemChange</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"support variable dom tsx\"><span>document</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function dom tsx\"><span>querySelector</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>#root</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div></pre>",
        {
          "tag": "heading",
          "value": "JavaScript API",
          "level": 2,
          "route": ""
        },
        {
          "tag": "interface",
          "value": "ISelectProps"
        },
        {
          "tag": "heading",
          "value": "Item renderer",
          "level": 3,
          "route": ""
        },
        "<p><code>Select</code>&#39;s <code>itemRenderer</code> will be called for each item and receives the item and a props object containing data specific\nto rendering this item in this frame. The renderer is called for all items, so don&#39;t forget to respect\n<code>modifiers.matchesPredicate</code> to hide items that don&#39;t match the predicate. Also, don&#39;t forget to define a <code>key</code> for each item, or face React&#39;s console wrath!</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Classes</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>MenuItem</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>ItemRenderer</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>ItemPredicate</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Select</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/select</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr tsx\"><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>FilmSelect</span></span><span>&nbsp;</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>Select</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>ofType</span></span></span><span class=\"meta type parameters tsx\"><span class=\"punctuation definition typeparameters begin tsx\"><span>&lt;</span></span><span class=\"entity name type tsx\"><span>Film</span></span><span class=\"punctuation definition typeparameters end tsx\"><span>&gt;</span></span></span><span class=\"meta brace round tsx\"><span>(</span><span>)</span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr tsx\"><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>filterFilm</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type tsx\"><span>ItemPredicate</span></span><span class=\"meta type parameters tsx\"><span class=\"punctuation definition typeparameters begin tsx\"><span>&lt;</span></span><span class=\"entity name type tsx\"><span>IFilm</span></span><span class=\"punctuation definition typeparameters end tsx\"><span>&gt;</span></span></span><span>&nbsp;</span></span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta arrow tsx\"><span>&nbsp;</span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"variable parameter tsx\"><span>query</span></span><span class=\"punctuation separator parameter tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable parameter tsx\"><span>film</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"storage type function arrow tsx\"><span>=&gt;</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control flow tsx\"><span>return</span></span><span>&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>film</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support variable property dom tsx\"><span>title</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function tsx\"><span>toLowerCase</span></span></span><span class=\"meta brace round tsx\"><span>(</span><span>)</span></span><span class=\"meta function-call tsx\"><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function tsx\"><span>indexOf</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>query</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function tsx\"><span>toLowerCase</span></span></span><span class=\"meta brace round tsx\"><span>(</span><span>)</span><span>)</span></span><span>&nbsp;</span><span class=\"keyword operator relational tsx\"><span>&gt;=</span></span><span>&nbsp;</span><span class=\"constant numeric decimal tsx\"><span>0</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr tsx\"><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>renderFilm</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type tsx\"><span>ItemRenderer</span></span><span class=\"meta type parameters tsx\"><span class=\"punctuation definition typeparameters begin tsx\"><span>&lt;</span></span><span class=\"entity name type tsx\"><span>Film</span></span><span class=\"punctuation definition typeparameters end tsx\"><span>&gt;</span></span></span><span>&nbsp;</span></span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta arrow tsx\"><span>&nbsp;</span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"variable parameter tsx\"><span>film</span></span><span class=\"punctuation separator parameter tsx\"><span>,</span></span><span class=\"meta parameter object-binding-pattern tsx\"><span>&nbsp;</span><span class=\"punctuation definition binding-pattern object tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable parameter tsx\"><span>handleClick</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable parameter tsx\"><span>modifiers</span></span><span>&nbsp;</span><span class=\"punctuation definition binding-pattern object tsx\"><span>}</span></span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"storage type function arrow tsx\"><span>=&gt;</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control conditional tsx\"><span>if</span></span><span>&nbsp;</span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"keyword operator logical tsx\"><span>!</span></span><span class=\"variable other object tsx\"><span>modifiers</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>matchesPredicate</span></span><span class=\"meta brace round tsx\"><span>)</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control flow tsx\"><span>return</span></span><span>&nbsp;</span><span class=\"constant language null tsx\"><span>null</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control flow tsx\"><span>return</span></span><span>&nbsp;</span><span class=\"meta brace round tsx\"><span>(</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>MenuItem</span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>active</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>modifiers</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>active</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>key</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>film</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support variable property dom tsx\"><span>title</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>label</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>film</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>year</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onClick</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>handleClick</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>film</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support variable property dom tsx\"><span>title</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>FilmSelect</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>itemPredicate</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>filterFilm</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>itemRenderer</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>renderFilm</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>items</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"keyword operator spread tsx\"><span>...</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onItemSelect</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"keyword operator spread tsx\"><span>...</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></div></pre>",
        {
          "tag": "interface",
          "value": "IItemRendererProps"
        },
        {
          "tag": "heading",
          "value": "Item list renderer",
          "level": 3,
          "route": ""
        },
        "<p>If provided, the <code>itemListRenderer</code> prop will be called to render the contents of the dropdown menu. It has access to the items, the current query, and a <code>renderItem</code> callback for rendering a single item. A ref handler (<code>itemsParentRef</code>) is given as well; it should be attached to the parent element of the rendered menu items so that the currently selected item can be scrolled into view automatically.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>ItemListRenderer</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/select</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr tsx\"><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>renderMenu</span></span><span class=\"meta type annotation tsx\"><span class=\"keyword operator type annotation tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type tsx\"><span>ItemListRenderer</span></span><span class=\"meta type parameters tsx\"><span class=\"punctuation definition typeparameters begin tsx\"><span>&lt;</span></span><span class=\"entity name type tsx\"><span>Film</span></span><span class=\"punctuation definition typeparameters end tsx\"><span>&gt;</span></span></span><span>&nbsp;</span></span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta arrow tsx\"><span>&nbsp;</span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"meta parameter object-binding-pattern tsx\"><span class=\"punctuation definition binding-pattern object tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable parameter tsx\"><span>items</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable parameter tsx\"><span>itemsParentRef</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable parameter tsx\"><span>query</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable parameter tsx\"><span>renderItem</span></span><span>&nbsp;</span><span class=\"punctuation definition binding-pattern object tsx\"><span>}</span></span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"storage type function arrow tsx\"><span>=&gt;</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr tsx\"><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>renderedItems</span></span><span>&nbsp;</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>items</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>map</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"variable other readwrite tsx\"><span>renderItem</span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"meta function-call tsx\"><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>filter</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"meta arrow tsx\"><span class=\"variable parameter tsx\"><span>item</span></span><span>&nbsp;</span><span class=\"storage type function arrow tsx\"><span>=&gt;</span></span><span>&nbsp;</span></span><span class=\"variable other readwrite tsx\"><span>item</span></span><span>&nbsp;</span><span class=\"keyword operator comparison tsx\"><span>!=</span></span><span>&nbsp;</span><span class=\"constant language null tsx\"><span>null</span></span><span class=\"meta brace round tsx\"><span>)</span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control flow tsx\"><span>return</span></span><span>&nbsp;</span><span class=\"meta brace round tsx\"><span>(</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Menu</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>ulRef</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>itemsParentRef</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>MenuItem</span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>disabled</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"constant language boolean true tsx\"><span>true</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>text</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"string template tsx\"><span class=\"punctuation definition string template begin tsx\"><span>`</span></span><span>Found&nbsp;</span><span class=\"meta template expression tsx\"><span class=\"punctuation definition template-expression begin tsx\"><span>${</span></span><span class=\"meta embedded line tsx\"><span class=\"variable other object tsx\"><span>renderedItems</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support variable property tsx\"><span>length</span></span></span><span class=\"punctuation definition template-expression end tsx\"><span>}</span></span></span><span>&nbsp;items&nbsp;matching&nbsp;&quot;</span><span class=\"meta template expression tsx\"><span class=\"punctuation definition template-expression begin tsx\"><span>${</span></span><span class=\"meta embedded line tsx\"><span class=\"variable other readwrite tsx\"><span>query</span></span></span><span class=\"punctuation definition template-expression end tsx\"><span>}</span></span></span><span>&quot;</span><span class=\"punctuation definition string template end tsx\"><span>`</span></span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>renderedItems</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"meta tag tsx\"><span class=\"meta jsx children tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition tag begin tsx\"><span>&lt;/</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Menu</span></span></span><span class=\"punctuation definition tag end tsx\"><span>&gt;</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"meta arrow tsx\"><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>FilmSelect</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>itemListRenderer</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>renderMenu</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>itemPredicate</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>filterFilm</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>itemRenderer</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other readwrite tsx\"><span>renderFilm</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>items</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"keyword operator spread tsx\"><span>...</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"meta tag attributes tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>onItemSelect</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"keyword operator spread tsx\"><span>...</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta tag tsx\"><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span></div></pre>",
        {
          "tag": "interface",
          "value": "IItemListRendererProps"
        }
      ],
      "contentsRaw": "@# Select\n\nUse `Select<T>` for choosing one item from a list. The component's children will be wrapped in a [`Popover`](#core/components/popover) that contains the list and an optional `InputGroup` to filter it. Provide a predicate to customize the filtering algorithm. The value of a `Select<T>` (the currently chosen item) is uncontrolled: listen to changes with `onItemSelect`.\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Disabling a Select</h4>\n    <p>Disabling the component requires setting the `disabled` prop to `true`\n    and separately disabling the component's children as appropriate (because `Select` accepts arbitrary children).</p>\n    <p>For example, `<Select ... disabled={true}><Button ... disabled={true} /></Select>`</p>\n</div>\n\n@reactExample SelectExample\n\n```tsx\nimport { Button, MenuItem } from \"@blueprintjs/core\";\nimport { Select } from \"@blueprintjs/select\";\nimport * as Films from \"./films\";\n\n// Select<T> is a generic component to work with your data types.\n// In TypeScript, you must first obtain a non-generic reference:\nconst FilmSelect = Select.ofType<Films.Film>();\n\nReactDOM.render(\n    <FilmSelect\n        items={Films.items}\n        itemPredicate={Films.itemPredicate}\n        itemRenderer={Films.itemRenderer}\n        noResults={<MenuItem disabled={true} text=\"No results.\" />}\n        onItemSelect={...}\n    >\n        {/* children become the popover target; render value here */}\n        <Button text={Films.items[0].title} rightIcon=\"double-caret-vertical\" />\n    </FilmSelect>,\n    document.querySelector(\"#root\")\n);\n```\n\nIn TypeScript, `Select<T>` is a _generic component_ so you must define a local type that specifies `<T>`, the type of one item in `items`. The props on this local type will now operate on your data type (speak your language) so you can easily define handlers without transformation steps, but most props are required as a result. The static `Select.ofType<T>()` method is available to streamline this process. (Note that this has no effect on JavaScript usage: the `Select` export is a perfectly valid React component class.)\n\n@## Querying\n\nSupply a predicate to automatically query items based on the `InputGroup` value. Use `itemPredicate` to filter each item individually; this is great for lightweight searches. Use `itemListPredicate` to query the entire array in one go, and even reorder it, such as with [fuzz-aldrin-plus](https://github.com/jeancroy/fuzz-aldrin-plus). The array of filtered items is cached internally by `QueryList` state and only recomputed when `query` or `items`-related props change.\n\nOmitting both `itemPredicate` and `itemListPredicate` props will cause the component to always render all `items`. It will not hide the `InputGroup`; use the `filterable` prop for that. In this case, you can implement your own filtering and simply change the `items` prop.\n\nThe **@blueprintjs/select** package exports `ItemPredicate<T>` and `ItemListPredicate<T>` type aliases to simplify the process of implementing these functions.\nSee the code sample in [Item Renderer API](#select/select-component.item-renderer) below for usage.\n\n@### Non-ideal states\n\nIf the query returns no results or `items` is empty, then `noResults` will be rendered in place of the usual list. You also have the option to provide `initialContent`, which will render in place of the item list if the query is empty.\n\n@## Custom menu\n\nBy default, `Select` renders the displayed items in a [`Menu`](#core/components/menu). This behavior can be overridden by providing the `itemListRenderer` prop, giving you full control over the layout of the items. For example, you can group items under a common heading, or render large data sets using [react-virtualized](https://github.com/bvaughn/react-virtualized).\n\nNote that the non-ideal states of `noResults` and `initialContent` are specific to the default renderer. If you provide the `itemListRenderer` prop, these props will be ignored.\n\nSee the code sample in [Item List Renderer API](#select/select-component.item-list-renderer) below for usage.\n\n@## Controlled usage\n\nThe input value can be controlled with the `query` and `onQueryChange` props. _Do not use `inputProps` for this;_ the component ignores `inputProps.value` and `inputProps.onChange` in favor of `query` and `onQueryChange` (as noted in the prop documentation).\n\nThe focused item (for keyboard interactions) can be controlled with the `activeItem` and `onActiveItemChange` props.\n\n```tsx\n<FilmSelect\n    items={myFilter(ALL_ITEMS, this.state.myQuery)}\n    itemRenderer={...}\n    onItemSelect={...}\n    // controlled active item\n    activeItem={this.state.myActiveItem}\n    onActiveItemChange={this.handleActiveItemChange}\n    // controlled query\n    query={this.state.myQuery}\n    onQueryChange={this.handleQueryChange}\n/>\n```\n\nThis controlled usage allows you to implement all sorts of advanced behavior on\ntop of the basic `Select` interactions, such as windowed filtering for large\ndata sets.\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    To control the active item when a \"Create Item\" option is present, See [Controlling the active item](#select/select-component.controlling-the-active-item) in the \"Creating new items\" section below.\n</div>\n\n@## Creating new items\n\nIf you wish, you can allow users to select a brand new item that doesn't appear\nin the list, based on the current query string. Use `createNewItemFromQuery` and\n`createNewItemRenderer` to enable this:\n- `createNewItemFromQuery`: Specifies how to convert a user-entered query string\ninto an item of type `<T>` that `Select` understands.\n- `createNewItemRenderer`: Renders a custom \"Create Item\" element that will be\nshown at the bottom of the list. When selected via click or `Enter`, this element\nwill invoke `onItemSelect` with the item returned from `createNewItemFromQuery`.\n\n<div class=\"bp3-callout bp3-intent-warning bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">Avoiding type conflicts</h4>\n    The \"Create Item\" option is represented by the reserved type `ICreateNewItem`\n    exported from this package. It is exceedingly unlikely but technically possible\n    for your custom type `<T>` to conflict with this type. If your type conflicts,\n    you may see unexpected behavior; to resolve, consider changing the schema for\n    your items.\n</div>\n\n```tsx\nfunction createFilm(title: string): IFilm {\n    return {\n        rank: /* ... */,\n        title,\n        year: /* ... */,\n    };\n}\n\nfunction renderCreateFilmOption(\n    query: string,\n    active: boolean,\n    handleClick: React.MouseEventHandler<HTMLElement>,\n) {\n    return (\n        <MenuItem\n            icon=\"add\"\n            text={`Create \"${query}\"`}\n            active={active}\n            onClick={handleClick}\n            shouldDismissPopover={false}\n        />\n    )\n}\n\nReactDOM.render(\n    <FilmSelect\n        createNewItemFromQuery={createFilm}\n        createNewItemRenderer={renderCreateFilmOption}\n        items={Films.items}\n        itemPredicate={Films.itemPredicate}\n        itemRenderer={Films.itemRenderer}\n        noResults={<MenuItem disabled={true} text=\"No results.\" />}\n        onItemSelect={...}\n    />,\n    document.querySelector(\"#root\")\n);\n```\n\n@### Controlling the active item\n\nControlling the active item is slightly more involved when the \"Create Item\"\noption is present. At a high level, the process works the same way as before:\ncontrol the `activeItem` value and listen for updates via `onActiveItemChange`.\nHowever, some special handling is required.\n\nWhen the \"Create Item\" option is present, the callback will emit\n`activeItem=null` and `isCreateNewItem=true`:\n\n```tsx\nonActiveItemChange(null, true);\n```\n\nYou can then make the \"Create Item\" option active by passing the result of\n`getCreateNewItem()` to the `activeItem` prop (the `getCreateNewItem` function\nis exported from this package):\n\n```tsx\nactiveItem={isCreateNewItemActive ? getCreateNewItem() : activeItem}\n```\n\nAltogether, the code might look something like this:\n\n```tsx\nconst currentActiveItem: Film | ICreateNewItem | null;\nconst isCreateNewItemActive: Film | ICreateNewItem | null;\n\nfunction handleActiveItemChange(\n    activeItem: Film | ICreateNewItem | null,\n    isCreateNewItem: boolean,\n) {\n    currentActiveItem = activeItem;\n    isCreateNewItemActive = isCreateNewItem;\n}\n\nfunction getActiveItem() {\n    return isCreateNewItemActive ? getCreateNewItem() : currentActiveItem;\n}\n\nReactDOM.render(\n    <FilmSelect\n        {...} // Other required props (see previous examples).\n        activeItem={getActiveItem()}\n        createNewItemFromQuery={...}\n        createNewItemRenderer={...}\n        onActiveItemChange={handleActiveItemChange}\n    />,\n    document.querySelector(\"#root\")\n);\n```\n\n@## JavaScript API\n\n@interface ISelectProps\n\n@### Item renderer\n\n`Select`'s `itemRenderer` will be called for each item and receives the item and a props object containing data specific\nto rendering this item in this frame. The renderer is called for all items, so don't forget to respect\n`modifiers.matchesPredicate` to hide items that don't match the predicate. Also, don't forget to define a `key` for each item, or face React's console wrath!\n\n```tsx\nimport { Classes, MenuItem } from \"@blueprintjs/core\";\nimport { ItemRenderer, ItemPredicate, Select } from \"@blueprintjs/select\";\n\nconst FilmSelect = Select.ofType<Film>();\n\nconst filterFilm: ItemPredicate<IFilm> = (query, film) => {\n    return film.title.toLowerCase().indexOf(query.toLowerCase()) >= 0;\n};\n\nconst renderFilm: ItemRenderer<Film> = (film, { handleClick, modifiers }) => {\n    if (!modifiers.matchesPredicate) {\n        return null;\n    }\n    return (\n        <MenuItem\n            active={modifiers.active}\n            key={film.title}\n            label={film.year}\n            onClick={handleClick}\n            text={film.title}\n        />\n    );\n};\n\n<FilmSelect itemPredicate={filterFilm} itemRenderer={renderFilm} items={...} onItemSelect={...} />\n```\n\n@interface IItemRendererProps\n\n@### Item list renderer\n\nIf provided, the `itemListRenderer` prop will be called to render the contents of the dropdown menu. It has access to the items, the current query, and a `renderItem` callback for rendering a single item. A ref handler (`itemsParentRef`) is given as well; it should be attached to the parent element of the rendered menu items so that the currently selected item can be scrolled into view automatically.\n\n```tsx\nimport { ItemListRenderer } from \"@blueprintjs/select\";\n\nconst renderMenu: ItemListRenderer<Film> = ({ items, itemsParentRef, query, renderItem }) => {\n    const renderedItems = items.map(renderItem).filter(item => item != null);\n    return (\n        <Menu ulRef={itemsParentRef}>\n            <MenuItem\n                disabled={true}\n                text={`Found ${renderedItems.length} items matching \"${query}\"`}\n            />\n            {renderedItems}\n        </Menu>\n    );\n};\n\n<FilmSelect\n    itemListRenderer={renderMenu}\n    itemPredicate={filterFilm}\n    itemRenderer={renderFilm}\n    items={...}\n    onItemSelect={...}\n/>\n```\n\n@interface IItemListRendererProps",
      "metadata": {}
    },
    "suggest": {
      "reference": "suggest",
      "route": "suggest",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\select\\src\\components\\select\\suggest.md",
      "title": "Suggest",
      "contents": [
        {
          "tag": "heading",
          "value": "Suggest",
          "level": 1,
          "route": ""
        },
        "<p><code>Suggest</code> behaves similarly to <a href=\"#select/select-component\"><code>Select</code></a>, except it\nrenders a text input as the <code>Popover</code> target instead of arbitrary children. This\ntext <a href=\"#core/components/text-inputs.input-group\"><code>InputGroup</code></a> can be customized\nusing <code>inputProps</code>.</p>\n",
        {
          "tag": "reactExample",
          "value": "SuggestExample"
        },
        {
          "tag": "interface",
          "value": "ISuggestProps"
        },
        {
          "tag": "interface",
          "value": "ISelectItemRendererProps"
        }
      ],
      "contentsRaw": "@# Suggest\n\n`Suggest` behaves similarly to [`Select`](#select/select-component), except it\nrenders a text input as the `Popover` target instead of arbitrary children. This\ntext [`InputGroup`](#core/components/text-inputs.input-group) can be customized\nusing `inputProps`.\n\n@reactExample SuggestExample\n\n@interface ISuggestProps\n\n@interface ISelectItemRendererProps",
      "metadata": {}
    },
    "select": {
      "reference": "select",
      "route": "select",
      "sourcePath": "src\\docs-data\\node_modules\\@blueprintjs\\select\\src\\index.md",
      "title": "Select",
      "contents": [
        {
          "tag": "heading",
          "value": "Select",
          "level": 1,
          "route": ""
        },
        "<p>The <strong>@blueprintjs/select</strong> NPM package provides React components related to selecting items from a list:</p>\n<ul>\n<li><p><a href=\"#select/select-component\"><code>Select</code></a> for selecting items in a list.</p>\n</li>\n<li><p><a href=\"#select/suggest\"><code>Suggest</code></a> for selecting items in a list, from a text input.</p>\n</li>\n<li><p><a href=\"#select/multi-select\"><code>MultiSelect</code></a> for selecting multiple items in a list.</p>\n</li>\n<li><p><a href=\"#select/omnibar\"><code>Omnibar</code></a>, a macOS spotlight-style typeahead component.</p>\n</li>\n<li><p><a href=\"#select/query-list\"><code>QueryList</code></a>, a higher-order component that provides interactions between a query string and a list of items.</p>\n</li>\n</ul>\n<p>Make sure to review the <a href=\"#blueprint/getting-started\">getting started docs for installation info</a>.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>npm&nbsp;install&nbsp;--save&nbsp;@blueprintjs/select</span></span></div></pre>",
        {
          "tag": "page",
          "value": "select-component"
        },
        {
          "tag": "page",
          "value": "suggest"
        },
        {
          "tag": "page",
          "value": "multi-select"
        },
        {
          "tag": "page",
          "value": "omnibar"
        },
        {
          "tag": "page",
          "value": "query-list"
        }
      ],
      "contentsRaw": "\n@# Select\n\nThe **@blueprintjs/select** NPM package provides React components related to selecting items from a list:\n\n- [`Select`](#select/select-component) for selecting items in a list.\n\n- [`Suggest`](#select/suggest) for selecting items in a list, from a text input.\n\n- [`MultiSelect`](#select/multi-select) for selecting multiple items in a list.\n\n- [`Omnibar`](#select/omnibar), a macOS spotlight-style typeahead component.\n\n- [`QueryList`](#select/query-list), a higher-order component that provides interactions between a query string and a list of items.\n\nMake sure to review the [getting started docs for installation info](#blueprint/getting-started).\n\n```sh\nnpm install --save @blueprintjs/select\n```\n\n@page select-component\n@page suggest\n@page multi-select\n@page omnibar\n@page query-list",
      "metadata": {
        "reference": "select"
      }
    },
    "client": {
      "reference": "client",
      "route": "client",
      "sourcePath": "src\\docs-data\\node_modules\\@documentalist\\client\\src\\client.md",
      "title": "Client",
      "contents": [
        {
          "tag": "heading",
          "value": "Client",
          "level": 1,
          "route": ""
        },
        "<p>Now that you&#39;ve compiled a sweet data file packed with documentation goodness, what next?</p>\n<p>Well, you&#39;ve got some options. This package does not provide the tools to render the data, but they&#39;re fairly easy to construct once you understand the data format. The <code>@documentalist/client</code> package provides functions, interfaces, and type guards for working with the output of the compiler.</p>\n<ul>\n<li>Check out the private <a href=\"https://github.com/palantir/documentalist/tree/develop/packages/docs\"><code>@documentalist/docs</code> package</a> for our simple Pug template that renders the <a href=\"http://palantir.github.io/documentalist\">GitHub Pages site</a>.</li>\n<li>Blueprint publishes a React theme in the <a href=\"https://www.npmjs.com/package/@blueprintjs/docs-theme\"><code>@blueprintjs/docs-theme</code></a> package (the same one that powers <a href=\"https://blueprintjs.com/docs)\">https://blueprintjs.com/docs)</a>.</li>\n</ul>\n"
      ],
      "contentsRaw": "\n@# Client\n\nNow that you've compiled a sweet data file packed with documentation goodness, what next?\n\nWell, you've got some options. This package does not provide the tools to render the data, but they're fairly easy to construct once you understand the data format. The `@documentalist/client` package provides functions, interfaces, and type guards for working with the output of the compiler.\n\n- Check out the private [`@documentalist/docs` package](https://github.com/palantir/documentalist/tree/develop/packages/docs) for our simple Pug template that renders the [GitHub Pages site](http://palantir.github.io/documentalist).\n- Blueprint publishes a React theme in the [`@blueprintjs/docs-theme`](https://www.npmjs.com/package/@blueprintjs/docs-theme) package (the same one that powers https://blueprintjs.com/docs).",
      "metadata": {
        "title": "Client"
      }
    },
    "readme": {
      "reference": "readme",
      "route": "readme",
      "sourcePath": "src\\docs-data\\node_modules\\yargs\\node_modules\\strip-ansi\\readme.md",
      "title": "(untitled)",
      "contents": [
        "<h1 id=\"strip-ansi-build-status\">strip-ansi <a href=\"https://travis-ci.org/chalk/strip-ansi\"><img src=\"https://travis-ci.org/chalk/strip-ansi.svg?branch=master\" alt=\"Build Status\"></a></h1>\n<blockquote>\n<p>Strip <a href=\"https://en.wikipedia.org/wiki/ANSI_escape_code\">ANSI escape codes</a></p>\n</blockquote>\n<h2 id=\"install\">Install</h2>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"variable other readwrite tsx\"><span>$</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>npm</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>install</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>strip</span></span><span class=\"keyword operator arithmetic tsx\"><span>-</span></span><span class=\"variable other readwrite tsx\"><span>ansi</span></span></span></div></pre><h2 id=\"usage\">Usage</h2>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type const js\"><span>const</span></span><span>&nbsp;</span><span class=\"constant other js\"><span>stripAnsi</span></span><span>&nbsp;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&nbsp;</span><span class=\"meta function-call js\"><span class=\"support function js\"><span>require</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span>strip-ansi</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>stripAnsi</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span class=\"constant character escape js\"><span>\\u001B</span></span><span>[4mUnicorn</span><span class=\"constant character escape js\"><span>\\u001B</span></span><span>[0m</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>=&gt;&nbsp;&#39;Unicorn&#39;</span></span></span></div></pre><h2 id=\"related\">Related</h2>\n<ul>\n<li><a href=\"https://github.com/chalk/strip-ansi-cli\">strip-ansi-cli</a> - CLI for this module</li>\n<li><a href=\"https://github.com/chalk/has-ansi\">has-ansi</a> - Check if a string has ANSI escape codes</li>\n<li><a href=\"https://github.com/chalk/ansi-regex\">ansi-regex</a> - Regular expression for matching ANSI escape codes</li>\n<li><a href=\"https://github.com/chalk/chalk\">chalk</a> - Terminal string styling done right</li>\n</ul>\n<h2 id=\"maintainers\">Maintainers</h2>\n<ul>\n<li><a href=\"https://github.com/sindresorhus\">Sindre Sorhus</a></li>\n<li><a href=\"https://github.com/qix-\">Josh Junon</a></li>\n</ul>\n<h2 id=\"license\">License</h2>\n<p>MIT</p>\n"
      ],
      "contentsRaw": "# strip-ansi [![Build Status](https://travis-ci.org/chalk/strip-ansi.svg?branch=master)](https://travis-ci.org/chalk/strip-ansi)\n\n> Strip [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code)\n\n\n## Install\n\n```\n$ npm install strip-ansi\n```\n\n\n## Usage\n\n```js\nconst stripAnsi = require('strip-ansi');\n\nstripAnsi('\\u001B[4mUnicorn\\u001B[0m');\n//=> 'Unicorn'\n```\n\n\n## Related\n\n- [strip-ansi-cli](https://github.com/chalk/strip-ansi-cli) - CLI for this module\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [chalk](https://github.com/chalk/chalk) - Terminal string styling done right\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n\n## License\n\nMIT",
      "metadata": {}
    },
    "CHANGELOG": {
      "reference": "CHANGELOG",
      "route": "CHANGELOG",
      "sourcePath": "src\\docs-data\\node_modules\\yargs\\node_modules\\yargs-parser\\CHANGELOG.md",
      "title": "(untitled)",
      "contents": [
        "<h1 id=\"change-log\">Change Log</h1>\n<p>All notable changes to this project will be documented in this file. See <a href=\"https://github.com/conventional-changelog/standard-version\">standard-version</a> for commit guidelines.</p>\n<p><a name=\"8.1.0\"></a></p>\n<h1 id=\"8-1-0-2017-12-20-\"><a href=\"https://github.com/yargs/yargs-parser/compare/v8.0.0...v8.1.0\">8.1.0</a> (2017-12-20)</h1>\n<h3 id=\"bug-fixes\">Bug Fixes</h3>\n<ul>\n<li>allow null config values (<a href=\"https://github.com/yargs/yargs-parser/issues/108\">#108</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/d8b14f9\">d8b14f9</a>)</li>\n<li>ensure consistent parsing of dot-notation arguments (<a href=\"https://github.com/yargs/yargs-parser/issues/102\">#102</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/c9bd79c\">c9bd79c</a>)</li>\n<li>implement <a href=\"https://github.com/antoniom\">@antoniom</a>&#39;s fix for camel-case expansion (<a href=\"https://github.com/yargs/yargs-parser/commit/3087e1d\">3087e1d</a>)</li>\n<li>only run coercion functions once, despite aliases. (<a href=\"https://github.com/yargs/yargs-parser/issues/76\">#76</a>) (<a href=\"https://github.com/yargs/yargs-parser/issues/103\">#103</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/507aaef\">507aaef</a>)</li>\n<li>scientific notation circumvented bounds check (<a href=\"https://github.com/yargs/yargs-parser/issues/110\">#110</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/3571f57\">3571f57</a>)</li>\n<li>tokenizer should ignore spaces at the beginning of the argString (<a href=\"https://github.com/yargs/yargs-parser/issues/106\">#106</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/f34ead9\">f34ead9</a>)</li>\n</ul>\n<h3 id=\"features\">Features</h3>\n<ul>\n<li>make combining arrays a configurable option (<a href=\"https://github.com/yargs/yargs-parser/issues/111\">#111</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/c8bf536\">c8bf536</a>)</li>\n<li>merge array from arguments with array from config (<a href=\"https://github.com/yargs/yargs-parser/issues/83\">#83</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/806ddd6\">806ddd6</a>)</li>\n</ul>\n<p><a name=\"8.0.0\"></a></p>\n<h1 id=\"8-0-0-2017-10-05-\"><a href=\"https://github.com/yargs/yargs-parser/compare/v7.0.0...v8.0.0\">8.0.0</a> (2017-10-05)</h1>\n<h3 id=\"bug-fixes\">Bug Fixes</h3>\n<ul>\n<li>Ignore multiple spaces between arguments. (<a href=\"https://github.com/yargs/yargs-parser/issues/100\">#100</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/d137227\">d137227</a>)</li>\n</ul>\n<h3 id=\"features\">Features</h3>\n<ul>\n<li>allow configuration of prefix for boolean negation (<a href=\"https://github.com/yargs/yargs-parser/issues/94\">#94</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/00bde7d\">00bde7d</a>)</li>\n<li>reworking how numbers are parsed (<a href=\"https://github.com/yargs/yargs-parser/issues/104\">#104</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/fba00eb\">fba00eb</a>)</li>\n</ul>\n<h3 id=\"breaking-changes\">BREAKING CHANGES</h3>\n<ul>\n<li>strings that fail <code>Number.isSafeInteger()</code> are no longer coerced into numbers. </li>\n</ul>\n<p><a name=\"7.0.0\"></a></p>\n<h1 id=\"7-0-0-2017-05-02-\"><a href=\"https://github.com/yargs/yargs-parser/compare/v6.0.1...v7.0.0\">7.0.0</a> (2017-05-02)</h1>\n<h3 id=\"chores\">Chores</h3>\n<ul>\n<li>revert populate-- logic (<a href=\"https://github.com/yargs/yargs-parser/issues/91\">#91</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/6003e6d\">6003e6d</a>)</li>\n</ul>\n<h3 id=\"breaking-changes\">BREAKING CHANGES</h3>\n<ul>\n<li>populate-- now defaults to false.</li>\n</ul>\n<p><a name=\"6.0.1\"></a></p>\n<h2 id=\"6-0-1-2017-05-01-\"><a href=\"https://github.com/yargs/yargs-parser/compare/v6.0.0...v6.0.1\">6.0.1</a> (2017-05-01)</h2>\n<h3 id=\"bug-fixes\">Bug Fixes</h3>\n<ul>\n<li>default &#39;--&#39; to undefined when not provided; this is closer to the array API (<a href=\"https://github.com/yargs/yargs-parser/issues/90\">#90</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/4e739cc\">4e739cc</a>)</li>\n</ul>\n<p><a name=\"6.0.0\"></a></p>\n<h1 id=\"6-0-0-2017-05-01-\"><a href=\"https://github.com/yargs/yargs-parser/compare/v4.2.1...v6.0.0\">6.0.0</a> (2017-05-01)</h1>\n<h3 id=\"bug-fixes\">Bug Fixes</h3>\n<ul>\n<li>environment variables should take precedence over config file (<a href=\"https://github.com/yargs/yargs-parser/issues/81\">#81</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/76cee1f\">76cee1f</a>)</li>\n<li>parsing hints should apply for dot notation keys (<a href=\"https://github.com/yargs/yargs-parser/issues/86\">#86</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/3e47d62\">3e47d62</a>)</li>\n</ul>\n<h3 id=\"chores\">Chores</h3>\n<ul>\n<li>upgrade to newest version of camelcase (<a href=\"https://github.com/yargs/yargs-parser/issues/87\">#87</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/f1903aa\">f1903aa</a>)</li>\n</ul>\n<h3 id=\"features\">Features</h3>\n<ul>\n<li>add -- option which allows arguments after the -- flag to be returned separated from positional arguments (<a href=\"https://github.com/yargs/yargs-parser/issues/84\">#84</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/2572ca8\">2572ca8</a>)</li>\n<li>when parsing stops, we now populate &quot;--&quot; by default (<a href=\"https://github.com/yargs/yargs-parser/issues/88\">#88</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/cd666db\">cd666db</a>)</li>\n</ul>\n<h3 id=\"breaking-changes\">BREAKING CHANGES</h3>\n<ul>\n<li>rather than placing arguments in &quot;_&quot;, when parsing is stopped via &quot;--&quot;; we now populate an array called &quot;--&quot; by default.</li>\n<li>camelcase now requires Node 4+.</li>\n<li>environment variables will now override config files (args, env, config-file, config-object)</li>\n</ul>\n<p><a name=\"5.0.0\"></a></p>\n<h1 id=\"5-0-0-2017-02-18-\"><a href=\"https://github.com/yargs/yargs-parser/compare/v4.2.1...v5.0.0\">5.0.0</a> (2017-02-18)</h1>\n<h3 id=\"bug-fixes\">Bug Fixes</h3>\n<ul>\n<li>environment variables should take precedence over config file (<a href=\"https://github.com/yargs/yargs-parser/issues/81\">#81</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/76cee1f\">76cee1f</a>)</li>\n</ul>\n<h3 id=\"breaking-changes\">BREAKING CHANGES</h3>\n<ul>\n<li>environment variables will now override config files (args, env, config-file, config-object)</li>\n</ul>\n<p><a name=\"4.2.1\"></a></p>\n<h2 id=\"4-2-1-2017-01-02-\"><a href=\"https://github.com/yargs/yargs-parser/compare/v4.2.0...v4.2.1\">4.2.1</a> (2017-01-02)</h2>\n<h3 id=\"bug-fixes\">Bug Fixes</h3>\n<ul>\n<li>flatten/duplicate regression (<a href=\"https://github.com/yargs/yargs-parser/issues/75\">#75</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/68d68a0\">68d68a0</a>)</li>\n</ul>\n<p><a name=\"4.2.0\"></a></p>\n<h1 id=\"4-2-0-2016-12-01-\"><a href=\"https://github.com/yargs/yargs-parser/compare/v4.1.0...v4.2.0\">4.2.0</a> (2016-12-01)</h1>\n<h3 id=\"bug-fixes\">Bug Fixes</h3>\n<ul>\n<li>inner objects in configs had their keys appended to top-level key when dot-notation was disabled (<a href=\"https://github.com/yargs/yargs-parser/issues/72\">#72</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/0b1b5f9\">0b1b5f9</a>)</li>\n</ul>\n<h3 id=\"features\">Features</h3>\n<ul>\n<li>allow multiple arrays to be provided, rather than always combining (<a href=\"https://github.com/yargs/yargs-parser/issues/71\">#71</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/0f0fb2d\">0f0fb2d</a>)</li>\n</ul>\n<p><a name=\"4.1.0\"></a></p>\n<h1 id=\"4-1-0-2016-11-07-\"><a href=\"https://github.com/yargs/yargs-parser/compare/v4.0.2...v4.1.0\">4.1.0</a> (2016-11-07)</h1>\n<h3 id=\"features\">Features</h3>\n<ul>\n<li>apply coercions to default options (<a href=\"https://github.com/yargs/yargs-parser/issues/65\">#65</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/c79052b\">c79052b</a>)</li>\n<li>handle dot notation boolean options (<a href=\"https://github.com/yargs/yargs-parser/issues/63\">#63</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/02c3545\">02c3545</a>)</li>\n</ul>\n<p><a name=\"4.0.2\"></a></p>\n<h2 id=\"4-0-2-2016-09-30-\"><a href=\"https://github.com/yargs/yargs-parser/compare/v4.0.1...v4.0.2\">4.0.2</a> (2016-09-30)</h2>\n<h3 id=\"bug-fixes\">Bug Fixes</h3>\n<ul>\n<li>whoops, let&#39;s make the assign not change the Object key order (<a href=\"https://github.com/yargs/yargs-parser/commit/29d069a\">29d069a</a>)</li>\n</ul>\n<p><a name=\"4.0.1\"></a></p>\n<h2 id=\"4-0-1-2016-09-30-\"><a href=\"https://github.com/yargs/yargs-parser/compare/v4.0.0...v4.0.1\">4.0.1</a> (2016-09-30)</h2>\n<h3 id=\"bug-fixes\">Bug Fixes</h3>\n<ul>\n<li>lodash.assign was deprecated (<a href=\"https://github.com/yargs/yargs-parser/issues/59\">#59</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/5e7eb11\">5e7eb11</a>)</li>\n</ul>\n<p><a name=\"4.0.0\"></a></p>\n<h1 id=\"4-0-0-2016-09-26-\"><a href=\"https://github.com/yargs/yargs-parser/compare/v3.2.0...v4.0.0\">4.0.0</a> (2016-09-26)</h1>\n<h3 id=\"bug-fixes\">Bug Fixes</h3>\n<ul>\n<li>coerce should be applied to the final objects and arrays created (<a href=\"https://github.com/yargs/yargs-parser/issues/57\">#57</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/4ca69da\">4ca69da</a>)</li>\n</ul>\n<h3 id=\"breaking-changes\">BREAKING CHANGES</h3>\n<ul>\n<li>coerce is no longer applied to individual arguments in an implicit array.</li>\n</ul>\n<p><a name=\"3.2.0\"></a></p>\n<h1 id=\"3-2-0-2016-08-13-\"><a href=\"https://github.com/yargs/yargs-parser/compare/v3.1.0...v3.2.0\">3.2.0</a> (2016-08-13)</h1>\n<h3 id=\"features\">Features</h3>\n<ul>\n<li>coerce full array instead of each element (<a href=\"https://github.com/yargs/yargs-parser/issues/51\">#51</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/cc4dc56\">cc4dc56</a>)</li>\n</ul>\n<p><a name=\"3.1.0\"></a></p>\n<h1 id=\"3-1-0-2016-08-09-\"><a href=\"https://github.com/yargs/yargs-parser/compare/v3.0.0...v3.1.0\">3.1.0</a> (2016-08-09)</h1>\n<h3 id=\"bug-fixes\">Bug Fixes</h3>\n<ul>\n<li>address pkgConf parsing bug outlined in <a href=\"https://github.com/yargs/yargs-parser/issues/37\">#37</a> (<a href=\"https://github.com/yargs/yargs-parser/issues/45\">#45</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/be76ee6\">be76ee6</a>)</li>\n<li>better parsing of negative values (<a href=\"https://github.com/yargs/yargs-parser/issues/44\">#44</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/2e43692\">2e43692</a>)</li>\n<li>check aliases when guessing defaults for arguments fixes <a href=\"https://github.com/yargs/yargs-parser/issues/41\">#41</a> (<a href=\"https://github.com/yargs/yargs-parser/issues/43\">#43</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/f3e4616\">f3e4616</a>)</li>\n</ul>\n<h3 id=\"features\">Features</h3>\n<ul>\n<li>added coerce option, for providing specialized argument parsing (<a href=\"https://github.com/yargs/yargs-parser/issues/42\">#42</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/7b49cd2\">7b49cd2</a>)</li>\n</ul>\n<p><a name=\"3.0.0\"></a></p>\n<h1 id=\"3-0-0-2016-08-07-\"><a href=\"https://github.com/yargs/yargs-parser/compare/v2.4.1...v3.0.0\">3.0.0</a> (2016-08-07)</h1>\n<h3 id=\"bug-fixes\">Bug Fixes</h3>\n<ul>\n<li>parsing issue with numeric character in group of options (<a href=\"https://github.com/yargs/yargs-parser/issues/19\">#19</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/f743236\">f743236</a>)</li>\n<li>upgraded lodash.assign (<a href=\"https://github.com/yargs/yargs-parser/commit/5d7fdf4\">5d7fdf4</a>)</li>\n</ul>\n<h3 id=\"breaking-changes\">BREAKING CHANGES</h3>\n<ul>\n<li>subtle change to how values are parsed in a group of single-character arguments.</li>\n<li><em>first released in 3.1.0, better handling of negative values should be considered a breaking change.</em></li>\n</ul>\n<p><a name=\"2.4.1\"></a></p>\n<h2 id=\"2-4-1-2016-07-16-\"><a href=\"https://github.com/yargs/yargs-parser/compare/v2.4.0...v2.4.1\">2.4.1</a> (2016-07-16)</h2>\n<h3 id=\"bug-fixes\">Bug Fixes</h3>\n<ul>\n<li><strong>count:</strong> do not increment a default value (<a href=\"https://github.com/yargs/yargs-parser/issues/39\">#39</a>) (<a href=\"https://github.com/yargs/yargs-parser/commit/b04a189\">b04a189</a>)</li>\n</ul>\n<p><a name=\"2.4.0\"></a></p>\n<h1 id=\"2-4-0-2016-04-11-\"><a href=\"https://github.com/yargs/yargs-parser/compare/v2.3.0...v2.4.0\">2.4.0</a> (2016-04-11)</h1>\n<h3 id=\"features\">Features</h3>\n<ul>\n<li><strong>environment:</strong> Support nested options in environment variables (<a href=\"https://github.com/yargs/yargs-parser/issues/26\">#26</a>) thanks <a href=\"https://github.com/elas7\">@elas7</a> \\o/ (<a href=\"https://github.com/yargs/yargs-parser/commit/020778b\">020778b</a>)</li>\n</ul>\n<p><a name=\"2.3.0\"></a></p>\n<h1 id=\"2-3-0-2016-04-09-\"><a href=\"https://github.com/yargs/yargs-parser/compare/v2.2.0...v2.3.0\">2.3.0</a> (2016-04-09)</h1>\n<h3 id=\"bug-fixes\">Bug Fixes</h3>\n<ul>\n<li><strong>boolean:</strong> fix for boolean options with non boolean defaults (#20) (<a href=\"https://github.com/yargs/yargs-parser/commit/2dbe86b\">2dbe86b</a>), closes <a href=\"https://github.com/(/issues/20\">(#20</a></li>\n<li><strong>package:</strong> remove tests from tarball (<a href=\"https://github.com/yargs/yargs-parser/commit/0353c0d\">0353c0d</a>)</li>\n<li><strong>parsing:</strong> handle calling short option with an empty string as the next value. (<a href=\"https://github.com/yargs/yargs-parser/commit/a867165\">a867165</a>)</li>\n<li>boolean flag when next value contains the strings &#39;true&#39; or &#39;false&#39;. (<a href=\"https://github.com/yargs/yargs-parser/commit/69941a6\">69941a6</a>)</li>\n<li>update dependencies; add standard-version bin for next release (#24) (<a href=\"https://github.com/yargs/yargs-parser/commit/822d9d5\">822d9d5</a>)</li>\n</ul>\n<h3 id=\"features\">Features</h3>\n<ul>\n<li><strong>configuration:</strong> Allow to pass configuration objects to yargs-parser (<a href=\"https://github.com/yargs/yargs-parser/commit/0780900\">0780900</a>)</li>\n<li><strong>normalize:</strong> allow normalize to work with arrays (<a href=\"https://github.com/yargs/yargs-parser/commit/e0eaa1a\">e0eaa1a</a>)</li>\n</ul>\n"
      ],
      "contentsRaw": "# Change Log\n\nAll notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines.\n\n<a name=\"8.1.0\"></a>\n# [8.1.0](https://github.com/yargs/yargs-parser/compare/v8.0.0...v8.1.0) (2017-12-20)\n\n\n### Bug Fixes\n\n* allow null config values ([#108](https://github.com/yargs/yargs-parser/issues/108)) ([d8b14f9](https://github.com/yargs/yargs-parser/commit/d8b14f9))\n* ensure consistent parsing of dot-notation arguments ([#102](https://github.com/yargs/yargs-parser/issues/102)) ([c9bd79c](https://github.com/yargs/yargs-parser/commit/c9bd79c))\n* implement [@antoniom](https://github.com/antoniom)'s fix for camel-case expansion ([3087e1d](https://github.com/yargs/yargs-parser/commit/3087e1d))\n* only run coercion functions once, despite aliases. ([#76](https://github.com/yargs/yargs-parser/issues/76)) ([#103](https://github.com/yargs/yargs-parser/issues/103)) ([507aaef](https://github.com/yargs/yargs-parser/commit/507aaef))\n* scientific notation circumvented bounds check ([#110](https://github.com/yargs/yargs-parser/issues/110)) ([3571f57](https://github.com/yargs/yargs-parser/commit/3571f57))\n* tokenizer should ignore spaces at the beginning of the argString ([#106](https://github.com/yargs/yargs-parser/issues/106)) ([f34ead9](https://github.com/yargs/yargs-parser/commit/f34ead9))\n\n\n### Features\n\n* make combining arrays a configurable option ([#111](https://github.com/yargs/yargs-parser/issues/111)) ([c8bf536](https://github.com/yargs/yargs-parser/commit/c8bf536))\n* merge array from arguments with array from config ([#83](https://github.com/yargs/yargs-parser/issues/83)) ([806ddd6](https://github.com/yargs/yargs-parser/commit/806ddd6))\n\n\n\n<a name=\"8.0.0\"></a>\n# [8.0.0](https://github.com/yargs/yargs-parser/compare/v7.0.0...v8.0.0) (2017-10-05)\n\n\n### Bug Fixes\n\n* Ignore multiple spaces between arguments. ([#100](https://github.com/yargs/yargs-parser/issues/100)) ([d137227](https://github.com/yargs/yargs-parser/commit/d137227))\n\n\n### Features\n\n* allow configuration of prefix for boolean negation ([#94](https://github.com/yargs/yargs-parser/issues/94)) ([00bde7d](https://github.com/yargs/yargs-parser/commit/00bde7d))\n* reworking how numbers are parsed ([#104](https://github.com/yargs/yargs-parser/issues/104)) ([fba00eb](https://github.com/yargs/yargs-parser/commit/fba00eb))\n\n\n### BREAKING CHANGES\n\n* strings that fail `Number.isSafeInteger()` are no longer coerced into numbers. \n\n\n\n<a name=\"7.0.0\"></a>\n# [7.0.0](https://github.com/yargs/yargs-parser/compare/v6.0.1...v7.0.0) (2017-05-02)\n\n\n### Chores\n\n* revert populate-- logic ([#91](https://github.com/yargs/yargs-parser/issues/91)) ([6003e6d](https://github.com/yargs/yargs-parser/commit/6003e6d))\n\n\n### BREAKING CHANGES\n\n* populate-- now defaults to false.\n\n\n\n<a name=\"6.0.1\"></a>\n## [6.0.1](https://github.com/yargs/yargs-parser/compare/v6.0.0...v6.0.1) (2017-05-01)\n\n\n### Bug Fixes\n\n* default '--' to undefined when not provided; this is closer to the array API ([#90](https://github.com/yargs/yargs-parser/issues/90)) ([4e739cc](https://github.com/yargs/yargs-parser/commit/4e739cc))\n\n\n\n<a name=\"6.0.0\"></a>\n# [6.0.0](https://github.com/yargs/yargs-parser/compare/v4.2.1...v6.0.0) (2017-05-01)\n\n\n### Bug Fixes\n\n* environment variables should take precedence over config file ([#81](https://github.com/yargs/yargs-parser/issues/81)) ([76cee1f](https://github.com/yargs/yargs-parser/commit/76cee1f))\n* parsing hints should apply for dot notation keys ([#86](https://github.com/yargs/yargs-parser/issues/86)) ([3e47d62](https://github.com/yargs/yargs-parser/commit/3e47d62))\n\n\n### Chores\n\n* upgrade to newest version of camelcase ([#87](https://github.com/yargs/yargs-parser/issues/87)) ([f1903aa](https://github.com/yargs/yargs-parser/commit/f1903aa))\n\n\n### Features\n\n* add -- option which allows arguments after the -- flag to be returned separated from positional arguments ([#84](https://github.com/yargs/yargs-parser/issues/84)) ([2572ca8](https://github.com/yargs/yargs-parser/commit/2572ca8))\n* when parsing stops, we now populate \"--\" by default ([#88](https://github.com/yargs/yargs-parser/issues/88)) ([cd666db](https://github.com/yargs/yargs-parser/commit/cd666db))\n\n\n### BREAKING CHANGES\n\n* rather than placing arguments in \"_\", when parsing is stopped via \"--\"; we now populate an array called \"--\" by default.\n* camelcase now requires Node 4+.\n* environment variables will now override config files (args, env, config-file, config-object)\n\n\n\n<a name=\"5.0.0\"></a>\n# [5.0.0](https://github.com/yargs/yargs-parser/compare/v4.2.1...v5.0.0) (2017-02-18)\n\n\n### Bug Fixes\n\n* environment variables should take precedence over config file ([#81](https://github.com/yargs/yargs-parser/issues/81)) ([76cee1f](https://github.com/yargs/yargs-parser/commit/76cee1f))\n\n\n### BREAKING CHANGES\n\n* environment variables will now override config files (args, env, config-file, config-object)\n\n\n\n<a name=\"4.2.1\"></a>\n## [4.2.1](https://github.com/yargs/yargs-parser/compare/v4.2.0...v4.2.1) (2017-01-02)\n\n\n### Bug Fixes\n\n* flatten/duplicate regression ([#75](https://github.com/yargs/yargs-parser/issues/75)) ([68d68a0](https://github.com/yargs/yargs-parser/commit/68d68a0))\n\n\n\n<a name=\"4.2.0\"></a>\n# [4.2.0](https://github.com/yargs/yargs-parser/compare/v4.1.0...v4.2.0) (2016-12-01)\n\n\n### Bug Fixes\n\n* inner objects in configs had their keys appended to top-level key when dot-notation was disabled ([#72](https://github.com/yargs/yargs-parser/issues/72)) ([0b1b5f9](https://github.com/yargs/yargs-parser/commit/0b1b5f9))\n\n\n### Features\n\n* allow multiple arrays to be provided, rather than always combining ([#71](https://github.com/yargs/yargs-parser/issues/71)) ([0f0fb2d](https://github.com/yargs/yargs-parser/commit/0f0fb2d))\n\n\n\n<a name=\"4.1.0\"></a>\n# [4.1.0](https://github.com/yargs/yargs-parser/compare/v4.0.2...v4.1.0) (2016-11-07)\n\n\n### Features\n\n* apply coercions to default options ([#65](https://github.com/yargs/yargs-parser/issues/65)) ([c79052b](https://github.com/yargs/yargs-parser/commit/c79052b))\n* handle dot notation boolean options ([#63](https://github.com/yargs/yargs-parser/issues/63)) ([02c3545](https://github.com/yargs/yargs-parser/commit/02c3545))\n\n\n\n<a name=\"4.0.2\"></a>\n## [4.0.2](https://github.com/yargs/yargs-parser/compare/v4.0.1...v4.0.2) (2016-09-30)\n\n\n### Bug Fixes\n\n* whoops, let's make the assign not change the Object key order ([29d069a](https://github.com/yargs/yargs-parser/commit/29d069a))\n\n\n\n<a name=\"4.0.1\"></a>\n## [4.0.1](https://github.com/yargs/yargs-parser/compare/v4.0.0...v4.0.1) (2016-09-30)\n\n\n### Bug Fixes\n\n* lodash.assign was deprecated ([#59](https://github.com/yargs/yargs-parser/issues/59)) ([5e7eb11](https://github.com/yargs/yargs-parser/commit/5e7eb11))\n\n\n\n<a name=\"4.0.0\"></a>\n# [4.0.0](https://github.com/yargs/yargs-parser/compare/v3.2.0...v4.0.0) (2016-09-26)\n\n\n### Bug Fixes\n\n* coerce should be applied to the final objects and arrays created ([#57](https://github.com/yargs/yargs-parser/issues/57)) ([4ca69da](https://github.com/yargs/yargs-parser/commit/4ca69da))\n\n\n### BREAKING CHANGES\n\n* coerce is no longer applied to individual arguments in an implicit array.\n\n\n\n<a name=\"3.2.0\"></a>\n# [3.2.0](https://github.com/yargs/yargs-parser/compare/v3.1.0...v3.2.0) (2016-08-13)\n\n\n### Features\n\n* coerce full array instead of each element ([#51](https://github.com/yargs/yargs-parser/issues/51)) ([cc4dc56](https://github.com/yargs/yargs-parser/commit/cc4dc56))\n\n\n\n<a name=\"3.1.0\"></a>\n# [3.1.0](https://github.com/yargs/yargs-parser/compare/v3.0.0...v3.1.0) (2016-08-09)\n\n\n### Bug Fixes\n\n* address pkgConf parsing bug outlined in [#37](https://github.com/yargs/yargs-parser/issues/37) ([#45](https://github.com/yargs/yargs-parser/issues/45)) ([be76ee6](https://github.com/yargs/yargs-parser/commit/be76ee6))\n* better parsing of negative values ([#44](https://github.com/yargs/yargs-parser/issues/44)) ([2e43692](https://github.com/yargs/yargs-parser/commit/2e43692))\n* check aliases when guessing defaults for arguments fixes [#41](https://github.com/yargs/yargs-parser/issues/41) ([#43](https://github.com/yargs/yargs-parser/issues/43)) ([f3e4616](https://github.com/yargs/yargs-parser/commit/f3e4616))\n\n\n### Features\n\n* added coerce option, for providing specialized argument parsing ([#42](https://github.com/yargs/yargs-parser/issues/42)) ([7b49cd2](https://github.com/yargs/yargs-parser/commit/7b49cd2))\n\n\n\n<a name=\"3.0.0\"></a>\n# [3.0.0](https://github.com/yargs/yargs-parser/compare/v2.4.1...v3.0.0) (2016-08-07)\n\n\n### Bug Fixes\n\n* parsing issue with numeric character in group of options ([#19](https://github.com/yargs/yargs-parser/issues/19)) ([f743236](https://github.com/yargs/yargs-parser/commit/f743236))\n* upgraded lodash.assign ([5d7fdf4](https://github.com/yargs/yargs-parser/commit/5d7fdf4))\n\n### BREAKING CHANGES\n\n* subtle change to how values are parsed in a group of single-character arguments.\n* _first released in 3.1.0, better handling of negative values should be considered a breaking change._\n\n\n\n<a name=\"2.4.1\"></a>\n## [2.4.1](https://github.com/yargs/yargs-parser/compare/v2.4.0...v2.4.1) (2016-07-16)\n\n\n### Bug Fixes\n\n* **count:** do not increment a default value ([#39](https://github.com/yargs/yargs-parser/issues/39)) ([b04a189](https://github.com/yargs/yargs-parser/commit/b04a189))\n\n\n\n<a name=\"2.4.0\"></a>\n# [2.4.0](https://github.com/yargs/yargs-parser/compare/v2.3.0...v2.4.0) (2016-04-11)\n\n\n### Features\n\n* **environment:** Support nested options in environment variables ([#26](https://github.com/yargs/yargs-parser/issues/26)) thanks [@elas7](https://github.com/elas7) \\o/ ([020778b](https://github.com/yargs/yargs-parser/commit/020778b))\n\n\n\n<a name=\"2.3.0\"></a>\n# [2.3.0](https://github.com/yargs/yargs-parser/compare/v2.2.0...v2.3.0) (2016-04-09)\n\n\n### Bug Fixes\n\n* **boolean:** fix for boolean options with non boolean defaults (#20) ([2dbe86b](https://github.com/yargs/yargs-parser/commit/2dbe86b)), closes [(#20](https://github.com/(/issues/20)\n* **package:** remove tests from tarball ([0353c0d](https://github.com/yargs/yargs-parser/commit/0353c0d))\n* **parsing:** handle calling short option with an empty string as the next value. ([a867165](https://github.com/yargs/yargs-parser/commit/a867165))\n* boolean flag when next value contains the strings 'true' or 'false'. ([69941a6](https://github.com/yargs/yargs-parser/commit/69941a6))\n* update dependencies; add standard-version bin for next release (#24) ([822d9d5](https://github.com/yargs/yargs-parser/commit/822d9d5))\n\n### Features\n\n* **configuration:** Allow to pass configuration objects to yargs-parser ([0780900](https://github.com/yargs/yargs-parser/commit/0780900))\n* **normalize:** allow normalize to work with arrays ([e0eaa1a](https://github.com/yargs/yargs-parser/commit/e0eaa1a))",
      "metadata": {}
    },
    "CHANGES": {
      "reference": "CHANGES",
      "route": "CHANGES",
      "sourcePath": "src\\docs-data\\node_modules\\asap\\CHANGES.md",
      "title": "(untitled)",
      "contents": [
        "<h2 id=\"2-0-6\">2.0.6</h2>\n<p>Version 2.0.4 adds support for React Native by clarifying in package.json that\nthe browser environment does not support Node.js domains.\nWhy this is necessary, we leave as an exercise for the user.</p>\n<h2 id=\"2-0-3\">2.0.3</h2>\n<p>Version 2.0.3 fixes a bug when adjusting the capacity of the task queue.</p>\n<h2 id=\"2-0-1-2-02\">2.0.1-2.02</h2>\n<p>Version 2.0.1 fixes a bug in the way redirects were expressed that affected the\nfunction of Browserify, but which Mr would tolerate.</p>\n<h2 id=\"2-0-0\">2.0.0</h2>\n<p>Version 2 of ASAP is a full rewrite with a few salient changes.\nFirst, the ASAP source is CommonJS only and designed with <a href=\"https://github.com/substack/node-browserify\">Browserify</a> and\n<a href=\"https://github.com/montagejs/mr\">Browserify-compatible</a> module loaders in mind.</p>\n<p>The new version has been refactored in two dimensions.\nSupport for Node.js and browsers have been separated, using Browserify\nredirects and ASAP has been divided into two modules.\nThe &quot;raw&quot; layer depends on the tasks to catch thrown exceptions and unravel\nNode.js domains.</p>\n<p>The full implementation of ASAP is loadable as <code>require(&quot;asap&quot;)</code> in both Node.js\nand browsers.</p>\n<p>The raw layer that lacks exception handling overhead is loadable as\n<code>require(&quot;asap/raw&quot;)</code>.\nThe interface is the same for both layers.</p>\n<p>Tasks are no longer required to be functions, but can rather be any object that\nimplements <code>task.call()</code>.\nWith this feature you can recycle task objects to avoid garbage collector churn\nand avoid closures in general.</p>\n<p>The implementation has been rigorously documented so that our successors can\nunderstand the scope of the problem that this module solves and all of its\nnuances, ensuring that the next generation of implementations know what details\nare essential.</p>\n<ul>\n<li><a href=\"https://github.com/kriskowal/asap/blob/master/asap.js\">asap.js</a></li>\n<li><a href=\"https://github.com/kriskowal/asap/blob/master/raw.js\">raw.js</a></li>\n<li><a href=\"https://github.com/kriskowal/asap/blob/master/browser-asap.js\">browser-asap.js</a></li>\n<li><a href=\"https://github.com/kriskowal/asap/blob/master/browser-raw.js\">browser-raw.js</a></li>\n</ul>\n<p>The new version has also been rigorously tested across a broad spectrum of\nbrowsers, in both the window and worker context.\nThe following charts capture the browser test results for the most recent\nrelease.\nThe first chart shows test results for ASAP running in the main window context.\nThe second chart shows test results for ASAP running in a web worker context.\nTest results are inconclusive (grey) on browsers that do not support web\nworkers.\nThese data are captured automatically by <a href=\"https://github.com/kriskowal/asap/blob/master/CONTRIBUTING.md\">Continuous\nIntegration</a>.</p>\n<p><img src=\"http://kriskowal-asap.s3-website-us-west-2.amazonaws.com/train/integration-2/saucelabs-results-matrix.svg\" alt=\"Browser Compatibility\"></p>\n<p><img src=\"http://kriskowal-asap.s3-website-us-west-2.amazonaws.com/train/integration-2/saucelabs-worker-results-matrix.svg\" alt=\"Compatibility in Web Workers\"></p>\n"
      ],
      "contentsRaw": "## 2.0.6\n\nVersion 2.0.4 adds support for React Native by clarifying in package.json that\nthe browser environment does not support Node.js domains.\nWhy this is necessary, we leave as an exercise for the user.\n\n## 2.0.3\n\nVersion 2.0.3 fixes a bug when adjusting the capacity of the task queue.\n\n## 2.0.1-2.02\n\nVersion 2.0.1 fixes a bug in the way redirects were expressed that affected the\nfunction of Browserify, but which Mr would tolerate.\n\n## 2.0.0\n\nVersion 2 of ASAP is a full rewrite with a few salient changes.\nFirst, the ASAP source is CommonJS only and designed with [Browserify][] and\n[Browserify-compatible][Mr] module loaders in mind.\n\n[Browserify]: https://github.com/substack/node-browserify\n[Mr]: https://github.com/montagejs/mr\n\nThe new version has been refactored in two dimensions.\nSupport for Node.js and browsers have been separated, using Browserify\nredirects and ASAP has been divided into two modules.\nThe \"raw\" layer depends on the tasks to catch thrown exceptions and unravel\nNode.js domains.\n\nThe full implementation of ASAP is loadable as `require(\"asap\")` in both Node.js\nand browsers.\n\nThe raw layer that lacks exception handling overhead is loadable as\n`require(\"asap/raw\")`.\nThe interface is the same for both layers.\n\nTasks are no longer required to be functions, but can rather be any object that\nimplements `task.call()`.\nWith this feature you can recycle task objects to avoid garbage collector churn\nand avoid closures in general.\n\nThe implementation has been rigorously documented so that our successors can\nunderstand the scope of the problem that this module solves and all of its\nnuances, ensuring that the next generation of implementations know what details\nare essential.\n\n-   [asap.js](https://github.com/kriskowal/asap/blob/master/asap.js)\n-   [raw.js](https://github.com/kriskowal/asap/blob/master/raw.js)\n-   [browser-asap.js](https://github.com/kriskowal/asap/blob/master/browser-asap.js)\n-   [browser-raw.js](https://github.com/kriskowal/asap/blob/master/browser-raw.js)\n\nThe new version has also been rigorously tested across a broad spectrum of\nbrowsers, in both the window and worker context.\nThe following charts capture the browser test results for the most recent\nrelease.\nThe first chart shows test results for ASAP running in the main window context.\nThe second chart shows test results for ASAP running in a web worker context.\nTest results are inconclusive (grey) on browsers that do not support web\nworkers.\nThese data are captured automatically by [Continuous\nIntegration][].\n\n![Browser Compatibility](http://kriskowal-asap.s3-website-us-west-2.amazonaws.com/train/integration-2/saucelabs-results-matrix.svg)\n\n![Compatibility in Web Workers](http://kriskowal-asap.s3-website-us-west-2.amazonaws.com/train/integration-2/saucelabs-worker-results-matrix.svg)\n\n[Continuous Integration]: https://github.com/kriskowal/asap/blob/master/CONTRIBUTING.md",
      "metadata": {}
    },
    "LICENSE": {
      "reference": "LICENSE",
      "route": "LICENSE",
      "sourcePath": "src\\docs-data\\node_modules\\warning\\LICENSE.md",
      "title": "(untitled)",
      "contents": [
        "<p>MIT License</p>\n<p>Copyright (c) 2013-present, Facebook, Inc.</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the &quot;Software&quot;), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.</p>\n"
      ],
      "contentsRaw": "MIT License\n\nCopyright (c) 2013-present, Facebook, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
      "metadata": {}
    },
    "changelog": {
      "reference": "changelog",
      "route": "changelog",
      "sourcePath": "src\\docs-data\\node_modules\\source-map-url\\changelog.md",
      "title": "(untitled)",
      "contents": [
        "<h3 id=\"version-0-4-0-2015-11-12-\">Version 0.4.0 (2015-11-12)</h3>\n<ul>\n<li><p>Changed: sourceMappingURL comments used to be matched only when placed at\nthe end of the script. However, since several commonly used JavaScript\nlibraries do not follow this convention and all popular web browsers accept\nnon-trailing comments, this has been revised.</p>\n<p>So now non-trailing SourceMappingURL comments are matched as well.</p>\n</li>\n</ul>\n<h3 id=\"version-0-3-0-2014-08-16-\">Version 0.3.0 (2014-08-16)</h3>\n<ul>\n<li><p>Changed: sourceMappingURL comments used to be matched only if they appeared\non their own line. However, the spec only says:</p>\n<blockquote>\n<p>The generated code may include a line at the end of the source, with the following form:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>#&nbsp;sourceMappingURL=&lt;url&gt;</span></span></span></div></pre></blockquote>\n<p>So now they are matched also when they appear on the same line as code.</p>\n</li>\n<li><p>Removed: The <code>.set()</code> method. I couldn’t decide how it should work\nconsidering the above change. Moreover, it was unnecessarily complex (and\nwould have gotten worse) for very little gain. It is much easier to run\n<code>.remove()</code> if needed, and then simply <code>code += &quot;\\n//# sourceMappingURL=&quot; +\nurl</code> (using the appropriate comment syntax and newline). KISS.</p>\n</li>\n<li><p>Changed: The <code>.insertBefore()</code> method now always inserts the string exactly\nbefore the sourceMappingURL comment; not before the newline before the\ncomment (if any). Moreover, it does not ensure that the comment will be on a\nnew line anymore. This is up to the caller. KISS.</p>\n</li>\n<li><p>Changed: The <code>.remove()</code> method no longer removes the newline before the\nsourceMappingURL (if any).</p>\n</li>\n<li><p>Changed: Renamed <code>.get()</code> to <code>.getFrom()</code>.</p>\n</li>\n<li><p>Changed: Renamed <code>.remove()</code> to <code>.removeFrom()</code>.</p>\n</li>\n<li><p>Added: The <code>.existsIn()</code> method.</p>\n</li>\n</ul>\n<h3 id=\"version-0-2-0-2014-02-23-\">Version 0.2.0 (2014-02-23)</h3>\n<ul>\n<li>Changed: A space is no longer inserted before the closing comment syntax. If\nsuch a space is desired, it needs to be put in the closing comment syntax\nitself (such as <code>[&quot;/*&quot;, &quot; */&quot;]</code> instead of <code>[&quot;/*&quot;, &quot;*/&quot;]</code>). (Backwards\nincompatible change.)</li>\n</ul>\n<h3 id=\"version-0-1-0-2014-02-22-\">Version 0.1.0 (2014-02-22)</h3>\n<ul>\n<li>Initial release.</li>\n</ul>\n"
      ],
      "contentsRaw": "### Version 0.4.0 (2015-11-12) ###\n\n- Changed: sourceMappingURL comments used to be matched only when placed at\n  the end of the script. However, since several commonly used JavaScript\n  libraries do not follow this convention and all popular web browsers accept\n  non-trailing comments, this has been revised.\n\n  So now non-trailing SourceMappingURL comments are matched as well.\n\n\n### Version 0.3.0 (2014-08-16) ###\n\n- Changed: sourceMappingURL comments used to be matched only if they appeared\n  on their own line. However, the spec only says:\n\n  > The generated code may include a line at the end of the source, with the following form:\n  >\n  >     //# sourceMappingURL=<url>\n\n  So now they are matched also when they appear on the same line as code.\n\n- Removed: The `.set()` method. I couldn’t decide how it should work\n  considering the above change. Moreover, it was unnecessarily complex (and\n  would have gotten worse) for very little gain. It is much easier to run\n  `.remove()` if needed, and then simply `code += \"\\n//# sourceMappingURL=\" +\n  url` (using the appropriate comment syntax and newline). KISS.\n\n- Changed: The `.insertBefore()` method now always inserts the string exactly\n  before the sourceMappingURL comment; not before the newline before the\n  comment (if any). Moreover, it does not ensure that the comment will be on a\n  new line anymore. This is up to the caller. KISS.\n\n- Changed: The `.remove()` method no longer removes the newline before the\n  sourceMappingURL (if any).\n\n- Changed: Renamed `.get()` to `.getFrom()`.\n- Changed: Renamed `.remove()` to `.removeFrom()`.\n\n- Added: The `.existsIn()` method.\n\n\n### Version 0.2.0 (2014-02-23) ###\n\n- Changed: A space is no longer inserted before the closing comment syntax. If\n  such a space is desired, it needs to be put in the closing comment syntax\n  itself (such as `[\"/*\", \" */\"]` instead of `[\"/*\", \"*/\"]`). (Backwards\n  incompatible change.)\n\n\n### Version 0.1.0 (2014-02-22) ###\n\n- Initial release.",
      "metadata": {}
    },
    "HISTORY": {
      "reference": "HISTORY",
      "route": "HISTORY",
      "sourcePath": "src\\docs-data\\node_modules\\classnames\\HISTORY.md",
      "title": "(untitled)",
      "contents": [
        "<h1 id=\"changelog\">Changelog</h1>\n<h2 id=\"v2-2-6-2018-06-08\">v2.2.6 / 2018-06-08</h2>\n<ul>\n<li>Fixed compatibility issue with usage in an es module environment</li>\n</ul>\n<h2 id=\"v2-2-5-2016-05-02\">v2.2.5 / 2016-05-02</h2>\n<ul>\n<li>Improved performance of <code>dedupe</code> variant even further, thanks <a href=\"https://github.com/zertosh\">Andres Suarez</a></li>\n</ul>\n<h2 id=\"v2-2-4-2016-04-25\">v2.2.4 / 2016-04-25</h2>\n<ul>\n<li>Improved performance of <code>dedupe</code> variant by about 2x, thanks <a href=\"https://github.com/bgoscinski\">Bartosz Gościński</a></li>\n</ul>\n<h2 id=\"v2-2-3-2016-01-05\">v2.2.3 / 2016-01-05</h2>\n<ul>\n<li>Updated <code>bind</code> variant to use <code>[].join(&#39; &#39;)</code> as per the main script in 2.2.2</li>\n</ul>\n<h2 id=\"v2-2-2-2016-01-04\">v2.2.2 / 2016-01-04</h2>\n<ul>\n<li>Switched from string concatenation to <code>[].join(&#39; &#39;)</code> for a slight performance gain in the main function.</li>\n</ul>\n<h2 id=\"v2-2-1-2015-11-26\">v2.2.1 / 2015-11-26</h2>\n<ul>\n<li>Add deps parameter to the AMD module, fixes an issue using the Dojo loader, thanks <a href=\"https://github.com/flipperkid\">Chris Jordan</a></li>\n</ul>\n<h2 id=\"v2-2-0-2015-10-18\">v2.2.0 / 2015-10-18</h2>\n<ul>\n<li>added a new <code>bind</code> variant for use with <a href=\"https://github.com/css-modules/css-modules\">css-modules</a> and similar abstractions, thanks to <a href=\"https://github.com/blia\">Kirill Yakovenko</a></li>\n</ul>\n<h2 id=\"v2-1-5-2015-09-30\">v2.1.5 / 2015-09-30</h2>\n<ul>\n<li>reverted a new usage of <code>Object.keys</code> in <code>dedupe.js</code> that slipped through in the last release</li>\n</ul>\n<h2 id=\"v2-1-4-2015-09-30\">v2.1.4 / 2015-09-30</h2>\n<ul>\n<li>new case added to benchmarks</li>\n<li>safer <code>hasOwnProperty</code> check</li>\n<li>AMD module is now named, so you can do the following:</li>\n</ul>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function-call tsx\"><span class=\"entity name function tsx\"><span>define</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"meta array literal tsx\"><span class=\"meta brace square tsx\"><span>[</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>classnames</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span class=\"meta brace square tsx\"><span>]</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta function expression tsx\"><span class=\"storage type function tsx\"><span>function</span></span><span>&nbsp;</span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"variable parameter tsx\"><span>classNames</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function expression tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;</span><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>var</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr tsx\"><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>style</span></span><span>&nbsp;</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"entity name function tsx\"><span>classNames</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>foo</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>bar</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function expression tsx\"><span class=\"meta block tsx\"><span class=\"punctuation whitespace comment leading tsx\"><span>&nbsp;&nbsp;</span></span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;...</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function expression tsx\"><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div></pre><h2 id=\"v2-1-3-2015-07-02\">v2.1.3 / 2015-07-02</h2>\n<ul>\n<li>updated UMD wrapper to support AMD and CommonJS on the same pacge</li>\n</ul>\n<h2 id=\"v2-1-2-2015-05-28\">v2.1.2 / 2015-05-28</h2>\n<ul>\n<li>added a proper UMD wrapper</li>\n</ul>\n<h2 id=\"v2-1-1-2015-05-06\">v2.1.1 / 2015-05-06</h2>\n<ul>\n<li>minor performance improvement thanks to type caching</li>\n<li>improved benchmarking and results output</li>\n</ul>\n<h2 id=\"v2-1-0-2015-05-05\">v2.1.0 / 2015-05-05</h2>\n<ul>\n<li>added alternate <code>dedupe</code> version of classNames, which is slower (10x) but ensures that if a class is added then overridden by a falsy value in a subsequent argument, it is excluded from the result.</li>\n</ul>\n<h2 id=\"v2-0-0-2015-05-03\">v2.0.0 / 2015-05-03</h2>\n<ul>\n<li>performance improvement; switched to <code>Array.isArray</code> for type detection, which is much faster in modern browsers. A polyfill is now required for IE8 support, see the Readme for details.</li>\n</ul>\n<h2 id=\"v1-2-2-2015-04-28\">v1.2.2 / 2015-04-28</h2>\n<ul>\n<li>license comment updates to simiplify certain build scenarios</li>\n</ul>\n<h2 id=\"v1-2-1-2015-04-22\">v1.2.1 / 2015-04-22</h2>\n<ul>\n<li>added safe exporting for requireJS usage</li>\n<li>clarified Bower usage and instructions</li>\n</ul>\n<h2 id=\"v1-2-0-2015-03-17\">v1.2.0 / 2015-03-17</h2>\n<ul>\n<li>added comprehensive support for array arguments, including nested arrays</li>\n<li>simplified code slightly</li>\n</ul>\n<h2 id=\"previous\">Previous</h2>\n<p>Please see the git history for the details of previous versions.</p>\n"
      ],
      "contentsRaw": "# Changelog\n\n## v2.2.6 / 2018-06-08\n\n* Fixed compatibility issue with usage in an es module environment\n\n## v2.2.5 / 2016-05-02\n\n* Improved performance of `dedupe` variant even further, thanks [Andres Suarez](https://github.com/zertosh)\n\n## v2.2.4 / 2016-04-25\n\n* Improved performance of `dedupe` variant by about 2x, thanks [Bartosz Gościński](https://github.com/bgoscinski)\n\n## v2.2.3 / 2016-01-05\n\n* Updated `bind` variant to use `[].join(' ')` as per the main script in 2.2.2\n\n## v2.2.2 / 2016-01-04\n\n* Switched from string concatenation to `[].join(' ')` for a slight performance gain in the main function.\n\n## v2.2.1 / 2015-11-26\n\n* Add deps parameter to the AMD module, fixes an issue using the Dojo loader, thanks [Chris Jordan](https://github.com/flipperkid)\n\n## v2.2.0 / 2015-10-18\n\n* added a new `bind` variant for use with [css-modules](https://github.com/css-modules/css-modules) and similar abstractions, thanks to [Kirill Yakovenko](https://github.com/blia)\n\n## v2.1.5 / 2015-09-30\n\n* reverted a new usage of `Object.keys` in `dedupe.js` that slipped through in the last release\n\n## v2.1.4 / 2015-09-30\n\n* new case added to benchmarks\n* safer `hasOwnProperty` check\n* AMD module is now named, so you can do the following:\n\n```\ndefine([\"classnames\"], function (classNames) {\n  var style = classNames(\"foo\", \"bar\");\n  // ...\n});\n```\n\n## v2.1.3 / 2015-07-02\n\n* updated UMD wrapper to support AMD and CommonJS on the same pacge\n\n## v2.1.2 / 2015-05-28\n\n* added a proper UMD wrapper\n\n## v2.1.1 / 2015-05-06\n\n* minor performance improvement thanks to type caching\n* improved benchmarking and results output\n\n## v2.1.0 / 2015-05-05\n\n* added alternate `dedupe` version of classNames, which is slower (10x) but ensures that if a class is added then overridden by a falsy value in a subsequent argument, it is excluded from the result.\n\n## v2.0.0 / 2015-05-03\n\n* performance improvement; switched to `Array.isArray` for type detection, which is much faster in modern browsers. A polyfill is now required for IE8 support, see the Readme for details.\n\n## v1.2.2 / 2015-04-28\n\n* license comment updates to simiplify certain build scenarios\n\n## v1.2.1 / 2015-04-22\n\n* added safe exporting for requireJS usage\n* clarified Bower usage and instructions\n\n## v1.2.0 / 2015-03-17\n\n* added comprehensive support for array arguments, including nested arrays\n* simplified code slightly\n\n## Previous\n\nPlease see the git history for the details of previous versions.",
      "metadata": {}
    },
    "Readme": {
      "reference": "Readme",
      "route": "Readme",
      "sourcePath": "src\\docs-data\\node_modules\\slugg\\Readme.md",
      "title": "(untitled)",
      "contents": [
        "<h1 id=\"slugg\">Slugg</h1>\n<p>Make strings url-safe.</p>\n<ul>\n<li>Comprehensive tests</li>\n<li>No dependencies</li>\n<li>Not in coffee-script (lol)</li>\n<li>Coerces foreign symbols to their english equivalent</li>\n<li>Doesn&#39;t try to do anything fancy with symbols (just removes them)</li>\n<li>Works in browser (<code>window.slugg</code>) and AMD/CommonJS-flavoured module loaders</li>\n</ul>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"variable other readwrite tsx\"><span>npm</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>install</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>slugg</span></span></span></div></pre><h2 id=\"usage-\">Usage:</h2>\n<h3 id=\"slug-string-separator-tostrip-\">slug(string, [separator, toStrip])</h3>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&nbsp;slug&nbsp;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&nbsp;</span><span class=\"meta function-call js\"><span class=\"support function js\"><span>require</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span>slugg</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>slug</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span>My&nbsp;fantastic&nbsp;blog&nbsp;post</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>-&gt;&nbsp;&#39;my-fantastic-blog-post&#39;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>slug</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span>Today&nbsp;I&nbsp;found&nbsp;£5</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>-&gt;&nbsp;&#39;today-i-found-5&#39;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>slug</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span>I&nbsp;♥&nbsp;you</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>-&gt;&nbsp;&#39;i-you&#39;</span></span></span></div></pre><p>If you want a separator other than &#39;-&#39;, pass it in as the second argument:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>slug</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span>Kevin&nbsp;Spacey</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&nbsp;</span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span>&nbsp;</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>-&gt;&nbsp;&#39;kevin&nbsp;spacey&#39;</span></span></span></div></pre><p>By default, slugg will strip (i.e. remove and not replace) any sort of quotemark: <code>&#39;&quot;’‘”“</code>.</p>\n<p>If you want to control which characters are stripped, pass a regex as the last option\nthat will match the chars you want to replace, eg:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>slug</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span>Mum</span><span class=\"constant character escape js\"><span>\\&#39;</span></span><span>s&nbsp;cooking</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"string regexp js\"><span>&nbsp;</span><span class=\"punctuation definition string begin js\"><span>/</span></span><span>&#39;</span><span class=\"punctuation definition string end js\"><span>/</span></span><span>g</span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>-&gt;&nbsp;&#39;mums-cooking&#39;</span></span></span></div></pre><p>Remember to use the <code>g</code> flag if you want all the matches stripped (not just the first).</p>\n<p>After version 1.1.0, a new syntax has been introduced:</p>\n<h3 id=\"slug-string-options-\">slug(string, [options])</h3>\n<p>If you want a separator other than &#39;-&#39;, pass it in as the <code>separator</code> option:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>slug</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span>Kevin&nbsp;Spacey</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&nbsp;</span><span class=\"meta brace curly js\"><span>{</span></span><span>&nbsp;separator</span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span>&nbsp;</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span>&nbsp;</span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>-&gt;&nbsp;&#39;kevin&nbsp;spacey&#39;</span></span></span></div></pre><p>If you want to control which characters are stripped, pass a regex as the <code>toStrip</code> option\nthat will match the chars you want to replace, eg:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>slug</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span>Mum</span><span class=\"constant character escape js\"><span>\\&#39;</span></span><span>s&nbsp;cooking</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&nbsp;</span><span class=\"meta brace curly js\"><span>{</span></span><span>&nbsp;toStrip</span><span class=\"keyword operator assignment js\"><span>:</span></span><span class=\"string regexp js\"><span>&nbsp;</span><span class=\"punctuation definition string begin js\"><span>/</span></span><span>&#39;</span><span class=\"punctuation definition string end js\"><span>/</span></span><span>g</span></span><span>&nbsp;</span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>-&gt;&nbsp;&#39;mums-cooking&#39;</span></span></span></div></pre><p>Remember to use the <code>g</code> flag if you want all the matches stripped (not just the first).</p>\n<p>By default, slugg will convert your string to lower case. If you want to disable it just\npass the <code>toLowerCase</code> option as <code>false</code>, eg:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>slug</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span>Slugg&nbsp;rocks!</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&nbsp;</span><span class=\"meta brace curly js\"><span>{</span></span><span>&nbsp;toLowerCase</span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&nbsp;</span><span class=\"constant language boolean false js\"><span>false</span></span><span>&nbsp;</span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>-&gt;&nbsp;&#39;Slugg-rocks&#39;</span></span></span></div></pre>"
      ],
      "contentsRaw": "# Slugg\n\nMake strings url-safe.\n\n- Comprehensive tests\n- No dependencies\n- Not in coffee-script (lol)\n- Coerces foreign symbols to their english equivalent\n- Doesn't try to do anything fancy with symbols (just removes them)\n- Works in browser (`window.slugg`) and AMD/CommonJS-flavoured module loaders\n\n```\nnpm install slugg\n```\n\n## Usage:\n\n### slug(string, [separator, toStrip])\n\n```js\nvar slug = require('slugg')\n\nslug('My fantastic blog post')\n//-> 'my-fantastic-blog-post'\n\nslug('Today I found £5')\n//-> 'today-i-found-5'\n\nslug('I ♥ you')\n//-> 'i-you'\n```\n\nIf you want a separator other than '-', pass it in as the second argument:\n\n```js\nslug('Kevin Spacey', ' ')\n//-> 'kevin spacey'\n```\n\nBy default, slugg will strip (i.e. remove and not replace) any sort of quotemark: `'\"’‘”“`.\n\nIf you want to control which characters are stripped, pass a regex as the last option\nthat will match the chars you want to replace, eg:\n\n```js\nslug('Mum\\'s cooking', /'/g)\n//-> 'mums-cooking'\n```\n\nRemember to use the `g` flag if you want all the matches stripped (not just the first).\n\nAfter version 1.1.0, a new syntax has been introduced:\n\n### slug(string, [options])\n\nIf you want a separator other than '-', pass it in as the `separator` option:\n\n```js\nslug('Kevin Spacey', { separator: ' ' })\n//-> 'kevin spacey'\n```\n\nIf you want to control which characters are stripped, pass a regex as the `toStrip` option\nthat will match the chars you want to replace, eg:\n\n```js\nslug('Mum\\'s cooking', { toStrip: /'/g })\n//-> 'mums-cooking'\n```\nRemember to use the `g` flag if you want all the matches stripped (not just the first).\n\nBy default, slugg will convert your string to lower case. If you want to disable it just\npass the `toLowerCase` option as `false`, eg:\n\n```js\nslug('Slugg rocks!', { toLowerCase: false })\n//-> 'Slugg-rocks'\n```",
      "metadata": {}
    },
    "History": {
      "reference": "History",
      "route": "History",
      "sourcePath": "src\\docs-data\\node_modules\\util-deprecate\\History.md",
      "title": "(untitled)",
      "contents": [
        "<h1 id=\"1-0-2-2015-10-07\">1.0.2 / 2015-10-07</h1>\n<ul>\n<li>use try/catch when checking <code>localStorage</code> (#3, @kumavis)</li>\n</ul>\n<h1 id=\"1-0-1-2014-11-25\">1.0.1 / 2014-11-25</h1>\n<ul>\n<li>browser: use <code>console.warn()</code> for deprecation calls</li>\n<li>browser: more jsdocs</li>\n</ul>\n<h1 id=\"1-0-0-2014-04-30\">1.0.0 / 2014-04-30</h1>\n<ul>\n<li>initial commit</li>\n</ul>\n"
      ],
      "contentsRaw": "1.0.2 / 2015-10-07\n==================\n\n  * use try/catch when checking `localStorage` (#3, @kumavis)\n\n1.0.1 / 2014-11-25\n==================\n\n  * browser: use `console.warn()` for deprecation calls\n  * browser: more jsdocs\n\n1.0.0 / 2014-04-30\n==================\n\n  * initial commit",
      "metadata": {}
    },
    "release-notes": {
      "reference": "release-notes",
      "route": "release-notes",
      "sourcePath": "src\\docs-data\\node_modules\\handlebars\\release-notes.md",
      "title": "(untitled)",
      "contents": [
        "<h1 id=\"release-notes\">Release Notes</h1>\n<h2 id=\"development\">Development</h2>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v4.1.2...master\">Commits</a></p>\n<h2 id=\"v4-1-2-april-13th-2019\">v4.1.2 - April 13th, 2019</h2>\n<p>Chore/Test:</p>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1515\">#1515</a> - Port over linting and test for typings (<a href=\"https://api.github.com/users/zimmi88\">@zimmi88</a>)</li>\n<li>chore: add missing typescript dependency, add package-lock.json - 594f1e3</li>\n<li>test: remove safari from saucelabs - 871accc</li>\n</ul>\n<p>Bugfixes: </p>\n<ul>\n<li>fix: prevent RCE through the &quot;lookup&quot;-helper - cd38583</li>\n</ul>\n<p>Compatibility notes:</p>\n<p>Access to the constructor of a class thought <code>{{lookup obj &quot;constructor&quot; }}</code> is now prohibited. This closes \na leak that only half closed in versions 4.0.13 and 4.1.0, but it is a slight incompatibility.</p>\n<p>This kind of access is not the intended use of Handlebars and leads to the vulnerability described\nin #1495. We will <strong>not</strong> increase the major version, because such use is not intended or documented, \nand because of the potential impact of the issue (we fear that most people won&#39;t use a new major version\nand the issue may not be resolved on many systems). </p>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v4.1.1...v4.1.2\">Commits</a></p>\n<h2 id=\"v4-1-1-march-16th-2019\">v4.1.1 - March 16th, 2019</h2>\n<p>Bugfixes:</p>\n<ul>\n<li>fix: add &quot;runtime.d.ts&quot; to allow &quot;require(&#39;handlebars/runtime&#39;)&quot; in TypeScript - 5cedd62</li>\n</ul>\n<p>Refactorings:</p>\n<ul>\n<li>replace &quot;async&quot; with &quot;neo-async&quot; - 048f2ce</li>\n<li>use &quot;substring&quot;-function instead of &quot;substr&quot; - 445ae12</li>\n</ul>\n<p>Compatibility notes:</p>\n<ul>\n<li>This is a bugfix release. There are no breaking change and no new features.</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v4.1.0...v4.1.1\">Commits</a></p>\n<h2 id=\"v4-1-0-february-7th-2019\">v4.1.0 - February 7th, 2019</h2>\n<p>New Features</p>\n<ul>\n<li>import TypeScript typings - 27ac1ee</li>\n</ul>\n<p>Security fixes:</p>\n<ul>\n<li>disallow access to the constructor in templates to prevent RCE - 42841c4, #1495</li>\n</ul>\n<p>Housekeeping</p>\n<ul>\n<li>chore: fix components/handlebars package.json and auto-update on release - bacd473</li>\n<li>chore: Use node 10 to build handlebars - 78dd89c</li>\n<li>chore/doc: Add more release docs - 6b87c21</li>\n</ul>\n<p>Compatibility notes:</p>\n<p>Access to class constructors (i.e. <code>({}).constructor</code>) is now prohibited to prevent\nRemote Code Execution. This means that following construct will no work anymore:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"storage type class tsx\"><span>class</span></span><span>&nbsp;</span><span class=\"entity name type class tsx\"><span>SomeClass</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta class tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"variable other object tsx\"><span>SomeClass</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>staticProperty</span></span><span>&nbsp;</span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"string quoted single tsx\"><span class=\"punctuation definition string begin tsx\"><span>&#39;</span></span><span>static</span><span class=\"punctuation definition string end tsx\"><span>&#39;</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>var</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr tsx\"><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>template</span></span><span>&nbsp;</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>Handlebars</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function tsx\"><span>compile</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"string quoted single tsx\"><span class=\"punctuation definition string begin tsx\"><span>&#39;</span></span><span>{{constructor.staticProperty}}</span><span class=\"punctuation definition string end tsx\"><span>&#39;</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function-call tsx\"><span class=\"support variable dom tsx\"><span>document</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function dom tsx\"><span>getElementById</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"string quoted single tsx\"><span class=\"punctuation definition string begin tsx\"><span>&#39;</span></span><span>output</span><span class=\"punctuation definition string end tsx\"><span>&#39;</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>innerHTML</span></span><span>&nbsp;</span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"entity name function tsx\"><span>template</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"new expr tsx\"><span class=\"keyword operator new tsx\"><span>new</span></span><span>&nbsp;</span><span class=\"entity name type tsx\"><span>SomeClass</span></span><span class=\"meta brace round tsx\"><span>(</span><span>)</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;expected:&nbsp;&#39;static&#39;,&nbsp;but&nbsp;now&nbsp;this&nbsp;is&nbsp;empty.</span></span></span></div></pre><p>This kind of access is not the intended use of Handlebars and leads to the vulnerability described in #1495. We will <strong>not</strong> increase the major version, because such use is not intended or documented, and because of the potential impact of the issue (we fear that most people won&#39;t use a new major version and the issue may not be resolved on many systems).</p>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v4.0.12...v4.1.0\">Commits</a></p>\n<h2 id=\"v4-0-12-september-4th-2018\">v4.0.12 - September 4th, 2018</h2>\n<p>New features:</p>\n<ul>\n<li>none</li>\n</ul>\n<p>Various dependency updates</p>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1464\">#1464</a> - Bump versions of grunt-plugins to 1.x</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1398\">#1398</a> - Chore: updated various dev dependencies</li>\n<li>upgrade uglify-js - d3d3942</li>\n<li>Update grunt-eslint to 20.1.0 - 7729aa9</li>\n<li>Update dependencies &quot;async&quot; to 2.5.0 and &quot;source-map&quot; to 0.6.1 (73d5637)</li>\n</ul>\n<p>Bugfixes:</p>\n<ul>\n<li><a href=\"https://github.com/components/handlebars.js#24\">components/handlebars.js#24</a> Add package.json to components shim</li>\n<li>Updated <code>source-map</code>-package should work better with <code>rollup</code><a href=\"https://github.com/wycats/handlebars.js/issues/1463\">#1463</a></li>\n</ul>\n<p>Removed obsolete code:</p>\n<ul>\n<li>unnecessary check - 0ddff8b</li>\n<li>Use <code>files</code> field - 69c6ca5</li>\n<li>Update jsfiddle to 4.0.11 - 8947dd0</li>\n</ul>\n<p>Compatibility notes:</p>\n<ul>\n<li>No compatibility issues are to be expected</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v4.0.11...v4.0.12\">Commits</a></p>\n<h2 id=\"v4-0-11-october-17th-2017\">v4.0.11 - October 17th, 2017</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/1391\">#1391</a> - <code>uglify-js</code> is unconditionally imported, but only listed as optional dependency (<a href=\"https://github.com/Turbo87\">@Turbo87</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/1233\">#1233</a> - Unable to build under windows - error at test:bin task (<a href=\"https://github.com/blikblum\">@blikblum</a>)</li>\n<li>Update (C) year in the LICENSE file - 21386b6</li>\n</ul>\n<p>Compatibility notes:</p>\n<ul>\n<li>This is a bugfix release. There are no breaking change and no new features.</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v4.0.10...v4.0.11\">Commits</a></p>\n<h2 id=\"v4-0-10-may-21st-2017\">v4.0.10 - May 21st, 2017</h2>\n<ul>\n<li>Fix regression in 4.0.9: Replace &quot;Object.assign&quot; (not support in IE) by &quot;util/extend&quot; - 0e953d1</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v4.0.9...v4.0.10\">Commits</a></p>\n<h2 id=\"v4-0-9-may-21st-2017\">v4.0.9 - May 21st, 2017</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/1327\">#1327</a> Handlebars.compile() does not modify &quot;options&quot; anymore</li>\n<li>pending <a href=\"https://github.com/wycats/handlebars.js/issues/1331\">#1331</a> Attempts to build Handlebars in a Windows environment<ul>\n<li>Fix build in windows - cc554a5</li>\n<li>Ensure LF line-edings in handlebars-template fixtures (*.hbs) - ed879a6</li>\n<li>Run integration test with <code>node handlebars -a ...</code> on Windows - 2e21e2b</li>\n<li>Ensure LF line-edings in lexer-files (*.l) - bdfdbea</li>\n<li>Force LF line-endings for spec/artifacts - b50ef03</li>\n<li>Use istanbul/lib/cli.js instead of node_modules/.bin/istanbul - 6e6269f</li>\n</ul>\n</li>\n<li>TravisCI: Publish valid semver tags independently of the branch - 7378f85</li>\n</ul>\n<p>Compatibility notes:</p>\n<ul>\n<li>No compatibility issues are expected.</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v4.0.8...v4.0.9\">Commits</a></p>\n<h2 id=\"v4-0-8-may-2nd-2017\">v4.0.8 - May 2nd, 2017</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/1341\">#1341</a> <a href=\"https://github.com/wycats/handlebars.js/issues/1342\">#1342</a> Allow partial-blocks to be executed without &quot;options&quot; (<a href=\"https://github.com/nknapp\">@nknapp</a>) - a00c598</li>\n</ul>\n<p>Compatibility notes:</p>\n<ul>\n<li>No breaking changes</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v4.0.7...v4.0.8\">Commits</a></p>\n<h2 id=\"v4-0-7-april-29th-2017\">v4.0.7 - April 29th, 2017</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/1319\">#1319</a>: Fix context-stack when calling block-helpers on null values (<a href=\"https://github.com/nknapp\">@nknapp</a>) - c8f4b57</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1315\">#1315</a> Parser: Change suffix to use ES6 default module export (<a href=\"https://github.com/Turbo87\">@Turbo87</a>)- b617375</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1290\">#1290</a> <a href=\"https://github.com/wycats/handlebars.js/issue/1290\">#1252</a> Add more tests for partial-blocks and inline partials (<a href=\"https://github.com/nknapp\">@nknapp</a>) -  63a8e0c</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issue/1290\">#1252</a> Using @partial-block twice in a template not possible (<a href=\"https://github.com/nknapp\">@nknapp</a>) - 5a164d0</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1310\">#1310</a> Avoid duplicate &quot;sourceMappingURL=&quot; lines. (<a href=\"https://github.com/joonas-lahtinen\">@joonas-lahtinen</a>) - 01b0f65</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1275\">#1275</a> require(&#39;sys&#39;) is deprecated, using &#39;util&#39; instead (<a href=\"https://github.com/travnels\">@travnels</a>) - 406f2ee</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1285\">#1285</a> <a href=\"https://github.com/wycats/handlebars.js/issues/1284\">#1284</a> Make &quot;column&quot;-property of Errors enumerable (<a href=\"https://github.com/nknapp\">@nknapp</a>) - a023cb4</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1285\">#1285</a> Testcase to verify that compile-errors have a column-property (<a href=\"https://github.com/nknapp\">@nknapp</a>) - c7dc353</li>\n</ul>\n<p><a href=\"https://github.com/lawnsea/handlebars.js/compare/v4.0.6...v4.0.7\">Commits</a></p>\n<h2 id=\"v4-0-6-november-12th-2016\">v4.0.6 - November 12th, 2016</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1243\">#1243</a> - Walk up data frames for nested @partial-block (<a href=\"https://github.com/lawnsea\">@lawnsea</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1210\">#1210</a> - Add a new lightweight package based on handlebars in the README (<a href=\"https://github.com/kabirbaidhya\">@kabirbaidhya</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1187\">#1187</a> - Ensure that existing blockParams and depths are respected on dupe programs (<a href=\"https://github.com/charleso\">@charleso</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1191\">#1191</a> - Added cory (<a href=\"https://github.com/leo\">@leo</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1177\">#1177</a> - Preserve License info in Closure Compiler (<a href=\"https://github.com/gennadiylitvinyuk\">@gennadiylitvinyuk</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1171\">#1171</a> - Contributing doc fix: failing thats -&gt; failing tests (<a href=\"https://github.com/paulfalgout\">@paulfalgout</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1166\">#1166</a> - Update license date (<a href=\"https://github.com/timwangdev\">@timwangdev</a>)</li>\n<li>Update jsfiddle to point to latest - 959ee55 (originally dfc7554 by <a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1163\">#1163</a> - Fix typos on decorators-api.md. (<a href=\"https://github.com/adjohnson916\">@adjohnson916</a>)</li>\n<li>Drop extra Error params - 8c19874 (originally 63fdb92 by <a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1153\">#1153</a> - Add documentation for running tests to contributing.md (<a href=\"https://github.com/ryanmurakami\">@ryanmurakami</a>)</li>\n<li>Avoid error in older browsers in test - 400916c (originally a6121ca by <a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li>Update target browser test versions - fee2334 (originally 871c32a by <a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li>Exclude coverage check in exception conditional - 32d6363 (originally 326734b by <a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li>Fix throw when creating exception object in Safari - 20c965c (originally 2ea6119 by <a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li>Update build for modern node versions - 6c9f98c (originally 8289c0b by <a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/1135\">#1135</a> - Relax depth check for context push - c393c81 (originally 25458fd by <a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v4.0.5...v4.0.6\">Commits</a></p>\n<h2 id=\"v4-0-5-november-19th-2015\">v4.0.5 - November 19th, 2015</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1132\">#1132</a> - Update uglify-js to avoid vulnerability (<a href=\"https://github.com/plynchnlm\">@plynchnlm</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/1129\">#1129</a> - Minified lib returns an empty string (<a href=\"https://github.com/bricss\">@bricss</a>)</li>\n<li>Return current handlebars instance from noConflict - 685cf92</li>\n<li>Add webpack to dev dependency to support npm 3 - 7a6c228</li>\n<li>Further relax uglify dependency - 0a3b3c2</li>\n<li>Include tests for minimized artifacts - c21118d</li>\n<li>Fix lint errors under latest eslint - 9f59de9</li>\n<li>Add print-script helper script - 98a6717</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v4.0.4...v4.0.5\">Commits</a></p>\n<h2 id=\"v4-0-4-october-29th-2015\">v4.0.4 - October 29th, 2015</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1121\">#1121</a> - Include partial name in &#39;undefined partial&#39; exception message (<a href=\"https://github.com/shinypb\">@shinypb</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1125\">#1125</a> - Add promised-handlebars to &quot;in-the-wild&quot;-list (<a href=\"https://github.com/nknapp\">@nknapp</a>)</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v4.0.3...v4.0.4\">Commits</a></p>\n<h2 id=\"v4-0-3-september-23rd-2015\">v4.0.3 - September 23rd, 2015</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/1099\">#1099</a> - @partial-block is overridden (<a href=\"https://github.com/btmorex\">@btmorex</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/1093\">#1093</a> - #each skips iteration on undefined values (<a href=\"https://github.com/florianpilz\">@florianpilz</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/1092\">#1092</a> - Square braces in key name (<a href=\"https://github.com/distantnative\">@distantnative</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1091\">#1091</a> - fix typo in release notes (<a href=\"https://github.com/nikolas\">@nikolas</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1090\">#1090</a> - grammar fixes in 4.0.0 release notes (<a href=\"https://github.com/nikolas\">@nikolas</a>)</li>\n</ul>\n<p>Compatibility notes:</p>\n<ul>\n<li><code>each</code> iteration with <code>undefined</code> values has been restored to the 3.0 behaviors. Helper calls with undefined context values will now execute against an arbitrary empty object to avoid executing against global object in non-strict mode.</li>\n<li><code>]</code> can now be included in <code>[]</code> wrapped identifiers by escaping with <code>\\</code>. Any <code>[]</code> identifiers that include <code>\\</code> will now have to properly escape these values.</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v4.0.2...v4.0.3\">Commits</a></p>\n<h2 id=\"v4-0-2-september-4th-2015\">v4.0.2 - September 4th, 2015</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/1089\">#1089</a> - &quot;Failover content&quot; not working in multiple levels of inline partials (<a href=\"https://github.com/michaellopez\">@michaellopez</a>)</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v4.0.1...v4.0.2\">Commits</a></p>\n<h2 id=\"v4-0-1-september-2nd-2015\">v4.0.1 - September 2nd, 2015</h2>\n<ul>\n<li>Fix failure when using decorators in partials - 05b82a2</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v4.0.0...v4.0.1\">Commits</a></p>\n<h2 id=\"v4-0-0-september-1st-2015\">v4.0.0 - September 1st, 2015</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1082\">#1082</a> - Decorators and Inline Partials (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1076\">#1076</a> - Implement partial blocks (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1087\">#1087</a> - Fix #each when last object entry has empty key (<a href=\"https://github.com/denniskuczynski\">@denniskuczynski</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1084\">#1084</a> - Bump uglify version to fix vulnerability (<a href=\"https://github.com/John-Steidley\">@John-Steidley</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1068\">#1068</a> - Fix typo (<a href=\"https://github.com/0xack13\">@0xack13</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1060\">#1060</a> - #1056 Fixed grammar for nested raw blocks (<a href=\"https://github.com/ericbn\">@ericbn</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1052\">#1052</a> - Updated year in License (<a href=\"https://github.com/maqnouch\">@maqnouch</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1037\">#1037</a> - Fix minor typos in README (<a href=\"https://github.com/tomxtobin\">@tomxtobin</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/1032\">#1032</a> - Is it possible to render a partial without the parent scope? (<a href=\"https://github.com/aputinski\">@aputinski</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/1019\">#1019</a> - Fixes typo in tests (<a href=\"https://github.com/aymerick\">@aymerick</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/1016\">#1016</a> - Version mis-match (<a href=\"https://github.com/mayankdedhia\">@mayankdedhia</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/1023\">#1023</a> - is it possible for nested custom helpers to communicate between each other?</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/893\">#893</a> - [Proposal] Section blocks.</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/792\">#792</a> - feature request: inline partial definitions</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/583\">#583</a> - Parent path continues to drill down depth with multiple conditionals</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/404\">#404</a> - Add named child helpers that can be referenced by block helpers</li>\n<li>Escape = in HTML content - <a href=\"https://github.com/wycats/handlebars.js/commit/83b8e84\">83b8e84</a></li>\n<li>Drop AST constructors in favor of JSON - <a href=\"https://github.com/wycats/handlebars.js/commit/95d84ba\">95d84ba</a></li>\n<li>Pass container rather than exec as context - <a href=\"https://github.com/wycats/handlebars.js/commit/9a2d1d6\">9a2d1d6</a></li>\n<li>Add ignoreStandalone compiler option - <a href=\"https://github.com/wycats/handlebars.js/commit/ea3a5a1\">ea3a5a1</a></li>\n<li>Ignore empty when iterating on sparse arrays - <a href=\"https://github.com/wycats/handlebars.js/commit/06d515a\">06d515a</a></li>\n<li>Add support for string and stdin precompilation - <a href=\"https://github.com/wycats/handlebars.js/commit/0de8dac\">0de8dac</a></li>\n<li>Simplify object assignment generation logic - <a href=\"https://github.com/wycats/handlebars.js/commit/77e6bfc\">77e6bfc</a></li>\n<li>Bulletproof AST.helpers.helperExpression - <a href=\"https://github.com/wycats/handlebars.js/commit/93b0760\">93b0760</a></li>\n<li>Always return string responses - <a href=\"https://github.com/wycats/handlebars.js/commit/8e868ab\">8e868ab</a></li>\n<li>Pass undefined fields to helpers in strict mode - <a href=\"https://github.com/wycats/handlebars.js/commit/5d4b8da\">5d4b8da</a></li>\n<li>Avoid depth creation when context remains the same - <a href=\"https://github.com/wycats/handlebars.js/commit/279e038\">279e038</a></li>\n<li>Improve logging API - <a href=\"https://github.com/wycats/handlebars.js/commit/9a49d35\">9a49d35</a></li>\n<li>Fix with operator in no @data mode - <a href=\"https://github.com/wycats/handlebars.js/commit/231a8d7\">231a8d7</a></li>\n<li>Allow empty key name in each iteration - <a href=\"https://github.com/wycats/handlebars.js/commit/1bb640b\">1bb640b</a></li>\n<li>Add with block parameter support - <a href=\"https://github.com/wycats/handlebars.js/commit/2a85106\">2a85106</a></li>\n<li>Fix escaping of non-javascript identifiers - <a href=\"https://github.com/wycats/handlebars.js/commit/410141c\">410141c</a></li>\n<li>Fix location information for programs - <a href=\"https://github.com/wycats/handlebars.js/commit/93faffa\">93faffa</a></li>\n</ul>\n<p>Compatibility notes:</p>\n<ul>\n<li>Depthed paths are now conditionally pushed on to the stack. If the helper uses the same context, then a new stack is not created. This leads to behavior that better matches expectations for helpers like <code>if</code> that do not seem to alter the context. Any instances of <code>../</code> in templates will need to be checked for the correct behavior under 4.0.0. In general templates will either reduce the number of <code>../</code> instances or leave them as is. See <a href=\"https://github.com/wycats/handlebars.js/issues/1028\">#1028</a>.</li>\n<li>The <code>=</code> character is now HTML escaped. This closes a potential exploit case when using unquoted attributes, i.e. <code>&lt;div foo={{bar}}&gt;</code>. In general it&#39;s recommended that attributes always be quoted when their values are generated from a mustache to avoid any potential exploit surfaces.</li>\n<li>AST constructors have been dropped in favor of plain old javascript objects</li>\n<li>The runtime version has been increased. Precompiled templates will need to use runtime of at least 4.0.0.</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v3.0.3...v4.0.0\">Commits</a></p>\n<h2 id=\"v3-0-3-april-28th-2015\">v3.0.3 - April 28th, 2015</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/1004\">#1004</a> - Latest version breaks with RequireJS (global is undefined) (<a href=\"https://github.com/boskee\">@boskee</a>)</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v3.0.2...v3.0.3\">Commits</a></p>\n<h2 id=\"v3-0-2-april-20th-2015\">v3.0.2 - April 20th, 2015</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/998\">#998</a> - Add full support for es6 (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/994\">#994</a> - Access Handlebars.Visitor in browser (<a href=\"https://github.com/tamlyn\">@tamlyn</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/990\">#990</a> - Allow passing null/undefined literals subexpressions (<a href=\"https://github.com/blimmer\">@blimmer</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/989\">#989</a> - Source-map error with requirejs (<a href=\"https://github.com/SteppeEagle\">@SteppeEagle</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/967\">#967</a> - can&#39;t access &quot;this&quot; property  (<a href=\"https://github.com/75lb\">@75lb</a>)</li>\n<li>Use captureStackTrace for error handler - a009a97</li>\n<li>Ignore branches tested without coverage monitoring - 37a664b</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v3.0.1...v3.0.2\">Commits</a></p>\n<h2 id=\"v3-0-1-march-24th-2015\">v3.0.1 - March 24th, 2015</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/984\">#984</a> - Adding documentation for passing arguments into partials (<a href=\"https://github.com/johneke\">@johneke</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/973\">#973</a> - version 3 is slower than version 2 (<a href=\"https://github.com/elover\">@elover</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/966\">#966</a> - &quot;handlebars --version&quot; does not work with v3.0.0 (<a href=\"https://github.com/abloomston\">@abloomston</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/964\">#964</a> - default is a reserved word (<a href=\"https://github.com/grassick\">@grassick</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/962\">#962</a> - Add dashbars&#39; link on README. (<a href=\"https://github.com/pismute\">@pismute</a>)</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v3.0.0...v3.0.1\">Commits</a></p>\n<h2 id=\"v3-0-0-february-10th-2015\">v3.0.0 - February 10th, 2015</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/941\">#941</a> - Add support for dynamic partial names (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/940\">#940</a> - Add missing reserved words so compiler knows to use array syntax: (<a href=\"https://github.com/mattflaschen\">@mattflaschen</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/938\">#938</a> - Fix example using #with helper (<a href=\"https://github.com/diwo\">@diwo</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/930\">#930</a> - Add parent tracking and mutation to AST visitors (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/926\">#926</a> - Depthed lookups fail when program duplicator runs (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/918\">#918</a> - Add instructions for &#39;spec/mustache&#39; to CONTRIBUTING.md, fix a few typos (<a href=\"https://github.com/oneeman\">@oneeman</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/915\">#915</a> - Ast update (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/910\">#910</a> - Different behavior of {{@last}} when {{#each}} in {{#each}} (<a href=\"https://github.com/zordius\">@zordius</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/907\">#907</a> - Implement named helper variable references (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/906\">#906</a> - Add parser support for block params (<a href=\"https://github.com/mmun\">@mmun</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/903\">#903</a> - Only provide aliases for multiple use calls (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/902\">#902</a> - Generate Source Maps (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/901\">#901</a> - Still escapes with noEscape enabled on isolated Handlebars environment (<a href=\"https://github.com/zedknight\">@zedknight</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/896\">#896</a> - Simplify BlockNode by removing intermediate MustacheNode (<a href=\"https://github.com/mmun\">@mmun</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/892\">#892</a> - Implement parser for else chaining of helpers (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/889\">#889</a> - Consider extensible parser API (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/887\">#887</a> - Handlebars.noConflict() option? (<a href=\"https://github.com/bradvogel\">@bradvogel</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/886\">#886</a> - Add SafeString to context (or use duck-typing) (<a href=\"https://github.com/dominicbarnes\">@dominicbarnes</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/870\">#870</a> - Registering undefined partial throws exception. (<a href=\"https://github.com/max-b\">@max-b</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/866\">#866</a> - comments don&#39;t respect whitespace control (<a href=\"https://github.com/75lb\">@75lb</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/863\">#863</a> - + jsDelivr CDN info (<a href=\"https://github.com/tomByrer\">@tomByrer</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/858\">#858</a> - Disable new default auto-indent at included partials (<a href=\"https://github.com/majodev\">@majodev</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/856\">#856</a> - jspm compatibility (<a href=\"https://github.com/MajorBreakfast\">@MajorBreakfast</a>)</li>\n<li><p><a href=\"https://github.com/wycats/handlebars.js/issues/805\">#805</a> - Request: &quot;strict&quot; lookups (<a href=\"https://github.com/nzakas\">@nzakas</a>)</p>\n</li>\n<li><p>Export the default object for handlebars/runtime - 5594416</p>\n</li>\n<li>Lookup partials when undefined - 617dd57</li>\n</ul>\n<p>Compatibility notes:</p>\n<ul>\n<li>Runtime breaking changes. Must match 3.x runtime and precompiler.</li>\n<li>The AST has been upgraded to a public API.<ul>\n<li>There are a number of changes to this, but the format is now documented in docs/compiler-api.md</li>\n<li>The Visitor API has been expanded to support mutation and provide a base implementation</li>\n</ul>\n</li>\n<li>The <code>JavaScriptCompiler</code> APIs have been formalized and documented. As part of the sourcemap handling these should be updated to return arrays for concatenation.</li>\n<li><code>JavaScriptCompiler.namespace</code> has been removed as it was unused.</li>\n<li><code>SafeString</code> is now duck typed on <code>toHTML</code></li>\n</ul>\n<p>New Features:</p>\n<ul>\n<li>noConflict</li>\n<li>Source Maps</li>\n<li>Block Params</li>\n<li>Strict Mode</li>\n<li>@last and other each changes</li>\n<li>Chained else blocks</li>\n<li>@data methods can now have helper parameters passed to them</li>\n<li>Dynamic partials</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v2.0.0...v3.0.0\">Commits</a></p>\n<h2 id=\"v2-0-0-september-1st-2014\">v2.0.0 - September 1st, 2014</h2>\n<ul>\n<li>Update jsfiddle to 2.0.0-beta.1 - 0670f65</li>\n<li>Add contrib note regarding handlebarsjs.com docs - 4d17e3c</li>\n<li>Play nice with gemspec version numbers - 64d5481</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v2.0.0-beta.1...v2.0.0\">Commits</a></p>\n<h2 id=\"v2-0-0-beta-1-august-26th-2014\">v2.0.0-beta.1 - August 26th, 2014</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/787\">#787</a> - Remove whitespace surrounding standalone statements (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/827\">#827</a> - Render false literal as “false” (<a href=\"https://github.com/scoot557\">@scoot557</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/767\">#767</a> - Subexpressions bug with hash and context (<a href=\"https://github.com/evensoul\">@evensoul</a>)</li>\n<li>Changes to 0/undefined handling<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/731\">#731</a> - Strange behavior for {{#foo}} {{bar}} {{/foo}} when foo is 0 (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/820\">#820</a> - strange behavior for {{foo.bar}} when foo is 0 or null or false (<a href=\"https://github.com/zordius\">@zordius</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/837\">#837</a> - Strange input for custom helper ( foo.bar == false when foo is undefined ) (<a href=\"https://github.com/zordius\">@zordius</a>)</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/819\">#819</a> - Implement recursive field lookup (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/764\">#764</a> - This reference not working for helpers (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/773\">#773</a> - Implicit parameters in {{#each}} introduces a peculiarity in helpers calling convention  (<a href=\"https://github.com/Bertrand\">@Bertrand</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/783\">#783</a> - helperMissing and consistency for different expression types (<a href=\"https://github.com/ErisDS\">@ErisDS</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/795\">#795</a> - Turn the precompile script into a wrapper around a module. (<a href=\"https://github.com/jwietelmann\">@jwietelmann</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/823\">#823</a> - Support inverse sections on the with helper (<a href=\"https://github.com/dan-manges\">@dan-manges</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/834\">#834</a> - Refactor blocks, programs and inverses (<a href=\"https://github.com/mmun\">@mmun</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/852\">#852</a> - {{foo~}} space control behavior is different from older version (<a href=\"https://github.com/zordius\">@zordius</a>)</li>\n<li><p><a href=\"https://github.com/wycats/handlebars.js/issues/835\">#835</a> - Templates overwritten if file is loaded twice</p>\n</li>\n<li><p>Expose escapeExpression on the root object - 980c38c</p>\n</li>\n<li>Remove nested function eval in blockHelperMissing - 6f22ec1</li>\n<li>Fix compiler program de-duping - 9e3f824</li>\n</ul>\n<p>Compatibility notes:</p>\n<ul>\n<li>The default build now outputs a generic UMD wrapper. This should be transparent change but may cause issues in some environments.</li>\n<li>Runtime compatibility breaks in both directions. Ensure that both compiler and client are upgraded to 2.0.0-beta.1 or higher at the same time.<ul>\n<li><code>programWithDepth</code> has been removed an instead an array of context values is passed to fields needing depth lookups.</li>\n</ul>\n</li>\n<li><code>false</code> values are now printed to output rather than silently dropped</li>\n<li>Lines containing only block statements and whitespace are now removed. This matches the Mustache spec but may cause issues with code that expects whitespace to exist but would not otherwise.</li>\n<li>Partials that are standalone will now indent their rendered content</li>\n<li><code>AST.ProgramNode</code>&#39;s signature has changed. </li>\n<li>Numerious methods/features removed from psuedo-API classes<ul>\n<li><code>JavaScriptCompiler.register</code></li>\n<li><code>JavaScriptCompiler.replaceStack</code> no longer supports non-inline replace</li>\n<li><code>Compiler.disassemble</code></li>\n<li><code>DECLARE</code> opcode</li>\n<li><code>strip</code> opcode</li>\n<li><code>lookup</code> opcode</li>\n<li>Content nodes may have their <code>string</code> values mutated over time. <code>original</code> field provides the unmodified value.</li>\n</ul>\n</li>\n<li>Removed unused <code>Handlebars.registerHelper</code> <code>inverse</code> parameter</li>\n<li><code>each</code> helper requires iterator parameter</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v2.0.0-alpha.4...v2.0.0-beta.1\">Commits</a></p>\n<h2 id=\"v2-0-0-alpha-4-may-19th-2014\">v2.0.0-alpha.4 - May 19th, 2014</h2>\n<ul>\n<li>Expose setup wrappers for compiled templates - 3638874</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v2.0.0-alpha.3...v2.0.0-alpha.4\">Commits</a></p>\n<h2 id=\"v2-0-0-alpha-3-may-19th-2014\">v2.0.0-alpha.3 - May 19th, 2014</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/797\">#797</a> - Pass full helper ID to helperMissing when options are provided (<a href=\"https://github.com/tomdale\">@tomdale</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/793\">#793</a> - Ensure isHelper is coerced to a boolean (<a href=\"https://github.com/mmun\">@mmun</a>)</li>\n<li>Refactor template init logic - 085e5e1</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v2.0.0-alpha.2...v2.0.0-alpha.3\">Commits</a></p>\n<h2 id=\"v2-0-0-alpha-2-march-6th-2014\">v2.0.0-alpha.2 - March 6th, 2014</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/756\">#756</a> - fix bug in IE&lt;=8 (no Array::map), closes #751 (<a href=\"https://github.com/jenseng\">@jenseng</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/749\">#749</a> - properly handle multiple subexpressions in the same hash, fixes #748 (<a href=\"https://github.com/jenseng\">@jenseng</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/743\">#743</a> - subexpression confusion/problem? (<a href=\"https://github.com/waynedpj\">@waynedpj</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/746\">#746</a> - [CLI] support <code>handlebars --version</code> (<a href=\"https://github.com/apfelbox\">@apfelbox</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/747\">#747</a> - updated grunt-saucelabs, failing tests revealed (<a href=\"https://github.com/Jonahss\">@Jonahss</a>)</li>\n<li>Make JSON a requirement for the compiler. - 058c0fb</li>\n<li>Temporarily kill the AWS publish CI step - 8347ee2</li>\n</ul>\n<p>Compatibility notes:</p>\n<ul>\n<li>A JSON polyfill is required to run the compiler under IE8 and below. It&#39;s recommended that the precompiler be used in lieu of running the compiler on these legacy environments.</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v2.0.0-alpha.1...v2.0.0-alpha.2\">Commits</a></p>\n<h2 id=\"v2-0-0-alpha-1-february-10th-2014\">v2.0.0-alpha.1 - February 10th, 2014</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/182\">#182</a> - Allow passing hash parameters to partials (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/392\">#392</a> - Access to root context in partials and helpers (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/472\">#472</a> - Helpers cannot have decimal parameters (<a href=\"https://github.com/kayleg\">@kayleg</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/569\">#569</a> - Unable to lookup array values using @index (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/491\">#491</a> - For nested helpers: get the @ variables of the outer helper from the inner one (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/669\">#669</a> - Ability to unregister a helper (<a href=\"https://github.com/dbachrach\">@dbachrach</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/730\">#730</a> - Raw block helpers (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/634\">#634</a> - It would be great to have the helper name passed to <code>blockHelperMissing</code> (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><p><a href=\"https://github.com/wycats/handlebars.js/pull/729\">#729</a> - Convert template spec to object literal (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</p>\n</li>\n<li><p><a href=\"https://github.com/wycats/handlebars.js/issues/658\">#658</a> - Depthed helpers do not work after an upgrade from 1.0.0 (<a href=\"https://github.com/xibxor\">@xibxor</a>)</p>\n</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/671\">#671</a> - Crashes on no-parameter {{#each}} (<a href=\"https://github.com/stepancheg\">@stepancheg</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/689\">#689</a> - broken template precompilation (<a href=\"https://github.com/AAS\">@AAS</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/698\">#698</a> - Fix parser generation under windows (<a href=\"https://github.com/osiris43\">@osiris43</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/699\">#699</a> - @DATA not compiles to invalid JS in stringParams mode (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/705\">#705</a> - 1.3.0 can not be wrapped in an IIFE (<a href=\"https://github.com/craigteegarden\">@craigteegarden</a>)</li>\n<li><p><a href=\"https://github.com/wycats/handlebars.js/pull/706\">#706</a> - README: Use with helper instead of relying on blockHelperMissing (<a href=\"https://github.com/scottgonzalez\">@scottgonzalez</a>)</p>\n</li>\n<li><p><a href=\"https://github.com/wycats/handlebars.js/pull/700\">#700</a> - Remove redundant conditions (<a href=\"https://github.com/blakeembrey\">@blakeembrey</a>)</p>\n</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/704\">#704</a> - JavaScript Compiler Cleanup (<a href=\"https://github.com/blakeembrey\">@blakeembrey</a>)</li>\n</ul>\n<p>Compatibility notes:</p>\n<ul>\n<li><code>helperMissing</code> helper no longer has the indexed name argument. Helper name is now available via <code>options.name</code>.</li>\n<li>Precompiler output has changed, which breaks compatibility with prior versions of the runtime and precompiled output.</li>\n<li><code>JavaScriptCompiler.compilerInfo</code> now returns generic objects rather than javascript source.</li>\n<li>AST changes<ul>\n<li>INTEGER -&gt; NUMBER</li>\n<li>Additional PartialNode hash parameter</li>\n<li>New RawBlockNode type</li>\n</ul>\n</li>\n<li>Data frames now have a <code>_parent</code> field. This is internal but is enumerable for performance/compatibility reasons.</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v1.3.0...v2.0.0-alpha.1\">Commits</a></p>\n<h2 id=\"v1-3-0-january-1st-2014\">v1.3.0 - January 1st, 2014</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/690\">#690</a> - Added support for subexpressions (<a href=\"https://github.com/machty\">@machty</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/696\">#696</a> - Fix for reserved keyword &quot;default&quot; (<a href=\"https://github.com/nateirwin\">@nateirwin</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/692\">#692</a> - add line numbers to nodes when parsing (<a href=\"https://github.com/fivetanley\">@fivetanley</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/695\">#695</a> - Pull options out from param setup to allow easier extension (<a href=\"https://github.com/blakeembrey\">@blakeembrey</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/694\">#694</a> - Make the environment reusable (<a href=\"https://github.com/blakeembrey\">@blakeembrey</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/636\">#636</a> - Print line and column of errors (<a href=\"https://github.com/sgronblo\">@sgronblo</a>)</li>\n<li>Use literal for data lookup - c1a93d3</li>\n<li>Add stack handling sanity checks - cd885bf</li>\n<li>Fix stack id &quot;leak&quot; on replaceStack - ddfe457</li>\n<li>Fix incorrect stack pop when replacing literals - f4d337d</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v1.2.1...v1.3.0\">Commits</a></p>\n<h2 id=\"v1-2-1-december-26th-2013\">v1.2.1 - December 26th, 2013</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/684\">#684</a> - Allow any number of trailing characters for valid JavaScript variable (<a href=\"https://github.com/blakeembrey\">@blakeembrey</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/686\">#686</a> - Falsy AMD module names in version 1.2.0 (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v1.2.0...v1.2.1\">Commits</a></p>\n<h2 id=\"v1-2-0-december-23rd-2013\">v1.2.0 - December 23rd, 2013</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/675\">#675</a> - Cannot compile empty template for partial (<a href=\"https://github.com/erwinw\">@erwinw</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/677\">#677</a> - Triple brace statements fail under IE (<a href=\"https://github.com/hamzaCM\">@hamzaCM</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/655\">#655</a> - Loading Handlebars using bower (<a href=\"https://github.com/niki4810\">@niki4810</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/657\">#657</a> - Fixes issue where cli compiles non handlebars templates (<a href=\"https://github.com/chrishoage\">@chrishoage</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/681\">#681</a> - Adds in-browser testing and Saucelabs CI (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/661\">#661</a> - Add @first and @index to #each object iteration (<a href=\"https://github.com/cgp\">@cgp</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/650\">#650</a> - Handlebars is MIT-licensed (<a href=\"https://github.com/thomasboyt\">@thomasboyt</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/641\">#641</a> - Document ember testing process (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/662\">#662</a> - handlebars-source 1.1.2 is missing from RubyGems.</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/656\">#656</a> - Expose COMPILER_REVISION checks as a hook (<a href=\"https://github.com/machty\">@machty</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/668\">#668</a> - Consider publishing handlebars-runtime as a separate module on npm (<a href=\"https://github.com/dlmanning\">@dlmanning</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/679\">#679</a> - Unable to override invokePartial (<a href=\"https://github.com/mattbrailsford\">@mattbrailsford</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/646\">#646</a> - Fix &quot;\\{{&quot; immediately following &quot;{{&quot; (<a href=\"https://github.com/dmarcotte\">@dmarcotte</a>)</li>\n<li>Allow extend to work with non-prototyped objects - eb53f2e</li>\n<li>Add JavascriptCompiler public API tests - 1a751b2</li>\n<li>Add AST test coverage for more complex paths - ddea5be</li>\n<li>Fix handling of boolean escape in MustacheNode - b4968bb</li>\n</ul>\n<p>Compatibility notes:</p>\n<ul>\n<li><code>@index</code> and <code>@first</code> are now supported for <code>each</code> iteration on objects</li>\n<li><code>Handlebars.VM.checkRevision</code> and <code>Handlebars.JavaScriptCompiler.prototype.compilerInfo</code> now available to modify the version checking behavior.</li>\n<li>Browserify users may link to the runtime library via <code>require(&#39;handlebars/runtime&#39;)</code></li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v1.1.2...v1.2.0\">Commits</a></p>\n<h2 id=\"v1-1-2-november-5th-2013\">v1.1.2 - November 5th, 2013</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/645\">#645</a> - 1.1.1 fails under IE8 (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><p><a href=\"https://github.com/wycats/handlebars.js/issues/644\">#644</a> - Using precompiled templates (AMD mode) with handlebars.runtime 1.1.1 (<a href=\"https://github.com/fddima\">@fddima</a>)</p>\n</li>\n<li><p>Add simple binary utility tests - 96a45a4</p>\n</li>\n<li>Fix empty string compilation - eea708a</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v1.1.1...v1.1.2\">Commits</a></p>\n<h2 id=\"v1-1-1-november-4th-2013\">v1.1.1 - November 4th, 2013</h2>\n<ul>\n<li><p><a href=\"https://github.com/wycats/handlebars.js/issues/642\">#642</a> - handlebars 1.1.0 are broken with nodejs</p>\n</li>\n<li><p>Fix release notes link - 17ba258</p>\n</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v1.1.0...v1.1.1\">Commits</a></p>\n<h2 id=\"v1-1-0-november-3rd-2013\">v1.1.0 - November 3rd, 2013</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/628\">#628</a> - Convert code to ES6 modules (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/336\">#336</a> - Add whitespace control syntax (<a href=\"https://github.com/kpdecker\">@kpdecker</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/535\">#535</a> - Fix for probable JIT error under Safari (<a href=\"https://github.com/sorentwo\">@sorentwo</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/483\">#483</a> - Add first and last @ vars to each helper (<a href=\"https://github.com/denniskuczynski\">@denniskuczynski</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/557\">#557</a> - <code>\\\\{{foo}}</code> escaping only works in some situations (<a href=\"https://github.com/dmarcotte\">@dmarcotte</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/pull/552\">#552</a> - Added BOM removal flag. (<a href=\"https://github.com/blessenm\">@blessenm</a>)</li>\n<li><p><a href=\"https://github.com/wycats/handlebars.js/pull/543\">#543</a> - publish passing master builds to s3 (<a href=\"https://github.com/fivetanley\">@fivetanley</a>)</p>\n</li>\n<li><p><a href=\"https://github.com/wycats/handlebars.js/issues/608\">#608</a> - Add <code>includeZero</code> flag to <code>if</code> conditional</p>\n</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/498\">#498</a> - <code>Handlebars.compile</code> fails on empty string although a single blank works fine</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/599\">#599</a> - lambda helpers only receive options if used with arguments</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/592\">#592</a> - Optimize array and subprogram performance</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/571\">#571</a> - uglify upgrade breaks compatibility with older versions of node</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/587\">#587</a> - Partial inside partial breaks?</li>\n</ul>\n<p>Compatibility notes:</p>\n<ul>\n<li>The project now includes separate artifacts for AMD, CommonJS, and global objects. <ul>\n<li>AMD: Users may load the bundled <code>handlebars.amd.js</code> or <code>handlebars.runtime.amd.js</code> files or load individual modules directly. AMD users should also note that the handlebars object is exposed via the <code>default</code> field on the imported object. This <a href=\"https://gist.github.com/wycats/7417be0dc361a69d5916\">gist</a> provides some discussion of possible compatibility shims.</li>\n<li>CommonJS/Node: Node loading occurs as normal via <code>require</code></li>\n<li>Globals: The <code>handlebars.js</code> and <code>handlebars.runtime.js</code> files should behave in the same manner as the v1.0.12 / 1.0.0 release.</li>\n</ul>\n</li>\n<li>Build artifacts have been removed from the repository. <a href=\"https://npmjs.org/package/handlebars\">npm</a>, <a href=\"https://github.com/components/handlebars.js\">components/handlebars.js</a>, <a href=\"http://cdnjs.com/libraries/handlebars.js/\">cdnjs</a>, or the <a href=\"http://builds.handlebarsjs.com.s3.amazonaws.com/index.html\">builds page</a> should now be used as the source of built artifacts. </li>\n<li>Context-stored helpers are now always passed the <code>options</code> hash. Previously no-argument helpers did not have this argument.</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v1.0.12...v1.1.0\">Commits</a></p>\n<h2 id=\"v1-0-12-1-0-0-may-31-2013\">v1.0.12 / 1.0.0 - May 31 2013</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/515\">#515</a> - Add node require extensions support (<a href=\"https://github.com/jjclark1982\">@jjclark1982</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/517\">#517</a> - Fix amd precompiler output with directories (<a href=\"https://github.com/blessenm\">@blessenm</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/433\">#433</a> - Add support for unicode ids</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/469\">#469</a> - Add support for <code>?</code> in ids</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/534\">#534</a> - Protect from object prototype modifications</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/519\">#519</a> - Fix partials with . name (<a href=\"https://github.com/jamesgorrie\">@jamesgorrie</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/519\">#519</a> - Allow ID or strings in partial names</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/437\">#437</a> - Require matching brace counts in escaped expressions</li>\n<li>Merge passed partials and helpers with global namespace values</li>\n<li>Add support for complex ids in @data references</li>\n<li>Docs updates</li>\n</ul>\n<p>Compatibility notes:</p>\n<ul>\n<li>The parser is now stricter on <code>{{{</code>, requiring that the end token be <code>}}}</code>. Templates that do not\nfollow this convention should add the additional brace value.</li>\n<li>Code that relies on global the namespace being muted when custom helpers or partials are passed will need to explicitly pass an <code>undefined</code> value for any helpers that should not be available.</li>\n<li>The compiler version has changed. Precompiled templates with 1.0.12 or higher must use the 1.0.0 or higher runtime.</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v1.0.11...v1.0.12\">Commits</a></p>\n<h2 id=\"v1-0-11-1-0-0-rc4-may-13-2013\">v1.0.11 / 1.0.0-rc4 - May 13 2013</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/458\">#458</a> - Fix <code>./foo</code> syntax (<a href=\"https://github.com/jpfiset\">@jpfiset</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/460\">#460</a> - Allow <code>:</code> in unescaped identifers (<a href=\"https://github.com/jpfiset\">@jpfiset</a>)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/471\">#471</a> - Create release notes (These!)</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/456\">#456</a> - Allow escaping of <code>\\\\</code></li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/211\">#211</a> - Fix exception in <code>escapeExpression</code></li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/375\">#375</a> - Escape unicode newlines</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/461\">#461</a> - Do not fail when compiling <code>&quot;&quot;</code></li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/302\">#302</a> - Fix sanity check in knownHelpersOnly mode</li>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/369\">#369</a> - Allow registration of multiple helpers and partial by passing definition object</li>\n<li>Add bower package declaration (<a href=\"https://github.com/DevinClark\">@DevinClark</a>)</li>\n<li>Add NuSpec package declaration (<a href=\"https://github.com/MikeMayer\">@MikeMayer</a>)</li>\n<li>Handle empty context in <code>with</code> (<a href=\"https://github.com/thejohnfreeman\">@thejohnfreeman</a>)</li>\n<li>Support custom template extensions in CLI (<a href=\"https://github.com/matteoagosti\">@matteoagosti</a>)</li>\n<li>Fix Rhino support (<a href=\"https://github.com/broady\">@broady</a>)</li>\n<li>Include contexts in string mode (<a href=\"https://github.com/leshill\">@leshill</a>)</li>\n<li>Return precompiled scripts when compiling to AMD (<a href=\"https://github.com/JamesMaroney\">@JamesMaroney</a>)</li>\n<li>Docs updates (<a href=\"https://github.com/iangreenleaf\">@iangreenleaf</a>, <a href=\"https://github.com/gilesbowkett\">@gilesbowkett</a>, <a href=\"https://github.com/utkarsh2012\">@utkarsh2012</a>)</li>\n<li>Fix <code>toString</code> handling under IE and browserify (<a href=\"https://github.com/tommydudebreaux\">@tommydudebreaux</a>)</li>\n<li>Add program metadata</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v1.0.10...v1.0.11\">Commits</a></p>\n<h2 id=\"v1-0-10-node-feb-27-2013\">v1.0.10 - Node - Feb 27 2013</h2>\n<ul>\n<li><a href=\"https://github.com/wycats/handlebars.js/issues/428\">#428</a> - Fix incorrect rendering of nested programs</li>\n<li>Fix exception message (<a href=\"https://github.com/tricknotes\">@tricknotes</a>)</li>\n<li>Added negative number literal support</li>\n<li>Concert library to single IIFE</li>\n<li>Add handlebars-source gemspec (<a href=\"https://github.com/machty\">@machty</a>)</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v1.0.9...v1.0.10\">Commits</a></p>\n<h2 id=\"v1-0-9-node-feb-15-2013\">v1.0.9 - Node - Feb 15 2013</h2>\n<ul>\n<li>Added <code>Handlebars.create</code> API in node module for sandboxed instances (<a href=\"https://github.com/tommydudebreaux\">@tommydudebreaux</a>)</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/1.0.0-rc.3...v1.0.9\">Commits</a></p>\n<h2 id=\"1-0-0-rc3-browser-feb-14-2013\">1.0.0-rc3 - Browser - Feb 14 2013</h2>\n<ul>\n<li>Prevent use of <code>this</code> or <code>..</code> in illogical place (<a href=\"https://github.com/leshill\">@leshill</a>)</li>\n<li>Allow AST passing for <code>parse</code>/<code>compile</code>/<code>precompile</code> (<a href=\"https://github.com/machty\">@machty</a>)</li>\n<li>Optimize generated output by inlining statements where possible</li>\n<li>Check compiler version when evaluating templates</li>\n<li>Package browser dist in npm package</li>\n</ul>\n<p><a href=\"https://github.com/wycats/handlebars.js/compare/v1.0.8...1.0.0-rc.3\">Commits</a></p>\n<h2 id=\"prior-versions\">Prior Versions</h2>\n<p>When upgrading from the Handlebars 0.9 series, be aware that the\nsignature for passing custom helpers or partials to templates has\nchanged.</p>\n<p>Instead of:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>template</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span>context</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&nbsp;helpers</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&nbsp;partials</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&nbsp;</span><span class=\"meta brace square js\"><span>[</span></span><span>data</span><span class=\"meta brace square js\"><span>]</span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span></span></div></pre><p>Use:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>template</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span>context</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&nbsp;</span><span class=\"meta brace curly js\"><span>{</span></span><span>helpers</span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&nbsp;helpers</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&nbsp;partials</span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&nbsp;partials</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&nbsp;data</span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&nbsp;data</span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span></span></div></pre>"
      ],
      "contentsRaw": "# Release Notes\n\n## Development\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v4.1.2...master)\n\n## v4.1.2 - April 13th, 2019\nChore/Test:\n- [#1515](https://github.com/wycats/handlebars.js/pull/1515) - Port over linting and test for typings ([@zimmi88](https://api.github.com/users/zimmi88))\n- chore: add missing typescript dependency, add package-lock.json - 594f1e3\n- test: remove safari from saucelabs - 871accc\n\nBugfixes: \n- fix: prevent RCE through the \"lookup\"-helper - cd38583\n\nCompatibility notes:\n\nAccess to the constructor of a class thought `{{lookup obj \"constructor\" }}` is now prohibited. This closes \na leak that only half closed in versions 4.0.13 and 4.1.0, but it is a slight incompatibility.\n\nThis kind of access is not the intended use of Handlebars and leads to the vulnerability described\nin #1495. We will **not** increase the major version, because such use is not intended or documented, \nand because of the potential impact of the issue (we fear that most people won't use a new major version\nand the issue may not be resolved on many systems). \n\n[Commits](https://github.com/wycats/handlebars.js/compare/v4.1.1...v4.1.2)\n\n## v4.1.1 - March 16th, 2019\nBugfixes:\n- fix: add \"runtime.d.ts\" to allow \"require('handlebars/runtime')\" in TypeScript - 5cedd62\n\nRefactorings:\n- replace \"async\" with \"neo-async\" - 048f2ce\n- use \"substring\"-function instead of \"substr\" - 445ae12\n\nCompatibility notes:\n- This is a bugfix release. There are no breaking change and no new features.\n\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v4.1.0...v4.1.1)\n\n## v4.1.0 - February 7th, 2019\nNew Features\n\n- import TypeScript typings - 27ac1ee\n\nSecurity fixes:\n\n- disallow access to the constructor in templates to prevent RCE - 42841c4, #1495\n\nHousekeeping\n\n- chore: fix components/handlebars package.json and auto-update on release - bacd473\n- chore: Use node 10 to build handlebars - 78dd89c\n- chore/doc: Add more release docs - 6b87c21\n\nCompatibility notes:\n\nAccess to class constructors (i.e. `({}).constructor`) is now prohibited to prevent\nRemote Code Execution. This means that following construct will no work anymore:\n\n```\nclass SomeClass {\n}\n\nSomeClass.staticProperty = 'static'\n\nvar template = Handlebars.compile('{{constructor.staticProperty}}');\ndocument.getElementById('output').innerHTML = template(new SomeClass());\n// expected: 'static', but now this is empty.\n```\n\nThis kind of access is not the intended use of Handlebars and leads to the vulnerability described in #1495. We will **not** increase the major version, because such use is not intended or documented, and because of the potential impact of the issue (we fear that most people won't use a new major version and the issue may not be resolved on many systems).\n\n\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v4.0.12...v4.1.0)\n\n## v4.0.12 - September 4th, 2018\nNew features:\n\n- none\n\nVarious dependency updates\n\n- [#1464](https://github.com/wycats/handlebars.js/pull/1464) - Bump versions of grunt-plugins to 1.x\n- [#1398](https://github.com/wycats/handlebars.js/pull/1398) - Chore: updated various dev dependencies\n- upgrade uglify-js - d3d3942\n- Update grunt-eslint to 20.1.0 - 7729aa9\n- Update dependencies \"async\" to 2.5.0 and \"source-map\" to 0.6.1 (73d5637)\n\nBugfixes:\n\n- [components/handlebars.js#24](https://github.com/components/handlebars.js#24) Add package.json to components shim\n- Updated `source-map`-package should work better with `rollup`[#1463](https://github.com/wycats/handlebars.js/issues/1463)\n\nRemoved obsolete code:\n\n- unnecessary check - 0ddff8b\n- Use `files` field - 69c6ca5\n- Update jsfiddle to 4.0.11 - 8947dd0\n\nCompatibility notes:\n- No compatibility issues are to be expected\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v4.0.11...v4.0.12)\n\n## v4.0.11 - October 17th, 2017\n- [#1391](https://github.com/wycats/handlebars.js/issues/1391) - `uglify-js` is unconditionally imported, but only listed as optional dependency ([@Turbo87](https://github.com/Turbo87))\n- [#1233](https://github.com/wycats/handlebars.js/issues/1233) - Unable to build under windows - error at test:bin task ([@blikblum](https://github.com/blikblum))\n- Update (C) year in the LICENSE file - 21386b6\n\nCompatibility notes:\n- This is a bugfix release. There are no breaking change and no new features.\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v4.0.10...v4.0.11)\n\n## v4.0.10 - May 21st, 2017\n- Fix regression in 4.0.9: Replace \"Object.assign\" (not support in IE) by \"util/extend\" - 0e953d1\n\n\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v4.0.9...v4.0.10)\n\n## v4.0.9 - May 21st, 2017\n\n- [#1327](https://github.com/wycats/handlebars.js/issues/1327) Handlebars.compile() does not modify \"options\" anymore\n- pending [#1331](https://github.com/wycats/handlebars.js/issues/1331) Attempts to build Handlebars in a Windows environment\n  - Fix build in windows - cc554a5\n  - Ensure LF line-edings in handlebars-template fixtures (*.hbs) - ed879a6\n  - Run integration test with `node handlebars -a ...` on Windows - 2e21e2b\n  - Ensure LF line-edings in lexer-files (*.l) - bdfdbea\n  - Force LF line-endings for spec/artifacts - b50ef03\n  - Use istanbul/lib/cli.js instead of node_modules/.bin/istanbul - 6e6269f\n- TravisCI: Publish valid semver tags independently of the branch - 7378f85\n\nCompatibility notes:\n- No compatibility issues are expected.\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v4.0.8...v4.0.9)\n\n## v4.0.8 - May 2nd, 2017\n- [#1341](https://github.com/wycats/handlebars.js/issues/1341) [#1342](https://github.com/wycats/handlebars.js/issues/1342) Allow partial-blocks to be executed without \"options\" ([@nknapp](https://github.com/nknapp)) - a00c598\n\nCompatibility notes:\n- No breaking changes\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v4.0.7...v4.0.8)\n\n## v4.0.7 - April 29th, 2017\n- [#1319](https://github.com/wycats/handlebars.js/issues/1319): Fix context-stack when calling block-helpers on null values ([@nknapp](https://github.com/nknapp)) - c8f4b57\n- [#1315](https://github.com/wycats/handlebars.js/pull/1315) Parser: Change suffix to use ES6 default module export ([@Turbo87](https://github.com/Turbo87))- b617375\n- [#1290](https://github.com/wycats/handlebars.js/pull/1290) [#1252](https://github.com/wycats/handlebars.js/issue/1290) Add more tests for partial-blocks and inline partials ([@nknapp](https://github.com/nknapp)) -  63a8e0c\n- [#1252](https://github.com/wycats/handlebars.js/issue/1290) Using @partial-block twice in a template not possible ([@nknapp](https://github.com/nknapp)) - 5a164d0\n- [#1310](https://github.com/wycats/handlebars.js/pull/1310) Avoid duplicate \"sourceMappingURL=\" lines. ([@joonas-lahtinen](https://github.com/joonas-lahtinen)) - 01b0f65\n- [#1275](https://github.com/wycats/handlebars.js/pull/1275) require('sys') is deprecated, using 'util' instead ([@travnels](https://github.com/travnels)) - 406f2ee\n- [#1285](https://github.com/wycats/handlebars.js/pull/1285) [#1284](https://github.com/wycats/handlebars.js/issues/1284) Make \"column\"-property of Errors enumerable ([@nknapp](https://github.com/nknapp)) - a023cb4\n- [#1285](https://github.com/wycats/handlebars.js/pull/1285) Testcase to verify that compile-errors have a column-property ([@nknapp](https://github.com/nknapp)) - c7dc353\n\n[Commits](https://github.com/lawnsea/handlebars.js/compare/v4.0.6...v4.0.7)\n\n## v4.0.6 - November 12th, 2016\n- [#1243](https://github.com/wycats/handlebars.js/pull/1243) - Walk up data frames for nested @partial-block ([@lawnsea](https://github.com/lawnsea))\n- [#1210](https://github.com/wycats/handlebars.js/pull/1210) - Add a new lightweight package based on handlebars in the README ([@kabirbaidhya](https://github.com/kabirbaidhya))\n- [#1187](https://github.com/wycats/handlebars.js/pull/1187) - Ensure that existing blockParams and depths are respected on dupe programs ([@charleso](https://github.com/charleso))\n- [#1191](https://github.com/wycats/handlebars.js/pull/1191) - Added cory ([@leo](https://github.com/leo))\n- [#1177](https://github.com/wycats/handlebars.js/pull/1177) - Preserve License info in Closure Compiler ([@gennadiylitvinyuk](https://github.com/gennadiylitvinyuk))\n- [#1171](https://github.com/wycats/handlebars.js/pull/1171) - Contributing doc fix: failing thats -> failing tests ([@paulfalgout](https://github.com/paulfalgout))\n- [#1166](https://github.com/wycats/handlebars.js/pull/1166) - Update license date ([@timwangdev](https://github.com/timwangdev))\n-  Update jsfiddle to point to latest - 959ee55 (originally dfc7554 by [@kpdecker](https://github.com/kpdecker))\n- [#1163](https://github.com/wycats/handlebars.js/pull/1163) - Fix typos on decorators-api.md. ([@adjohnson916](https://github.com/adjohnson916))\n- Drop extra Error params - 8c19874 (originally 63fdb92 by [@kpdecker](https://github.com/kpdecker))\n- [#1153](https://github.com/wycats/handlebars.js/pull/1153) - Add documentation for running tests to contributing.md ([@ryanmurakami](https://github.com/ryanmurakami))\n- Avoid error in older browsers in test - 400916c (originally a6121ca by [@kpdecker](https://github.com/kpdecker))\n- Update target browser test versions - fee2334 (originally 871c32a by [@kpdecker](https://github.com/kpdecker))\n- Exclude coverage check in exception conditional - 32d6363 (originally 326734b by [@kpdecker](https://github.com/kpdecker))\n- Fix throw when creating exception object in Safari - 20c965c (originally 2ea6119 by [@kpdecker](https://github.com/kpdecker))\n- Update build for modern node versions - 6c9f98c (originally 8289c0b by [@kpdecker](https://github.com/kpdecker))\n- [#1135](https://github.com/wycats/handlebars.js/issues/1135) - Relax depth check for context push - c393c81 (originally 25458fd by [@kpdecker](https://github.com/kpdecker))\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v4.0.5...v4.0.6)\n\n## v4.0.5 - November 19th, 2015\n- [#1132](https://github.com/wycats/handlebars.js/pull/1132) - Update uglify-js to avoid vulnerability ([@plynchnlm](https://github.com/plynchnlm))\n- [#1129](https://github.com/wycats/handlebars.js/issues/1129) - Minified lib returns an empty string ([@bricss](https://github.com/bricss))\n- Return current handlebars instance from noConflict - 685cf92\n- Add webpack to dev dependency to support npm 3 - 7a6c228\n- Further relax uglify dependency - 0a3b3c2\n- Include tests for minimized artifacts - c21118d\n- Fix lint errors under latest eslint - 9f59de9\n- Add print-script helper script - 98a6717\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v4.0.4...v4.0.5)\n\n## v4.0.4 - October 29th, 2015\n- [#1121](https://github.com/wycats/handlebars.js/pull/1121) - Include partial name in 'undefined partial' exception message ([@shinypb](https://github.com/shinypb))\n- [#1125](https://github.com/wycats/handlebars.js/pull/1125) - Add promised-handlebars to \"in-the-wild\"-list ([@nknapp](https://github.com/nknapp))\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v4.0.3...v4.0.4)\n\n## v4.0.3 - September 23rd, 2015\n- [#1099](https://github.com/wycats/handlebars.js/issues/1099) - @partial-block is overridden ([@btmorex](https://github.com/btmorex))\n- [#1093](https://github.com/wycats/handlebars.js/issues/1093) - #each skips iteration on undefined values ([@florianpilz](https://github.com/florianpilz))\n- [#1092](https://github.com/wycats/handlebars.js/issues/1092) - Square braces in key name ([@distantnative](https://github.com/distantnative))\n- [#1091](https://github.com/wycats/handlebars.js/pull/1091) - fix typo in release notes ([@nikolas](https://github.com/nikolas))\n- [#1090](https://github.com/wycats/handlebars.js/pull/1090) - grammar fixes in 4.0.0 release notes ([@nikolas](https://github.com/nikolas))\n\nCompatibility notes:\n- `each` iteration with `undefined` values has been restored to the 3.0 behaviors. Helper calls with undefined context values will now execute against an arbitrary empty object to avoid executing against global object in non-strict mode.\n- `]` can now be included in `[]` wrapped identifiers by escaping with `\\`. Any `[]` identifiers that include `\\` will now have to properly escape these values.\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v4.0.2...v4.0.3)\n\n## v4.0.2 - September 4th, 2015\n- [#1089](https://github.com/wycats/handlebars.js/issues/1089) - \"Failover content\" not working in multiple levels of inline partials ([@michaellopez](https://github.com/michaellopez))\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v4.0.1...v4.0.2)\n\n## v4.0.1 - September 2nd, 2015\n- Fix failure when using decorators in partials - 05b82a2\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v4.0.0...v4.0.1)\n\n## v4.0.0 - September 1st, 2015\n- [#1082](https://github.com/wycats/handlebars.js/pull/1082) - Decorators and Inline Partials ([@kpdecker](https://github.com/kpdecker))\n- [#1076](https://github.com/wycats/handlebars.js/pull/1076) - Implement partial blocks ([@kpdecker](https://github.com/kpdecker))\n- [#1087](https://github.com/wycats/handlebars.js/pull/1087) - Fix #each when last object entry has empty key ([@denniskuczynski](https://github.com/denniskuczynski))\n- [#1084](https://github.com/wycats/handlebars.js/pull/1084) - Bump uglify version to fix vulnerability ([@John-Steidley](https://github.com/John-Steidley))\n- [#1068](https://github.com/wycats/handlebars.js/pull/1068) - Fix typo ([@0xack13](https://github.com/0xack13))\n- [#1060](https://github.com/wycats/handlebars.js/pull/1060) - #1056 Fixed grammar for nested raw blocks ([@ericbn](https://github.com/ericbn))\n- [#1052](https://github.com/wycats/handlebars.js/pull/1052) - Updated year in License ([@maqnouch](https://github.com/maqnouch))\n- [#1037](https://github.com/wycats/handlebars.js/pull/1037) - Fix minor typos in README ([@tomxtobin](https://github.com/tomxtobin))\n- [#1032](https://github.com/wycats/handlebars.js/issues/1032) - Is it possible to render a partial without the parent scope? ([@aputinski](https://github.com/aputinski))\n- [#1019](https://github.com/wycats/handlebars.js/pull/1019) - Fixes typo in tests ([@aymerick](https://github.com/aymerick))\n- [#1016](https://github.com/wycats/handlebars.js/issues/1016) - Version mis-match ([@mayankdedhia](https://github.com/mayankdedhia))\n- [#1023](https://github.com/wycats/handlebars.js/issues/1023) - is it possible for nested custom helpers to communicate between each other?\n- [#893](https://github.com/wycats/handlebars.js/issues/893) - [Proposal] Section blocks.\n- [#792](https://github.com/wycats/handlebars.js/issues/792) - feature request: inline partial definitions\n- [#583](https://github.com/wycats/handlebars.js/issues/583) - Parent path continues to drill down depth with multiple conditionals\n- [#404](https://github.com/wycats/handlebars.js/issues/404) - Add named child helpers that can be referenced by block helpers\n- Escape = in HTML content - [83b8e84](https://github.com/wycats/handlebars.js/commit/83b8e84)\n- Drop AST constructors in favor of JSON - [95d84ba](https://github.com/wycats/handlebars.js/commit/95d84ba)\n- Pass container rather than exec as context - [9a2d1d6](https://github.com/wycats/handlebars.js/commit/9a2d1d6)\n- Add ignoreStandalone compiler option - [ea3a5a1](https://github.com/wycats/handlebars.js/commit/ea3a5a1)\n- Ignore empty when iterating on sparse arrays - [06d515a](https://github.com/wycats/handlebars.js/commit/06d515a)\n- Add support for string and stdin precompilation - [0de8dac](https://github.com/wycats/handlebars.js/commit/0de8dac)\n- Simplify object assignment generation logic - [77e6bfc](https://github.com/wycats/handlebars.js/commit/77e6bfc)\n- Bulletproof AST.helpers.helperExpression - [93b0760](https://github.com/wycats/handlebars.js/commit/93b0760)\n- Always return string responses - [8e868ab](https://github.com/wycats/handlebars.js/commit/8e868ab)\n- Pass undefined fields to helpers in strict mode - [5d4b8da](https://github.com/wycats/handlebars.js/commit/5d4b8da)\n- Avoid depth creation when context remains the same - [279e038](https://github.com/wycats/handlebars.js/commit/279e038)\n- Improve logging API - [9a49d35](https://github.com/wycats/handlebars.js/commit/9a49d35)\n- Fix with operator in no @data mode - [231a8d7](https://github.com/wycats/handlebars.js/commit/231a8d7)\n- Allow empty key name in each iteration - [1bb640b](https://github.com/wycats/handlebars.js/commit/1bb640b)\n- Add with block parameter support - [2a85106](https://github.com/wycats/handlebars.js/commit/2a85106)\n- Fix escaping of non-javascript identifiers - [410141c](https://github.com/wycats/handlebars.js/commit/410141c)\n- Fix location information for programs - [93faffa](https://github.com/wycats/handlebars.js/commit/93faffa)\n\nCompatibility notes:\n- Depthed paths are now conditionally pushed on to the stack. If the helper uses the same context, then a new stack is not created. This leads to behavior that better matches expectations for helpers like `if` that do not seem to alter the context. Any instances of `../` in templates will need to be checked for the correct behavior under 4.0.0. In general templates will either reduce the number of `../` instances or leave them as is. See [#1028](https://github.com/wycats/handlebars.js/issues/1028).\n- The `=` character is now HTML escaped. This closes a potential exploit case when using unquoted attributes, i.e. `<div foo={{bar}}>`. In general it's recommended that attributes always be quoted when their values are generated from a mustache to avoid any potential exploit surfaces.\n- AST constructors have been dropped in favor of plain old javascript objects\n- The runtime version has been increased. Precompiled templates will need to use runtime of at least 4.0.0.\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v3.0.3...v4.0.0)\n\n## v3.0.3 - April 28th, 2015\n- [#1004](https://github.com/wycats/handlebars.js/issues/1004) - Latest version breaks with RequireJS (global is undefined) ([@boskee](https://github.com/boskee))\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v3.0.2...v3.0.3)\n\n## v3.0.2 - April 20th, 2015\n- [#998](https://github.com/wycats/handlebars.js/pull/998) - Add full support for es6 ([@kpdecker](https://github.com/kpdecker))\n- [#994](https://github.com/wycats/handlebars.js/issues/994) - Access Handlebars.Visitor in browser ([@tamlyn](https://github.com/tamlyn))\n- [#990](https://github.com/wycats/handlebars.js/issues/990) - Allow passing null/undefined literals subexpressions ([@blimmer](https://github.com/blimmer))\n- [#989](https://github.com/wycats/handlebars.js/issues/989) - Source-map error with requirejs ([@SteppeEagle](https://github.com/SteppeEagle))\n- [#967](https://github.com/wycats/handlebars.js/issues/967) - can't access \"this\" property  ([@75lb](https://github.com/75lb))\n- Use captureStackTrace for error handler - a009a97\n- Ignore branches tested without coverage monitoring - 37a664b\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v3.0.1...v3.0.2)\n\n## v3.0.1 - March 24th, 2015\n- [#984](https://github.com/wycats/handlebars.js/pull/984) - Adding documentation for passing arguments into partials ([@johneke](https://github.com/johneke))\n- [#973](https://github.com/wycats/handlebars.js/issues/973) - version 3 is slower than version 2 ([@elover](https://github.com/elover))\n- [#966](https://github.com/wycats/handlebars.js/issues/966) - \"handlebars --version\" does not work with v3.0.0 ([@abloomston](https://github.com/abloomston))\n- [#964](https://github.com/wycats/handlebars.js/pull/964) - default is a reserved word ([@grassick](https://github.com/grassick))\n- [#962](https://github.com/wycats/handlebars.js/pull/962) - Add dashbars' link on README. ([@pismute](https://github.com/pismute))\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v3.0.0...v3.0.1)\n\n## v3.0.0 - February 10th, 2015\n- [#941](https://github.com/wycats/handlebars.js/pull/941) - Add support for dynamic partial names ([@kpdecker](https://github.com/kpdecker))\n- [#940](https://github.com/wycats/handlebars.js/pull/940) - Add missing reserved words so compiler knows to use array syntax: ([@mattflaschen](https://github.com/mattflaschen))\n- [#938](https://github.com/wycats/handlebars.js/pull/938) - Fix example using #with helper ([@diwo](https://github.com/diwo))\n- [#930](https://github.com/wycats/handlebars.js/pull/930) - Add parent tracking and mutation to AST visitors ([@kpdecker](https://github.com/kpdecker))\n- [#926](https://github.com/wycats/handlebars.js/issues/926) - Depthed lookups fail when program duplicator runs ([@kpdecker](https://github.com/kpdecker))\n- [#918](https://github.com/wycats/handlebars.js/pull/918) - Add instructions for 'spec/mustache' to CONTRIBUTING.md, fix a few typos ([@oneeman](https://github.com/oneeman))\n- [#915](https://github.com/wycats/handlebars.js/pull/915) - Ast update ([@kpdecker](https://github.com/kpdecker))\n- [#910](https://github.com/wycats/handlebars.js/issues/910) - Different behavior of {{@last}} when {{#each}} in {{#each}} ([@zordius](https://github.com/zordius))\n- [#907](https://github.com/wycats/handlebars.js/issues/907) - Implement named helper variable references ([@kpdecker](https://github.com/kpdecker))\n- [#906](https://github.com/wycats/handlebars.js/pull/906) - Add parser support for block params ([@mmun](https://github.com/mmun))\n- [#903](https://github.com/wycats/handlebars.js/issues/903) - Only provide aliases for multiple use calls ([@kpdecker](https://github.com/kpdecker))\n- [#902](https://github.com/wycats/handlebars.js/pull/902) - Generate Source Maps ([@kpdecker](https://github.com/kpdecker))\n- [#901](https://github.com/wycats/handlebars.js/issues/901) - Still escapes with noEscape enabled on isolated Handlebars environment ([@zedknight](https://github.com/zedknight))\n- [#896](https://github.com/wycats/handlebars.js/pull/896) - Simplify BlockNode by removing intermediate MustacheNode ([@mmun](https://github.com/mmun))\n- [#892](https://github.com/wycats/handlebars.js/pull/892) - Implement parser for else chaining of helpers ([@kpdecker](https://github.com/kpdecker))\n- [#889](https://github.com/wycats/handlebars.js/issues/889) - Consider extensible parser API ([@kpdecker](https://github.com/kpdecker))\n- [#887](https://github.com/wycats/handlebars.js/issues/887) - Handlebars.noConflict() option? ([@bradvogel](https://github.com/bradvogel))\n- [#886](https://github.com/wycats/handlebars.js/issues/886) - Add SafeString to context (or use duck-typing) ([@dominicbarnes](https://github.com/dominicbarnes))\n- [#870](https://github.com/wycats/handlebars.js/pull/870) - Registering undefined partial throws exception. ([@max-b](https://github.com/max-b))\n- [#866](https://github.com/wycats/handlebars.js/issues/866) - comments don't respect whitespace control ([@75lb](https://github.com/75lb))\n- [#863](https://github.com/wycats/handlebars.js/pull/863) - + jsDelivr CDN info ([@tomByrer](https://github.com/tomByrer))\n- [#858](https://github.com/wycats/handlebars.js/issues/858) - Disable new default auto-indent at included partials ([@majodev](https://github.com/majodev))\n- [#856](https://github.com/wycats/handlebars.js/pull/856) - jspm compatibility ([@MajorBreakfast](https://github.com/MajorBreakfast))\n- [#805](https://github.com/wycats/handlebars.js/issues/805) - Request: \"strict\" lookups ([@nzakas](https://github.com/nzakas))\n\n- Export the default object for handlebars/runtime - 5594416\n- Lookup partials when undefined - 617dd57\n\nCompatibility notes:\n- Runtime breaking changes. Must match 3.x runtime and precompiler.\n- The AST has been upgraded to a public API.\n  - There are a number of changes to this, but the format is now documented in docs/compiler-api.md\n  - The Visitor API has been expanded to support mutation and provide a base implementation\n- The `JavaScriptCompiler` APIs have been formalized and documented. As part of the sourcemap handling these should be updated to return arrays for concatenation.\n- `JavaScriptCompiler.namespace` has been removed as it was unused.\n- `SafeString` is now duck typed on `toHTML`\n\nNew Features:\n- noConflict\n- Source Maps\n- Block Params\n- Strict Mode\n- @last and other each changes\n- Chained else blocks\n- @data methods can now have helper parameters passed to them\n- Dynamic partials\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v2.0.0...v3.0.0)\n\n## v2.0.0 - September 1st, 2014\n- Update jsfiddle to 2.0.0-beta.1 - 0670f65\n- Add contrib note regarding handlebarsjs.com docs - 4d17e3c\n- Play nice with gemspec version numbers - 64d5481\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v2.0.0-beta.1...v2.0.0)\n\n## v2.0.0-beta.1 - August 26th, 2014\n- [#787](https://github.com/wycats/handlebars.js/pull/787) - Remove whitespace surrounding standalone statements ([@kpdecker](https://github.com/kpdecker))\n- [#827](https://github.com/wycats/handlebars.js/issues/827) - Render false literal as “false” ([@scoot557](https://github.com/scoot557))\n- [#767](https://github.com/wycats/handlebars.js/issues/767) - Subexpressions bug with hash and context ([@evensoul](https://github.com/evensoul))\n- Changes to 0/undefined handling\n  - [#731](https://github.com/wycats/handlebars.js/pull/731) - Strange behavior for {{#foo}} {{bar}} {{/foo}} when foo is 0 ([@kpdecker](https://github.com/kpdecker))\n  - [#820](https://github.com/wycats/handlebars.js/issues/820) - strange behavior for {{foo.bar}} when foo is 0 or null or false ([@zordius](https://github.com/zordius))\n  - [#837](https://github.com/wycats/handlebars.js/issues/837) - Strange input for custom helper ( foo.bar == false when foo is undefined ) ([@zordius](https://github.com/zordius))\n- [#819](https://github.com/wycats/handlebars.js/pull/819) - Implement recursive field lookup ([@kpdecker](https://github.com/kpdecker))\n- [#764](https://github.com/wycats/handlebars.js/issues/764) - This reference not working for helpers ([@kpdecker](https://github.com/kpdecker))\n- [#773](https://github.com/wycats/handlebars.js/issues/773) - Implicit parameters in {{#each}} introduces a peculiarity in helpers calling convention  ([@Bertrand](https://github.com/Bertrand))\n- [#783](https://github.com/wycats/handlebars.js/issues/783) - helperMissing and consistency for different expression types ([@ErisDS](https://github.com/ErisDS))\n- [#795](https://github.com/wycats/handlebars.js/pull/795) - Turn the precompile script into a wrapper around a module. ([@jwietelmann](https://github.com/jwietelmann))\n- [#823](https://github.com/wycats/handlebars.js/pull/823) - Support inverse sections on the with helper ([@dan-manges](https://github.com/dan-manges))\n- [#834](https://github.com/wycats/handlebars.js/pull/834) - Refactor blocks, programs and inverses ([@mmun](https://github.com/mmun))\n- [#852](https://github.com/wycats/handlebars.js/issues/852) - {{foo~}} space control behavior is different from older version ([@zordius](https://github.com/zordius))\n- [#835](https://github.com/wycats/handlebars.js/issues/835) - Templates overwritten if file is loaded twice\n\n- Expose escapeExpression on the root object - 980c38c\n- Remove nested function eval in blockHelperMissing - 6f22ec1\n- Fix compiler program de-duping - 9e3f824\n\nCompatibility notes:\n- The default build now outputs a generic UMD wrapper. This should be transparent change but may cause issues in some environments.\n- Runtime compatibility breaks in both directions. Ensure that both compiler and client are upgraded to 2.0.0-beta.1 or higher at the same time.\n  - `programWithDepth` has been removed an instead an array of context values is passed to fields needing depth lookups.\n- `false` values are now printed to output rather than silently dropped\n- Lines containing only block statements and whitespace are now removed. This matches the Mustache spec but may cause issues with code that expects whitespace to exist but would not otherwise.\n- Partials that are standalone will now indent their rendered content\n- `AST.ProgramNode`'s signature has changed. \n- Numerious methods/features removed from psuedo-API classes\n  - `JavaScriptCompiler.register`\n  - `JavaScriptCompiler.replaceStack` no longer supports non-inline replace\n  - `Compiler.disassemble`\n  - `DECLARE` opcode\n  - `strip` opcode\n  - `lookup` opcode\n  - Content nodes may have their `string` values mutated over time. `original` field provides the unmodified value.\n- Removed unused `Handlebars.registerHelper` `inverse` parameter\n- `each` helper requires iterator parameter\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v2.0.0-alpha.4...v2.0.0-beta.1)\n\n## v2.0.0-alpha.4 - May 19th, 2014\n- Expose setup wrappers for compiled templates - 3638874\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v2.0.0-alpha.3...v2.0.0-alpha.4)\n\n## v2.0.0-alpha.3 - May 19th, 2014\n- [#797](https://github.com/wycats/handlebars.js/pull/797) - Pass full helper ID to helperMissing when options are provided ([@tomdale](https://github.com/tomdale))\n- [#793](https://github.com/wycats/handlebars.js/pull/793) - Ensure isHelper is coerced to a boolean ([@mmun](https://github.com/mmun))\n- Refactor template init logic - 085e5e1\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v2.0.0-alpha.2...v2.0.0-alpha.3)\n\n## v2.0.0-alpha.2 - March 6th, 2014\n- [#756](https://github.com/wycats/handlebars.js/pull/756) - fix bug in IE<=8 (no Array::map), closes #751 ([@jenseng](https://github.com/jenseng))\n- [#749](https://github.com/wycats/handlebars.js/pull/749) - properly handle multiple subexpressions in the same hash, fixes #748 ([@jenseng](https://github.com/jenseng))\n- [#743](https://github.com/wycats/handlebars.js/issues/743) - subexpression confusion/problem? ([@waynedpj](https://github.com/waynedpj))\n- [#746](https://github.com/wycats/handlebars.js/issues/746) - [CLI] support `handlebars --version` ([@apfelbox](https://github.com/apfelbox))\n- [#747](https://github.com/wycats/handlebars.js/pull/747) - updated grunt-saucelabs, failing tests revealed ([@Jonahss](https://github.com/Jonahss))\n- Make JSON a requirement for the compiler. - 058c0fb\n- Temporarily kill the AWS publish CI step - 8347ee2\n\nCompatibility notes:\n- A JSON polyfill is required to run the compiler under IE8 and below. It's recommended that the precompiler be used in lieu of running the compiler on these legacy environments.\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v2.0.0-alpha.1...v2.0.0-alpha.2)\n\n## v2.0.0-alpha.1 - February 10th, 2014\n- [#182](https://github.com/wycats/handlebars.js/pull/182) - Allow passing hash parameters to partials ([@kpdecker](https://github.com/kpdecker))\n- [#392](https://github.com/wycats/handlebars.js/pull/392) - Access to root context in partials and helpers ([@kpdecker](https://github.com/kpdecker))\n- [#472](https://github.com/wycats/handlebars.js/issues/472) - Helpers cannot have decimal parameters ([@kayleg](https://github.com/kayleg))\n- [#569](https://github.com/wycats/handlebars.js/pull/569) - Unable to lookup array values using @index ([@kpdecker](https://github.com/kpdecker))\n- [#491](https://github.com/wycats/handlebars.js/pull/491) - For nested helpers: get the @ variables of the outer helper from the inner one ([@kpdecker](https://github.com/kpdecker))\n- [#669](https://github.com/wycats/handlebars.js/issues/669) - Ability to unregister a helper ([@dbachrach](https://github.com/dbachrach))\n- [#730](https://github.com/wycats/handlebars.js/pull/730) - Raw block helpers ([@kpdecker](https://github.com/kpdecker))\n- [#634](https://github.com/wycats/handlebars.js/pull/634) - It would be great to have the helper name passed to `blockHelperMissing` ([@kpdecker](https://github.com/kpdecker))\n- [#729](https://github.com/wycats/handlebars.js/pull/729) - Convert template spec to object literal ([@kpdecker](https://github.com/kpdecker))\n\n- [#658](https://github.com/wycats/handlebars.js/issues/658) - Depthed helpers do not work after an upgrade from 1.0.0 ([@xibxor](https://github.com/xibxor))\n- [#671](https://github.com/wycats/handlebars.js/issues/671) - Crashes on no-parameter {{#each}} ([@stepancheg](https://github.com/stepancheg))\n- [#689](https://github.com/wycats/handlebars.js/issues/689) - broken template precompilation ([@AAS](https://github.com/AAS))\n- [#698](https://github.com/wycats/handlebars.js/pull/698) - Fix parser generation under windows ([@osiris43](https://github.com/osiris43))\n- [#699](https://github.com/wycats/handlebars.js/issues/699) - @DATA not compiles to invalid JS in stringParams mode ([@kpdecker](https://github.com/kpdecker))\n- [#705](https://github.com/wycats/handlebars.js/issues/705) - 1.3.0 can not be wrapped in an IIFE ([@craigteegarden](https://github.com/craigteegarden))\n- [#706](https://github.com/wycats/handlebars.js/pull/706) - README: Use with helper instead of relying on blockHelperMissing ([@scottgonzalez](https://github.com/scottgonzalez))\n\n- [#700](https://github.com/wycats/handlebars.js/pull/700) - Remove redundant conditions ([@blakeembrey](https://github.com/blakeembrey))\n- [#704](https://github.com/wycats/handlebars.js/pull/704) - JavaScript Compiler Cleanup ([@blakeembrey](https://github.com/blakeembrey))\n\nCompatibility notes:\n- `helperMissing` helper no longer has the indexed name argument. Helper name is now available via `options.name`.\n- Precompiler output has changed, which breaks compatibility with prior versions of the runtime and precompiled output.\n- `JavaScriptCompiler.compilerInfo` now returns generic objects rather than javascript source.\n- AST changes\n  - INTEGER -> NUMBER\n  - Additional PartialNode hash parameter\n  - New RawBlockNode type\n- Data frames now have a `_parent` field. This is internal but is enumerable for performance/compatibility reasons.\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v1.3.0...v2.0.0-alpha.1)\n\n## v1.3.0 - January 1st, 2014\n- [#690](https://github.com/wycats/handlebars.js/pull/690) - Added support for subexpressions ([@machty](https://github.com/machty))\n- [#696](https://github.com/wycats/handlebars.js/pull/696) - Fix for reserved keyword \"default\" ([@nateirwin](https://github.com/nateirwin))\n- [#692](https://github.com/wycats/handlebars.js/pull/692) - add line numbers to nodes when parsing ([@fivetanley](https://github.com/fivetanley))\n- [#695](https://github.com/wycats/handlebars.js/pull/695) - Pull options out from param setup to allow easier extension ([@blakeembrey](https://github.com/blakeembrey))\n- [#694](https://github.com/wycats/handlebars.js/pull/694) - Make the environment reusable ([@blakeembrey](https://github.com/blakeembrey))\n- [#636](https://github.com/wycats/handlebars.js/issues/636) - Print line and column of errors ([@sgronblo](https://github.com/sgronblo))\n- Use literal for data lookup - c1a93d3\n- Add stack handling sanity checks - cd885bf\n- Fix stack id \"leak\" on replaceStack - ddfe457\n- Fix incorrect stack pop when replacing literals - f4d337d\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v1.2.1...v1.3.0)\n\n## v1.2.1 - December 26th, 2013\n- [#684](https://github.com/wycats/handlebars.js/pull/684) - Allow any number of trailing characters for valid JavaScript variable ([@blakeembrey](https://github.com/blakeembrey))\n- [#686](https://github.com/wycats/handlebars.js/pull/686) - Falsy AMD module names in version 1.2.0 ([@kpdecker](https://github.com/kpdecker))\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v1.2.0...v1.2.1)\n\n## v1.2.0 - December 23rd, 2013\n- [#675](https://github.com/wycats/handlebars.js/issues/675) - Cannot compile empty template for partial ([@erwinw](https://github.com/erwinw))\n- [#677](https://github.com/wycats/handlebars.js/issues/677) - Triple brace statements fail under IE ([@hamzaCM](https://github.com/hamzaCM))\n- [#655](https://github.com/wycats/handlebars.js/issues/655) - Loading Handlebars using bower ([@niki4810](https://github.com/niki4810))\n- [#657](https://github.com/wycats/handlebars.js/pull/657) - Fixes issue where cli compiles non handlebars templates ([@chrishoage](https://github.com/chrishoage))\n- [#681](https://github.com/wycats/handlebars.js/pull/681) - Adds in-browser testing and Saucelabs CI ([@kpdecker](https://github.com/kpdecker))\n- [#661](https://github.com/wycats/handlebars.js/pull/661) - Add @first and @index to #each object iteration ([@cgp](https://github.com/cgp))\n- [#650](https://github.com/wycats/handlebars.js/pull/650) - Handlebars is MIT-licensed ([@thomasboyt](https://github.com/thomasboyt))\n- [#641](https://github.com/wycats/handlebars.js/pull/641) - Document ember testing process ([@kpdecker](https://github.com/kpdecker))\n- [#662](https://github.com/wycats/handlebars.js/issues/662) - handlebars-source 1.1.2 is missing from RubyGems.\n- [#656](https://github.com/wycats/handlebars.js/issues/656) - Expose COMPILER_REVISION checks as a hook ([@machty](https://github.com/machty))\n- [#668](https://github.com/wycats/handlebars.js/issues/668) - Consider publishing handlebars-runtime as a separate module on npm ([@dlmanning](https://github.com/dlmanning))\n- [#679](https://github.com/wycats/handlebars.js/issues/679) - Unable to override invokePartial ([@mattbrailsford](https://github.com/mattbrailsford))\n- [#646](https://github.com/wycats/handlebars.js/pull/646) - Fix \"\\\\{{\" immediately following \"\\{{\" ([@dmarcotte](https://github.com/dmarcotte))\n- Allow extend to work with non-prototyped objects - eb53f2e\n- Add JavascriptCompiler public API tests - 1a751b2\n- Add AST test coverage for more complex paths - ddea5be\n- Fix handling of boolean escape in MustacheNode - b4968bb\n\nCompatibility notes:\n- `@index` and `@first` are now supported for `each` iteration on objects\n- `Handlebars.VM.checkRevision` and `Handlebars.JavaScriptCompiler.prototype.compilerInfo` now available to modify the version checking behavior.\n- Browserify users may link to the runtime library via `require('handlebars/runtime')`\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v1.1.2...v1.2.0)\n\n## v1.1.2 - November 5th, 2013\n\n- [#645](https://github.com/wycats/handlebars.js/issues/645) - 1.1.1 fails under IE8 ([@kpdecker](https://github.com/kpdecker))\n- [#644](https://github.com/wycats/handlebars.js/issues/644) - Using precompiled templates (AMD mode) with handlebars.runtime 1.1.1 ([@fddima](https://github.com/fddima))\n\n- Add simple binary utility tests - 96a45a4\n- Fix empty string compilation - eea708a\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v1.1.1...v1.1.2)\n\n## v1.1.1 - November 4th, 2013\n\n- [#642](https://github.com/wycats/handlebars.js/issues/642) - handlebars 1.1.0 are broken with nodejs\n\n- Fix release notes link - 17ba258\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v1.1.0...v1.1.1)\n\n## v1.1.0 - November 3rd, 2013\n\n- [#628](https://github.com/wycats/handlebars.js/pull/628) - Convert code to ES6 modules ([@kpdecker](https://github.com/kpdecker))\n- [#336](https://github.com/wycats/handlebars.js/pull/336) - Add whitespace control syntax ([@kpdecker](https://github.com/kpdecker))\n- [#535](https://github.com/wycats/handlebars.js/pull/535) - Fix for probable JIT error under Safari ([@sorentwo](https://github.com/sorentwo))\n- [#483](https://github.com/wycats/handlebars.js/issues/483) - Add first and last @ vars to each helper ([@denniskuczynski](https://github.com/denniskuczynski))\n- [#557](https://github.com/wycats/handlebars.js/pull/557) - `\\\\{{foo}}` escaping only works in some situations ([@dmarcotte](https://github.com/dmarcotte))\n- [#552](https://github.com/wycats/handlebars.js/pull/552) - Added BOM removal flag. ([@blessenm](https://github.com/blessenm))\n- [#543](https://github.com/wycats/handlebars.js/pull/543) - publish passing master builds to s3 ([@fivetanley](https://github.com/fivetanley))\n\n- [#608](https://github.com/wycats/handlebars.js/issues/608) - Add `includeZero` flag to `if` conditional\n- [#498](https://github.com/wycats/handlebars.js/issues/498) - `Handlebars.compile` fails on empty string although a single blank works fine\n- [#599](https://github.com/wycats/handlebars.js/issues/599) - lambda helpers only receive options if used with arguments\n- [#592](https://github.com/wycats/handlebars.js/issues/592) - Optimize array and subprogram performance\n- [#571](https://github.com/wycats/handlebars.js/issues/571) - uglify upgrade breaks compatibility with older versions of node\n- [#587](https://github.com/wycats/handlebars.js/issues/587) - Partial inside partial breaks?\n\n\nCompatibility notes:\n- The project now includes separate artifacts for AMD, CommonJS, and global objects. \n  - AMD: Users may load the bundled `handlebars.amd.js` or `handlebars.runtime.amd.js` files or load individual modules directly. AMD users should also note that the handlebars object is exposed via the `default` field on the imported object. This [gist](https://gist.github.com/wycats/7417be0dc361a69d5916) provides some discussion of possible compatibility shims.\n  - CommonJS/Node: Node loading occurs as normal via `require`\n  - Globals: The `handlebars.js` and `handlebars.runtime.js` files should behave in the same manner as the v1.0.12 / 1.0.0 release.\n- Build artifacts have been removed from the repository. [npm][npm], [components/handlebars.js][components], [cdnjs][cdnjs], or the [builds page][builds-page] should now be used as the source of built artifacts. \n- Context-stored helpers are now always passed the `options` hash. Previously no-argument helpers did not have this argument.\n\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v1.0.12...v1.1.0)\n\n## v1.0.12 / 1.0.0 - May 31 2013\n\n- [#515](https://github.com/wycats/handlebars.js/issues/515) - Add node require extensions support ([@jjclark1982](https://github.com/jjclark1982))\n- [#517](https://github.com/wycats/handlebars.js/issues/517) - Fix amd precompiler output with directories ([@blessenm](https://github.com/blessenm))\n- [#433](https://github.com/wycats/handlebars.js/issues/433) - Add support for unicode ids\n- [#469](https://github.com/wycats/handlebars.js/issues/469) - Add support for `?` in ids\n- [#534](https://github.com/wycats/handlebars.js/issues/534) - Protect from object prototype modifications\n- [#519](https://github.com/wycats/handlebars.js/issues/519) - Fix partials with . name ([@jamesgorrie](https://github.com/jamesgorrie))\n- [#519](https://github.com/wycats/handlebars.js/issues/519) - Allow ID or strings in partial names\n- [#437](https://github.com/wycats/handlebars.js/issues/437) - Require matching brace counts in escaped expressions\n- Merge passed partials and helpers with global namespace values\n- Add support for complex ids in @data references\n- Docs updates\n\nCompatibility notes:\n- The parser is now stricter on `{{{`, requiring that the end token be `}}}`. Templates that do not\n  follow this convention should add the additional brace value.\n- Code that relies on global the namespace being muted when custom helpers or partials are passed will need to explicitly pass an `undefined` value for any helpers that should not be available.\n- The compiler version has changed. Precompiled templates with 1.0.12 or higher must use the 1.0.0 or higher runtime.\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v1.0.11...v1.0.12)\n\n## v1.0.11 / 1.0.0-rc4 - May 13 2013\n\n- [#458](https://github.com/wycats/handlebars.js/issues/458) - Fix `./foo` syntax ([@jpfiset](https://github.com/jpfiset))\n- [#460](https://github.com/wycats/handlebars.js/issues/460) - Allow `:` in unescaped identifers ([@jpfiset](https://github.com/jpfiset))\n- [#471](https://github.com/wycats/handlebars.js/issues/471) - Create release notes (These!)\n- [#456](https://github.com/wycats/handlebars.js/issues/456) - Allow escaping of `\\\\`\n- [#211](https://github.com/wycats/handlebars.js/issues/211) - Fix exception in `escapeExpression`\n- [#375](https://github.com/wycats/handlebars.js/issues/375) - Escape unicode newlines\n- [#461](https://github.com/wycats/handlebars.js/issues/461) - Do not fail when compiling `\"\"`\n- [#302](https://github.com/wycats/handlebars.js/issues/302) - Fix sanity check in knownHelpersOnly mode\n- [#369](https://github.com/wycats/handlebars.js/issues/369) - Allow registration of multiple helpers and partial by passing definition object\n- Add bower package declaration ([@DevinClark](https://github.com/DevinClark))\n- Add NuSpec package declaration ([@MikeMayer](https://github.com/MikeMayer))\n- Handle empty context in `with` ([@thejohnfreeman](https://github.com/thejohnfreeman))\n- Support custom template extensions in CLI ([@matteoagosti](https://github.com/matteoagosti))\n- Fix Rhino support ([@broady](https://github.com/broady))\n- Include contexts in string mode ([@leshill](https://github.com/leshill))\n- Return precompiled scripts when compiling to AMD ([@JamesMaroney](https://github.com/JamesMaroney))\n- Docs updates ([@iangreenleaf](https://github.com/iangreenleaf), [@gilesbowkett](https://github.com/gilesbowkett), [@utkarsh2012](https://github.com/utkarsh2012))\n- Fix `toString` handling under IE and browserify ([@tommydudebreaux](https://github.com/tommydudebreaux))\n- Add program metadata\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v1.0.10...v1.0.11)\n\n## v1.0.10 - Node - Feb 27 2013\n\n- [#428](https://github.com/wycats/handlebars.js/issues/428) - Fix incorrect rendering of nested programs\n- Fix exception message ([@tricknotes](https://github.com/tricknotes))\n- Added negative number literal support\n- Concert library to single IIFE\n- Add handlebars-source gemspec ([@machty](https://github.com/machty))\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v1.0.9...v1.0.10)\n\n## v1.0.9 - Node - Feb 15 2013\n\n- Added `Handlebars.create` API in node module for sandboxed instances ([@tommydudebreaux](https://github.com/tommydudebreaux))\n\n[Commits](https://github.com/wycats/handlebars.js/compare/1.0.0-rc.3...v1.0.9)\n\n## 1.0.0-rc3 - Browser - Feb 14 2013\n\n- Prevent use of `this` or `..` in illogical place ([@leshill](https://github.com/leshill))\n- Allow AST passing for `parse`/`compile`/`precompile` ([@machty](https://github.com/machty))\n- Optimize generated output by inlining statements where possible\n- Check compiler version when evaluating templates\n- Package browser dist in npm package\n\n[Commits](https://github.com/wycats/handlebars.js/compare/v1.0.8...1.0.0-rc.3)\n\n## Prior Versions\n\nWhen upgrading from the Handlebars 0.9 series, be aware that the\nsignature for passing custom helpers or partials to templates has\nchanged.\n\nInstead of:\n\n```js\ntemplate(context, helpers, partials, [data])\n```\n\nUse:\n\n```js\ntemplate(context, {helpers: helpers, partials: partials, data: data})\n```\n\n[builds-page]: http://builds.handlebarsjs.com.s3.amazonaws.com/index.html\n[cdnjs]: http://cdnjs.com/libraries/handlebars.js/\n[components]: https://github.com/components/handlebars.js\n[npm]: https://npmjs.org/package/handlebars",
      "metadata": {}
    },
    "Changelog": {
      "reference": "Changelog",
      "route": "Changelog",
      "sourcePath": "src\\docs-data\\node_modules\\iconv-lite\\Changelog.md",
      "title": "(untitled)",
      "contents": [
        "<h1 id=\"0-4-24-2018-08-22\">0.4.24 / 2018-08-22</h1>\n<ul>\n<li>Added MIK encoding (#196, by @Ivan-Kalatchev)</li>\n</ul>\n<h1 id=\"0-4-23-2018-05-07\">0.4.23 / 2018-05-07</h1>\n<ul>\n<li>Fix deprecation warning in Node v10 due to the last usage of <code>new Buffer</code> (#185, by @felixbuenemann)</li>\n<li>Switched from NodeBuffer to Buffer in typings (#155 by @felixfbecker, #186 by @larssn)</li>\n</ul>\n<h1 id=\"0-4-22-2018-05-05\">0.4.22 / 2018-05-05</h1>\n<ul>\n<li>Use older semver style for dependencies to be compatible with Node version 0.10 (#182, by @dougwilson)</li>\n<li>Fix tests to accomodate fixes in Node v10 (#182, by @dougwilson)</li>\n</ul>\n<h1 id=\"0-4-21-2018-04-06\">0.4.21 / 2018-04-06</h1>\n<ul>\n<li>Fix encoding canonicalization (#156)</li>\n<li>Fix the paths in the &quot;browser&quot; field in package.json (#174 by @LMLB)</li>\n<li>Removed &quot;contributors&quot; section in package.json - see Git history instead.</li>\n</ul>\n<h1 id=\"0-4-20-2018-04-06\">0.4.20 / 2018-04-06</h1>\n<ul>\n<li>Updated <code>new Buffer()</code> usages with recommended replacements as it&#39;s being deprecated in Node v10 (#176, #178 by @ChALkeR)</li>\n</ul>\n<h1 id=\"0-4-19-2017-09-09\">0.4.19 / 2017-09-09</h1>\n<ul>\n<li>Fixed iso8859-1 codec regression in handling untranslatable characters (#162, caused by #147)</li>\n<li>Re-generated windows1255 codec, because it was updated in iconv project</li>\n<li>Fixed grammar in error message when iconv-lite is loaded with encoding other than utf8</li>\n</ul>\n<h1 id=\"0-4-18-2017-06-13\">0.4.18 / 2017-06-13</h1>\n<ul>\n<li>Fixed CESU-8 regression in Node v8.</li>\n</ul>\n<h1 id=\"0-4-17-2017-04-22\">0.4.17 / 2017-04-22</h1>\n<ul>\n<li>Updated typescript definition file to support Angular 2 AoT mode (#153 by @larssn)</li>\n</ul>\n<h1 id=\"0-4-16-2017-04-22\">0.4.16 / 2017-04-22</h1>\n<ul>\n<li>Added support for React Native (#150)</li>\n<li>Changed iso8859-1 encoding to usine internal &#39;binary&#39; encoding, as it&#39;s the same thing (#147 by @mscdex)</li>\n<li>Fixed typo in Readme (#138 by @jiangzhuo)</li>\n<li>Fixed build for Node v6.10+ by making correct version comparison</li>\n<li>Added a warning if iconv-lite is loaded not as utf-8 (see #142)</li>\n</ul>\n<h1 id=\"0-4-15-2016-11-21\">0.4.15 / 2016-11-21</h1>\n<ul>\n<li>Fixed typescript type definition (#137)</li>\n</ul>\n<h1 id=\"0-4-14-2016-11-20\">0.4.14 / 2016-11-20</h1>\n<ul>\n<li>Preparation for v1.0</li>\n<li>Added Node v6 and latest Node versions to Travis CI test rig</li>\n<li>Deprecated Node v0.8 support</li>\n<li>Typescript typings (@larssn)</li>\n<li>Fix encoding of Euro character in GB 18030 (inspired by @lygstate)</li>\n<li>Add ms prefix to dbcs windows encodings (@rokoroku)</li>\n</ul>\n<h1 id=\"0-4-13-2015-10-01\">0.4.13 / 2015-10-01</h1>\n<ul>\n<li>Fix silly mistake in deprecation notice.</li>\n</ul>\n<h1 id=\"0-4-12-2015-09-26\">0.4.12 / 2015-09-26</h1>\n<ul>\n<li>Node v4 support:<ul>\n<li>Added CESU-8 decoding (#106)</li>\n<li>Added deprecation notice for <code>extendNodeEncodings</code></li>\n<li>Added Travis tests for Node v4 and io.js latest (#105 by @Mithgol)</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"0-4-11-2015-07-03\">0.4.11 / 2015-07-03</h1>\n<ul>\n<li>Added CESU-8 encoding.</li>\n</ul>\n<h1 id=\"0-4-10-2015-05-26\">0.4.10 / 2015-05-26</h1>\n<ul>\n<li>Changed UTF-16 endianness heuristic to take into account any ASCII chars, not\njust spaces. This should minimize the importance of &quot;default&quot; endianness.</li>\n</ul>\n<h1 id=\"0-4-9-2015-05-24\">0.4.9 / 2015-05-24</h1>\n<ul>\n<li>Streamlined BOM handling: strip BOM by default, add BOM when encoding if \naddBOM: true. Added docs to Readme.</li>\n<li>UTF16 now uses UTF16-LE by default.</li>\n<li>Fixed minor issue with big5 encoding.</li>\n<li>Added io.js testing on Travis; updated node-iconv version to test against.\nNow we just skip testing SBCS encodings that node-iconv doesn&#39;t support.</li>\n<li>(internal refactoring) Updated codec interface to use classes.</li>\n<li>Use strict mode in all files.</li>\n</ul>\n<h1 id=\"0-4-8-2015-04-14\">0.4.8 / 2015-04-14</h1>\n<ul>\n<li>added alias UNICODE-1-1-UTF-7 for UTF-7 encoding (#94)</li>\n</ul>\n<h1 id=\"0-4-7-2015-02-05\">0.4.7 / 2015-02-05</h1>\n<ul>\n<li>stop official support of Node.js v0.8. Should still work, but no guarantees.\nreason: Packages needed for testing are hard to get on Travis CI.</li>\n<li>work in environment where Object.prototype is monkey patched with enumerable \nprops (#89).</li>\n</ul>\n<h1 id=\"0-4-6-2015-01-12\">0.4.6 / 2015-01-12</h1>\n<ul>\n<li>fix rare aliases of single-byte encodings (thanks @mscdex)</li>\n<li>double the timeout for dbcs tests to make them less flaky on travis</li>\n</ul>\n<h1 id=\"0-4-5-2014-11-20\">0.4.5 / 2014-11-20</h1>\n<ul>\n<li>fix windows-31j and x-sjis encoding support (@nleush)</li>\n<li>minor fix: undefined variable reference when internal error happens</li>\n</ul>\n<h1 id=\"0-4-4-2014-07-16\">0.4.4 / 2014-07-16</h1>\n<ul>\n<li>added encodings UTF-7 (RFC2152) and UTF-7-IMAP (RFC3501 Section 5.1.3)</li>\n<li>fixed streaming base64 encoding</li>\n</ul>\n<h1 id=\"0-4-3-2014-06-14\">0.4.3 / 2014-06-14</h1>\n<ul>\n<li>added encodings UTF-16BE and UTF-16 with BOM</li>\n</ul>\n<h1 id=\"0-4-2-2014-06-12\">0.4.2 / 2014-06-12</h1>\n<ul>\n<li>don&#39;t throw exception if <code>extendNodeEncodings()</code> is called more than once</li>\n</ul>\n<h1 id=\"0-4-1-2014-06-11\">0.4.1 / 2014-06-11</h1>\n<ul>\n<li>codepage 808 added</li>\n</ul>\n<h1 id=\"0-4-0-2014-06-10\">0.4.0 / 2014-06-10</h1>\n<ul>\n<li>code is rewritten from scratch</li>\n<li>all widespread encodings are supported</li>\n<li>streaming interface added</li>\n<li>browserify compatibility added</li>\n<li>(optional) extend core primitive encodings to make usage even simpler</li>\n<li>moved from vows to mocha as the testing framework</li>\n</ul>\n"
      ],
      "contentsRaw": "# 0.4.24 / 2018-08-22\n\n  * Added MIK encoding (#196, by @Ivan-Kalatchev)\n\n\n# 0.4.23 / 2018-05-07\n\n  * Fix deprecation warning in Node v10 due to the last usage of `new Buffer` (#185, by @felixbuenemann)\n  * Switched from NodeBuffer to Buffer in typings (#155 by @felixfbecker, #186 by @larssn)\n\n\n# 0.4.22 / 2018-05-05\n\n  * Use older semver style for dependencies to be compatible with Node version 0.10 (#182, by @dougwilson)\n  * Fix tests to accomodate fixes in Node v10 (#182, by @dougwilson)\n\n\n# 0.4.21 / 2018-04-06\n\n  * Fix encoding canonicalization (#156)\n  * Fix the paths in the \"browser\" field in package.json (#174 by @LMLB)\n  * Removed \"contributors\" section in package.json - see Git history instead.\n\n\n# 0.4.20 / 2018-04-06\n\n  * Updated `new Buffer()` usages with recommended replacements as it's being deprecated in Node v10 (#176, #178 by @ChALkeR)\n\n\n# 0.4.19 / 2017-09-09\n\n  * Fixed iso8859-1 codec regression in handling untranslatable characters (#162, caused by #147)\n  * Re-generated windows1255 codec, because it was updated in iconv project\n  * Fixed grammar in error message when iconv-lite is loaded with encoding other than utf8\n\n\n# 0.4.18 / 2017-06-13\n\n  * Fixed CESU-8 regression in Node v8.\n\n\n# 0.4.17 / 2017-04-22\n\n * Updated typescript definition file to support Angular 2 AoT mode (#153 by @larssn)\n\n\n# 0.4.16 / 2017-04-22\n\n * Added support for React Native (#150)\n * Changed iso8859-1 encoding to usine internal 'binary' encoding, as it's the same thing (#147 by @mscdex)\n * Fixed typo in Readme (#138 by @jiangzhuo)\n * Fixed build for Node v6.10+ by making correct version comparison\n * Added a warning if iconv-lite is loaded not as utf-8 (see #142)\n\n\n# 0.4.15 / 2016-11-21\n\n * Fixed typescript type definition (#137)\n\n\n# 0.4.14 / 2016-11-20\n\n * Preparation for v1.0\n * Added Node v6 and latest Node versions to Travis CI test rig\n * Deprecated Node v0.8 support\n * Typescript typings (@larssn)\n * Fix encoding of Euro character in GB 18030 (inspired by @lygstate)\n * Add ms prefix to dbcs windows encodings (@rokoroku)\n\n\n# 0.4.13 / 2015-10-01\n\n * Fix silly mistake in deprecation notice.\n\n\n# 0.4.12 / 2015-09-26\n\n * Node v4 support:\n   * Added CESU-8 decoding (#106)\n   * Added deprecation notice for `extendNodeEncodings`\n   * Added Travis tests for Node v4 and io.js latest (#105 by @Mithgol)\n\n\n# 0.4.11 / 2015-07-03\n\n * Added CESU-8 encoding.\n\n\n# 0.4.10 / 2015-05-26\n\n * Changed UTF-16 endianness heuristic to take into account any ASCII chars, not\n   just spaces. This should minimize the importance of \"default\" endianness.\n\n\n# 0.4.9 / 2015-05-24\n\n * Streamlined BOM handling: strip BOM by default, add BOM when encoding if \n   addBOM: true. Added docs to Readme.\n * UTF16 now uses UTF16-LE by default.\n * Fixed minor issue with big5 encoding.\n * Added io.js testing on Travis; updated node-iconv version to test against.\n   Now we just skip testing SBCS encodings that node-iconv doesn't support.\n * (internal refactoring) Updated codec interface to use classes.\n * Use strict mode in all files.\n\n\n# 0.4.8 / 2015-04-14\n \n * added alias UNICODE-1-1-UTF-7 for UTF-7 encoding (#94)\n\n\n# 0.4.7 / 2015-02-05\n\n * stop official support of Node.js v0.8. Should still work, but no guarantees.\n   reason: Packages needed for testing are hard to get on Travis CI.\n * work in environment where Object.prototype is monkey patched with enumerable \n   props (#89).\n\n\n# 0.4.6 / 2015-01-12\n \n * fix rare aliases of single-byte encodings (thanks @mscdex)\n * double the timeout for dbcs tests to make them less flaky on travis\n\n\n# 0.4.5 / 2014-11-20\n\n * fix windows-31j and x-sjis encoding support (@nleush)\n * minor fix: undefined variable reference when internal error happens\n\n\n# 0.4.4 / 2014-07-16\n\n * added encodings UTF-7 (RFC2152) and UTF-7-IMAP (RFC3501 Section 5.1.3)\n * fixed streaming base64 encoding\n\n\n# 0.4.3 / 2014-06-14\n\n * added encodings UTF-16BE and UTF-16 with BOM\n\n\n# 0.4.2 / 2014-06-12\n\n * don't throw exception if `extendNodeEncodings()` is called more than once\n\n\n# 0.4.1 / 2014-06-11\n\n * codepage 808 added\n\n\n# 0.4.0 / 2014-06-10\n\n * code is rewritten from scratch\n * all widespread encodings are supported\n * streaming interface added\n * browserify compatibility added\n * (optional) extend core primitive encodings to make usage even simpler\n * moved from vows to mocha as the testing framework",
      "metadata": {}
    },
    "homepage": {
      "reference": "homepage",
      "route": "homepage",
      "sourcePath": "src\\docs-data\\node_modules\\kss\\demo\\homepage.md",
      "title": "(untitled)",
      "contents": [
        "<h1 id=\"building-style-guides-with-kss-node\">Building style guides with kss-node</h1>\n<p>This software is a Node.js implementation of <a href=\"https://github.com/kneath/kss\">Knyle Style Sheets</a> (KSS), &quot;a documentation syntax for CSS&quot; that&#39;s intended to have syntax readable by humans <em>and</em> machines. Hence, the kss-node software can be used to create a &quot;living style guide&quot;.</p>\n<ol>\n<li>Write human-readable documentation using &quot;KSS syntax&quot; comments. Can be added to CSS, Sass, LESS, or any other CSS Preprocessor files.</li>\n<li>Have the <code>kss</code> tool automatically build a style guide from your stylesheets.</li>\n</ol>\n<p>Here&#39;s an example KSS comment:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source css\"><span class=\"comment block css\"><span class=\"punctuation definition comment css\"><span>/*</span></span></span></span></div><div class=\"line\"><span class=\"source css\"><span class=\"comment block css\"><span>Button</span></span></span></div><div class=\"line\"><span class=\"source css\"><span class=\"comment block css\"><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source css\"><span class=\"comment block css\"><span>Your&nbsp;standard&nbsp;button&nbsp;suitable&nbsp;for&nbsp;clicking.</span></span></span></div><div class=\"line\"><span class=\"source css\"><span class=\"comment block css\"><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source css\"><span class=\"comment block css\"><span>:hover&nbsp;&nbsp;&nbsp;-&nbsp;Highlights&nbsp;when&nbsp;hovering.</span></span></span></div><div class=\"line\"><span class=\"source css\"><span class=\"comment block css\"><span>.shiny&nbsp;&nbsp;&nbsp;-&nbsp;Do&nbsp;not&nbsp;press&nbsp;this&nbsp;big,&nbsp;shiny,&nbsp;red&nbsp;button.</span></span></span></div><div class=\"line\"><span class=\"source css\"><span class=\"comment block css\"><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source css\"><span class=\"comment block css\"><span>Markup:&nbsp;button.html</span></span></span></div><div class=\"line\"><span class=\"source css\"><span class=\"comment block css\"><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source css\"><span class=\"comment block css\"><span>Style&nbsp;guide:&nbsp;components.button</span></span></span></div><div class=\"line\"><span class=\"source css\"><span class=\"comment block css\"><span class=\"punctuation definition comment css\"><span>*/</span></span></span></span></div><div class=\"line\"><span class=\"source css\"><span class=\"meta selector css\"><span class=\"entity other attribute-name class css\"><span class=\"punctuation definition entity css\"><span>.</span></span><span>button</span></span><span>&nbsp;</span></span><span class=\"meta property-list css\"><span class=\"punctuation section property-list begin css\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source css\"><span class=\"meta property-list css\"><span>&nbsp;&nbsp;</span><span class=\"comment block css\"><span class=\"punctuation definition comment css\"><span>/*</span></span><span>&nbsp;…&nbsp;</span><span class=\"punctuation definition comment css\"><span>*/</span></span></span></span></span></div><div class=\"line\"><span class=\"source css\"><span class=\"meta property-list css\"><span class=\"punctuation section property-list end css\"><span>}</span></span></span></span></div><div class=\"line\"><span class=\"source css\"><span class=\"meta selector css\"><span class=\"entity other attribute-name class css\"><span class=\"punctuation definition entity css\"><span>.</span></span><span>button</span><span class=\"punctuation definition entity css\"><span>.</span></span><span>shiny</span></span><span>&nbsp;</span></span><span class=\"meta property-list css\"><span class=\"punctuation section property-list begin css\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source css\"><span class=\"meta property-list css\"><span>&nbsp;&nbsp;</span><span class=\"comment block css\"><span class=\"punctuation definition comment css\"><span>/*</span></span><span>&nbsp;…&nbsp;</span><span class=\"punctuation definition comment css\"><span>*/</span></span></span></span></span></div><div class=\"line\"><span class=\"source css\"><span class=\"meta property-list css\"><span class=\"punctuation section property-list end css\"><span>}</span></span></span></span></div></pre><p><strong>For more information on how to write KSS comments, see the <a href=\"https://github.com/kss-node/kss/blob/spec/SPEC.md\">KSS spec</a>.</strong></p>\n<h2 id=\"kss-demo\">kss demo</h2>\n<p>This site is built with the <code>kss</code> command-line tool and parses the KSS documentation found in this <a href=\"https://github.com/kss-node/kss-node/tree/master/demo\">demo project</a>.</p>\n<p>The styling of this site is a demo of <a href=\"https://github.com/kss-node/kss-node\">kss-node</a>&#39;s default style guide builder. By using the site navigation to the left (or above), you can see how your documentation would look with the default builder. Note that alternate builders are available.</p>\n<h2 id=\"quick-start-guide\">Quick start guide</h2>\n<p>Documentation on how to get started with kss-node (and with Node.js&#39; npm) is available on the <a href=\"https://github.com/kss-node/kss-node/wiki\">kss-node wiki</a>.</p>\n<h2 id=\"javascript-api\">JavaScript API</h2>\n<p>If you don&#39;t wish to use the default style guide builder, you can either:</p>\n<ul>\n<li>write your own builder that uses the KssBuilderBaseHandlebars class, or</li>\n<li>write your own builder and class that extends KssBuilderBase, or</li>\n<li>use the JavaScript object representation of the style guide, KssStyleGuide.</li>\n</ul>\n<p><strong>For more information on how to integrate kss-node with your own JavaScript, see the <a href=\"./section-javascript-api.html\">JavaScript API documentation</a>.</strong></p>\n<h2 id=\"project-homepage\">Project homepage</h2>\n<p>Check out the <a href=\"https://github.com/kss-node/kss-node\">project on Github</a> for more information about the code.</p>\n"
      ],
      "contentsRaw": "# Building style guides with kss-node\n\nThis software is a Node.js implementation of [Knyle Style Sheets](https://github.com/kneath/kss) (KSS), \"a documentation syntax for CSS\" that's intended to have syntax readable by humans *and* machines. Hence, the kss-node software can be used to create a \"living style guide\".\n\n1. Write human-readable documentation using \"KSS syntax\" comments. Can be added to CSS, Sass, LESS, or any other CSS Preprocessor files.\n2. Have the `kss` tool automatically build a style guide from your stylesheets.\n\nHere's an example KSS comment:\n```css\n/*\nButton\n\nYour standard button suitable for clicking.\n\n:hover   - Highlights when hovering.\n.shiny   - Do not press this big, shiny, red button.\n\nMarkup: button.html\n\nStyle guide: components.button\n*/\n.button {\n  /* … */\n}\n.button.shiny {\n  /* … */\n}\n```\n\n**For more information on how to write KSS comments, see the [KSS spec](https://github.com/kss-node/kss/blob/spec/SPEC.md).**\n\n## kss demo\n\nThis site is built with the `kss` command-line tool and parses the KSS documentation found in this [demo project](https://github.com/kss-node/kss-node/tree/master/demo).\n\nThe styling of this site is a demo of [kss-node](https://github.com/kss-node/kss-node)'s default style guide builder. By using the site navigation to the left (or above), you can see how your documentation would look with the default builder. Note that alternate builders are available.\n\n## Quick start guide\n\nDocumentation on how to get started with kss-node (and with Node.js' npm) is available on the [kss-node wiki](https://github.com/kss-node/kss-node/wiki).\n\n## JavaScript API\n\nIf you don't wish to use the default style guide builder, you can either:\n* write your own builder that uses the KssBuilderBaseHandlebars class, or\n* write your own builder and class that extends KssBuilderBase, or\n* use the JavaScript object representation of the style guide, KssStyleGuide.\n\n**For more information on how to integrate kss-node with your own JavaScript, see the [JavaScript API documentation](./section-javascript-api.html).**\n\n## Project homepage\n\nCheck out the [project on Github](https://github.com/kss-node/kss-node) for more information about the code.",
      "metadata": {}
    },
    "CONTRIBUTING": {
      "reference": "CONTRIBUTING",
      "route": "CONTRIBUTING",
      "sourcePath": "src\\docs-data\\node_modules\\readable-stream\\CONTRIBUTING.md",
      "title": "(untitled)",
      "contents": [
        "<h1 id=\"developer-s-certificate-of-origin-1-1\">Developer&#39;s Certificate of Origin 1.1</h1>\n<p>By making a contribution to this project, I certify that:</p>\n<ul>\n<li><p>(a) The contribution was created in whole or in part by me and I\nhave the right to submit it under the open source license\nindicated in the file; or</p>\n</li>\n<li><p>(b) The contribution is based upon previous work that, to the best\nof my knowledge, is covered under an appropriate open source\nlicense and I have the right under that license to submit that\nwork with modifications, whether created in whole or in part\nby me, under the same open source license (unless I am\npermitted to submit under a different license), as indicated\nin the file; or</p>\n</li>\n<li><p>(c) The contribution was provided directly to me by some other\nperson who certified (a), (b) or (c) and I have not modified\nit.</p>\n</li>\n<li><p>(d) I understand and agree that this project and the contribution\nare public and that a record of the contribution (including all\npersonal information I submit with it, including my sign-off) is\nmaintained indefinitely and may be redistributed consistent with\nthis project or the open source license(s) involved.</p>\n</li>\n</ul>\n<h2 id=\"moderation-policy\">Moderation Policy</h2>\n<p>The <a href=\"https://github.com/nodejs/TSC/blob/master/Moderation-Policy.md\">Node.js Moderation Policy</a> applies to this WG.</p>\n<h2 id=\"code-of-conduct\">Code of Conduct</h2>\n<p>The <a href=\"https://github.com/nodejs/node/blob/master/CODE_OF_CONDUCT.md\">Node.js Code of Conduct</a> applies to this WG.</p>\n"
      ],
      "contentsRaw": "# Developer's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n* (a) The contribution was created in whole or in part by me and I\n  have the right to submit it under the open source license\n  indicated in the file; or\n\n* (b) The contribution is based upon previous work that, to the best\n  of my knowledge, is covered under an appropriate open source\n  license and I have the right under that license to submit that\n  work with modifications, whether created in whole or in part\n  by me, under the same open source license (unless I am\n  permitted to submit under a different license), as indicated\n  in the file; or\n\n* (c) The contribution was provided directly to me by some other\n  person who certified (a), (b) or (c) and I have not modified\n  it.\n\n* (d) I understand and agree that this project and the contribution\n  are public and that a record of the contribution (including all\n  personal information I submit with it, including my sign-off) is\n  maintained indefinitely and may be redistributed consistent with\n  this project or the open source license(s) involved.\n\n## Moderation Policy\n\nThe [Node.js Moderation Policy] applies to this WG.\n\n## Code of Conduct\n\nThe [Node.js Code of Conduct][] applies to this WG.\n\n[Node.js Code of Conduct]:\nhttps://github.com/nodejs/node/blob/master/CODE_OF_CONDUCT.md\n[Node.js Moderation Policy]:\nhttps://github.com/nodejs/TSC/blob/master/Moderation-Policy.md",
      "metadata": {}
    },
    "ISSUE_TEMPLATE": {
      "reference": "ISSUE_TEMPLATE",
      "route": "ISSUE_TEMPLATE",
      "sourcePath": "src\\docs-data\\node_modules\\language-less\\ISSUE_TEMPLATE.md",
      "title": "(untitled)",
      "contents": [
        "<!--\n\nHave you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/atom/blob/master/CODE_OF_CONDUCT.md\n\nDo you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io\n\n-->\n<h3 id=\"prerequisites\">Prerequisites</h3>\n<ul>\n<li>[ ] Put an X between the brackets on this line if you have done all of the following:<ul>\n<li>Reproduced the problem in Safe Mode: <a href=\"http://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode\">http://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode</a></li>\n<li>Followed all applicable steps in the debugging guide: <a href=\"http://flight-manual.atom.io/hacking-atom/sections/debugging/\">http://flight-manual.atom.io/hacking-atom/sections/debugging/</a></li>\n<li>Checked the FAQs on the message board for common solutions: <a href=\"https://discuss.atom.io/c/faq\">https://discuss.atom.io/c/faq</a></li>\n<li>Checked that your issue isn&#39;t already filed: <a href=\"https://github.com/issues?utf8=✓&amp;q=is%3Aissue+user%3Aatom\">https://github.com/issues?utf8=✓&amp;q=is%3Aissue+user%3Aatom</a></li>\n<li>Checked that there is not already an Atom package that provides the described functionality: <a href=\"https://atom.io/packages\">https://atom.io/packages</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"description\">Description</h3>\n<p>[Description of the issue]</p>\n<h3 id=\"steps-to-reproduce\">Steps to Reproduce</h3>\n<ol>\n<li>[First Step]</li>\n<li>[Second Step]</li>\n<li>[and so on...]</li>\n</ol>\n<p><strong>Expected behavior:</strong> [What you expect to happen]</p>\n<p><strong>Actual behavior:</strong> [What actually happens]</p>\n<p><strong>Reproduces how often:</strong> [What percentage of the time does it reproduce?]</p>\n<h3 id=\"versions\">Versions</h3>\n<p>You can get this information from copy and pasting the output of <code>atom --version</code> and <code>apm --version</code> from the command line. Also, please include the OS and what version of the OS you&#39;re running.</p>\n<h3 id=\"additional-information\">Additional Information</h3>\n<p>Any additional information, configuration or data that might be necessary to reproduce the issue.</p>\n"
      ],
      "contentsRaw": "<!--\n\nHave you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/atom/blob/master/CODE_OF_CONDUCT.md\n\nDo you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io\n\n-->\n\n### Prerequisites\n\n* [ ] Put an X between the brackets on this line if you have done all of the following:\n    * Reproduced the problem in Safe Mode: http://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode\n    * Followed all applicable steps in the debugging guide: http://flight-manual.atom.io/hacking-atom/sections/debugging/\n    * Checked the FAQs on the message board for common solutions: https://discuss.atom.io/c/faq\n    * Checked that your issue isn't already filed: https://github.com/issues?utf8=✓&q=is%3Aissue+user%3Aatom\n    * Checked that there is not already an Atom package that provides the described functionality: https://atom.io/packages\n\n### Description\n\n[Description of the issue]\n\n### Steps to Reproduce\n\n1. [First Step]\n2. [Second Step]\n3. [and so on...]\n\n**Expected behavior:** [What you expect to happen]\n\n**Actual behavior:** [What actually happens]\n\n**Reproduces how often:** [What percentage of the time does it reproduce?]\n\n### Versions\n\nYou can get this information from copy and pasting the output of `atom --version` and `apm --version` from the command line. Also, please include the OS and what version of the OS you're running.\n\n### Additional Information\n\nAny additional information, configuration or data that might be necessary to reproduce the issue.",
      "metadata": {}
    },
    "PULL_REQUEST_TEMPLATE": {
      "reference": "PULL_REQUEST_TEMPLATE",
      "route": "PULL_REQUEST_TEMPLATE",
      "sourcePath": "src\\docs-data\\node_modules\\language-less\\PULL_REQUEST_TEMPLATE.md",
      "title": "(untitled)",
      "contents": [
        "<h3 id=\"requirements\">Requirements</h3>\n<ul>\n<li>Filling out the template is required. Any pull request that does not include enough information to be reviewed in a timely manner may be closed at the maintainers&#39; discretion.</li>\n<li>All new code requires tests to ensure against regressions</li>\n</ul>\n<h3 id=\"description-of-the-change\">Description of the Change</h3>\n<!--\n\nWe must be able to understand the design of your change from this description. If we can't get a good idea of what the code will be doing from the description here, the pull request may be closed at the maintainers' discretion. Keep in mind that the maintainer reviewing this PR may not be familiar with or have worked with the code here recently, so please walk us through the concepts.\n\n-->\n<h3 id=\"alternate-designs\">Alternate Designs</h3>\n<!-- Explain what other alternates were considered and why the proposed version was selected -->\n<h3 id=\"benefits\">Benefits</h3>\n<!-- What benefits will be realized by the code change? -->\n<h3 id=\"possible-drawbacks\">Possible Drawbacks</h3>\n<!-- What are the possible side-effects or negative impacts of the code change? -->\n<h3 id=\"applicable-issues\">Applicable Issues</h3>\n<!-- Enter any applicable Issues here -->"
      ],
      "contentsRaw": "### Requirements\n\n* Filling out the template is required. Any pull request that does not include enough information to be reviewed in a timely manner may be closed at the maintainers' discretion.\n* All new code requires tests to ensure against regressions\n\n### Description of the Change\n\n<!--\n\nWe must be able to understand the design of your change from this description. If we can't get a good idea of what the code will be doing from the description here, the pull request may be closed at the maintainers' discretion. Keep in mind that the maintainer reviewing this PR may not be familiar with or have worked with the code here recently, so please walk us through the concepts.\n\n-->\n\n### Alternate Designs\n\n<!-- Explain what other alternates were considered and why the proposed version was selected -->\n\n### Benefits\n\n<!-- What benefits will be realized by the code change? -->\n\n### Possible Drawbacks\n\n<!-- What are the possible side-effects or negative impacts of the code change? -->\n\n### Applicable Issues\n\n<!-- Enter any applicable Issues here -->",
      "metadata": {}
    },
    "license": {
      "reference": "license",
      "route": "license",
      "sourcePath": "src\\docs-data\\node_modules\\ua-parser-js\\license.md",
      "title": "(untitled)",
      "contents": [
        "<p>MIT License</p>\n<p>Copyright (c) 2012-2019 Faisal Salman &lt;<a href=\"mailto:&#x66;&#x40;&#x66;&#x61;&#x69;&#115;&#x61;&#x6c;&#109;&#x61;&#110;&#46;&#99;&#x6f;&#109;\">&#x66;&#x40;&#x66;&#x61;&#x69;&#115;&#x61;&#x6c;&#109;&#x61;&#110;&#46;&#99;&#x6f;&#109;</a>&gt;</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the &quot;Software&quot;), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.</p>\n"
      ],
      "contentsRaw": "MIT License\n\nCopyright (c) 2012-2019 Faisal Salman <<f@faisalman.com>>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
      "metadata": {}
    },
    "asyncworker": {
      "reference": "asyncworker",
      "route": "asyncworker",
      "sourcePath": "src\\docs-data\\node_modules\\nan\\doc\\asyncworker.md",
      "title": "(untitled)",
      "contents": [
        "<h2 id=\"asynchronous-work-helpers\">Asynchronous work helpers</h2>\n<p><code>Nan::AsyncWorker</code>, <code>Nan::AsyncProgressWorker</code> and <code>Nan::AsyncProgressQueueWorker</code> are helper classes that make working with asynchronous code easier.</p>\n<ul>\n<li><a href=\"#api_nan_async_worker\"><b><code>Nan::AsyncWorker</code></b></a></li>\n<li><a href=\"#api_nan_async_progress_worker\"><b><code>Nan::AsyncProgressWorkerBase &amp; Nan::AsyncProgressWorker</code></b></a></li>\n<li><a href=\"#api_nan_async_progress_queue_worker\"><b><code>Nan::AsyncProgressQueueWorker</code></b></a></li>\n<li><a href=\"#api_nan_async_queue_worker\"><b><code>Nan::AsyncQueueWorker</code></b></a></li>\n</ul>\n<p><a name=\"api_nan_async_worker\"></a></p>\n<h3 id=\"nan-asyncworker\">Nan::AsyncWorker</h3>\n<p><code>Nan::AsyncWorker</code> is an <em>abstract</em> class that you can subclass to have much of the annoying asynchronous queuing and handling taken care of for you. It can even store arbitrary V8 objects for you and have them persist while the asynchronous work is in progress.</p>\n<p>This class internally handles the details of creating an <a href=\"node_misc.md#api_nan_asyncresource\"><code>AsyncResource</code></a>, and running the callback in the\ncorrect async context. To be able to identify the async resources created by this class in async-hooks, provide a\n<code>resource_name</code> to the constructor. It is recommended that the module name be used as a prefix to the <code>resource_name</code> to avoid\ncollisions in the names. For more details see <a href=\"node_misc.md#api_nan_asyncresource\"><code>AsyncResource</code></a> documentation.  The <code>resource_name</code> needs to stay valid for the lifetime of the worker instance.</p>\n<p>Definition:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>class&nbsp;AsyncWorker&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;explicit&nbsp;AsyncWorker(Callback&nbsp;*callback_,&nbsp;const&nbsp;char*&nbsp;resource_name&nbsp;=&nbsp;&quot;nan:AsyncWorker&quot;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;virtual&nbsp;~AsyncWorker();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;virtual&nbsp;void&nbsp;WorkComplete();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;SaveToPersistent(const&nbsp;char&nbsp;*key,&nbsp;const&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;&amp;value);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;SaveToPersistent(const&nbsp;v8::Local&lt;v8::String&gt;&nbsp;&amp;key,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;&amp;value);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;SaveToPersistent(uint32_t&nbsp;index,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;&amp;value);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;GetFromPersistent(const&nbsp;char&nbsp;*key)&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;GetFromPersistent(const&nbsp;v8::Local&lt;v8::String&gt;&nbsp;&amp;key)&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;GetFromPersistent(uint32_t&nbsp;index)&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;virtual&nbsp;void&nbsp;Execute()&nbsp;=&nbsp;0;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;uv_work_t&nbsp;request;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;virtual&nbsp;void&nbsp;Destroy();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;protected:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Persistent&lt;v8::Object&gt;&nbsp;persistentHandle;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Callback&nbsp;*callback;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;virtual&nbsp;void&nbsp;HandleOKCallback();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;virtual&nbsp;void&nbsp;HandleErrorCallback();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;SetErrorMessage(const&nbsp;char&nbsp;*msg);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;const&nbsp;char*&nbsp;ErrorMessage();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div></pre><p><a name=\"api_nan_async_progress_worker\"></a></p>\n<h3 id=\"nan-asyncprogressworkerbase-nan-asyncprogressworker\">Nan::AsyncProgressWorkerBase &amp; Nan::AsyncProgressWorker</h3>\n<p><code>Nan::AsyncProgressWorkerBase</code> is an <em>abstract</em> class template that extends <code>Nan::AsyncWorker</code> and adds additional progress reporting callbacks that can be used during the asynchronous work execution to provide progress data back to JavaScript.</p>\n<p>Previously the definition of <code>Nan::AsyncProgressWorker</code> only allowed sending <code>const char</code> data. Now extending <code>Nan::AsyncProgressWorker</code> will yield an instance of the implicit <code>Nan::AsyncProgressWorkerBase</code> template with type <code>&lt;char&gt;</code> for compatibility.</p>\n<p><code>Nan::AsyncProgressWorkerBase</code> &amp; <code>Nan::AsyncProgressWorker</code> is intended for best-effort delivery of nonessential progress messages, e.g. a progress bar.  The last event sent before the main thread is woken will be delivered.</p>\n<p>Definition:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>template&lt;class&nbsp;T&gt;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>class&nbsp;AsyncProgressWorkerBase&lt;T&gt;&nbsp;:&nbsp;public&nbsp;AsyncWorker&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;explicit&nbsp;AsyncProgressWorkerBase(Callback&nbsp;*callback_,&nbsp;const&nbsp;char*&nbsp;resource_name&nbsp;=&nbsp;...);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;virtual&nbsp;~AsyncProgressWorkerBase();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;WorkProgress();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;class&nbsp;ExecutionProgress&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;Signal()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;Send(const&nbsp;T*&nbsp;data,&nbsp;size_t&nbsp;count)&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;};</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;virtual&nbsp;void&nbsp;Execute(const&nbsp;ExecutionProgress&amp;&nbsp;progress)&nbsp;=&nbsp;0;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;virtual&nbsp;void&nbsp;HandleProgressCallback(const&nbsp;T&nbsp;*data,&nbsp;size_t&nbsp;count)&nbsp;=&nbsp;0;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;virtual&nbsp;void&nbsp;Destroy();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>typedef&nbsp;AsyncProgressWorkerBase&lt;T&gt;&nbsp;AsyncProgressWorker;</span></span></div></pre><p><a name=\"api_nan_async_progress_queue_worker\"></a></p>\n<h3 id=\"nan-asyncprogressqueueworker\">Nan::AsyncProgressQueueWorker</h3>\n<p><code>Nan::AsyncProgressQueueWorker</code> is an <em>abstract</em> class template that extends <code>Nan::AsyncWorker</code> and adds additional progress reporting callbacks that can be used during the asynchronous work execution to provide progress data back to JavaScript.</p>\n<p><code>Nan::AsyncProgressQueueWorker</code> behaves exactly the same as <code>Nan::AsyncProgressWorker</code>, except all events are queued and delivered to the main thread.</p>\n<p>Definition:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>template&lt;class&nbsp;T&gt;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>class&nbsp;AsyncProgressQueueWorker&lt;T&gt;&nbsp;:&nbsp;public&nbsp;AsyncWorker&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;explicit&nbsp;AsyncProgressQueueWorker(Callback&nbsp;*callback_,&nbsp;const&nbsp;char*&nbsp;resource_name&nbsp;=&nbsp;&quot;nan:AsyncProgressQueueWorker&quot;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;virtual&nbsp;~AsyncProgressQueueWorker();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;WorkProgress();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;class&nbsp;ExecutionProgress&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;Send(const&nbsp;T*&nbsp;data,&nbsp;size_t&nbsp;count)&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;};</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;virtual&nbsp;void&nbsp;Execute(const&nbsp;ExecutionProgress&amp;&nbsp;progress)&nbsp;=&nbsp;0;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;virtual&nbsp;void&nbsp;HandleProgressCallback(const&nbsp;T&nbsp;*data,&nbsp;size_t&nbsp;count)&nbsp;=&nbsp;0;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;virtual&nbsp;void&nbsp;Destroy();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div></pre><p><a name=\"api_nan_async_queue_worker\"></a></p>\n<h3 id=\"nan-asyncqueueworker\">Nan::AsyncQueueWorker</h3>\n<p><code>Nan::AsyncQueueWorker</code> will run a <code>Nan::AsyncWorker</code> asynchronously via libuv. Both the <code>execute</code> and <code>after_work</code> steps are taken care of for you. Most of the logic for this is embedded in <code>Nan::AsyncWorker</code>.</p>\n<p>Definition:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;AsyncQueueWorker(AsyncWorker&nbsp;*);</span></span></div></pre>"
      ],
      "contentsRaw": "## Asynchronous work helpers\n\n`Nan::AsyncWorker`, `Nan::AsyncProgressWorker` and `Nan::AsyncProgressQueueWorker` are helper classes that make working with asynchronous code easier.\n\n - <a href=\"#api_nan_async_worker\"><b><code>Nan::AsyncWorker</code></b></a>\n - <a href=\"#api_nan_async_progress_worker\"><b><code>Nan::AsyncProgressWorkerBase &amp; Nan::AsyncProgressWorker</code></b></a>\n - <a href=\"#api_nan_async_progress_queue_worker\"><b><code>Nan::AsyncProgressQueueWorker</code></b></a>\n - <a href=\"#api_nan_async_queue_worker\"><b><code>Nan::AsyncQueueWorker</code></b></a>\n\n<a name=\"api_nan_async_worker\"></a>\n### Nan::AsyncWorker\n\n`Nan::AsyncWorker` is an _abstract_ class that you can subclass to have much of the annoying asynchronous queuing and handling taken care of for you. It can even store arbitrary V8 objects for you and have them persist while the asynchronous work is in progress.\n\nThis class internally handles the details of creating an [`AsyncResource`][AsyncResource], and running the callback in the\ncorrect async context. To be able to identify the async resources created by this class in async-hooks, provide a\n`resource_name` to the constructor. It is recommended that the module name be used as a prefix to the `resource_name` to avoid\ncollisions in the names. For more details see [`AsyncResource`][AsyncResource] documentation.  The `resource_name` needs to stay valid for the lifetime of the worker instance.\n\nDefinition:\n\n```c++\nclass AsyncWorker {\n public:\n  explicit AsyncWorker(Callback *callback_, const char* resource_name = \"nan:AsyncWorker\");\n\n  virtual ~AsyncWorker();\n\n  virtual void WorkComplete();\n\n  void SaveToPersistent(const char *key, const v8::Local<v8::Value> &value);\n\n  void SaveToPersistent(const v8::Local<v8::String> &key,\n                        const v8::Local<v8::Value> &value);\n\n  void SaveToPersistent(uint32_t index,\n                        const v8::Local<v8::Value> &value);\n\n  v8::Local<v8::Value> GetFromPersistent(const char *key) const;\n\n  v8::Local<v8::Value> GetFromPersistent(const v8::Local<v8::String> &key) const;\n\n  v8::Local<v8::Value> GetFromPersistent(uint32_t index) const;\n\n  virtual void Execute() = 0;\n\n  uv_work_t request;\n\n  virtual void Destroy();\n\n protected:\n  Persistent<v8::Object> persistentHandle;\n\n  Callback *callback;\n\n  virtual void HandleOKCallback();\n\n  virtual void HandleErrorCallback();\n\n  void SetErrorMessage(const char *msg);\n\n  const char* ErrorMessage();\n};\n```\n\n<a name=\"api_nan_async_progress_worker\"></a>\n### Nan::AsyncProgressWorkerBase &amp; Nan::AsyncProgressWorker\n\n`Nan::AsyncProgressWorkerBase` is an _abstract_ class template that extends `Nan::AsyncWorker` and adds additional progress reporting callbacks that can be used during the asynchronous work execution to provide progress data back to JavaScript.\n\nPreviously the definition of `Nan::AsyncProgressWorker` only allowed sending `const char` data. Now extending `Nan::AsyncProgressWorker` will yield an instance of the implicit `Nan::AsyncProgressWorkerBase` template with type `<char>` for compatibility.\n\n`Nan::AsyncProgressWorkerBase` &amp; `Nan::AsyncProgressWorker` is intended for best-effort delivery of nonessential progress messages, e.g. a progress bar.  The last event sent before the main thread is woken will be delivered.\n\nDefinition:\n\n```c++\ntemplate<class T>\nclass AsyncProgressWorkerBase<T> : public AsyncWorker {\n public:\n  explicit AsyncProgressWorkerBase(Callback *callback_, const char* resource_name = ...);\n\n  virtual ~AsyncProgressWorkerBase();\n\n  void WorkProgress();\n\n  class ExecutionProgress {\n   public:\n    void Signal() const;\n    void Send(const T* data, size_t count) const;\n  };\n\n  virtual void Execute(const ExecutionProgress& progress) = 0;\n\n  virtual void HandleProgressCallback(const T *data, size_t count) = 0;\n\n  virtual void Destroy();\n};\n\ntypedef AsyncProgressWorkerBase<T> AsyncProgressWorker;\n```\n\n<a name=\"api_nan_async_progress_queue_worker\"></a>\n### Nan::AsyncProgressQueueWorker\n\n`Nan::AsyncProgressQueueWorker` is an _abstract_ class template that extends `Nan::AsyncWorker` and adds additional progress reporting callbacks that can be used during the asynchronous work execution to provide progress data back to JavaScript.\n\n`Nan::AsyncProgressQueueWorker` behaves exactly the same as `Nan::AsyncProgressWorker`, except all events are queued and delivered to the main thread.\n\nDefinition:\n\n```c++\ntemplate<class T>\nclass AsyncProgressQueueWorker<T> : public AsyncWorker {\n public:\n  explicit AsyncProgressQueueWorker(Callback *callback_, const char* resource_name = \"nan:AsyncProgressQueueWorker\");\n\n  virtual ~AsyncProgressQueueWorker();\n\n  void WorkProgress();\n\n  class ExecutionProgress {\n   public:\n    void Send(const T* data, size_t count) const;\n  };\n\n  virtual void Execute(const ExecutionProgress& progress) = 0;\n\n  virtual void HandleProgressCallback(const T *data, size_t count) = 0;\n\n  virtual void Destroy();\n};\n```\n\n<a name=\"api_nan_async_queue_worker\"></a>\n### Nan::AsyncQueueWorker\n\n`Nan::AsyncQueueWorker` will run a `Nan::AsyncWorker` asynchronously via libuv. Both the `execute` and `after_work` steps are taken care of for you. Most of the logic for this is embedded in `Nan::AsyncWorker`.\n\nDefinition:\n\n```c++\nvoid AsyncQueueWorker(AsyncWorker *);\n```\n\n[AsyncResource]: node_misc.md#api_nan_asyncresource",
      "metadata": {}
    },
    "buffers": {
      "reference": "buffers",
      "route": "buffers",
      "sourcePath": "src\\docs-data\\node_modules\\nan\\doc\\buffers.md",
      "title": "(untitled)",
      "contents": [
        "<h2 id=\"buffers\">Buffers</h2>\n<p>NAN&#39;s <code>node::Buffer</code> helpers exist as the API has changed across supported Node versions. Use these methods to ensure compatibility.</p>\n<ul>\n<li><a href=\"#api_nan_new_buffer\"><b><code>Nan::NewBuffer()</code></b></a></li>\n<li><a href=\"#api_nan_copy_buffer\"><b><code>Nan::CopyBuffer()</code></b></a></li>\n<li><a href=\"#api_nan_free_callback\"><b><code>Nan::FreeCallback()</code></b></a></li>\n</ul>\n<p><a name=\"api_nan_new_buffer\"></a></p>\n<h3 id=\"nan-newbuffer-\">Nan::NewBuffer()</h3>\n<p>Allocate a new <code>node::Buffer</code> object with the specified size and optional data. Calls <code>node::Buffer::New()</code>.</p>\n<p>Note that when creating a <code>Buffer</code> using <code>Nan::NewBuffer()</code> and an existing <code>char*</code>, it is assumed that the ownership of the pointer is being transferred to the new <code>Buffer</code> for management.\nWhen a <code>node::Buffer</code> instance is garbage collected and a <code>FreeCallback</code> has not been specified, <code>data</code> will be disposed of via a call to <code>free()</code>.\nYou <em>must not</em> free the memory space manually once you have created a <code>Buffer</code> in this way.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Object&gt;&nbsp;Nan::NewBuffer(uint32_t&nbsp;size)</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Object&gt;&nbsp;Nan::NewBuffer(char*&nbsp;data,&nbsp;uint32_t&nbsp;size)</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Object&gt;&nbsp;Nan::NewBuffer(char&nbsp;*data,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;length,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nan::FreeCallback&nbsp;callback,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;*hint)</span></span></div></pre><p><a name=\"api_nan_copy_buffer\"></a></p>\n<h3 id=\"nan-copybuffer-\">Nan::CopyBuffer()</h3>\n<p>Similar to <a href=\"#api_nan_new_buffer\"><code>Nan::NewBuffer()</code></a> except that an implicit memcpy will occur within Node. Calls <code>node::Buffer::Copy()</code>.</p>\n<p>Management of the <code>char*</code> is left to the user, you should manually free the memory space if necessary as the new <code>Buffer</code> will have its own copy.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Object&gt;&nbsp;Nan::CopyBuffer(const&nbsp;char&nbsp;*data,&nbsp;uint32_t&nbsp;size)</span></span></div></pre><p><a name=\"api_nan_free_callback\"></a></p>\n<h3 id=\"nan-freecallback-\">Nan::FreeCallback()</h3>\n<p>A free callback that can be provided to <a href=\"#api_nan_new_buffer\"><code>Nan::NewBuffer()</code></a>.\nThe supplied callback will be invoked when the <code>Buffer</code> undergoes garbage collection.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>typedef&nbsp;void&nbsp;(*FreeCallback)(char&nbsp;*data,&nbsp;void&nbsp;*hint);</span></span></div></pre>"
      ],
      "contentsRaw": "## Buffers\n\nNAN's `node::Buffer` helpers exist as the API has changed across supported Node versions. Use these methods to ensure compatibility.\n\n - <a href=\"#api_nan_new_buffer\"><b><code>Nan::NewBuffer()</code></b></a>\n - <a href=\"#api_nan_copy_buffer\"><b><code>Nan::CopyBuffer()</code></b></a>\n - <a href=\"#api_nan_free_callback\"><b><code>Nan::FreeCallback()</code></b></a>\n\n<a name=\"api_nan_new_buffer\"></a>\n### Nan::NewBuffer()\n\nAllocate a new `node::Buffer` object with the specified size and optional data. Calls `node::Buffer::New()`.\n\nNote that when creating a `Buffer` using `Nan::NewBuffer()` and an existing `char*`, it is assumed that the ownership of the pointer is being transferred to the new `Buffer` for management.\nWhen a `node::Buffer` instance is garbage collected and a `FreeCallback` has not been specified, `data` will be disposed of via a call to `free()`.\nYou _must not_ free the memory space manually once you have created a `Buffer` in this way.\n\nSignature:\n\n```c++\nNan::MaybeLocal<v8::Object> Nan::NewBuffer(uint32_t size)\nNan::MaybeLocal<v8::Object> Nan::NewBuffer(char* data, uint32_t size)\nNan::MaybeLocal<v8::Object> Nan::NewBuffer(char *data,\n                                           size_t length,\n                                           Nan::FreeCallback callback,\n                                           void *hint)\n```\n\n\n<a name=\"api_nan_copy_buffer\"></a>\n### Nan::CopyBuffer()\n\nSimilar to [`Nan::NewBuffer()`](#api_nan_new_buffer) except that an implicit memcpy will occur within Node. Calls `node::Buffer::Copy()`.\n\nManagement of the `char*` is left to the user, you should manually free the memory space if necessary as the new `Buffer` will have its own copy.\n\nSignature:\n\n```c++\nNan::MaybeLocal<v8::Object> Nan::CopyBuffer(const char *data, uint32_t size)\n```\n\n\n<a name=\"api_nan_free_callback\"></a>\n### Nan::FreeCallback()\n\nA free callback that can be provided to [`Nan::NewBuffer()`](#api_nan_new_buffer).\nThe supplied callback will be invoked when the `Buffer` undergoes garbage collection.\n\nSignature:\n\n```c++\ntypedef void (*FreeCallback)(char *data, void *hint);\n```",
      "metadata": {}
    },
    "callback": {
      "reference": "callback",
      "route": "callback",
      "sourcePath": "src\\docs-data\\node_modules\\nan\\doc\\callback.md",
      "title": "(untitled)",
      "contents": [
        "<h2 id=\"nan-callback\">Nan::Callback</h2>\n<p><code>Nan::Callback</code> makes it easier to use <code>v8::Function</code> handles as callbacks. A class that wraps a <code>v8::Function</code> handle, protecting it from garbage collection and making it particularly useful for storage and use across asynchronous execution.</p>\n<ul>\n<li><a href=\"#api_nan_callback\"><b><code>Nan::Callback</code></b></a></li>\n</ul>\n<p><a name=\"api_nan_callback\"></a></p>\n<h3 id=\"nan-callback\">Nan::Callback</h3>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>class&nbsp;Callback&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Callback();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;explicit&nbsp;Callback(const&nbsp;v8::Local&lt;v8::Function&gt;&nbsp;&amp;fn);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;~Callback();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;bool&nbsp;operator==(const&nbsp;Callback&nbsp;&amp;other)&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;bool&nbsp;operator!=(const&nbsp;Callback&nbsp;&amp;other)&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Function&gt;&nbsp;operator*()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;MaybeLocal&lt;v8::Value&gt;&nbsp;operator()(AsyncResource*&nbsp;async_resource,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Object&gt;&nbsp;target,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;argc&nbsp;=&nbsp;0,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;argv[]&nbsp;=&nbsp;0)&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;MaybeLocal&lt;v8::Value&gt;&nbsp;operator()(AsyncResource*&nbsp;async_resource,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;argc&nbsp;=&nbsp;0,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;argv[]&nbsp;=&nbsp;0)&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;SetFunction(const&nbsp;v8::Local&lt;v8::Function&gt;&nbsp;&amp;fn);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Function&gt;&nbsp;GetFunction()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;bool&nbsp;IsEmpty()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;Reset(const&nbsp;v8::Local&lt;v8::Function&gt;&nbsp;&amp;fn);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;Reset();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;MaybeLocal&lt;v8::Value&gt;&nbsp;Call(v8::Local&lt;v8::Object&gt;&nbsp;target,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;argc,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;argv[],</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AsyncResource*&nbsp;async_resource)&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;MaybeLocal&lt;v8::Value&gt;&nbsp;Call(int&nbsp;argc,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;argv[],</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AsyncResource*&nbsp;async_resource)&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;//&nbsp;Deprecated&nbsp;versions.&nbsp;Use&nbsp;the&nbsp;versions&nbsp;that&nbsp;accept&nbsp;an&nbsp;async_resource&nbsp;instead</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;//&nbsp;as&nbsp;they&nbsp;run&nbsp;the&nbsp;callback&nbsp;in&nbsp;the&nbsp;correct&nbsp;async&nbsp;context&nbsp;as&nbsp;specified&nbsp;by&nbsp;the</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;//&nbsp;resource.&nbsp;If&nbsp;you&nbsp;want&nbsp;to&nbsp;call&nbsp;a&nbsp;synchronous&nbsp;JS&nbsp;function&nbsp;(i.e.&nbsp;on&nbsp;a</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;//&nbsp;non-empty&nbsp;JS&nbsp;stack),&nbsp;you&nbsp;can&nbsp;use&nbsp;Nan::Call&nbsp;instead.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;operator()(v8::Local&lt;v8::Object&gt;&nbsp;target,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;argc&nbsp;=&nbsp;0,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;argv[]&nbsp;=&nbsp;0)&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;operator()(int&nbsp;argc&nbsp;=&nbsp;0,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;argv[]&nbsp;=&nbsp;0)&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;Call(v8::Local&lt;v8::Object&gt;&nbsp;target,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;argc,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;argv[])&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;Call(int&nbsp;argc,&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;argv[])&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div></pre><p>Example usage:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Function&gt;&nbsp;function;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Callback&nbsp;callback(function);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>callback.Call(0,&nbsp;0);</span></span></div></pre>"
      ],
      "contentsRaw": "## Nan::Callback\n\n`Nan::Callback` makes it easier to use `v8::Function` handles as callbacks. A class that wraps a `v8::Function` handle, protecting it from garbage collection and making it particularly useful for storage and use across asynchronous execution.\n\n - <a href=\"#api_nan_callback\"><b><code>Nan::Callback</code></b></a>\n\n<a name=\"api_nan_callback\"></a>\n### Nan::Callback\n\n```c++\nclass Callback {\n public:\n  Callback();\n\n  explicit Callback(const v8::Local<v8::Function> &fn);\n\n  ~Callback();\n\n  bool operator==(const Callback &other) const;\n\n  bool operator!=(const Callback &other) const;\n\n  v8::Local<v8::Function> operator*() const;\n\n  MaybeLocal<v8::Value> operator()(AsyncResource* async_resource,\n                                   v8::Local<v8::Object> target,\n                                   int argc = 0,\n                                   v8::Local<v8::Value> argv[] = 0) const;\n\n  MaybeLocal<v8::Value> operator()(AsyncResource* async_resource,\n                                   int argc = 0,\n                                   v8::Local<v8::Value> argv[] = 0) const;\n\n  void SetFunction(const v8::Local<v8::Function> &fn);\n\n  v8::Local<v8::Function> GetFunction() const;\n\n  bool IsEmpty() const;\n\n  void Reset(const v8::Local<v8::Function> &fn);\n\n  void Reset();\n\n  MaybeLocal<v8::Value> Call(v8::Local<v8::Object> target,\n                            int argc,\n                            v8::Local<v8::Value> argv[],\n                            AsyncResource* async_resource) const;\n  MaybeLocal<v8::Value> Call(int argc,\n                             v8::Local<v8::Value> argv[],\n                             AsyncResource* async_resource) const;\n\n  // Deprecated versions. Use the versions that accept an async_resource instead\n  // as they run the callback in the correct async context as specified by the\n  // resource. If you want to call a synchronous JS function (i.e. on a\n  // non-empty JS stack), you can use Nan::Call instead.\n  v8::Local<v8::Value> operator()(v8::Local<v8::Object> target,\n                                  int argc = 0,\n                                  v8::Local<v8::Value> argv[] = 0) const;\n\n  v8::Local<v8::Value> operator()(int argc = 0,\n                                  v8::Local<v8::Value> argv[] = 0) const;\n  v8::Local<v8::Value> Call(v8::Local<v8::Object> target,\n                            int argc,\n                            v8::Local<v8::Value> argv[]) const;\n\n  v8::Local<v8::Value> Call(int argc, v8::Local<v8::Value> argv[]) const;\n};\n```\n\nExample usage:\n\n```c++\nv8::Local<v8::Function> function;\nNan::Callback callback(function);\ncallback.Call(0, 0);\n```",
      "metadata": {}
    },
    "converters": {
      "reference": "converters",
      "route": "converters",
      "sourcePath": "src\\docs-data\\node_modules\\nan\\doc\\converters.md",
      "title": "(untitled)",
      "contents": [
        "<h2 id=\"converters\">Converters</h2>\n<p>NAN contains functions that convert <code>v8::Value</code>s to other <code>v8::Value</code> types and native types. Since type conversion is not guaranteed to succeed, they return <code>Nan::Maybe</code> types. These converters can be used in place of <code>value-&gt;ToX()</code> and <code>value-&gt;XValue()</code> (where <code>X</code> is one of the types, e.g. <code>Boolean</code>) in a way that provides a consistent interface across V8 versions. Newer versions of V8 use the new <code>v8::Maybe</code> and <code>v8::MaybeLocal</code> types for these conversions, older versions don&#39;t have this functionality so it is provided by NAN.</p>\n<ul>\n<li><a href=\"#api_nan_to\"><b><code>Nan::To()</code></b></a></li>\n</ul>\n<p><a name=\"api_nan_to\"></a></p>\n<h3 id=\"nan-to-\">Nan::To()</h3>\n<p>Converts a <code>v8::Local&lt;v8::Value&gt;</code> to a different subtype of <code>v8::Value</code> or to a native data type. Returns a <code>Nan::MaybeLocal&lt;&gt;</code> or a <code>Nan::Maybe&lt;&gt;</code> accordingly.</p>\n<p>See <a href=\"./maybe_types.md\">maybe_types.md</a> for more information on <code>Nan::Maybe</code> types.</p>\n<p>Signatures:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>//&nbsp;V8&nbsp;types</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Boolean&gt;&nbsp;Nan::To&lt;v8::Boolean&gt;(v8::Local&lt;v8::Value&gt;&nbsp;val);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Int32&gt;&nbsp;Nan::To&lt;v8::Int32&gt;(v8::Local&lt;v8::Value&gt;&nbsp;val);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Integer&gt;&nbsp;Nan::To&lt;v8::Integer&gt;(v8::Local&lt;v8::Value&gt;&nbsp;val);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Object&gt;&nbsp;Nan::To&lt;v8::Object&gt;(v8::Local&lt;v8::Value&gt;&nbsp;val);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Number&gt;&nbsp;Nan::To&lt;v8::Number&gt;(v8::Local&lt;v8::Value&gt;&nbsp;val);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::String&gt;&nbsp;Nan::To&lt;v8::String&gt;(v8::Local&lt;v8::Value&gt;&nbsp;val);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Uint32&gt;&nbsp;Nan::To&lt;v8::Uint32&gt;(v8::Local&lt;v8::Value&gt;&nbsp;val);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>//&nbsp;Native&nbsp;types</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;bool&gt;&nbsp;Nan::To&lt;bool&gt;(v8::Local&lt;v8::Value&gt;&nbsp;val);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;double&gt;&nbsp;Nan::To&lt;double&gt;(v8::Local&lt;v8::Value&gt;&nbsp;val);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;int32_t&gt;&nbsp;Nan::To&lt;int32_t&gt;(v8::Local&lt;v8::Value&gt;&nbsp;val);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;int64_t&gt;&nbsp;Nan::To&lt;int64_t&gt;(v8::Local&lt;v8::Value&gt;&nbsp;val);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;uint32_t&gt;&nbsp;Nan::To&lt;uint32_t&gt;(v8::Local&lt;v8::Value&gt;&nbsp;val);</span></span></div></pre><h3 id=\"example\">Example</h3>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Value&gt;&nbsp;val;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::String&gt;&nbsp;str&nbsp;=&nbsp;Nan::To&lt;v8::String&gt;(val);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;double&gt;&nbsp;d&nbsp;=&nbsp;Nan::To&lt;double&gt;(val);</span></span></div></pre>"
      ],
      "contentsRaw": "## Converters\n\nNAN contains functions that convert `v8::Value`s to other `v8::Value` types and native types. Since type conversion is not guaranteed to succeed, they return `Nan::Maybe` types. These converters can be used in place of `value->ToX()` and `value->XValue()` (where `X` is one of the types, e.g. `Boolean`) in a way that provides a consistent interface across V8 versions. Newer versions of V8 use the new `v8::Maybe` and `v8::MaybeLocal` types for these conversions, older versions don't have this functionality so it is provided by NAN.\n\n - <a href=\"#api_nan_to\"><b><code>Nan::To()</code></b></a>\n\n<a name=\"api_nan_to\"></a>\n### Nan::To()\n\nConverts a `v8::Local<v8::Value>` to a different subtype of `v8::Value` or to a native data type. Returns a `Nan::MaybeLocal<>` or a `Nan::Maybe<>` accordingly.\n\nSee [maybe_types.md](./maybe_types.md) for more information on `Nan::Maybe` types.\n\nSignatures:\n\n```c++\n// V8 types\nNan::MaybeLocal<v8::Boolean> Nan::To<v8::Boolean>(v8::Local<v8::Value> val);\nNan::MaybeLocal<v8::Int32> Nan::To<v8::Int32>(v8::Local<v8::Value> val);\nNan::MaybeLocal<v8::Integer> Nan::To<v8::Integer>(v8::Local<v8::Value> val);\nNan::MaybeLocal<v8::Object> Nan::To<v8::Object>(v8::Local<v8::Value> val);\nNan::MaybeLocal<v8::Number> Nan::To<v8::Number>(v8::Local<v8::Value> val);\nNan::MaybeLocal<v8::String> Nan::To<v8::String>(v8::Local<v8::Value> val);\nNan::MaybeLocal<v8::Uint32> Nan::To<v8::Uint32>(v8::Local<v8::Value> val);\n\n// Native types\nNan::Maybe<bool> Nan::To<bool>(v8::Local<v8::Value> val);\nNan::Maybe<double> Nan::To<double>(v8::Local<v8::Value> val);\nNan::Maybe<int32_t> Nan::To<int32_t>(v8::Local<v8::Value> val);\nNan::Maybe<int64_t> Nan::To<int64_t>(v8::Local<v8::Value> val);\nNan::Maybe<uint32_t> Nan::To<uint32_t>(v8::Local<v8::Value> val);\n```\n\n### Example\n\n```c++\nv8::Local<v8::Value> val;\nNan::MaybeLocal<v8::String> str = Nan::To<v8::String>(val);\nNan::Maybe<double> d = Nan::To<double>(val);\n```",
      "metadata": {}
    },
    "errors": {
      "reference": "errors",
      "route": "errors",
      "sourcePath": "src\\docs-data\\node_modules\\nan\\doc\\errors.md",
      "title": "(untitled)",
      "contents": [
        "<h2 id=\"errors\">Errors</h2>\n<p>NAN includes helpers for creating, throwing and catching Errors as much of this functionality varies across the supported versions of V8 and must be abstracted.</p>\n<p>Note that an Error object is simply a specialized form of <code>v8::Value</code>.</p>\n<p>Also consult the V8 Embedders Guide section on <a href=\"https://developers.google.com/v8/embed#exceptions\">Exceptions</a> for more information.</p>\n<ul>\n<li><a href=\"#api_nan_error\"><b><code>Nan::Error()</code></b></a></li>\n<li><a href=\"#api_nan_range_error\"><b><code>Nan::RangeError()</code></b></a></li>\n<li><a href=\"#api_nan_reference_error\"><b><code>Nan::ReferenceError()</code></b></a></li>\n<li><a href=\"#api_nan_syntax_error\"><b><code>Nan::SyntaxError()</code></b></a></li>\n<li><a href=\"#api_nan_type_error\"><b><code>Nan::TypeError()</code></b></a></li>\n<li><a href=\"#api_nan_throw_error\"><b><code>Nan::ThrowError()</code></b></a></li>\n<li><a href=\"#api_nan_throw_range_error\"><b><code>Nan::ThrowRangeError()</code></b></a></li>\n<li><a href=\"#api_nan_throw_reference_error\"><b><code>Nan::ThrowReferenceError()</code></b></a></li>\n<li><a href=\"#api_nan_throw_syntax_error\"><b><code>Nan::ThrowSyntaxError()</code></b></a></li>\n<li><a href=\"#api_nan_throw_type_error\"><b><code>Nan::ThrowTypeError()</code></b></a></li>\n<li><a href=\"#api_nan_fatal_exception\"><b><code>Nan::FatalException()</code></b></a></li>\n<li><a href=\"#api_nan_errno_exception\"><b><code>Nan::ErrnoException()</code></b></a></li>\n<li><a href=\"#api_nan_try_catch\"><b><code>Nan::TryCatch</code></b></a></li>\n</ul>\n<p><a name=\"api_nan_error\"></a></p>\n<h3 id=\"nan-error-\">Nan::Error()</h3>\n<p>Create a new Error object using the <a href=\"https://v8docs.nodesource.com/node-8.11/da/d6a/classv8_1_1_exception.html\">v8::Exception</a> class in a way that is compatible across the supported versions of V8.</p>\n<p>Note that an Error object is simply a specialized form of <code>v8::Value</code>.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Value&gt;&nbsp;Nan::Error(const&nbsp;char&nbsp;*msg);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Value&gt;&nbsp;Nan::Error(v8::Local&lt;v8::String&gt;&nbsp;msg);</span></span></div></pre><p><a name=\"api_nan_range_error\"></a></p>\n<h3 id=\"nan-rangeerror-\">Nan::RangeError()</h3>\n<p>Create a new RangeError object using the <a href=\"https://v8docs.nodesource.com/node-8.11/da/d6a/classv8_1_1_exception.html\">v8::Exception</a> class in a way that is compatible across the supported versions of V8.</p>\n<p>Note that an RangeError object is simply a specialized form of <code>v8::Value</code>.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Value&gt;&nbsp;Nan::RangeError(const&nbsp;char&nbsp;*msg);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Value&gt;&nbsp;Nan::RangeError(v8::Local&lt;v8::String&gt;&nbsp;msg);</span></span></div></pre><p><a name=\"api_nan_reference_error\"></a></p>\n<h3 id=\"nan-referenceerror-\">Nan::ReferenceError()</h3>\n<p>Create a new ReferenceError object using the <a href=\"https://v8docs.nodesource.com/node-8.11/da/d6a/classv8_1_1_exception.html\">v8::Exception</a> class in a way that is compatible across the supported versions of V8.</p>\n<p>Note that an ReferenceError object is simply a specialized form of <code>v8::Value</code>.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Value&gt;&nbsp;Nan::ReferenceError(const&nbsp;char&nbsp;*msg);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Value&gt;&nbsp;Nan::ReferenceError(v8::Local&lt;v8::String&gt;&nbsp;msg);</span></span></div></pre><p><a name=\"api_nan_syntax_error\"></a></p>\n<h3 id=\"nan-syntaxerror-\">Nan::SyntaxError()</h3>\n<p>Create a new SyntaxError object using the <a href=\"https://v8docs.nodesource.com/node-8.11/da/d6a/classv8_1_1_exception.html\">v8::Exception</a> class in a way that is compatible across the supported versions of V8.</p>\n<p>Note that an SyntaxError object is simply a specialized form of <code>v8::Value</code>.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Value&gt;&nbsp;Nan::SyntaxError(const&nbsp;char&nbsp;*msg);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Value&gt;&nbsp;Nan::SyntaxError(v8::Local&lt;v8::String&gt;&nbsp;msg);</span></span></div></pre><p><a name=\"api_nan_type_error\"></a></p>\n<h3 id=\"nan-typeerror-\">Nan::TypeError()</h3>\n<p>Create a new TypeError object using the <a href=\"https://v8docs.nodesource.com/node-8.11/da/d6a/classv8_1_1_exception.html\">v8::Exception</a> class in a way that is compatible across the supported versions of V8.</p>\n<p>Note that an TypeError object is simply a specialized form of <code>v8::Value</code>.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Value&gt;&nbsp;Nan::TypeError(const&nbsp;char&nbsp;*msg);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Value&gt;&nbsp;Nan::TypeError(v8::Local&lt;v8::String&gt;&nbsp;msg);</span></span></div></pre><p><a name=\"api_nan_throw_error\"></a></p>\n<h3 id=\"nan-throwerror-\">Nan::ThrowError()</h3>\n<p>Throw an Error object (a specialized <code>v8::Value</code> as above) in the current context. If a <code>msg</code> is provided, a new Error object will be created.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::ThrowError(const&nbsp;char&nbsp;*msg);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::ThrowError(v8::Local&lt;v8::String&gt;&nbsp;msg);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::ThrowError(v8::Local&lt;v8::Value&gt;&nbsp;error);</span></span></div></pre><p><a name=\"api_nan_throw_range_error\"></a></p>\n<h3 id=\"nan-throwrangeerror-\">Nan::ThrowRangeError()</h3>\n<p>Throw an RangeError object (a specialized <code>v8::Value</code> as above) in the current context. If a <code>msg</code> is provided, a new RangeError object will be created.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::ThrowRangeError(const&nbsp;char&nbsp;*msg);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::ThrowRangeError(v8::Local&lt;v8::String&gt;&nbsp;msg);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::ThrowRangeError(v8::Local&lt;v8::Value&gt;&nbsp;error);</span></span></div></pre><p><a name=\"api_nan_throw_reference_error\"></a></p>\n<h3 id=\"nan-throwreferenceerror-\">Nan::ThrowReferenceError()</h3>\n<p>Throw an ReferenceError object (a specialized <code>v8::Value</code> as above) in the current context. If a <code>msg</code> is provided, a new ReferenceError object will be created.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::ThrowReferenceError(const&nbsp;char&nbsp;*msg);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::ThrowReferenceError(v8::Local&lt;v8::String&gt;&nbsp;msg);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::ThrowReferenceError(v8::Local&lt;v8::Value&gt;&nbsp;error);</span></span></div></pre><p><a name=\"api_nan_throw_syntax_error\"></a></p>\n<h3 id=\"nan-throwsyntaxerror-\">Nan::ThrowSyntaxError()</h3>\n<p>Throw an SyntaxError object (a specialized <code>v8::Value</code> as above) in the current context. If a <code>msg</code> is provided, a new SyntaxError object will be created.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::ThrowSyntaxError(const&nbsp;char&nbsp;*msg);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::ThrowSyntaxError(v8::Local&lt;v8::String&gt;&nbsp;msg);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::ThrowSyntaxError(v8::Local&lt;v8::Value&gt;&nbsp;error);</span></span></div></pre><p><a name=\"api_nan_throw_type_error\"></a></p>\n<h3 id=\"nan-throwtypeerror-\">Nan::ThrowTypeError()</h3>\n<p>Throw an TypeError object (a specialized <code>v8::Value</code> as above) in the current context. If a <code>msg</code> is provided, a new TypeError object will be created.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::ThrowTypeError(const&nbsp;char&nbsp;*msg);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::ThrowTypeError(v8::Local&lt;v8::String&gt;&nbsp;msg);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::ThrowTypeError(v8::Local&lt;v8::Value&gt;&nbsp;error);</span></span></div></pre><p><a name=\"api_nan_fatal_exception\"></a></p>\n<h3 id=\"nan-fatalexception-\">Nan::FatalException()</h3>\n<p>Replaces <code>node::FatalException()</code> which has a different API across supported versions of Node. For use with <a href=\"#api_nan_try_catch\"><code>Nan::TryCatch</code></a>.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::FatalException(const&nbsp;Nan::TryCatch&amp;&nbsp;try_catch);</span></span></div></pre><p><a name=\"api_nan_errno_exception\"></a></p>\n<h3 id=\"nan-errnoexception-\">Nan::ErrnoException()</h3>\n<p>Replaces <code>node::ErrnoException()</code> which has a different API across supported versions of Node. </p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Value&gt;&nbsp;Nan::ErrnoException(int&nbsp;errorno,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;char*&nbsp;syscall&nbsp;=&nbsp;NULL,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;char*&nbsp;message&nbsp;=&nbsp;NULL,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;char*&nbsp;path&nbsp;=&nbsp;NULL);</span></span></div></pre><p><a name=\"api_nan_try_catch\"></a></p>\n<h3 id=\"nan-trycatch\">Nan::TryCatch</h3>\n<p>A simple wrapper around <a href=\"https://v8docs.nodesource.com/node-8.11/d4/dc6/classv8_1_1_try_catch.html\"><code>v8::TryCatch</code></a> compatible with all supported versions of V8. Can be used as a direct replacement in most cases. See also <a href=\"#api_nan_fatal_exception\"><code>Nan::FatalException()</code></a> for an internal use compatible with <code>node::FatalException</code>.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>class&nbsp;Nan::TryCatch&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Nan::TryCatch();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;bool&nbsp;HasCaught()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;bool&nbsp;CanContinue()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;ReThrow();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;Exception()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;//&nbsp;Nan::MaybeLocal&nbsp;for&nbsp;older&nbsp;versions&nbsp;of&nbsp;V8</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::MaybeLocal&lt;v8::Value&gt;&nbsp;StackTrace()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Message&gt;&nbsp;Message()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;Reset();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;SetVerbose(bool&nbsp;value);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;SetCaptureMessage(bool&nbsp;value);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div></pre>"
      ],
      "contentsRaw": "## Errors\n\nNAN includes helpers for creating, throwing and catching Errors as much of this functionality varies across the supported versions of V8 and must be abstracted.\n\nNote that an Error object is simply a specialized form of `v8::Value`.\n\nAlso consult the V8 Embedders Guide section on [Exceptions](https://developers.google.com/v8/embed#exceptions) for more information.\n\n - <a href=\"#api_nan_error\"><b><code>Nan::Error()</code></b></a>\n - <a href=\"#api_nan_range_error\"><b><code>Nan::RangeError()</code></b></a>\n - <a href=\"#api_nan_reference_error\"><b><code>Nan::ReferenceError()</code></b></a>\n - <a href=\"#api_nan_syntax_error\"><b><code>Nan::SyntaxError()</code></b></a>\n - <a href=\"#api_nan_type_error\"><b><code>Nan::TypeError()</code></b></a>\n - <a href=\"#api_nan_throw_error\"><b><code>Nan::ThrowError()</code></b></a>\n - <a href=\"#api_nan_throw_range_error\"><b><code>Nan::ThrowRangeError()</code></b></a>\n - <a href=\"#api_nan_throw_reference_error\"><b><code>Nan::ThrowReferenceError()</code></b></a>\n - <a href=\"#api_nan_throw_syntax_error\"><b><code>Nan::ThrowSyntaxError()</code></b></a>\n - <a href=\"#api_nan_throw_type_error\"><b><code>Nan::ThrowTypeError()</code></b></a>\n - <a href=\"#api_nan_fatal_exception\"><b><code>Nan::FatalException()</code></b></a>\n - <a href=\"#api_nan_errno_exception\"><b><code>Nan::ErrnoException()</code></b></a>\n - <a href=\"#api_nan_try_catch\"><b><code>Nan::TryCatch</code></b></a>\n\n\n<a name=\"api_nan_error\"></a>\n### Nan::Error()\n\nCreate a new Error object using the [v8::Exception](https://v8docs.nodesource.com/node-8.11/da/d6a/classv8_1_1_exception.html) class in a way that is compatible across the supported versions of V8.\n\nNote that an Error object is simply a specialized form of `v8::Value`.\n\nSignature:\n\n```c++\nv8::Local<v8::Value> Nan::Error(const char *msg);\nv8::Local<v8::Value> Nan::Error(v8::Local<v8::String> msg);\n```\n\n\n<a name=\"api_nan_range_error\"></a>\n### Nan::RangeError()\n\nCreate a new RangeError object using the [v8::Exception](https://v8docs.nodesource.com/node-8.11/da/d6a/classv8_1_1_exception.html) class in a way that is compatible across the supported versions of V8.\n\nNote that an RangeError object is simply a specialized form of `v8::Value`.\n\nSignature:\n\n```c++\nv8::Local<v8::Value> Nan::RangeError(const char *msg);\nv8::Local<v8::Value> Nan::RangeError(v8::Local<v8::String> msg);\n```\n\n\n<a name=\"api_nan_reference_error\"></a>\n### Nan::ReferenceError()\n\nCreate a new ReferenceError object using the [v8::Exception](https://v8docs.nodesource.com/node-8.11/da/d6a/classv8_1_1_exception.html) class in a way that is compatible across the supported versions of V8.\n\nNote that an ReferenceError object is simply a specialized form of `v8::Value`.\n\nSignature:\n\n```c++\nv8::Local<v8::Value> Nan::ReferenceError(const char *msg);\nv8::Local<v8::Value> Nan::ReferenceError(v8::Local<v8::String> msg);\n```\n\n\n<a name=\"api_nan_syntax_error\"></a>\n### Nan::SyntaxError()\n\nCreate a new SyntaxError object using the [v8::Exception](https://v8docs.nodesource.com/node-8.11/da/d6a/classv8_1_1_exception.html) class in a way that is compatible across the supported versions of V8.\n\nNote that an SyntaxError object is simply a specialized form of `v8::Value`.\n\nSignature:\n\n```c++\nv8::Local<v8::Value> Nan::SyntaxError(const char *msg);\nv8::Local<v8::Value> Nan::SyntaxError(v8::Local<v8::String> msg);\n```\n\n\n<a name=\"api_nan_type_error\"></a>\n### Nan::TypeError()\n\nCreate a new TypeError object using the [v8::Exception](https://v8docs.nodesource.com/node-8.11/da/d6a/classv8_1_1_exception.html) class in a way that is compatible across the supported versions of V8.\n\nNote that an TypeError object is simply a specialized form of `v8::Value`.\n\nSignature:\n\n```c++\nv8::Local<v8::Value> Nan::TypeError(const char *msg);\nv8::Local<v8::Value> Nan::TypeError(v8::Local<v8::String> msg);\n```\n\n\n<a name=\"api_nan_throw_error\"></a>\n### Nan::ThrowError()\n\nThrow an Error object (a specialized `v8::Value` as above) in the current context. If a `msg` is provided, a new Error object will be created.\n\nSignature:\n\n```c++\nvoid Nan::ThrowError(const char *msg);\nvoid Nan::ThrowError(v8::Local<v8::String> msg);\nvoid Nan::ThrowError(v8::Local<v8::Value> error);\n```\n\n\n<a name=\"api_nan_throw_range_error\"></a>\n### Nan::ThrowRangeError()\n\nThrow an RangeError object (a specialized `v8::Value` as above) in the current context. If a `msg` is provided, a new RangeError object will be created.\n\nSignature:\n\n```c++\nvoid Nan::ThrowRangeError(const char *msg);\nvoid Nan::ThrowRangeError(v8::Local<v8::String> msg);\nvoid Nan::ThrowRangeError(v8::Local<v8::Value> error);\n```\n\n\n<a name=\"api_nan_throw_reference_error\"></a>\n### Nan::ThrowReferenceError()\n\nThrow an ReferenceError object (a specialized `v8::Value` as above) in the current context. If a `msg` is provided, a new ReferenceError object will be created.\n\nSignature:\n\n```c++\nvoid Nan::ThrowReferenceError(const char *msg);\nvoid Nan::ThrowReferenceError(v8::Local<v8::String> msg);\nvoid Nan::ThrowReferenceError(v8::Local<v8::Value> error);\n```\n\n\n<a name=\"api_nan_throw_syntax_error\"></a>\n### Nan::ThrowSyntaxError()\n\nThrow an SyntaxError object (a specialized `v8::Value` as above) in the current context. If a `msg` is provided, a new SyntaxError object will be created.\n\nSignature:\n\n```c++\nvoid Nan::ThrowSyntaxError(const char *msg);\nvoid Nan::ThrowSyntaxError(v8::Local<v8::String> msg);\nvoid Nan::ThrowSyntaxError(v8::Local<v8::Value> error);\n```\n\n\n<a name=\"api_nan_throw_type_error\"></a>\n### Nan::ThrowTypeError()\n\nThrow an TypeError object (a specialized `v8::Value` as above) in the current context. If a `msg` is provided, a new TypeError object will be created.\n\nSignature:\n\n```c++\nvoid Nan::ThrowTypeError(const char *msg);\nvoid Nan::ThrowTypeError(v8::Local<v8::String> msg);\nvoid Nan::ThrowTypeError(v8::Local<v8::Value> error);\n```\n\n<a name=\"api_nan_fatal_exception\"></a>\n### Nan::FatalException()\n\nReplaces `node::FatalException()` which has a different API across supported versions of Node. For use with [`Nan::TryCatch`](#api_nan_try_catch).\n\nSignature:\n\n```c++\nvoid Nan::FatalException(const Nan::TryCatch& try_catch);\n```\n\n<a name=\"api_nan_errno_exception\"></a>\n### Nan::ErrnoException()\n\nReplaces `node::ErrnoException()` which has a different API across supported versions of Node. \n\nSignature:\n\n```c++\nv8::Local<v8::Value> Nan::ErrnoException(int errorno,\n                                         const char* syscall = NULL,\n                                         const char* message = NULL,\n                                         const char* path = NULL);\n```\n\n\n<a name=\"api_nan_try_catch\"></a>\n### Nan::TryCatch\n\nA simple wrapper around [`v8::TryCatch`](https://v8docs.nodesource.com/node-8.11/d4/dc6/classv8_1_1_try_catch.html) compatible with all supported versions of V8. Can be used as a direct replacement in most cases. See also [`Nan::FatalException()`](#api_nan_fatal_exception) for an internal use compatible with `node::FatalException`.\n\nSignature:\n\n```c++\nclass Nan::TryCatch {\n public:\n  Nan::TryCatch();\n\n  bool HasCaught() const;\n\n  bool CanContinue() const;\n\n  v8::Local<v8::Value> ReThrow();\n\n  v8::Local<v8::Value> Exception() const;\n\n  // Nan::MaybeLocal for older versions of V8\n  v8::MaybeLocal<v8::Value> StackTrace() const;\n\n  v8::Local<v8::Message> Message() const;\n\n  void Reset();\n\n  void SetVerbose(bool value);\n\n  void SetCaptureMessage(bool value);\n};\n```",
      "metadata": {}
    },
    "json": {
      "reference": "json",
      "route": "json",
      "sourcePath": "src\\docs-data\\node_modules\\nan\\doc\\json.md",
      "title": "(untitled)",
      "contents": [
        "<h2 id=\"json\">JSON</h2>\n<p>The <em>JSON</em> object provides the c++ versions of the methods offered by the <code>JSON</code> object in javascript. V8 exposes these methods via the <code>v8::JSON</code> object.</p>\n<ul>\n<li><a href=\"#api_nan_json_parse\"><b><code>Nan::JSON.Parse</code></b></a></li>\n<li><a href=\"#api_nan_json_stringify\"><b><code>Nan::JSON.Stringify</code></b></a></li>\n</ul>\n<p>Refer to the V8 JSON object in the <a href=\"https://v8docs.nodesource.com/node-8.11/da/d6f/classv8_1_1_j_s_o_n.html\">V8 documentation</a> for more information about these methods and their arguments.</p>\n<p><a name=\"api_nan_json_parse\"></a></p>\n<h3 id=\"nan-json-parse\">Nan::JSON.Parse</h3>\n<p>A simple wrapper around <a href=\"https://v8docs.nodesource.com/node-8.11/da/d6f/classv8_1_1_j_s_o_n.html#a936310d2540fb630ed37d3ee3ffe4504\"><code>v8::JSON::Parse</code></a>.</p>\n<p>Definition:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Value&gt;&nbsp;Nan::JSON::Parse(v8::Local&lt;v8::String&gt;&nbsp;json_string);</span></span></div></pre><p>Use <code>JSON.Parse(json_string)</code> to parse a string into a <code>v8::Value</code>.</p>\n<p>Example:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::String&gt;&nbsp;json_string&nbsp;=&nbsp;Nan::New(&quot;{&nbsp;\\&quot;JSON\\&quot;:&nbsp;\\&quot;object\\&quot;&nbsp;}&quot;).ToLocalChecked();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::JSON&nbsp;NanJSON;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Value&gt;&nbsp;result&nbsp;=&nbsp;NanJSON.Parse(json_string);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>if&nbsp;(!result.IsEmpty())&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;val&nbsp;=&nbsp;result.ToLocalChecked();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div></pre><p><a name=\"api_nan_json_stringify\"></a></p>\n<h3 id=\"nan-json-stringify\">Nan::JSON.Stringify</h3>\n<p>A simple wrapper around <a href=\"https://v8docs.nodesource.com/node-8.11/da/d6f/classv8_1_1_j_s_o_n.html#a44b255c3531489ce43f6110209138860\"><code>v8::JSON::Stringify</code></a>.</p>\n<p>Definition:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::String&gt;&nbsp;Nan::JSON::Stringify(v8::Local&lt;v8::Object&gt;&nbsp;json_object,&nbsp;v8::Local&lt;v8::String&gt;&nbsp;gap&nbsp;=&nbsp;v8::Local&lt;v8::String&gt;());</span></span></div></pre><p>Use <code>JSON.Stringify(value)</code> to stringify a <code>v8::Object</code>.</p>\n<p>Example:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>//&nbsp;using&nbsp;`v8::Local&lt;v8::Value&gt;&nbsp;val`&nbsp;from&nbsp;the&nbsp;`JSON::Parse`&nbsp;example</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Object&gt;&nbsp;obj&nbsp;=&nbsp;Nan::To&lt;v8::Object&gt;(val).ToLocalChecked();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::JSON&nbsp;NanJSON;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::String&gt;&nbsp;result&nbsp;=&nbsp;NanJSON.Stringify(obj);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>if&nbsp;(!result.IsEmpty())&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::String&gt;&nbsp;stringified&nbsp;=&nbsp;result.ToLocalChecked();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div></pre>"
      ],
      "contentsRaw": "## JSON\n\nThe _JSON_ object provides the c++ versions of the methods offered by the `JSON` object in javascript. V8 exposes these methods via the `v8::JSON` object.\n\n - <a href=\"#api_nan_json_parse\"><b><code>Nan::JSON.Parse</code></b></a>\n - <a href=\"#api_nan_json_stringify\"><b><code>Nan::JSON.Stringify</code></b></a>\n\nRefer to the V8 JSON object in the [V8 documentation](https://v8docs.nodesource.com/node-8.11/da/d6f/classv8_1_1_j_s_o_n.html) for more information about these methods and their arguments.\n\n<a name=\"api_nan_json_parse\"></a>\n\n### Nan::JSON.Parse\n\nA simple wrapper around [`v8::JSON::Parse`](https://v8docs.nodesource.com/node-8.11/da/d6f/classv8_1_1_j_s_o_n.html#a936310d2540fb630ed37d3ee3ffe4504).\n\nDefinition:\n\n```c++\nNan::MaybeLocal<v8::Value> Nan::JSON::Parse(v8::Local<v8::String> json_string);\n```\n\nUse `JSON.Parse(json_string)` to parse a string into a `v8::Value`.\n\nExample:\n\n```c++\nv8::Local<v8::String> json_string = Nan::New(\"{ \\\"JSON\\\": \\\"object\\\" }\").ToLocalChecked();\n\nNan::JSON NanJSON;\nNan::MaybeLocal<v8::Value> result = NanJSON.Parse(json_string);\nif (!result.IsEmpty()) {\n  v8::Local<v8::Value> val = result.ToLocalChecked();\n}\n```\n\n<a name=\"api_nan_json_stringify\"></a>\n\n### Nan::JSON.Stringify\n\nA simple wrapper around [`v8::JSON::Stringify`](https://v8docs.nodesource.com/node-8.11/da/d6f/classv8_1_1_j_s_o_n.html#a44b255c3531489ce43f6110209138860).\n\nDefinition:\n\n```c++\nNan::MaybeLocal<v8::String> Nan::JSON::Stringify(v8::Local<v8::Object> json_object, v8::Local<v8::String> gap = v8::Local<v8::String>());\n```\n\nUse `JSON.Stringify(value)` to stringify a `v8::Object`.\n\nExample:\n\n```c++\n// using `v8::Local<v8::Value> val` from the `JSON::Parse` example\nv8::Local<v8::Object> obj = Nan::To<v8::Object>(val).ToLocalChecked();\n\nNan::JSON NanJSON;\nNan::MaybeLocal<v8::String> result = NanJSON.Stringify(obj);\nif (!result.IsEmpty()) {\n  v8::Local<v8::String> stringified = result.ToLocalChecked();\n}\n```",
      "metadata": {}
    },
    "maybe_types": {
      "reference": "maybe_types",
      "route": "maybe_types",
      "sourcePath": "src\\docs-data\\node_modules\\nan\\doc\\maybe_types.md",
      "title": "(untitled)",
      "contents": [
        "<h2 id=\"maybe-types\">Maybe Types</h2>\n<p>The <code>Nan::MaybeLocal</code> and <code>Nan::Maybe</code> types are monads that encapsulate <code>v8::Local</code> handles that <em>may be empty</em>.</p>\n<ul>\n<li><strong>Maybe Types</strong><ul>\n<li><a href=\"#api_nan_maybe_local\"><b><code>Nan::MaybeLocal</code></b></a></li>\n<li><a href=\"#api_nan_maybe\"><b><code>Nan::Maybe</code></b></a></li>\n<li><a href=\"#api_nan_nothing\"><b><code>Nan::Nothing</code></b></a></li>\n<li><a href=\"#api_nan_just\"><b><code>Nan::Just</code></b></a></li>\n</ul>\n</li>\n<li><strong>Maybe Helpers</strong><ul>\n<li><a href=\"#api_nan_call\"><b><code>Nan::Call()</code></b></a></li>\n<li><a href=\"#api_nan_to_detail_string\"><b><code>Nan::ToDetailString()</code></b></a></li>\n<li><a href=\"#api_nan_to_array_index\"><b><code>Nan::ToArrayIndex()</code></b></a></li>\n<li><a href=\"#api_nan_equals\"><b><code>Nan::Equals()</code></b></a></li>\n<li><a href=\"#api_nan_new_instance\"><b><code>Nan::NewInstance()</code></b></a></li>\n<li><a href=\"#api_nan_get_function\"><b><code>Nan::GetFunction()</code></b></a></li>\n<li><a href=\"#api_nan_set\"><b><code>Nan::Set()</code></b></a></li>\n<li><a href=\"#api_nan_define_own_property\"><b><code>Nan::DefineOwnProperty()</code></b></a></li>\n<li><a href=\"#api_nan_force_set\"><del><b><code>Nan::ForceSet()</code></b></del></a></li>\n<li><a href=\"#api_nan_get\"><b><code>Nan::Get()</code></b></a></li>\n<li><a href=\"#api_nan_get_property_attribute\"><b><code>Nan::GetPropertyAttributes()</code></b></a></li>\n<li><a href=\"#api_nan_has\"><b><code>Nan::Has()</code></b></a></li>\n<li><a href=\"#api_nan_delete\"><b><code>Nan::Delete()</code></b></a></li>\n<li><a href=\"#api_nan_get_property_names\"><b><code>Nan::GetPropertyNames()</code></b></a></li>\n<li><a href=\"#api_nan_get_own_property_names\"><b><code>Nan::GetOwnPropertyNames()</code></b></a></li>\n<li><a href=\"#api_nan_set_prototype\"><b><code>Nan::SetPrototype()</code></b></a></li>\n<li><a href=\"#api_nan_object_proto_to_string\"><b><code>Nan::ObjectProtoToString()</code></b></a></li>\n<li><a href=\"#api_nan_has_own_property\"><b><code>Nan::HasOwnProperty()</code></b></a></li>\n<li><a href=\"#api_nan_has_real_named_property\"><b><code>Nan::HasRealNamedProperty()</code></b></a></li>\n<li><a href=\"#api_nan_has_real_indexed_property\"><b><code>Nan::HasRealIndexedProperty()</code></b></a></li>\n<li><a href=\"#api_nan_has_real_named_callback_property\"><b><code>Nan::HasRealNamedCallbackProperty()</code></b></a></li>\n<li><a href=\"#api_nan_get_real_named_property_in_prototype_chain\"><b><code>Nan::GetRealNamedPropertyInPrototypeChain()</code></b></a></li>\n<li><a href=\"#api_nan_get_real_named_property\"><b><code>Nan::GetRealNamedProperty()</code></b></a></li>\n<li><a href=\"#api_nan_call_as_function\"><b><code>Nan::CallAsFunction()</code></b></a></li>\n<li><a href=\"#api_nan_call_as_constructor\"><b><code>Nan::CallAsConstructor()</code></b></a></li>\n<li><a href=\"#api_nan_get_source_line\"><b><code>Nan::GetSourceLine()</code></b></a></li>\n<li><a href=\"#api_nan_get_line_number\"><b><code>Nan::GetLineNumber()</code></b></a></li>\n<li><a href=\"#api_nan_get_start_column\"><b><code>Nan::GetStartColumn()</code></b></a></li>\n<li><a href=\"#api_nan_get_end_column\"><b><code>Nan::GetEndColumn()</code></b></a></li>\n<li><a href=\"#api_nan_clone_element_at\"><b><code>Nan::CloneElementAt()</code></b></a></li>\n<li><a href=\"#api_nan_has_private\"><b><code>Nan::HasPrivate()</code></b></a></li>\n<li><a href=\"#api_nan_get_private\"><b><code>Nan::GetPrivate()</code></b></a></li>\n<li><a href=\"#api_nan_set_private\"><b><code>Nan::SetPrivate()</code></b></a></li>\n<li><a href=\"#api_nan_delete_private\"><b><code>Nan::DeletePrivate()</code></b></a></li>\n<li><a href=\"#api_nan_make_maybe\"><b><code>Nan::MakeMaybe()</code></b></a></li>\n</ul>\n</li>\n</ul>\n<p><a name=\"api_nan_maybe_local\"></a></p>\n<h3 id=\"nan-maybelocal\">Nan::MaybeLocal</h3>\n<p>A <code>Nan::MaybeLocal&lt;T&gt;</code> is a wrapper around <a href=\"https://v8docs.nodesource.com/node-8.11/de/deb/classv8_1_1_local.html\"><code>v8::Local&lt;T&gt;</code></a> that enforces a check that determines whether the <code>v8::Local&lt;T&gt;</code> is empty before it can be used.</p>\n<p>If an API method returns a <code>Nan::MaybeLocal</code>, the API method can potentially fail either because an exception is thrown, or because an exception is pending, e.g. because a previous API call threw an exception that hasn&#39;t been caught yet, or because a <code>v8::TerminateExecution</code> exception was thrown. In that case, an empty <code>Nan::MaybeLocal</code> is returned.</p>\n<p>Definition:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>template&lt;typename&nbsp;T&gt;&nbsp;class&nbsp;Nan::MaybeLocal&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;MaybeLocal();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;template&lt;typename&nbsp;S&gt;&nbsp;MaybeLocal(v8::Local&lt;S&gt;&nbsp;that);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;bool&nbsp;IsEmpty()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;template&lt;typename&nbsp;S&gt;&nbsp;bool&nbsp;ToLocal(v8::Local&lt;S&gt;&nbsp;*out);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;//&nbsp;Will&nbsp;crash&nbsp;if&nbsp;the&nbsp;MaybeLocal&lt;&gt;&nbsp;is&nbsp;empty.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;T&gt;&nbsp;ToLocalChecked();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;template&lt;typename&nbsp;S&gt;&nbsp;v8::Local&lt;S&gt;&nbsp;FromMaybe(v8::Local&lt;S&gt;&nbsp;default_value)&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div></pre><p>See the documentation for <a href=\"https://v8docs.nodesource.com/node-8.11/d8/d7d/classv8_1_1_maybe_local.html\"><code>v8::MaybeLocal</code></a> for further details.</p>\n<p><a name=\"api_nan_maybe\"></a></p>\n<h3 id=\"nan-maybe\">Nan::Maybe</h3>\n<p>A simple <code>Nan::Maybe</code> type, representing an object which may or may not have a value, see <a href=\"https://hackage.haskell.org/package/base/docs/Data-Maybe.html\">https://hackage.haskell.org/package/base/docs/Data-Maybe.html</a>.</p>\n<p>If an API method returns a <code>Nan::Maybe&lt;&gt;</code>, the API method can potentially fail either because an exception is thrown, or because an exception is pending, e.g. because a previous API call threw an exception that hasn&#39;t been caught yet, or because a <code>v8::TerminateExecution</code> exception was thrown. In that case, a &quot;Nothing&quot; value is returned.</p>\n<p>Definition:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>template&lt;typename&nbsp;T&gt;&nbsp;class&nbsp;Nan::Maybe&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;bool&nbsp;IsNothing()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;bool&nbsp;IsJust()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;//&nbsp;Will&nbsp;crash&nbsp;if&nbsp;the&nbsp;Maybe&lt;&gt;&nbsp;is&nbsp;nothing.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;T&nbsp;FromJust();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;T&nbsp;FromMaybe(const&nbsp;T&amp;&nbsp;default_value);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;bool&nbsp;operator==(const&nbsp;Maybe&nbsp;&amp;other);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;bool&nbsp;operator!=(const&nbsp;Maybe&nbsp;&amp;other);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div></pre><p>See the documentation for <a href=\"https://v8docs.nodesource.com/node-8.11/d9/d4b/classv8_1_1_maybe.html\"><code>v8::Maybe</code></a> for further details.</p>\n<p><a name=\"api_nan_nothing\"></a></p>\n<h3 id=\"nan-nothing\">Nan::Nothing</h3>\n<p>Construct an empty <code>Nan::Maybe</code> type representing <em>nothing</em>.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>template&lt;typename&nbsp;T&gt;&nbsp;Nan::Maybe&lt;T&gt;&nbsp;Nan::Nothing();</span></span></div></pre><p><a name=\"api_nan_just\"></a></p>\n<h3 id=\"nan-just\">Nan::Just</h3>\n<p>Construct a <code>Nan::Maybe</code> type representing <em>just</em> a value.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>template&lt;typename&nbsp;T&gt;&nbsp;Nan::Maybe&lt;T&gt;&nbsp;Nan::Just(const&nbsp;T&nbsp;&amp;t);</span></span></div></pre><p><a name=\"api_nan_call\"></a></p>\n<h3 id=\"nan-call-\">Nan::Call()</h3>\n<p>A helper method for calling a synchronous <a href=\"https://v8docs.nodesource.com/node-8.11/d5/d54/classv8_1_1_function.html#a9c3d0e4e13ddd7721fce238aa5b94a11\"><code>v8::Function#Call()</code></a> in a way compatible across supported versions of V8.</p>\n<p>For asynchronous callbacks, use Nan::Callback::Call along with an AsyncResource.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Value&gt;&nbsp;Nan::Call(v8::Local&lt;v8::Function&gt;&nbsp;fun,&nbsp;v8::Local&lt;v8::Object&gt;&nbsp;recv,&nbsp;int&nbsp;argc,&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;argv[]);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Value&gt;&nbsp;Nan::Call(const&nbsp;Nan::Callback&amp;&nbsp;callback,&nbsp;v8::Local&lt;v8::Object&gt;&nbsp;recv,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;int&nbsp;argc,&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;argv[]);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Value&gt;&nbsp;Nan::Call(const&nbsp;Nan::Callback&amp;&nbsp;callback,&nbsp;int&nbsp;argc,&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;argv[]);</span></span></div></pre><p><a name=\"api_nan_to_detail_string\"></a></p>\n<h3 id=\"nan-todetailstring-\">Nan::ToDetailString()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/dc/d0a/classv8_1_1_value.html#a2f9770296dc2c8d274bc8cc0dca243e5\"><code>v8::Value#ToDetailString()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::String&gt;&nbsp;Nan::ToDetailString(v8::Local&lt;v8::Value&gt;&nbsp;val);</span></span></div></pre><p><a name=\"api_nan_to_array_index\"></a></p>\n<h3 id=\"nan-toarrayindex-\">Nan::ToArrayIndex()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/dc/d0a/classv8_1_1_value.html#acc5bbef3c805ec458470c0fcd6f13493\"><code>v8::Value#ToArrayIndex()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Uint32&gt;&nbsp;Nan::ToArrayIndex(v8::Local&lt;v8::Value&gt;&nbsp;val);</span></span></div></pre><p><a name=\"api_nan_equals\"></a></p>\n<h3 id=\"nan-equals-\">Nan::Equals()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/dc/d0a/classv8_1_1_value.html#a08fba1d776a59bbf6864b25f9152c64b\"><code>v8::Value#Equals()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;bool&gt;&nbsp;Nan::Equals(v8::Local&lt;v8::Value&gt;&nbsp;a,&nbsp;v8::Local&lt;v8::Value&gt;(b));</span></span></div></pre><p><a name=\"api_nan_new_instance\"></a></p>\n<h3 id=\"nan-newinstance-\">Nan::NewInstance()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/d5/d54/classv8_1_1_function.html#ae477558b10c14b76ed00e8dbab44ce5b\"><code>v8::Function#NewInstance()</code></a> and <a href=\"https://v8docs.nodesource.com/node-8.11/db/d5f/classv8_1_1_object_template.html#ad605a7543cfbc5dab54cdb0883d14ae4\"><code>v8::ObjectTemplate#NewInstance()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Object&gt;&nbsp;Nan::NewInstance(v8::Local&lt;v8::Function&gt;&nbsp;h);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Object&gt;&nbsp;Nan::NewInstance(v8::Local&lt;v8::Function&gt;&nbsp;h,&nbsp;int&nbsp;argc,&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;argv[]);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Object&gt;&nbsp;Nan::NewInstance(v8::Local&lt;v8::ObjectTemplate&gt;&nbsp;h);</span></span></div></pre><p><a name=\"api_nan_get_function\"></a></p>\n<h3 id=\"nan-getfunction-\">Nan::GetFunction()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/d8/d83/classv8_1_1_function_template.html#a56d904662a86eca78da37d9bb0ed3705\"><code>v8::FunctionTemplate#GetFunction()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Function&gt;&nbsp;Nan::GetFunction(v8::Local&lt;v8::FunctionTemplate&gt;&nbsp;t);</span></span></div></pre><p><a name=\"api_nan_set\"></a></p>\n<h3 id=\"nan-set-\">Nan::Set()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a67604ea3734f170c66026064ea808f20\"><code>v8::Object#Set()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;bool&gt;&nbsp;Nan::Set(v8::Local&lt;v8::Object&gt;&nbsp;obj,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;key,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;value)</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;bool&gt;&nbsp;Nan::Set(v8::Local&lt;v8::Object&gt;&nbsp;obj,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uint32_t&nbsp;index,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;value);</span></span></div></pre><p><a name=\"api_nan_define_own_property\"></a></p>\n<h3 id=\"nan-defineownproperty-\">Nan::DefineOwnProperty()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a6f76b2ed605cb8f9185b92de0033a820\"><code>v8::Object#DefineOwnProperty()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;bool&gt;&nbsp;Nan::DefineOwnProperty(v8::Local&lt;v8::Object&gt;&nbsp;obj,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::String&gt;&nbsp;key,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;value,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::PropertyAttribute&nbsp;attribs&nbsp;=&nbsp;v8::None);</span></span></div></pre><p><a name=\"api_nan_force_set\"></a></p>\n<h3 id=\"-del-nan-forceset-del-\"><del>Nan::ForceSet()</del></h3>\n<p>Deprecated, use <a href=\"#api_nan_define_own_property\"><code>Nan::DefineOwnProperty()</code></a>.</p>\n<p><del>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-0.12/db/d85/classv8_1_1_object.html#acfbdfd7427b516ebdb5c47c4df5ed96c\"><code>v8::Object#ForceSet()</code></a> in a way compatible across supported versions of V8.</del></p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>NAN_DEPRECATED&nbsp;Nan::Maybe&lt;bool&gt;&nbsp;Nan::ForceSet(v8::Local&lt;v8::Object&gt;&nbsp;obj,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;key,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;value,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::PropertyAttribute&nbsp;attribs&nbsp;=&nbsp;v8::None);</span></span></div></pre><p><a name=\"api_nan_get\"></a></p>\n<h3 id=\"nan-get-\">Nan::Get()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a2565f03e736694f6b1e1cf22a0b4eac2\"><code>v8::Object#Get()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Value&gt;&nbsp;Nan::Get(v8::Local&lt;v8::Object&gt;&nbsp;obj,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;key);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Value&gt;&nbsp;Nan::Get(v8::Local&lt;v8::Object&gt;&nbsp;obj,&nbsp;uint32_t&nbsp;index);</span></span></div></pre><p><a name=\"api_nan_get_property_attribute\"></a></p>\n<h3 id=\"nan-getpropertyattributes-\">Nan::GetPropertyAttributes()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a9b898894da3d1db2714fd9325a54fe57\"><code>v8::Object#GetPropertyAttributes()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;v8::PropertyAttribute&gt;&nbsp;Nan::GetPropertyAttributes(</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Object&gt;&nbsp;obj,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;key);</span></span></div></pre><p><a name=\"api_nan_has\"></a></p>\n<h3 id=\"nan-has-\">Nan::Has()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#ab3c3d89ea7c2f9afd08965bd7299a41d\"><code>v8::Object#Has()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;bool&gt;&nbsp;Nan::Has(v8::Local&lt;v8::Object&gt;&nbsp;obj,&nbsp;v8::Local&lt;v8::String&gt;&nbsp;key);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;bool&gt;&nbsp;Nan::Has(v8::Local&lt;v8::Object&gt;&nbsp;obj,&nbsp;uint32_t&nbsp;index);</span></span></div></pre><p><a name=\"api_nan_delete\"></a></p>\n<h3 id=\"nan-delete-\">Nan::Delete()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a48e4a19b2cedff867eecc73ddb7d377f\"><code>v8::Object#Delete()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;bool&gt;&nbsp;Nan::Delete(v8::Local&lt;v8::Object&gt;&nbsp;obj,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::String&gt;&nbsp;key);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;bool&gt;&nbsp;Nan::Delete(v8::Local&lt;v8::Object&gt;&nbsp;obj,&nbsp;uint32_t&nbsp;index);</span></span></div></pre><p><a name=\"api_nan_get_property_names\"></a></p>\n<h3 id=\"nan-getpropertynames-\">Nan::GetPropertyNames()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#aced885270cfd2c956367b5eedc7fbfe8\"><code>v8::Object#GetPropertyNames()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Array&gt;&nbsp;Nan::GetPropertyNames(v8::Local&lt;v8::Object&gt;&nbsp;obj);</span></span></div></pre><p><a name=\"api_nan_get_own_property_names\"></a></p>\n<h3 id=\"nan-getownpropertynames-\">Nan::GetOwnPropertyNames()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a79a6e4d66049b9aa648ed4dfdb23e6eb\"><code>v8::Object#GetOwnPropertyNames()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Array&gt;&nbsp;Nan::GetOwnPropertyNames(v8::Local&lt;v8::Object&gt;&nbsp;obj);</span></span></div></pre><p><a name=\"api_nan_set_prototype\"></a></p>\n<h3 id=\"nan-setprototype-\">Nan::SetPrototype()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a442706b22fceda6e6d1f632122a9a9f4\"><code>v8::Object#SetPrototype()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;bool&gt;&nbsp;Nan::SetPrototype(v8::Local&lt;v8::Object&gt;&nbsp;obj,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;prototype);</span></span></div></pre><p><a name=\"api_nan_object_proto_to_string\"></a></p>\n<h3 id=\"nan-objectprototostring-\">Nan::ObjectProtoToString()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#ab7a92b4dcf822bef72f6c0ac6fea1f0b\"><code>v8::Object#ObjectProtoToString()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::String&gt;&nbsp;Nan::ObjectProtoToString(v8::Local&lt;v8::Object&gt;&nbsp;obj);</span></span></div></pre><p><a name=\"api_nan_has_own_property\"></a></p>\n<h3 id=\"nan-hasownproperty-\">Nan::HasOwnProperty()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#ab7b7245442ca6de1e1c145ea3fd653ff\"><code>v8::Object#HasOwnProperty()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;bool&gt;&nbsp;Nan::HasOwnProperty(v8::Local&lt;v8::Object&gt;&nbsp;obj,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::String&gt;&nbsp;key);</span></span></div></pre><p><a name=\"api_nan_has_real_named_property\"></a></p>\n<h3 id=\"nan-hasrealnamedproperty-\">Nan::HasRealNamedProperty()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#ad8b80a59c9eb3c1e6c3cd6c84571f767\"><code>v8::Object#HasRealNamedProperty()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;bool&gt;&nbsp;Nan::HasRealNamedProperty(v8::Local&lt;v8::Object&gt;&nbsp;obj,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::String&gt;&nbsp;key);</span></span></div></pre><p><a name=\"api_nan_has_real_indexed_property\"></a></p>\n<h3 id=\"nan-hasrealindexedproperty-\">Nan::HasRealIndexedProperty()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#af94fc1135a5e74a2193fb72c3a1b9855\"><code>v8::Object#HasRealIndexedProperty()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;bool&gt;&nbsp;Nan::HasRealIndexedProperty(v8::Local&lt;v8::Object&gt;&nbsp;obj,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uint32_t&nbsp;index);</span></span></div></pre><p><a name=\"api_nan_has_real_named_callback_property\"></a></p>\n<h3 id=\"nan-hasrealnamedcallbackproperty-\">Nan::HasRealNamedCallbackProperty()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#af743b7ea132b89f84d34d164d0668811\"><code>v8::Object#HasRealNamedCallbackProperty()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;bool&gt;&nbsp;Nan::HasRealNamedCallbackProperty(</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Object&gt;&nbsp;obj,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::String&gt;&nbsp;key);</span></span></div></pre><p><a name=\"api_nan_get_real_named_property_in_prototype_chain\"></a></p>\n<h3 id=\"nan-getrealnamedpropertyinprototypechain-\">Nan::GetRealNamedPropertyInPrototypeChain()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a8700b1862e6b4783716964ba4d5e6172\"><code>v8::Object#GetRealNamedPropertyInPrototypeChain()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Value&gt;&nbsp;Nan::GetRealNamedPropertyInPrototypeChain(</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Object&gt;&nbsp;obj,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::String&gt;&nbsp;key);</span></span></div></pre><p><a name=\"api_nan_get_real_named_property\"></a></p>\n<h3 id=\"nan-getrealnamedproperty-\">Nan::GetRealNamedProperty()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a84471a824576a5994fdd0ffcbf99ccc0\"><code>v8::Object#GetRealNamedProperty()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Value&gt;&nbsp;Nan::GetRealNamedProperty(v8::Local&lt;v8::Object&gt;&nbsp;obj,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::String&gt;&nbsp;key);</span></span></div></pre><p><a name=\"api_nan_call_as_function\"></a></p>\n<h3 id=\"nan-callasfunction-\">Nan::CallAsFunction()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#ad3ffc36f3dfc3592ce2a96bc047ee2cd\"><code>v8::Object#CallAsFunction()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Value&gt;&nbsp;Nan::CallAsFunction(v8::Local&lt;v8::Object&gt;&nbsp;obj,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Object&gt;&nbsp;recv,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;argc,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;argv[]);</span></span></div></pre><p><a name=\"api_nan_call_as_constructor\"></a></p>\n<h3 id=\"nan-callasconstructor-\">Nan::CallAsConstructor()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a50d571de50d0b0dfb28795619d07a01b\"><code>v8::Object#CallAsConstructor()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Value&gt;&nbsp;Nan::CallAsConstructor(v8::Local&lt;v8::Object&gt;&nbsp;obj,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;argc,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;argv[]);</span></span></div></pre><p><a name=\"api_nan_get_source_line\"></a></p>\n<h3 id=\"nan-getsourceline-\">Nan::GetSourceLine()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/d9/d28/classv8_1_1_message.html#a849f7a6c41549d83d8159825efccd23a\"><code>v8::Message#GetSourceLine()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::String&gt;&nbsp;Nan::GetSourceLine(v8::Local&lt;v8::Message&gt;&nbsp;msg);</span></span></div></pre><p><a name=\"api_nan_get_line_number\"></a></p>\n<h3 id=\"nan-getlinenumber-\">Nan::GetLineNumber()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/d9/d28/classv8_1_1_message.html#adbe46c10a88a6565f2732a2d2adf99b9\"><code>v8::Message#GetLineNumber()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;int&gt;&nbsp;Nan::GetLineNumber(v8::Local&lt;v8::Message&gt;&nbsp;msg);</span></span></div></pre><p><a name=\"api_nan_get_start_column\"></a></p>\n<h3 id=\"nan-getstartcolumn-\">Nan::GetStartColumn()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/d9/d28/classv8_1_1_message.html#a60ede616ba3822d712e44c7a74487ba6\"><code>v8::Message#GetStartColumn()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;int&gt;&nbsp;Nan::GetStartColumn(v8::Local&lt;v8::Message&gt;&nbsp;msg);</span></span></div></pre><p><a name=\"api_nan_get_end_column\"></a></p>\n<h3 id=\"nan-getendcolumn-\">Nan::GetEndColumn()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/d9/d28/classv8_1_1_message.html#aaa004cf19e529da980bc19fcb76d93be\"><code>v8::Message#GetEndColumn()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;int&gt;&nbsp;Nan::GetEndColumn(v8::Local&lt;v8::Message&gt;&nbsp;msg);</span></span></div></pre><p><a name=\"api_nan_clone_element_at\"></a></p>\n<h3 id=\"nan-cloneelementat-\">Nan::CloneElementAt()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-4.8/d3/d32/classv8_1_1_array.html#a1d3a878d4c1c7cae974dd50a1639245e\"><code>v8::Array#CloneElementAt()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Object&gt;&nbsp;Nan::CloneElementAt(v8::Local&lt;v8::Array&gt;&nbsp;array,&nbsp;uint32_t&nbsp;index);</span></span></div></pre><p><a name=\"api_nan_has_private\"></a></p>\n<h3 id=\"nan-hasprivate-\">Nan::HasPrivate()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#af68a0b98066cfdeb8f943e98a40ba08d\"><code>v8::Object#HasPrivate()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;bool&gt;&nbsp;Nan::HasPrivate(v8::Local&lt;v8::Object&gt;&nbsp;object,&nbsp;v8::Local&lt;v8::String&gt;&nbsp;key);</span></span></div></pre><p><a name=\"api_nan_get_private\"></a></p>\n<h3 id=\"nan-getprivate-\">Nan::GetPrivate()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a169f2da506acbec34deadd9149a1925a\"><code>v8::Object#GetPrivate()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Value&gt;&nbsp;Nan::GetPrivate(v8::Local&lt;v8::Object&gt;&nbsp;object,&nbsp;v8::Local&lt;v8::String&gt;&nbsp;key);</span></span></div></pre><p><a name=\"api_nan_set_private\"></a></p>\n<h3 id=\"nan-setprivate-\">Nan::SetPrivate()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#ace1769b0f3b86bfe9fda1010916360ee\"><code>v8::Object#SetPrivate()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;bool&gt;&nbsp;Nan::SetPrivate(v8::Local&lt;v8::Object&gt;&nbsp;object,&nbsp;v8::Local&lt;v8::String&gt;&nbsp;key,&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;value);</span></span></div></pre><p><a name=\"api_nan_delete_private\"></a></p>\n<h3 id=\"nan-deleteprivate-\">Nan::DeletePrivate()</h3>\n<p>A helper method for calling <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a138bb32a304f3982be02ad499693b8fd\"><code>v8::Object#DeletePrivate()</code></a> in a way compatible across supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::Maybe&lt;bool&gt;&nbsp;Nan::DeletePrivate(v8::Local&lt;v8::Object&gt;&nbsp;object,&nbsp;v8::Local&lt;v8::String&gt;&nbsp;key);</span></span></div></pre><p><a name=\"api_nan_make_maybe\"></a></p>\n<h3 id=\"nan-makemaybe-\">Nan::MakeMaybe()</h3>\n<p>Wraps a <code>v8::Local&lt;&gt;</code> in a <code>Nan::MaybeLocal&lt;&gt;</code>. When called with a <code>Nan::MaybeLocal&lt;&gt;</code> it just returns its argument. This is useful in generic template code that builds on NAN.</p>\n<p>Synopsis:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;MaybeLocal&lt;v8::Number&gt;&nbsp;someNumber&nbsp;=&nbsp;MakeMaybe(New&lt;v8::Number&gt;(3.141592654));</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;MaybeLocal&lt;v8::String&gt;&nbsp;someString&nbsp;=&nbsp;MakeMaybe(New&lt;v8::String&gt;(&quot;probably&quot;));</span></span></div></pre><p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>template&nbsp;&lt;typename&nbsp;T,&nbsp;template&nbsp;&lt;typename&gt;&nbsp;class&nbsp;MaybeMaybe&gt;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;T&gt;&nbsp;Nan::MakeMaybe(MaybeMaybe&lt;T&gt;&nbsp;v);</span></span></div></pre>"
      ],
      "contentsRaw": "## Maybe Types\n\nThe `Nan::MaybeLocal` and `Nan::Maybe` types are monads that encapsulate `v8::Local` handles that _may be empty_.\n\n* **Maybe Types**\n  - <a href=\"#api_nan_maybe_local\"><b><code>Nan::MaybeLocal</code></b></a>\n  - <a href=\"#api_nan_maybe\"><b><code>Nan::Maybe</code></b></a>\n  - <a href=\"#api_nan_nothing\"><b><code>Nan::Nothing</code></b></a>\n  - <a href=\"#api_nan_just\"><b><code>Nan::Just</code></b></a>\n* **Maybe Helpers**\n  - <a href=\"#api_nan_call\"><b><code>Nan::Call()</code></b></a>\n  - <a href=\"#api_nan_to_detail_string\"><b><code>Nan::ToDetailString()</code></b></a>\n  - <a href=\"#api_nan_to_array_index\"><b><code>Nan::ToArrayIndex()</code></b></a>\n  - <a href=\"#api_nan_equals\"><b><code>Nan::Equals()</code></b></a>\n  - <a href=\"#api_nan_new_instance\"><b><code>Nan::NewInstance()</code></b></a>\n  - <a href=\"#api_nan_get_function\"><b><code>Nan::GetFunction()</code></b></a>\n  - <a href=\"#api_nan_set\"><b><code>Nan::Set()</code></b></a>\n  - <a href=\"#api_nan_define_own_property\"><b><code>Nan::DefineOwnProperty()</code></b></a>\n  - <a href=\"#api_nan_force_set\"><del><b><code>Nan::ForceSet()</code></b></del></a>\n  - <a href=\"#api_nan_get\"><b><code>Nan::Get()</code></b></a>\n  - <a href=\"#api_nan_get_property_attribute\"><b><code>Nan::GetPropertyAttributes()</code></b></a>\n  - <a href=\"#api_nan_has\"><b><code>Nan::Has()</code></b></a>\n  - <a href=\"#api_nan_delete\"><b><code>Nan::Delete()</code></b></a>\n  - <a href=\"#api_nan_get_property_names\"><b><code>Nan::GetPropertyNames()</code></b></a>\n  - <a href=\"#api_nan_get_own_property_names\"><b><code>Nan::GetOwnPropertyNames()</code></b></a>\n  - <a href=\"#api_nan_set_prototype\"><b><code>Nan::SetPrototype()</code></b></a>\n  - <a href=\"#api_nan_object_proto_to_string\"><b><code>Nan::ObjectProtoToString()</code></b></a>\n  - <a href=\"#api_nan_has_own_property\"><b><code>Nan::HasOwnProperty()</code></b></a>\n  - <a href=\"#api_nan_has_real_named_property\"><b><code>Nan::HasRealNamedProperty()</code></b></a>\n  - <a href=\"#api_nan_has_real_indexed_property\"><b><code>Nan::HasRealIndexedProperty()</code></b></a>\n  - <a href=\"#api_nan_has_real_named_callback_property\"><b><code>Nan::HasRealNamedCallbackProperty()</code></b></a>\n  - <a href=\"#api_nan_get_real_named_property_in_prototype_chain\"><b><code>Nan::GetRealNamedPropertyInPrototypeChain()</code></b></a>\n  - <a href=\"#api_nan_get_real_named_property\"><b><code>Nan::GetRealNamedProperty()</code></b></a>\n  - <a href=\"#api_nan_call_as_function\"><b><code>Nan::CallAsFunction()</code></b></a>\n  - <a href=\"#api_nan_call_as_constructor\"><b><code>Nan::CallAsConstructor()</code></b></a>\n  - <a href=\"#api_nan_get_source_line\"><b><code>Nan::GetSourceLine()</code></b></a>\n  - <a href=\"#api_nan_get_line_number\"><b><code>Nan::GetLineNumber()</code></b></a>\n  - <a href=\"#api_nan_get_start_column\"><b><code>Nan::GetStartColumn()</code></b></a>\n  - <a href=\"#api_nan_get_end_column\"><b><code>Nan::GetEndColumn()</code></b></a>\n  - <a href=\"#api_nan_clone_element_at\"><b><code>Nan::CloneElementAt()</code></b></a>\n  - <a href=\"#api_nan_has_private\"><b><code>Nan::HasPrivate()</code></b></a>\n  - <a href=\"#api_nan_get_private\"><b><code>Nan::GetPrivate()</code></b></a>\n  - <a href=\"#api_nan_set_private\"><b><code>Nan::SetPrivate()</code></b></a>\n  - <a href=\"#api_nan_delete_private\"><b><code>Nan::DeletePrivate()</code></b></a>\n  - <a href=\"#api_nan_make_maybe\"><b><code>Nan::MakeMaybe()</code></b></a>\n\n<a name=\"api_nan_maybe_local\"></a>\n### Nan::MaybeLocal\n\nA `Nan::MaybeLocal<T>` is a wrapper around [`v8::Local<T>`](https://v8docs.nodesource.com/node-8.11/de/deb/classv8_1_1_local.html) that enforces a check that determines whether the `v8::Local<T>` is empty before it can be used.\n\nIf an API method returns a `Nan::MaybeLocal`, the API method can potentially fail either because an exception is thrown, or because an exception is pending, e.g. because a previous API call threw an exception that hasn't been caught yet, or because a `v8::TerminateExecution` exception was thrown. In that case, an empty `Nan::MaybeLocal` is returned.\n\nDefinition:\n\n```c++\ntemplate<typename T> class Nan::MaybeLocal {\n public:\n  MaybeLocal();\n\n  template<typename S> MaybeLocal(v8::Local<S> that);\n\n  bool IsEmpty() const;\n\n  template<typename S> bool ToLocal(v8::Local<S> *out);\n\n  // Will crash if the MaybeLocal<> is empty.\n  v8::Local<T> ToLocalChecked();\n\n  template<typename S> v8::Local<S> FromMaybe(v8::Local<S> default_value) const;\n};\n```\n\nSee the documentation for [`v8::MaybeLocal`](https://v8docs.nodesource.com/node-8.11/d8/d7d/classv8_1_1_maybe_local.html) for further details.\n\n<a name=\"api_nan_maybe\"></a>\n### Nan::Maybe\n\nA simple `Nan::Maybe` type, representing an object which may or may not have a value, see https://hackage.haskell.org/package/base/docs/Data-Maybe.html.\n\nIf an API method returns a `Nan::Maybe<>`, the API method can potentially fail either because an exception is thrown, or because an exception is pending, e.g. because a previous API call threw an exception that hasn't been caught yet, or because a `v8::TerminateExecution` exception was thrown. In that case, a \"Nothing\" value is returned.\n\nDefinition:\n\n```c++\ntemplate<typename T> class Nan::Maybe {\n public:\n  bool IsNothing() const;\n  bool IsJust() const;\n\n  // Will crash if the Maybe<> is nothing.\n  T FromJust();\n\n  T FromMaybe(const T& default_value);\n\n  bool operator==(const Maybe &other);\n\n  bool operator!=(const Maybe &other);\n};\n```\n\nSee the documentation for [`v8::Maybe`](https://v8docs.nodesource.com/node-8.11/d9/d4b/classv8_1_1_maybe.html) for further details.\n\n<a name=\"api_nan_nothing\"></a>\n### Nan::Nothing\n\nConstruct an empty `Nan::Maybe` type representing _nothing_.\n\n```c++\ntemplate<typename T> Nan::Maybe<T> Nan::Nothing();\n```\n\n<a name=\"api_nan_just\"></a>\n### Nan::Just\n\nConstruct a `Nan::Maybe` type representing _just_ a value.\n\n```c++\ntemplate<typename T> Nan::Maybe<T> Nan::Just(const T &t);\n```\n\n<a name=\"api_nan_call\"></a>\n### Nan::Call()\n\nA helper method for calling a synchronous [`v8::Function#Call()`](https://v8docs.nodesource.com/node-8.11/d5/d54/classv8_1_1_function.html#a9c3d0e4e13ddd7721fce238aa5b94a11) in a way compatible across supported versions of V8.\n\nFor asynchronous callbacks, use Nan::Callback::Call along with an AsyncResource.\n\nSignature:\n\n```c++\nNan::MaybeLocal<v8::Value> Nan::Call(v8::Local<v8::Function> fun, v8::Local<v8::Object> recv, int argc, v8::Local<v8::Value> argv[]);\nNan::MaybeLocal<v8::Value> Nan::Call(const Nan::Callback& callback, v8::Local<v8::Object> recv,\n int argc, v8::Local<v8::Value> argv[]);\nNan::MaybeLocal<v8::Value> Nan::Call(const Nan::Callback& callback, int argc, v8::Local<v8::Value> argv[]);\n```\n\n\n<a name=\"api_nan_to_detail_string\"></a>\n### Nan::ToDetailString()\n\nA helper method for calling [`v8::Value#ToDetailString()`](https://v8docs.nodesource.com/node-8.11/dc/d0a/classv8_1_1_value.html#a2f9770296dc2c8d274bc8cc0dca243e5) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::MaybeLocal<v8::String> Nan::ToDetailString(v8::Local<v8::Value> val);\n```\n\n\n<a name=\"api_nan_to_array_index\"></a>\n### Nan::ToArrayIndex()\n\nA helper method for calling [`v8::Value#ToArrayIndex()`](https://v8docs.nodesource.com/node-8.11/dc/d0a/classv8_1_1_value.html#acc5bbef3c805ec458470c0fcd6f13493) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::MaybeLocal<v8::Uint32> Nan::ToArrayIndex(v8::Local<v8::Value> val);\n```\n\n\n<a name=\"api_nan_equals\"></a>\n### Nan::Equals()\n\nA helper method for calling [`v8::Value#Equals()`](https://v8docs.nodesource.com/node-8.11/dc/d0a/classv8_1_1_value.html#a08fba1d776a59bbf6864b25f9152c64b) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::Maybe<bool> Nan::Equals(v8::Local<v8::Value> a, v8::Local<v8::Value>(b));\n```\n\n\n<a name=\"api_nan_new_instance\"></a>\n### Nan::NewInstance()\n\nA helper method for calling [`v8::Function#NewInstance()`](https://v8docs.nodesource.com/node-8.11/d5/d54/classv8_1_1_function.html#ae477558b10c14b76ed00e8dbab44ce5b) and [`v8::ObjectTemplate#NewInstance()`](https://v8docs.nodesource.com/node-8.11/db/d5f/classv8_1_1_object_template.html#ad605a7543cfbc5dab54cdb0883d14ae4) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::MaybeLocal<v8::Object> Nan::NewInstance(v8::Local<v8::Function> h);\nNan::MaybeLocal<v8::Object> Nan::NewInstance(v8::Local<v8::Function> h, int argc, v8::Local<v8::Value> argv[]);\nNan::MaybeLocal<v8::Object> Nan::NewInstance(v8::Local<v8::ObjectTemplate> h);\n```\n\n\n<a name=\"api_nan_get_function\"></a>\n### Nan::GetFunction()\n\nA helper method for calling [`v8::FunctionTemplate#GetFunction()`](https://v8docs.nodesource.com/node-8.11/d8/d83/classv8_1_1_function_template.html#a56d904662a86eca78da37d9bb0ed3705) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::MaybeLocal<v8::Function> Nan::GetFunction(v8::Local<v8::FunctionTemplate> t);\n```\n\n\n<a name=\"api_nan_set\"></a>\n### Nan::Set()\n\nA helper method for calling [`v8::Object#Set()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a67604ea3734f170c66026064ea808f20) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::Maybe<bool> Nan::Set(v8::Local<v8::Object> obj,\n                          v8::Local<v8::Value> key,\n                          v8::Local<v8::Value> value)\nNan::Maybe<bool> Nan::Set(v8::Local<v8::Object> obj,\n                          uint32_t index,\n                          v8::Local<v8::Value> value);\n```\n\n\n<a name=\"api_nan_define_own_property\"></a>\n### Nan::DefineOwnProperty()\n\nA helper method for calling [`v8::Object#DefineOwnProperty()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a6f76b2ed605cb8f9185b92de0033a820) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::Maybe<bool> Nan::DefineOwnProperty(v8::Local<v8::Object> obj,\n                                        v8::Local<v8::String> key,\n                                        v8::Local<v8::Value> value,\n                                        v8::PropertyAttribute attribs = v8::None);\n```\n\n\n<a name=\"api_nan_force_set\"></a>\n### <del>Nan::ForceSet()</del>\n\nDeprecated, use <a href=\"#api_nan_define_own_property\"><code>Nan::DefineOwnProperty()</code></a>.\n\n<del>A helper method for calling [`v8::Object#ForceSet()`](https://v8docs.nodesource.com/node-0.12/db/d85/classv8_1_1_object.html#acfbdfd7427b516ebdb5c47c4df5ed96c) in a way compatible across supported versions of V8.</del>\n\nSignature:\n\n```c++\nNAN_DEPRECATED Nan::Maybe<bool> Nan::ForceSet(v8::Local<v8::Object> obj,\n                                              v8::Local<v8::Value> key,\n                                              v8::Local<v8::Value> value,\n                                              v8::PropertyAttribute attribs = v8::None);\n```\n\n\n<a name=\"api_nan_get\"></a>\n### Nan::Get()\n\nA helper method for calling [`v8::Object#Get()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a2565f03e736694f6b1e1cf22a0b4eac2) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::MaybeLocal<v8::Value> Nan::Get(v8::Local<v8::Object> obj,\n                                    v8::Local<v8::Value> key);\nNan::MaybeLocal<v8::Value> Nan::Get(v8::Local<v8::Object> obj, uint32_t index);\n```\n\n\n<a name=\"api_nan_get_property_attribute\"></a>\n### Nan::GetPropertyAttributes()\n\nA helper method for calling [`v8::Object#GetPropertyAttributes()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a9b898894da3d1db2714fd9325a54fe57) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::Maybe<v8::PropertyAttribute> Nan::GetPropertyAttributes(\n    v8::Local<v8::Object> obj,\n    v8::Local<v8::Value> key);\n```\n\n\n<a name=\"api_nan_has\"></a>\n### Nan::Has()\n\nA helper method for calling [`v8::Object#Has()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#ab3c3d89ea7c2f9afd08965bd7299a41d) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::Maybe<bool> Nan::Has(v8::Local<v8::Object> obj, v8::Local<v8::String> key);\nNan::Maybe<bool> Nan::Has(v8::Local<v8::Object> obj, uint32_t index);\n```\n\n\n<a name=\"api_nan_delete\"></a>\n### Nan::Delete()\n\nA helper method for calling [`v8::Object#Delete()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a48e4a19b2cedff867eecc73ddb7d377f) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::Maybe<bool> Nan::Delete(v8::Local<v8::Object> obj,\n                             v8::Local<v8::String> key);\nNan::Maybe<bool> Nan::Delete(v8::Local<v8::Object> obj, uint32_t index);\n```\n\n\n<a name=\"api_nan_get_property_names\"></a>\n### Nan::GetPropertyNames()\n\nA helper method for calling [`v8::Object#GetPropertyNames()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#aced885270cfd2c956367b5eedc7fbfe8) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::MaybeLocal<v8::Array> Nan::GetPropertyNames(v8::Local<v8::Object> obj);\n```\n\n\n<a name=\"api_nan_get_own_property_names\"></a>\n### Nan::GetOwnPropertyNames()\n\nA helper method for calling [`v8::Object#GetOwnPropertyNames()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a79a6e4d66049b9aa648ed4dfdb23e6eb) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::MaybeLocal<v8::Array> Nan::GetOwnPropertyNames(v8::Local<v8::Object> obj);\n```\n\n\n<a name=\"api_nan_set_prototype\"></a>\n### Nan::SetPrototype()\n\nA helper method for calling [`v8::Object#SetPrototype()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a442706b22fceda6e6d1f632122a9a9f4) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::Maybe<bool> Nan::SetPrototype(v8::Local<v8::Object> obj,\n                                   v8::Local<v8::Value> prototype);\n```\n\n\n<a name=\"api_nan_object_proto_to_string\"></a>\n### Nan::ObjectProtoToString()\n\nA helper method for calling [`v8::Object#ObjectProtoToString()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#ab7a92b4dcf822bef72f6c0ac6fea1f0b) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::MaybeLocal<v8::String> Nan::ObjectProtoToString(v8::Local<v8::Object> obj);\n```\n\n\n<a name=\"api_nan_has_own_property\"></a>\n### Nan::HasOwnProperty()\n\nA helper method for calling [`v8::Object#HasOwnProperty()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#ab7b7245442ca6de1e1c145ea3fd653ff) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::Maybe<bool> Nan::HasOwnProperty(v8::Local<v8::Object> obj,\n                                     v8::Local<v8::String> key);\n```\n\n\n<a name=\"api_nan_has_real_named_property\"></a>\n### Nan::HasRealNamedProperty()\n\nA helper method for calling [`v8::Object#HasRealNamedProperty()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#ad8b80a59c9eb3c1e6c3cd6c84571f767) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::Maybe<bool> Nan::HasRealNamedProperty(v8::Local<v8::Object> obj,\n                                           v8::Local<v8::String> key);\n```\n\n\n<a name=\"api_nan_has_real_indexed_property\"></a>\n### Nan::HasRealIndexedProperty()\n\nA helper method for calling [`v8::Object#HasRealIndexedProperty()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#af94fc1135a5e74a2193fb72c3a1b9855) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::Maybe<bool> Nan::HasRealIndexedProperty(v8::Local<v8::Object> obj,\n                                             uint32_t index);\n```\n\n\n<a name=\"api_nan_has_real_named_callback_property\"></a>\n### Nan::HasRealNamedCallbackProperty()\n\nA helper method for calling [`v8::Object#HasRealNamedCallbackProperty()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#af743b7ea132b89f84d34d164d0668811) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::Maybe<bool> Nan::HasRealNamedCallbackProperty(\n    v8::Local<v8::Object> obj,\n    v8::Local<v8::String> key);\n```\n\n\n<a name=\"api_nan_get_real_named_property_in_prototype_chain\"></a>\n### Nan::GetRealNamedPropertyInPrototypeChain()\n\nA helper method for calling [`v8::Object#GetRealNamedPropertyInPrototypeChain()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a8700b1862e6b4783716964ba4d5e6172) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::MaybeLocal<v8::Value> Nan::GetRealNamedPropertyInPrototypeChain(\n    v8::Local<v8::Object> obj,\n    v8::Local<v8::String> key);\n```\n\n\n<a name=\"api_nan_get_real_named_property\"></a>\n### Nan::GetRealNamedProperty()\n\nA helper method for calling [`v8::Object#GetRealNamedProperty()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a84471a824576a5994fdd0ffcbf99ccc0) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::MaybeLocal<v8::Value> Nan::GetRealNamedProperty(v8::Local<v8::Object> obj,\n                                                     v8::Local<v8::String> key);\n```\n\n\n<a name=\"api_nan_call_as_function\"></a>\n### Nan::CallAsFunction()\n\nA helper method for calling [`v8::Object#CallAsFunction()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#ad3ffc36f3dfc3592ce2a96bc047ee2cd) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::MaybeLocal<v8::Value> Nan::CallAsFunction(v8::Local<v8::Object> obj,\n                                               v8::Local<v8::Object> recv,\n                                               int argc,\n                                               v8::Local<v8::Value> argv[]);\n```\n\n\n<a name=\"api_nan_call_as_constructor\"></a>\n### Nan::CallAsConstructor()\n\nA helper method for calling [`v8::Object#CallAsConstructor()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a50d571de50d0b0dfb28795619d07a01b) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::MaybeLocal<v8::Value> Nan::CallAsConstructor(v8::Local<v8::Object> obj,\n                                                  int argc,\n                                                  v8::Local<v8::Value> argv[]);\n```\n\n\n<a name=\"api_nan_get_source_line\"></a>\n### Nan::GetSourceLine()\n\nA helper method for calling [`v8::Message#GetSourceLine()`](https://v8docs.nodesource.com/node-8.11/d9/d28/classv8_1_1_message.html#a849f7a6c41549d83d8159825efccd23a) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::MaybeLocal<v8::String> Nan::GetSourceLine(v8::Local<v8::Message> msg);\n```\n\n\n<a name=\"api_nan_get_line_number\"></a>\n### Nan::GetLineNumber()\n\nA helper method for calling [`v8::Message#GetLineNumber()`](https://v8docs.nodesource.com/node-8.11/d9/d28/classv8_1_1_message.html#adbe46c10a88a6565f2732a2d2adf99b9) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::Maybe<int> Nan::GetLineNumber(v8::Local<v8::Message> msg);\n```\n\n\n<a name=\"api_nan_get_start_column\"></a>\n### Nan::GetStartColumn()\n\nA helper method for calling [`v8::Message#GetStartColumn()`](https://v8docs.nodesource.com/node-8.11/d9/d28/classv8_1_1_message.html#a60ede616ba3822d712e44c7a74487ba6) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::Maybe<int> Nan::GetStartColumn(v8::Local<v8::Message> msg);\n```\n\n\n<a name=\"api_nan_get_end_column\"></a>\n### Nan::GetEndColumn()\n\nA helper method for calling [`v8::Message#GetEndColumn()`](https://v8docs.nodesource.com/node-8.11/d9/d28/classv8_1_1_message.html#aaa004cf19e529da980bc19fcb76d93be) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::Maybe<int> Nan::GetEndColumn(v8::Local<v8::Message> msg);\n```\n\n\n<a name=\"api_nan_clone_element_at\"></a>\n### Nan::CloneElementAt()\n\nA helper method for calling [`v8::Array#CloneElementAt()`](https://v8docs.nodesource.com/node-4.8/d3/d32/classv8_1_1_array.html#a1d3a878d4c1c7cae974dd50a1639245e) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::MaybeLocal<v8::Object> Nan::CloneElementAt(v8::Local<v8::Array> array, uint32_t index);\n```\n\n<a name=\"api_nan_has_private\"></a>\n### Nan::HasPrivate()\n\nA helper method for calling [`v8::Object#HasPrivate()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#af68a0b98066cfdeb8f943e98a40ba08d) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::Maybe<bool> Nan::HasPrivate(v8::Local<v8::Object> object, v8::Local<v8::String> key);\n```\n\n<a name=\"api_nan_get_private\"></a>\n### Nan::GetPrivate()\n\nA helper method for calling [`v8::Object#GetPrivate()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a169f2da506acbec34deadd9149a1925a) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::MaybeLocal<v8::Value> Nan::GetPrivate(v8::Local<v8::Object> object, v8::Local<v8::String> key);\n```\n\n<a name=\"api_nan_set_private\"></a>\n### Nan::SetPrivate()\n\nA helper method for calling [`v8::Object#SetPrivate()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#ace1769b0f3b86bfe9fda1010916360ee) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::Maybe<bool> Nan::SetPrivate(v8::Local<v8::Object> object, v8::Local<v8::String> key, v8::Local<v8::Value> value);\n```\n\n<a name=\"api_nan_delete_private\"></a>\n### Nan::DeletePrivate()\n\nA helper method for calling [`v8::Object#DeletePrivate()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a138bb32a304f3982be02ad499693b8fd) in a way compatible across supported versions of V8.\n\nSignature:\n\n```c++\nNan::Maybe<bool> Nan::DeletePrivate(v8::Local<v8::Object> object, v8::Local<v8::String> key);\n```\n\n<a name=\"api_nan_make_maybe\"></a>\n### Nan::MakeMaybe()\n\nWraps a `v8::Local<>` in a `Nan::MaybeLocal<>`. When called with a `Nan::MaybeLocal<>` it just returns its argument. This is useful in generic template code that builds on NAN.\n\nSynopsis:\n\n```c++\n  MaybeLocal<v8::Number> someNumber = MakeMaybe(New<v8::Number>(3.141592654));\n  MaybeLocal<v8::String> someString = MakeMaybe(New<v8::String>(\"probably\"));\n```\n\nSignature:\n\n```c++\ntemplate <typename T, template <typename> class MaybeMaybe>\nNan::MaybeLocal<T> Nan::MakeMaybe(MaybeMaybe<T> v);\n```",
      "metadata": {}
    },
    "methods": {
      "reference": "methods",
      "route": "methods",
      "sourcePath": "src\\docs-data\\node_modules\\nan\\doc\\methods.md",
      "title": "(untitled)",
      "contents": [
        "<h2 id=\"javascript-accessible-methods\">JavaScript-accessible methods</h2>\n<p>A <em>template</em> is a blueprint for JavaScript functions and objects in a context. You can use a template to wrap C++ functions and data structures within JavaScript objects so that they can be manipulated from JavaScript. See the V8 Embedders Guide section on <a href=\"https://github.com/v8/v8/wiki/Embedder%27s-Guide#templates\">Templates</a> for further information.</p>\n<p>In order to expose functionality to JavaScript via a template, you must provide it to V8 in a form that it understands. Across the versions of V8 supported by NAN, JavaScript-accessible method signatures vary widely, NAN fully abstracts method declaration and provides you with an interface that is similar to the most recent V8 API but is backward-compatible with older versions that still use the now-deceased <code>v8::Argument</code> type.</p>\n<ul>\n<li><strong>Method argument types</strong><ul>\n<li><a href=\"#api_nan_function_callback_info\"><b><code>Nan::FunctionCallbackInfo</code></b></a></li>\n<li><a href=\"#api_nan_property_callback_info\"><b><code>Nan::PropertyCallbackInfo</code></b></a></li>\n<li><a href=\"#api_nan_return_value\"><b><code>Nan::ReturnValue</code></b></a></li>\n</ul>\n</li>\n<li><strong>Method declarations</strong><ul>\n<li><a href=\"#api_nan_method\"><b>Method declaration</b></a></li>\n<li><a href=\"#api_nan_getter\"><b>Getter declaration</b></a></li>\n<li><a href=\"#api_nan_setter\"><b>Setter declaration</b></a></li>\n<li><a href=\"#api_nan_property_getter\"><b>Property getter declaration</b></a></li>\n<li><a href=\"#api_nan_property_setter\"><b>Property setter declaration</b></a></li>\n<li><a href=\"#api_nan_property_enumerator\"><b>Property enumerator declaration</b></a></li>\n<li><a href=\"#api_nan_property_deleter\"><b>Property deleter declaration</b></a></li>\n<li><a href=\"#api_nan_property_query\"><b>Property query declaration</b></a></li>\n<li><a href=\"#api_nan_index_getter\"><b>Index getter declaration</b></a></li>\n<li><a href=\"#api_nan_index_setter\"><b>Index setter declaration</b></a></li>\n<li><a href=\"#api_nan_index_enumerator\"><b>Index enumerator declaration</b></a></li>\n<li><a href=\"#api_nan_index_deleter\"><b>Index deleter declaration</b></a></li>\n<li><a href=\"#api_nan_index_query\"><b>Index query declaration</b></a></li>\n</ul>\n</li>\n<li>Method and template helpers<ul>\n<li><a href=\"#api_nan_set_method\"><b><code>Nan::SetMethod()</code></b></a></li>\n<li><a href=\"#api_nan_set_prototype_method\"><b><code>Nan::SetPrototypeMethod()</code></b></a></li>\n<li><a href=\"#api_nan_set_accessor\"><b><code>Nan::SetAccessor()</code></b></a></li>\n<li><a href=\"#api_nan_set_named_property_handler\"><b><code>Nan::SetNamedPropertyHandler()</code></b></a></li>\n<li><a href=\"#api_nan_set_indexed_property_handler\"><b><code>Nan::SetIndexedPropertyHandler()</code></b></a></li>\n<li><a href=\"#api_nan_set_template\"><b><code>Nan::SetTemplate()</code></b></a></li>\n<li><a href=\"#api_nan_set_prototype_template\"><b><code>Nan::SetPrototypeTemplate()</code></b></a></li>\n<li><a href=\"#api_nan_set_instance_template\"><b><code>Nan::SetInstanceTemplate()</code></b></a></li>\n<li><a href=\"#api_nan_set_call_handler\"><b><code>Nan::SetCallHandler()</code></b></a></li>\n<li><a href=\"#api_nan_set_call_as_function_handler\"><b><code>Nan::SetCallAsFunctionHandler()</code></b></a></li>\n</ul>\n</li>\n</ul>\n<p><a name=\"api_nan_function_callback_info\"></a></p>\n<h3 id=\"nan-functioncallbackinfo\">Nan::FunctionCallbackInfo</h3>\n<p><code>Nan::FunctionCallbackInfo</code> should be used in place of <a href=\"https://v8docs.nodesource.com/node-8.11/dd/d0d/classv8_1_1_function_callback_info.html\"><code>v8::FunctionCallbackInfo</code></a>, even with older versions of Node where <code>v8::FunctionCallbackInfo</code> does not exist.</p>\n<p>Definition:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>template&lt;typename&nbsp;T&gt;&nbsp;class&nbsp;FunctionCallbackInfo&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;ReturnValue&lt;T&gt;&nbsp;GetReturnValue()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Function&gt;&nbsp;Callee();&nbsp;//&nbsp;NOTE:&nbsp;Not&nbsp;available&nbsp;in&nbsp;NodeJS&nbsp;&gt;=&nbsp;10.0.0</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;Data();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Object&gt;&nbsp;Holder();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;bool&nbsp;IsConstructCall();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;int&nbsp;Length()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;operator[](int&nbsp;i)&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Object&gt;&nbsp;This()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Isolate&nbsp;*GetIsolate()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div></pre><p>See the <a href=\"https://v8docs.nodesource.com/node-8.11/dd/d0d/classv8_1_1_function_callback_info.html\"><code>v8::FunctionCallbackInfo</code></a> documentation for usage details on these. See <a href=\"#api_nan_return_value\"><code>Nan::ReturnValue</code></a> for further information on how to set a return value from methods.</p>\n<p><strong>Note:</strong> <code>FunctionCallbackInfo::Callee</code> is removed in Node.js after <code>10.0.0</code> because it is was deprecated in V8. Consider using <code>info.Data()</code> to pass any information you need.</p>\n<p><a name=\"api_nan_property_callback_info\"></a></p>\n<h3 id=\"nan-propertycallbackinfo\">Nan::PropertyCallbackInfo</h3>\n<p><code>Nan::PropertyCallbackInfo</code> should be used in place of <a href=\"https://v8docs.nodesource.com/node-8.11/d7/dc5/classv8_1_1_property_callback_info.html\"><code>v8::PropertyCallbackInfo</code></a>, even with older versions of Node where <code>v8::PropertyCallbackInfo</code> does not exist.</p>\n<p>Definition:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>template&lt;typename&nbsp;T&gt;&nbsp;class&nbsp;PropertyCallbackInfo&nbsp;:&nbsp;public&nbsp;PropertyCallbackInfoBase&lt;T&gt;&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;ReturnValue&lt;T&gt;&nbsp;GetReturnValue()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Isolate*&nbsp;GetIsolate()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;Data()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Object&gt;&nbsp;This()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Object&gt;&nbsp;Holder()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div></pre><p>See the <a href=\"https://v8docs.nodesource.com/node-8.11/d7/dc5/classv8_1_1_property_callback_info.html\"><code>v8::PropertyCallbackInfo</code></a> documentation for usage details on these. See <a href=\"#api_nan_return_value\"><code>Nan::ReturnValue</code></a> for further information on how to set a return value from property accessor methods.</p>\n<p><a name=\"api_nan_return_value\"></a></p>\n<h3 id=\"nan-returnvalue\">Nan::ReturnValue</h3>\n<p><code>Nan::ReturnValue</code> is used in place of <a href=\"https://v8docs.nodesource.com/node-8.11/da/da7/classv8_1_1_return_value.html\"><code>v8::ReturnValue</code></a> on both <a href=\"#api_nan_function_callback_info\"><code>Nan::FunctionCallbackInfo</code></a> and <a href=\"#api_nan_property_callback_info\"><code>Nan::PropertyCallbackInfo</code></a> as the return type of <code>GetReturnValue()</code>.</p>\n<p>Example usage:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;EmptyArray(const&nbsp;Nan::FunctionCallbackInfo&lt;v8::Value&gt;&amp;&nbsp;info)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;info.GetReturnValue().Set(Nan::New&lt;v8::Array&gt;());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div></pre><p>Definition:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>template&lt;typename&nbsp;T&gt;&nbsp;class&nbsp;ReturnValue&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;//&nbsp;Handle&nbsp;setters</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;template&nbsp;&lt;typename&nbsp;S&gt;&nbsp;void&nbsp;Set(const&nbsp;v8::Local&lt;S&gt;&nbsp;&amp;handle);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;template&nbsp;&lt;typename&nbsp;S&gt;&nbsp;void&nbsp;Set(const&nbsp;Nan::Global&lt;S&gt;&nbsp;&amp;handle);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;//&nbsp;Fast&nbsp;primitive&nbsp;setters</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;Set(bool&nbsp;value);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;Set(double&nbsp;i);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;Set(int32_t&nbsp;i);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;Set(uint32_t&nbsp;i);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;//&nbsp;Fast&nbsp;JS&nbsp;primitive&nbsp;setters</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;SetNull();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;SetUndefined();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;SetEmptyString();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;//&nbsp;Convenience&nbsp;getter&nbsp;for&nbsp;isolate</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Isolate&nbsp;*GetIsolate()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div></pre><p>See the documentation on <a href=\"https://v8docs.nodesource.com/node-8.11/da/da7/classv8_1_1_return_value.html\"><code>v8::ReturnValue</code></a> for further information on this.</p>\n<p><a name=\"api_nan_method\"></a></p>\n<h3 id=\"method-declaration\">Method declaration</h3>\n<p>JavaScript-accessible methods should be declared with the following signature to form a <code>Nan::FunctionCallback</code>:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>typedef&nbsp;void(*FunctionCallback)(const&nbsp;FunctionCallbackInfo&lt;v8::Value&gt;&amp;);</span></span></div></pre><p>Example:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;MethodName(const&nbsp;Nan::FunctionCallbackInfo&lt;v8::Value&gt;&amp;&nbsp;info)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;...</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div></pre><p>You do not need to declare a new <code>HandleScope</code> within a method as one is implicitly created for you.</p>\n<p><strong>Example usage</strong></p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>//&nbsp;.h:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>class&nbsp;Foo&nbsp;:&nbsp;public&nbsp;Nan::ObjectWrap&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;...</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;static&nbsp;void&nbsp;Bar(const&nbsp;Nan::FunctionCallbackInfo&lt;v8::Value&gt;&amp;&nbsp;info);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;static&nbsp;void&nbsp;Baz(const&nbsp;Nan::FunctionCallbackInfo&lt;v8::Value&gt;&amp;&nbsp;info);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>//&nbsp;.cc:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Foo::Bar(const&nbsp;Nan::FunctionCallbackInfo&lt;v8::Value&gt;&amp;&nbsp;info)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;...</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Foo::Baz(const&nbsp;Nan::FunctionCallbackInfo&lt;v8::Value&gt;&amp;&nbsp;info)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;...</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div></pre><p>A helper macro <code>NAN_METHOD(methodname)</code> exists, compatible with NAN v1 method declarations.</p>\n<p><strong>Example usage with <code>NAN_METHOD(methodname)</code></strong></p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>//&nbsp;.h:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>class&nbsp;Foo&nbsp;:&nbsp;public&nbsp;Nan::ObjectWrap&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;...</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;static&nbsp;NAN_METHOD(Bar);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;static&nbsp;NAN_METHOD(Baz);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>//&nbsp;.cc:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>NAN_METHOD(Foo::Bar)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;...</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>NAN_METHOD(Foo::Baz)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;...</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div></pre><p>Use <a href=\"#api_nan_set_prototype_method\"><code>Nan::SetPrototypeMethod</code></a> to attach a method to a JavaScript function prototype or <a href=\"#api_nan_set_method\"><code>Nan::SetMethod</code></a> to attach a method directly on a JavaScript object.</p>\n<p><a name=\"api_nan_getter\"></a></p>\n<h3 id=\"getter-declaration\">Getter declaration</h3>\n<p>JavaScript-accessible getters should be declared with the following signature to form a <code>Nan::GetterCallback</code>:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>typedef&nbsp;void(*GetterCallback)(v8::Local&lt;v8::String&gt;,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;PropertyCallbackInfo&lt;v8::Value&gt;&amp;);</span></span></div></pre><p>Example:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;GetterName(v8::Local&lt;v8::String&gt;&nbsp;property,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;Nan::PropertyCallbackInfo&lt;v8::Value&gt;&amp;&nbsp;info)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;...</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div></pre><p>You do not need to declare a new <code>HandleScope</code> within a getter as one is implicitly created for you.</p>\n<p>A helper macro <code>NAN_GETTER(methodname)</code> exists, compatible with NAN v1 method declarations.</p>\n<p>Also see the V8 Embedders Guide documentation on <a href=\"https://developers.google.com/v8/embed#accesssors\">Accessors</a>.</p>\n<p><a name=\"api_nan_setter\"></a></p>\n<h3 id=\"setter-declaration\">Setter declaration</h3>\n<p>JavaScript-accessible setters should be declared with the following signature to form a <b><code>Nan::SetterCallback</code></b>:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>typedef&nbsp;void(*SetterCallback)(v8::Local&lt;v8::String&gt;,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;PropertyCallbackInfo&lt;void&gt;&amp;);</span></span></div></pre><p>Example:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;SetterName(v8::Local&lt;v8::String&gt;&nbsp;property,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;value,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;Nan::PropertyCallbackInfo&lt;void&gt;&amp;&nbsp;info)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;...</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div></pre><p>You do not need to declare a new <code>HandleScope</code> within a setter as one is implicitly created for you.</p>\n<p>A helper macro <code>NAN_SETTER(methodname)</code> exists, compatible with NAN v1 method declarations.</p>\n<p>Also see the V8 Embedders Guide documentation on <a href=\"https://developers.google.com/v8/embed#accesssors\">Accessors</a>.</p>\n<p><a name=\"api_nan_property_getter\"></a></p>\n<h3 id=\"property-getter-declaration\">Property getter declaration</h3>\n<p>JavaScript-accessible property getters should be declared with the following signature to form a <b><code>Nan::PropertyGetterCallback</code></b>:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>typedef&nbsp;void(*PropertyGetterCallback)(v8::Local&lt;v8::String&gt;,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;PropertyCallbackInfo&lt;v8::Value&gt;&amp;);</span></span></div></pre><p>Example:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;PropertyGetterName(v8::Local&lt;v8::String&gt;&nbsp;property,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;Nan::PropertyCallbackInfo&lt;v8::Value&gt;&amp;&nbsp;info)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;...</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div></pre><p>You do not need to declare a new <code>HandleScope</code> within a property getter as one is implicitly created for you.</p>\n<p>A helper macro <code>NAN_PROPERTY_GETTER(methodname)</code> exists, compatible with NAN v1 method declarations.</p>\n<p>Also see the V8 Embedders Guide documentation on named property <a href=\"https://developers.google.com/v8/embed#interceptors\">Interceptors</a>.</p>\n<p><a name=\"api_nan_property_setter\"></a></p>\n<h3 id=\"property-setter-declaration\">Property setter declaration</h3>\n<p>JavaScript-accessible property setters should be declared with the following signature to form a <b><code>Nan::PropertySetterCallback</code></b>:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>typedef&nbsp;void(*PropertySetterCallback)(v8::Local&lt;v8::String&gt;,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;PropertyCallbackInfo&lt;v8::Value&gt;&amp;);</span></span></div></pre><p>Example:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;PropertySetterName(v8::Local&lt;v8::String&gt;&nbsp;property,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;value,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;Nan::PropertyCallbackInfo&lt;v8::Value&gt;&amp;&nbsp;info);</span></span></div></pre><p>You do not need to declare a new <code>HandleScope</code> within a property setter as one is implicitly created for you.</p>\n<p>A helper macro <code>NAN_PROPERTY_SETTER(methodname)</code> exists, compatible with NAN v1 method declarations.</p>\n<p>Also see the V8 Embedders Guide documentation on named property <a href=\"https://developers.google.com/v8/embed#interceptors\">Interceptors</a>.</p>\n<p><a name=\"api_nan_property_enumerator\"></a></p>\n<h3 id=\"property-enumerator-declaration\">Property enumerator declaration</h3>\n<p>JavaScript-accessible property enumerators should be declared with the following signature to form a <b><code>Nan::PropertyEnumeratorCallback</code></b>:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>typedef&nbsp;void(*PropertyEnumeratorCallback)(const&nbsp;PropertyCallbackInfo&lt;v8::Array&gt;&amp;);</span></span></div></pre><p>Example:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;PropertyEnumeratorName(const&nbsp;Nan::PropertyCallbackInfo&lt;v8::Array&gt;&amp;&nbsp;info);</span></span></div></pre><p>You do not need to declare a new <code>HandleScope</code> within a property enumerator as one is implicitly created for you.</p>\n<p>A helper macro <code>NAN_PROPERTY_ENUMERATOR(methodname)</code> exists, compatible with NAN v1 method declarations.</p>\n<p>Also see the V8 Embedders Guide documentation on named property <a href=\"https://developers.google.com/v8/embed#interceptors\">Interceptors</a>.</p>\n<p><a name=\"api_nan_property_deleter\"></a></p>\n<h3 id=\"property-deleter-declaration\">Property deleter declaration</h3>\n<p>JavaScript-accessible property deleters should be declared with the following signature to form a <b><code>Nan::PropertyDeleterCallback</code></b>:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>typedef&nbsp;void(*PropertyDeleterCallback)(v8::Local&lt;v8::String&gt;,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;PropertyCallbackInfo&lt;v8::Boolean&gt;&amp;);</span></span></div></pre><p>Example:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;PropertyDeleterName(v8::Local&lt;v8::String&gt;&nbsp;property,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;Nan::PropertyCallbackInfo&lt;v8::Boolean&gt;&amp;&nbsp;info);</span></span></div></pre><p>You do not need to declare a new <code>HandleScope</code> within a property deleter as one is implicitly created for you.</p>\n<p>A helper macro <code>NAN_PROPERTY_DELETER(methodname)</code> exists, compatible with NAN v1 method declarations.</p>\n<p>Also see the V8 Embedders Guide documentation on named property <a href=\"https://developers.google.com/v8/embed#interceptors\">Interceptors</a>.</p>\n<p><a name=\"api_nan_property_query\"></a></p>\n<h3 id=\"property-query-declaration\">Property query declaration</h3>\n<p>JavaScript-accessible property query methods should be declared with the following signature to form a <b><code>Nan::PropertyQueryCallback</code></b>:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>typedef&nbsp;void(*PropertyQueryCallback)(v8::Local&lt;v8::String&gt;,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;PropertyCallbackInfo&lt;v8::Integer&gt;&amp;);</span></span></div></pre><p>Example:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;PropertyQueryName(v8::Local&lt;v8::String&gt;&nbsp;property,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;Nan::PropertyCallbackInfo&lt;v8::Integer&gt;&amp;&nbsp;info);</span></span></div></pre><p>You do not need to declare a new <code>HandleScope</code> within a property query method as one is implicitly created for you.</p>\n<p>A helper macro <code>NAN_PROPERTY_QUERY(methodname)</code> exists, compatible with NAN v1 method declarations.</p>\n<p>Also see the V8 Embedders Guide documentation on named property <a href=\"https://developers.google.com/v8/embed#interceptors\">Interceptors</a>.</p>\n<p><a name=\"api_nan_index_getter\"></a></p>\n<h3 id=\"index-getter-declaration\">Index getter declaration</h3>\n<p>JavaScript-accessible index getter methods should be declared with the following signature to form a <b><code>Nan::IndexGetterCallback</code></b>:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>typedef&nbsp;void(*IndexGetterCallback)(uint32_t,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;PropertyCallbackInfo&lt;v8::Value&gt;&amp;);</span></span></div></pre><p>Example:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;IndexGetterName(uint32_t&nbsp;index,&nbsp;const&nbsp;PropertyCallbackInfo&lt;v8::Value&gt;&amp;&nbsp;info);</span></span></div></pre><p>You do not need to declare a new <code>HandleScope</code> within a index getter as one is implicitly created for you.</p>\n<p>A helper macro <code>NAN_INDEX_GETTER(methodname)</code> exists, compatible with NAN v1 method declarations.</p>\n<p>Also see the V8 Embedders Guide documentation on indexed property <a href=\"https://developers.google.com/v8/embed#interceptors\">Interceptors</a>.</p>\n<p><a name=\"api_nan_index_setter\"></a></p>\n<h3 id=\"index-setter-declaration\">Index setter declaration</h3>\n<p>JavaScript-accessible index setter methods should be declared with the following signature to form a <b><code>Nan::IndexSetterCallback</code></b>:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>typedef&nbsp;void(*IndexSetterCallback)(uint32_t,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;PropertyCallbackInfo&lt;v8::Value&gt;&amp;);</span></span></div></pre><p>Example:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;IndexSetterName(uint32_t&nbsp;index,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;value,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;PropertyCallbackInfo&lt;v8::Value&gt;&amp;&nbsp;info);</span></span></div></pre><p>You do not need to declare a new <code>HandleScope</code> within a index setter as one is implicitly created for you.</p>\n<p>A helper macro <code>NAN_INDEX_SETTER(methodname)</code> exists, compatible with NAN v1 method declarations.</p>\n<p>Also see the V8 Embedders Guide documentation on indexed property <a href=\"https://developers.google.com/v8/embed#interceptors\">Interceptors</a>.</p>\n<p><a name=\"api_nan_index_enumerator\"></a></p>\n<h3 id=\"index-enumerator-declaration\">Index enumerator declaration</h3>\n<p>JavaScript-accessible index enumerator methods should be declared with the following signature to form a <b><code>Nan::IndexEnumeratorCallback</code></b>:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>typedef&nbsp;void(*IndexEnumeratorCallback)(const&nbsp;PropertyCallbackInfo&lt;v8::Array&gt;&amp;);</span></span></div></pre><p>Example:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;IndexEnumeratorName(const&nbsp;PropertyCallbackInfo&lt;v8::Array&gt;&amp;&nbsp;info);</span></span></div></pre><p>You do not need to declare a new <code>HandleScope</code> within a index enumerator as one is implicitly created for you.</p>\n<p>A helper macro <code>NAN_INDEX_ENUMERATOR(methodname)</code> exists, compatible with NAN v1 method declarations.</p>\n<p>Also see the V8 Embedders Guide documentation on indexed property <a href=\"https://developers.google.com/v8/embed#interceptors\">Interceptors</a>.</p>\n<p><a name=\"api_nan_index_deleter\"></a></p>\n<h3 id=\"index-deleter-declaration\">Index deleter declaration</h3>\n<p>JavaScript-accessible index deleter methods should be declared with the following signature to form a <b><code>Nan::IndexDeleterCallback</code></b>:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>typedef&nbsp;void(*IndexDeleterCallback)(uint32_t,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;PropertyCallbackInfo&lt;v8::Boolean&gt;&amp;);</span></span></div></pre><p>Example:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;IndexDeleterName(uint32_t&nbsp;index,&nbsp;const&nbsp;PropertyCallbackInfo&lt;v8::Boolean&gt;&amp;&nbsp;info);</span></span></div></pre><p>You do not need to declare a new <code>HandleScope</code> within a index deleter as one is implicitly created for you.</p>\n<p>A helper macro <code>NAN_INDEX_DELETER(methodname)</code> exists, compatible with NAN v1 method declarations.</p>\n<p>Also see the V8 Embedders Guide documentation on indexed property <a href=\"https://developers.google.com/v8/embed#interceptors\">Interceptors</a>.</p>\n<p><a name=\"api_nan_index_query\"></a></p>\n<h3 id=\"index-query-declaration\">Index query declaration</h3>\n<p>JavaScript-accessible index query methods should be declared with the following signature to form a <b><code>Nan::IndexQueryCallback</code></b>:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>typedef&nbsp;void(*IndexQueryCallback)(uint32_t,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;PropertyCallbackInfo&lt;v8::Integer&gt;&amp;);</span></span></div></pre><p>Example:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;IndexQueryName(uint32_t&nbsp;index,&nbsp;const&nbsp;PropertyCallbackInfo&lt;v8::Integer&gt;&amp;&nbsp;info);</span></span></div></pre><p>You do not need to declare a new <code>HandleScope</code> within a index query method as one is implicitly created for you.</p>\n<p>A helper macro <code>NAN_INDEX_QUERY(methodname)</code> exists, compatible with NAN v1 method declarations.</p>\n<p>Also see the V8 Embedders Guide documentation on indexed property <a href=\"https://developers.google.com/v8/embed#interceptors\">Interceptors</a>.</p>\n<p><a name=\"api_nan_set_method\"></a></p>\n<h3 id=\"nan-setmethod-\">Nan::SetMethod()</h3>\n<p>Sets a method with a given name directly on a JavaScript object where the method has the <code>Nan::FunctionCallback</code> signature (see <a href=\"#api_nan_method\">Method declaration</a>).</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::SetMethod(v8::Local&lt;v8::Object&gt;&nbsp;recv,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;char&nbsp;*name,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nan::FunctionCallback&nbsp;callback)</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::SetMethod(v8::Local&lt;v8::Template&gt;&nbsp;templ,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;char&nbsp;*name,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nan::FunctionCallback&nbsp;callback)</span></span></div></pre><p><a name=\"api_nan_set_prototype_method\"></a></p>\n<h3 id=\"nan-setprototypemethod-\">Nan::SetPrototypeMethod()</h3>\n<p>Sets a method with a given name on a <code>FunctionTemplate</code>&#39;s prototype where the method has the <code>Nan::FunctionCallback</code> signature (see <a href=\"#api_nan_method\">Method declaration</a>).</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::SetPrototypeMethod(v8::Local&lt;v8::FunctionTemplate&gt;&nbsp;recv,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;char*&nbsp;name,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nan::FunctionCallback&nbsp;callback)</span></span></div></pre><p><a name=\"api_nan_set_accessor\"></a></p>\n<h3 id=\"nan-setaccessor-\">Nan::SetAccessor()</h3>\n<p>Sets getters and setters for a property with a given name on an <code>ObjectTemplate</code> or a plain <code>Object</code>. Accepts getters with the <code>Nan::GetterCallback</code> signature (see <a href=\"#api_nan_getter\">Getter declaration</a>) and setters with the <code>Nan::SetterCallback</code> signature (see <a href=\"#api_nan_setter\">Setter declaration</a>).</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;SetAccessor(v8::Local&lt;v8::ObjectTemplate&gt;&nbsp;tpl,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::String&gt;&nbsp;name,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nan::GetterCallback&nbsp;getter,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nan::SetterCallback&nbsp;setter&nbsp;=&nbsp;0,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;data&nbsp;=&nbsp;v8::Local&lt;v8::Value&gt;(),</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::AccessControl&nbsp;settings&nbsp;=&nbsp;v8::DEFAULT,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::PropertyAttribute&nbsp;attribute&nbsp;=&nbsp;v8::None,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;imp::Sig&nbsp;signature&nbsp;=&nbsp;imp::Sig());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>bool&nbsp;SetAccessor(v8::Local&lt;v8::Object&gt;&nbsp;obj,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::String&gt;&nbsp;name,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nan::GetterCallback&nbsp;getter,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nan::SetterCallback&nbsp;setter&nbsp;=&nbsp;0,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;data&nbsp;=&nbsp;v8::Local&lt;v8::Value&gt;(),</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::AccessControl&nbsp;settings&nbsp;=&nbsp;v8::DEFAULT,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::PropertyAttribute&nbsp;attribute&nbsp;=&nbsp;v8::None)</span></span></div></pre><p>See the V8 <a href=\"https://v8docs.nodesource.com/node-8.11/db/d5f/classv8_1_1_object_template.html#aca0ed196f8a9adb1f68b1aadb6c9cd77\"><code>ObjectTemplate#SetAccessor()</code></a> and <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#ae91b3b56b357f285288c89fbddc46d1b\"><code>Object#SetAccessor()</code></a> for further information about how to use <code>Nan::SetAccessor()</code>.</p>\n<p><a name=\"api_nan_set_named_property_handler\"></a></p>\n<h3 id=\"nan-setnamedpropertyhandler-\">Nan::SetNamedPropertyHandler()</h3>\n<p>Sets named property getters, setters, query, deleter and enumerator methods on an <code>ObjectTemplate</code>. Accepts:</p>\n<ul>\n<li>Property getters with the <code>Nan::PropertyGetterCallback</code> signature (see <a href=\"#api_nan_property_getter\">Property getter declaration</a>)</li>\n<li>Property setters with the <code>Nan::PropertySetterCallback</code> signature (see <a href=\"#api_nan_property_setter\">Property setter declaration</a>)</li>\n<li>Property query methods with the <code>Nan::PropertyQueryCallback</code> signature (see <a href=\"#api_nan_property_query\">Property query declaration</a>)</li>\n<li>Property deleters with the <code>Nan::PropertyDeleterCallback</code> signature (see <a href=\"#api_nan_property_deleter\">Property deleter declaration</a>)</li>\n<li>Property enumerators with the <code>Nan::PropertyEnumeratorCallback</code> signature (see <a href=\"#api_nan_property_enumerator\">Property enumerator declaration</a>)</li>\n</ul>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;SetNamedPropertyHandler(v8::Local&lt;v8::ObjectTemplate&gt;&nbsp;tpl,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nan::PropertyGetterCallback&nbsp;getter,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nan::PropertySetterCallback&nbsp;setter&nbsp;=&nbsp;0,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nan::PropertyQueryCallback&nbsp;query&nbsp;=&nbsp;0,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nan::PropertyDeleterCallback&nbsp;deleter&nbsp;=&nbsp;0,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nan::PropertyEnumeratorCallback&nbsp;enumerator&nbsp;=&nbsp;0,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;data&nbsp;=&nbsp;v8::Local&lt;v8::Value&gt;())</span></span></div></pre><p>See the V8 <a href=\"https://v8docs.nodesource.com/node-8.11/db/d5f/classv8_1_1_object_template.html#a33b3ebd7de641f6cc6414b7de01fc1c7\"><code>ObjectTemplate#SetNamedPropertyHandler()</code></a> for further information about how to use <code>Nan::SetNamedPropertyHandler()</code>.</p>\n<p><a name=\"api_nan_set_indexed_property_handler\"></a></p>\n<h3 id=\"nan-setindexedpropertyhandler-\">Nan::SetIndexedPropertyHandler()</h3>\n<p>Sets indexed property getters, setters, query, deleter and enumerator methods on an <code>ObjectTemplate</code>. Accepts:</p>\n<ul>\n<li>Indexed property getters with the <code>Nan::IndexGetterCallback</code> signature (see <a href=\"#api_nan_index_getter\">Index getter declaration</a>)</li>\n<li>Indexed property setters with the <code>Nan::IndexSetterCallback</code> signature (see <a href=\"#api_nan_index_setter\">Index setter declaration</a>)</li>\n<li>Indexed property query methods with the <code>Nan::IndexQueryCallback</code> signature (see <a href=\"#api_nan_index_query\">Index query declaration</a>)</li>\n<li>Indexed property deleters with the <code>Nan::IndexDeleterCallback</code> signature (see <a href=\"#api_nan_index_deleter\">Index deleter declaration</a>)</li>\n<li>Indexed property enumerators with the <code>Nan::IndexEnumeratorCallback</code> signature (see <a href=\"#api_nan_index_enumerator\">Index enumerator declaration</a>)</li>\n</ul>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;SetIndexedPropertyHandler(v8::Local&lt;v8::ObjectTemplate&gt;&nbsp;tpl,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nan::IndexGetterCallback&nbsp;getter,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nan::IndexSetterCallback&nbsp;setter&nbsp;=&nbsp;0,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nan::IndexQueryCallback&nbsp;query&nbsp;=&nbsp;0,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nan::IndexDeleterCallback&nbsp;deleter&nbsp;=&nbsp;0,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nan::IndexEnumeratorCallback&nbsp;enumerator&nbsp;=&nbsp;0,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;data&nbsp;=&nbsp;v8::Local&lt;v8::Value&gt;())</span></span></div></pre><p>See the V8 <a href=\"https://v8docs.nodesource.com/node-8.11/db/d5f/classv8_1_1_object_template.html#ac89f06d634add0e890452033f7d17ff1\"><code>ObjectTemplate#SetIndexedPropertyHandler()</code></a> for further information about how to use <code>Nan::SetIndexedPropertyHandler()</code>.</p>\n<p><a name=\"api_nan_set_template\"></a></p>\n<h3 id=\"nan-settemplate-\">Nan::SetTemplate()</h3>\n<p>Adds properties on an <code>Object</code>&#39;s or <code>Function</code>&#39;s template.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::SetTemplate(v8::Local&lt;v8::Template&gt;&nbsp;templ,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;char&nbsp;*name,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Data&gt;&nbsp;value);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::SetTemplate(v8::Local&lt;v8::Template&gt;&nbsp;templ,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::String&gt;&nbsp;name,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Data&gt;&nbsp;value,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::PropertyAttribute&nbsp;attributes)</span></span></div></pre><p>Calls the <code>Template</code>&#39;s <a href=\"https://v8docs.nodesource.com/node-8.11/db/df7/classv8_1_1_template.html#ae3fbaff137557aa6a0233bc7e52214ac\"><code>Set()</code></a>.</p>\n<p><a name=\"api_nan_set_prototype_template\"></a></p>\n<h3 id=\"nan-setprototypetemplate-\">Nan::SetPrototypeTemplate()</h3>\n<p>Adds properties on an <code>Object</code>&#39;s or <code>Function</code>&#39;s prototype template.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::SetPrototypeTemplate(v8::Local&lt;v8::FunctionTemplate&gt;&nbsp;templ,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;char&nbsp;*name,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Data&gt;&nbsp;value);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::SetPrototypeTemplate(v8::Local&lt;v8::FunctionTemplate&gt;&nbsp;templ,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::String&gt;&nbsp;name,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Data&gt;&nbsp;value,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::PropertyAttribute&nbsp;attributes)</span></span></div></pre><p>Calls the <code>FunctionTemplate</code>&#39;s <em>PrototypeTemplate&#39;s</em> <a href=\"https://v8docs.nodesource.com/node-8.11/db/df7/classv8_1_1_template.html#a2db6a56597bf23c59659c0659e564ddf\"><code>Set()</code></a>.</p>\n<p><a name=\"api_nan_set_instance_template\"></a></p>\n<h3 id=\"nan-setinstancetemplate-\">Nan::SetInstanceTemplate()</h3>\n<p>Use to add instance properties on <code>FunctionTemplate</code>&#39;s.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::SetInstanceTemplate(v8::Local&lt;v8::FunctionTemplate&gt;&nbsp;templ,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;char&nbsp;*name,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Data&gt;&nbsp;value);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::SetInstanceTemplate(v8::Local&lt;v8::FunctionTemplate&gt;&nbsp;templ,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::String&gt;&nbsp;name,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Data&gt;&nbsp;value,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::PropertyAttribute&nbsp;attributes)</span></span></div></pre><p>Calls the <code>FunctionTemplate</code>&#39;s <em>InstanceTemplate&#39;s</em> <a href=\"https://v8docs.nodesource.com/node-8.11/db/df7/classv8_1_1_template.html#a2db6a56597bf23c59659c0659e564ddf\"><code>Set()</code></a>.</p>\n<p><a name=\"api_nan_set_call_handler\"></a></p>\n<h3 id=\"nan-setcallhandler-\">Nan::SetCallHandler()</h3>\n<p>Set the call-handler callback for a <code>v8::FunctionTemplate</code>.\nThis callback is called whenever the function created from this FunctionTemplate is called.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::SetCallHandler(v8::Local&lt;v8::FunctionTemplate&gt;&nbsp;templ,&nbsp;Nan::FunctionCallback&nbsp;callback,&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;data&nbsp;=&nbsp;v8::Local&lt;v8::Value&gt;())</span></span></div></pre><p>Calls the <code>FunctionTemplate</code>&#39;s <a href=\"https://v8docs.nodesource.com/node-8.11/d8/d83/classv8_1_1_function_template.html#ab7574b298db3c27fbc2ed465c08ea2f8\"><code>SetCallHandler()</code></a>.</p>\n<p><a name=\"api_nan_set_call_as_function_handler\"></a></p>\n<h3 id=\"nan-setcallasfunctionhandler-\">Nan::SetCallAsFunctionHandler()</h3>\n<p>Sets the callback to be used when calling instances created from the <code>v8::ObjectTemplate</code> as a function.\nIf no callback is set, instances behave like normal JavaScript objects that cannot be called as a function.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::SetCallAsFunctionHandler(v8::Local&lt;v8::ObjectTemplate&gt;&nbsp;templ,&nbsp;Nan::FunctionCallback&nbsp;callback,&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;data&nbsp;=&nbsp;v8::Local&lt;v8::Value&gt;())</span></span></div></pre><p>Calls the <code>ObjectTemplate</code>&#39;s <a href=\"https://v8docs.nodesource.com/node-8.11/db/d5f/classv8_1_1_object_template.html#a5e9612fc80bf6db8f2da199b9b0bd04e\"><code>SetCallAsFunctionHandler()</code></a>.</p>\n"
      ],
      "contentsRaw": "## JavaScript-accessible methods\n\nA _template_ is a blueprint for JavaScript functions and objects in a context. You can use a template to wrap C++ functions and data structures within JavaScript objects so that they can be manipulated from JavaScript. See the V8 Embedders Guide section on [Templates](https://github.com/v8/v8/wiki/Embedder%27s-Guide#templates) for further information.\n\nIn order to expose functionality to JavaScript via a template, you must provide it to V8 in a form that it understands. Across the versions of V8 supported by NAN, JavaScript-accessible method signatures vary widely, NAN fully abstracts method declaration and provides you with an interface that is similar to the most recent V8 API but is backward-compatible with older versions that still use the now-deceased `v8::Argument` type.\n\n* **Method argument types**\n - <a href=\"#api_nan_function_callback_info\"><b><code>Nan::FunctionCallbackInfo</code></b></a>\n - <a href=\"#api_nan_property_callback_info\"><b><code>Nan::PropertyCallbackInfo</code></b></a>\n - <a href=\"#api_nan_return_value\"><b><code>Nan::ReturnValue</code></b></a>\n* **Method declarations**\n - <a href=\"#api_nan_method\"><b>Method declaration</b></a>\n - <a href=\"#api_nan_getter\"><b>Getter declaration</b></a>\n - <a href=\"#api_nan_setter\"><b>Setter declaration</b></a>\n - <a href=\"#api_nan_property_getter\"><b>Property getter declaration</b></a>\n - <a href=\"#api_nan_property_setter\"><b>Property setter declaration</b></a>\n - <a href=\"#api_nan_property_enumerator\"><b>Property enumerator declaration</b></a>\n - <a href=\"#api_nan_property_deleter\"><b>Property deleter declaration</b></a>\n - <a href=\"#api_nan_property_query\"><b>Property query declaration</b></a>\n - <a href=\"#api_nan_index_getter\"><b>Index getter declaration</b></a>\n - <a href=\"#api_nan_index_setter\"><b>Index setter declaration</b></a>\n - <a href=\"#api_nan_index_enumerator\"><b>Index enumerator declaration</b></a>\n - <a href=\"#api_nan_index_deleter\"><b>Index deleter declaration</b></a>\n - <a href=\"#api_nan_index_query\"><b>Index query declaration</b></a>\n* Method and template helpers\n - <a href=\"#api_nan_set_method\"><b><code>Nan::SetMethod()</code></b></a>\n - <a href=\"#api_nan_set_prototype_method\"><b><code>Nan::SetPrototypeMethod()</code></b></a>\n - <a href=\"#api_nan_set_accessor\"><b><code>Nan::SetAccessor()</code></b></a>\n - <a href=\"#api_nan_set_named_property_handler\"><b><code>Nan::SetNamedPropertyHandler()</code></b></a>\n - <a href=\"#api_nan_set_indexed_property_handler\"><b><code>Nan::SetIndexedPropertyHandler()</code></b></a>\n - <a href=\"#api_nan_set_template\"><b><code>Nan::SetTemplate()</code></b></a>\n - <a href=\"#api_nan_set_prototype_template\"><b><code>Nan::SetPrototypeTemplate()</code></b></a>\n - <a href=\"#api_nan_set_instance_template\"><b><code>Nan::SetInstanceTemplate()</code></b></a>\n - <a href=\"#api_nan_set_call_handler\"><b><code>Nan::SetCallHandler()</code></b></a>\n - <a href=\"#api_nan_set_call_as_function_handler\"><b><code>Nan::SetCallAsFunctionHandler()</code></b></a>\n\n<a name=\"api_nan_function_callback_info\"></a>\n### Nan::FunctionCallbackInfo\n\n`Nan::FunctionCallbackInfo` should be used in place of [`v8::FunctionCallbackInfo`](https://v8docs.nodesource.com/node-8.11/dd/d0d/classv8_1_1_function_callback_info.html), even with older versions of Node where `v8::FunctionCallbackInfo` does not exist.\n\nDefinition:\n\n```c++\ntemplate<typename T> class FunctionCallbackInfo {\n public:\n  ReturnValue<T> GetReturnValue() const;\n  v8::Local<v8::Function> Callee(); // NOTE: Not available in NodeJS >= 10.0.0\n  v8::Local<v8::Value> Data();\n  v8::Local<v8::Object> Holder();\n  bool IsConstructCall();\n  int Length() const;\n  v8::Local<v8::Value> operator[](int i) const;\n  v8::Local<v8::Object> This() const;\n  v8::Isolate *GetIsolate() const;\n};\n```\n\nSee the [`v8::FunctionCallbackInfo`](https://v8docs.nodesource.com/node-8.11/dd/d0d/classv8_1_1_function_callback_info.html) documentation for usage details on these. See [`Nan::ReturnValue`](#api_nan_return_value) for further information on how to set a return value from methods.\n\n**Note:** `FunctionCallbackInfo::Callee` is removed in Node.js after `10.0.0` because it is was deprecated in V8. Consider using `info.Data()` to pass any information you need.\n\n<a name=\"api_nan_property_callback_info\"></a>\n### Nan::PropertyCallbackInfo\n\n`Nan::PropertyCallbackInfo` should be used in place of [`v8::PropertyCallbackInfo`](https://v8docs.nodesource.com/node-8.11/d7/dc5/classv8_1_1_property_callback_info.html), even with older versions of Node where `v8::PropertyCallbackInfo` does not exist.\n\nDefinition:\n\n```c++\ntemplate<typename T> class PropertyCallbackInfo : public PropertyCallbackInfoBase<T> {\n public:\n  ReturnValue<T> GetReturnValue() const;\n  v8::Isolate* GetIsolate() const;\n  v8::Local<v8::Value> Data() const;\n  v8::Local<v8::Object> This() const;\n  v8::Local<v8::Object> Holder() const;\n};\n```\n\nSee the [`v8::PropertyCallbackInfo`](https://v8docs.nodesource.com/node-8.11/d7/dc5/classv8_1_1_property_callback_info.html) documentation for usage details on these. See [`Nan::ReturnValue`](#api_nan_return_value) for further information on how to set a return value from property accessor methods.\n\n<a name=\"api_nan_return_value\"></a>\n### Nan::ReturnValue\n\n`Nan::ReturnValue` is used in place of [`v8::ReturnValue`](https://v8docs.nodesource.com/node-8.11/da/da7/classv8_1_1_return_value.html) on both [`Nan::FunctionCallbackInfo`](#api_nan_function_callback_info) and [`Nan::PropertyCallbackInfo`](#api_nan_property_callback_info) as the return type of `GetReturnValue()`.\n\nExample usage:\n\n```c++\nvoid EmptyArray(const Nan::FunctionCallbackInfo<v8::Value>& info) {\n  info.GetReturnValue().Set(Nan::New<v8::Array>());\n}\n```\n\nDefinition:\n\n```c++\ntemplate<typename T> class ReturnValue {\n public:\n  // Handle setters\n  template <typename S> void Set(const v8::Local<S> &handle);\n  template <typename S> void Set(const Nan::Global<S> &handle);\n\n  // Fast primitive setters\n  void Set(bool value);\n  void Set(double i);\n  void Set(int32_t i);\n  void Set(uint32_t i);\n\n  // Fast JS primitive setters\n  void SetNull();\n  void SetUndefined();\n  void SetEmptyString();\n\n  // Convenience getter for isolate\n  v8::Isolate *GetIsolate() const;\n};\n```\n\nSee the documentation on [`v8::ReturnValue`](https://v8docs.nodesource.com/node-8.11/da/da7/classv8_1_1_return_value.html) for further information on this.\n\n<a name=\"api_nan_method\"></a>\n### Method declaration\n\nJavaScript-accessible methods should be declared with the following signature to form a `Nan::FunctionCallback`:\n\n```c++\ntypedef void(*FunctionCallback)(const FunctionCallbackInfo<v8::Value>&);\n```\n\nExample:\n\n```c++\nvoid MethodName(const Nan::FunctionCallbackInfo<v8::Value>& info) {\n  ...\n}\n```\n\nYou do not need to declare a new `HandleScope` within a method as one is implicitly created for you.\n\n**Example usage**\n\n```c++\n// .h:\nclass Foo : public Nan::ObjectWrap {\n  ...\n\n  static void Bar(const Nan::FunctionCallbackInfo<v8::Value>& info);\n  static void Baz(const Nan::FunctionCallbackInfo<v8::Value>& info);\n}\n\n\n// .cc:\nvoid Foo::Bar(const Nan::FunctionCallbackInfo<v8::Value>& info) {\n  ...\n}\n\nvoid Foo::Baz(const Nan::FunctionCallbackInfo<v8::Value>& info) {\n  ...\n}\n```\n\nA helper macro `NAN_METHOD(methodname)` exists, compatible with NAN v1 method declarations.\n\n**Example usage with `NAN_METHOD(methodname)`**\n\n```c++\n// .h:\nclass Foo : public Nan::ObjectWrap {\n  ...\n\n  static NAN_METHOD(Bar);\n  static NAN_METHOD(Baz);\n}\n\n\n// .cc:\nNAN_METHOD(Foo::Bar) {\n  ...\n}\n\nNAN_METHOD(Foo::Baz) {\n  ...\n}\n```\n\nUse [`Nan::SetPrototypeMethod`](#api_nan_set_prototype_method) to attach a method to a JavaScript function prototype or [`Nan::SetMethod`](#api_nan_set_method) to attach a method directly on a JavaScript object.\n\n<a name=\"api_nan_getter\"></a>\n### Getter declaration\n\nJavaScript-accessible getters should be declared with the following signature to form a `Nan::GetterCallback`:\n\n```c++\ntypedef void(*GetterCallback)(v8::Local<v8::String>,\n                              const PropertyCallbackInfo<v8::Value>&);\n```\n\nExample:\n\n```c++\nvoid GetterName(v8::Local<v8::String> property,\n                const Nan::PropertyCallbackInfo<v8::Value>& info) {\n  ...\n}\n```\n\nYou do not need to declare a new `HandleScope` within a getter as one is implicitly created for you.\n\nA helper macro `NAN_GETTER(methodname)` exists, compatible with NAN v1 method declarations.\n\nAlso see the V8 Embedders Guide documentation on [Accessors](https://developers.google.com/v8/embed#accesssors).\n\n<a name=\"api_nan_setter\"></a>\n### Setter declaration\n\nJavaScript-accessible setters should be declared with the following signature to form a <b><code>Nan::SetterCallback</code></b>:\n\n```c++\ntypedef void(*SetterCallback)(v8::Local<v8::String>,\n                              v8::Local<v8::Value>,\n                              const PropertyCallbackInfo<void>&);\n```\n\nExample:\n\n```c++\nvoid SetterName(v8::Local<v8::String> property,\n                v8::Local<v8::Value> value,\n                const Nan::PropertyCallbackInfo<void>& info) {\n  ...\n}\n```\n\nYou do not need to declare a new `HandleScope` within a setter as one is implicitly created for you.\n\nA helper macro `NAN_SETTER(methodname)` exists, compatible with NAN v1 method declarations.\n\nAlso see the V8 Embedders Guide documentation on [Accessors](https://developers.google.com/v8/embed#accesssors).\n\n<a name=\"api_nan_property_getter\"></a>\n### Property getter declaration\n\nJavaScript-accessible property getters should be declared with the following signature to form a <b><code>Nan::PropertyGetterCallback</code></b>:\n\n```c++\ntypedef void(*PropertyGetterCallback)(v8::Local<v8::String>,\n                                      const PropertyCallbackInfo<v8::Value>&);\n```\n\nExample:\n\n```c++\nvoid PropertyGetterName(v8::Local<v8::String> property,\n                        const Nan::PropertyCallbackInfo<v8::Value>& info) {\n  ...\n}\n```\n\nYou do not need to declare a new `HandleScope` within a property getter as one is implicitly created for you.\n\nA helper macro `NAN_PROPERTY_GETTER(methodname)` exists, compatible with NAN v1 method declarations.\n\nAlso see the V8 Embedders Guide documentation on named property [Interceptors](https://developers.google.com/v8/embed#interceptors).\n\n<a name=\"api_nan_property_setter\"></a>\n### Property setter declaration\n\nJavaScript-accessible property setters should be declared with the following signature to form a <b><code>Nan::PropertySetterCallback</code></b>:\n\n```c++\ntypedef void(*PropertySetterCallback)(v8::Local<v8::String>,\n                                      v8::Local<v8::Value>,\n                                      const PropertyCallbackInfo<v8::Value>&);\n```\n\nExample:\n\n```c++\nvoid PropertySetterName(v8::Local<v8::String> property,\n                        v8::Local<v8::Value> value,\n                        const Nan::PropertyCallbackInfo<v8::Value>& info);\n```\n\nYou do not need to declare a new `HandleScope` within a property setter as one is implicitly created for you.\n\nA helper macro `NAN_PROPERTY_SETTER(methodname)` exists, compatible with NAN v1 method declarations.\n\nAlso see the V8 Embedders Guide documentation on named property [Interceptors](https://developers.google.com/v8/embed#interceptors).\n\n<a name=\"api_nan_property_enumerator\"></a>\n### Property enumerator declaration\n\nJavaScript-accessible property enumerators should be declared with the following signature to form a <b><code>Nan::PropertyEnumeratorCallback</code></b>:\n\n```c++\ntypedef void(*PropertyEnumeratorCallback)(const PropertyCallbackInfo<v8::Array>&);\n```\n\nExample:\n\n```c++\nvoid PropertyEnumeratorName(const Nan::PropertyCallbackInfo<v8::Array>& info);\n```\n\nYou do not need to declare a new `HandleScope` within a property enumerator as one is implicitly created for you.\n\nA helper macro `NAN_PROPERTY_ENUMERATOR(methodname)` exists, compatible with NAN v1 method declarations.\n\nAlso see the V8 Embedders Guide documentation on named property [Interceptors](https://developers.google.com/v8/embed#interceptors).\n\n<a name=\"api_nan_property_deleter\"></a>\n### Property deleter declaration\n\nJavaScript-accessible property deleters should be declared with the following signature to form a <b><code>Nan::PropertyDeleterCallback</code></b>:\n\n```c++\ntypedef void(*PropertyDeleterCallback)(v8::Local<v8::String>,\n                                       const PropertyCallbackInfo<v8::Boolean>&);\n```\n\nExample:\n\n```c++\nvoid PropertyDeleterName(v8::Local<v8::String> property,\n                         const Nan::PropertyCallbackInfo<v8::Boolean>& info);\n```\n\nYou do not need to declare a new `HandleScope` within a property deleter as one is implicitly created for you.\n\nA helper macro `NAN_PROPERTY_DELETER(methodname)` exists, compatible with NAN v1 method declarations.\n\nAlso see the V8 Embedders Guide documentation on named property [Interceptors](https://developers.google.com/v8/embed#interceptors).\n\n<a name=\"api_nan_property_query\"></a>\n### Property query declaration\n\nJavaScript-accessible property query methods should be declared with the following signature to form a <b><code>Nan::PropertyQueryCallback</code></b>:\n\n```c++\ntypedef void(*PropertyQueryCallback)(v8::Local<v8::String>,\n                                     const PropertyCallbackInfo<v8::Integer>&);\n```\n\nExample:\n\n```c++\nvoid PropertyQueryName(v8::Local<v8::String> property,\n                       const Nan::PropertyCallbackInfo<v8::Integer>& info);\n```\n\nYou do not need to declare a new `HandleScope` within a property query method as one is implicitly created for you.\n\nA helper macro `NAN_PROPERTY_QUERY(methodname)` exists, compatible with NAN v1 method declarations.\n\nAlso see the V8 Embedders Guide documentation on named property [Interceptors](https://developers.google.com/v8/embed#interceptors).\n\n<a name=\"api_nan_index_getter\"></a>\n### Index getter declaration\n\nJavaScript-accessible index getter methods should be declared with the following signature to form a <b><code>Nan::IndexGetterCallback</code></b>:\n\n```c++\ntypedef void(*IndexGetterCallback)(uint32_t,\n                                   const PropertyCallbackInfo<v8::Value>&);\n```\n\nExample:\n\n```c++\nvoid IndexGetterName(uint32_t index, const PropertyCallbackInfo<v8::Value>& info);\n```\n\nYou do not need to declare a new `HandleScope` within a index getter as one is implicitly created for you.\n\nA helper macro `NAN_INDEX_GETTER(methodname)` exists, compatible with NAN v1 method declarations.\n\nAlso see the V8 Embedders Guide documentation on indexed property [Interceptors](https://developers.google.com/v8/embed#interceptors).\n\n<a name=\"api_nan_index_setter\"></a>\n### Index setter declaration\n\nJavaScript-accessible index setter methods should be declared with the following signature to form a <b><code>Nan::IndexSetterCallback</code></b>:\n\n```c++\ntypedef void(*IndexSetterCallback)(uint32_t,\n                                   v8::Local<v8::Value>,\n                                   const PropertyCallbackInfo<v8::Value>&);\n```\n\nExample:\n\n```c++\nvoid IndexSetterName(uint32_t index,\n                     v8::Local<v8::Value> value,\n                     const PropertyCallbackInfo<v8::Value>& info);\n```\n\nYou do not need to declare a new `HandleScope` within a index setter as one is implicitly created for you.\n\nA helper macro `NAN_INDEX_SETTER(methodname)` exists, compatible with NAN v1 method declarations.\n\nAlso see the V8 Embedders Guide documentation on indexed property [Interceptors](https://developers.google.com/v8/embed#interceptors).\n\n<a name=\"api_nan_index_enumerator\"></a>\n### Index enumerator declaration\n\nJavaScript-accessible index enumerator methods should be declared with the following signature to form a <b><code>Nan::IndexEnumeratorCallback</code></b>:\n\n```c++\ntypedef void(*IndexEnumeratorCallback)(const PropertyCallbackInfo<v8::Array>&);\n```\n\nExample:\n\n```c++\nvoid IndexEnumeratorName(const PropertyCallbackInfo<v8::Array>& info);\n```\n\nYou do not need to declare a new `HandleScope` within a index enumerator as one is implicitly created for you.\n\nA helper macro `NAN_INDEX_ENUMERATOR(methodname)` exists, compatible with NAN v1 method declarations.\n\nAlso see the V8 Embedders Guide documentation on indexed property [Interceptors](https://developers.google.com/v8/embed#interceptors).\n\n<a name=\"api_nan_index_deleter\"></a>\n### Index deleter declaration\n\nJavaScript-accessible index deleter methods should be declared with the following signature to form a <b><code>Nan::IndexDeleterCallback</code></b>:\n\n```c++\ntypedef void(*IndexDeleterCallback)(uint32_t,\n                                    const PropertyCallbackInfo<v8::Boolean>&);\n```\n\nExample:\n\n```c++\nvoid IndexDeleterName(uint32_t index, const PropertyCallbackInfo<v8::Boolean>& info);\n```\n\nYou do not need to declare a new `HandleScope` within a index deleter as one is implicitly created for you.\n\nA helper macro `NAN_INDEX_DELETER(methodname)` exists, compatible with NAN v1 method declarations.\n\nAlso see the V8 Embedders Guide documentation on indexed property [Interceptors](https://developers.google.com/v8/embed#interceptors).\n\n<a name=\"api_nan_index_query\"></a>\n### Index query declaration\n\nJavaScript-accessible index query methods should be declared with the following signature to form a <b><code>Nan::IndexQueryCallback</code></b>:\n\n```c++\ntypedef void(*IndexQueryCallback)(uint32_t,\n                                  const PropertyCallbackInfo<v8::Integer>&);\n```\n\nExample:\n\n```c++\nvoid IndexQueryName(uint32_t index, const PropertyCallbackInfo<v8::Integer>& info);\n```\n\nYou do not need to declare a new `HandleScope` within a index query method as one is implicitly created for you.\n\nA helper macro `NAN_INDEX_QUERY(methodname)` exists, compatible with NAN v1 method declarations.\n\nAlso see the V8 Embedders Guide documentation on indexed property [Interceptors](https://developers.google.com/v8/embed#interceptors).\n\n<a name=\"api_nan_set_method\"></a>\n### Nan::SetMethod()\n\nSets a method with a given name directly on a JavaScript object where the method has the `Nan::FunctionCallback` signature (see <a href=\"#api_nan_method\">Method declaration</a>).\n\nSignature:\n\n```c++\nvoid Nan::SetMethod(v8::Local<v8::Object> recv,\n                    const char *name,\n                    Nan::FunctionCallback callback)\nvoid Nan::SetMethod(v8::Local<v8::Template> templ,\n                    const char *name,\n                    Nan::FunctionCallback callback)\n```\n\n<a name=\"api_nan_set_prototype_method\"></a>\n### Nan::SetPrototypeMethod()\n\nSets a method with a given name on a `FunctionTemplate`'s prototype where the method has the `Nan::FunctionCallback` signature (see <a href=\"#api_nan_method\">Method declaration</a>).\n\nSignature:\n\n```c++\nvoid Nan::SetPrototypeMethod(v8::Local<v8::FunctionTemplate> recv,\n                             const char* name,\n                             Nan::FunctionCallback callback)\n```\n\n<a name=\"api_nan_set_accessor\"></a>\n### Nan::SetAccessor()\n\nSets getters and setters for a property with a given name on an `ObjectTemplate` or a plain `Object`. Accepts getters with the `Nan::GetterCallback` signature (see <a href=\"#api_nan_getter\">Getter declaration</a>) and setters with the `Nan::SetterCallback` signature (see <a href=\"#api_nan_setter\">Setter declaration</a>).\n\nSignature:\n\n```c++\nvoid SetAccessor(v8::Local<v8::ObjectTemplate> tpl,\n                 v8::Local<v8::String> name,\n                 Nan::GetterCallback getter,\n                 Nan::SetterCallback setter = 0,\n                 v8::Local<v8::Value> data = v8::Local<v8::Value>(),\n                 v8::AccessControl settings = v8::DEFAULT,\n                 v8::PropertyAttribute attribute = v8::None,\n                 imp::Sig signature = imp::Sig());\nbool SetAccessor(v8::Local<v8::Object> obj,\n                 v8::Local<v8::String> name,\n                 Nan::GetterCallback getter,\n                 Nan::SetterCallback setter = 0,\n                 v8::Local<v8::Value> data = v8::Local<v8::Value>(),\n                 v8::AccessControl settings = v8::DEFAULT,\n                 v8::PropertyAttribute attribute = v8::None)\n```\n\nSee the V8 [`ObjectTemplate#SetAccessor()`](https://v8docs.nodesource.com/node-8.11/db/d5f/classv8_1_1_object_template.html#aca0ed196f8a9adb1f68b1aadb6c9cd77) and [`Object#SetAccessor()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#ae91b3b56b357f285288c89fbddc46d1b) for further information about how to use `Nan::SetAccessor()`.\n\n<a name=\"api_nan_set_named_property_handler\"></a>\n### Nan::SetNamedPropertyHandler()\n\nSets named property getters, setters, query, deleter and enumerator methods on an `ObjectTemplate`. Accepts:\n\n* Property getters with the `Nan::PropertyGetterCallback` signature (see <a href=\"#api_nan_property_getter\">Property getter declaration</a>)\n* Property setters with the `Nan::PropertySetterCallback` signature (see <a href=\"#api_nan_property_setter\">Property setter declaration</a>)\n* Property query methods with the `Nan::PropertyQueryCallback` signature (see <a href=\"#api_nan_property_query\">Property query declaration</a>)\n* Property deleters with the `Nan::PropertyDeleterCallback` signature (see <a href=\"#api_nan_property_deleter\">Property deleter declaration</a>)\n* Property enumerators with the `Nan::PropertyEnumeratorCallback` signature (see <a href=\"#api_nan_property_enumerator\">Property enumerator declaration</a>)\n\nSignature:\n\n```c++\nvoid SetNamedPropertyHandler(v8::Local<v8::ObjectTemplate> tpl,\n                             Nan::PropertyGetterCallback getter,\n                             Nan::PropertySetterCallback setter = 0,\n                             Nan::PropertyQueryCallback query = 0,\n                             Nan::PropertyDeleterCallback deleter = 0,\n                             Nan::PropertyEnumeratorCallback enumerator = 0,\n                             v8::Local<v8::Value> data = v8::Local<v8::Value>())\n```\n\nSee the V8 [`ObjectTemplate#SetNamedPropertyHandler()`](https://v8docs.nodesource.com/node-8.11/db/d5f/classv8_1_1_object_template.html#a33b3ebd7de641f6cc6414b7de01fc1c7) for further information about how to use `Nan::SetNamedPropertyHandler()`.\n\n<a name=\"api_nan_set_indexed_property_handler\"></a>\n### Nan::SetIndexedPropertyHandler()\n\nSets indexed property getters, setters, query, deleter and enumerator methods on an `ObjectTemplate`. Accepts:\n\n* Indexed property getters with the `Nan::IndexGetterCallback` signature (see <a href=\"#api_nan_index_getter\">Index getter declaration</a>)\n* Indexed property setters with the `Nan::IndexSetterCallback` signature (see <a href=\"#api_nan_index_setter\">Index setter declaration</a>)\n* Indexed property query methods with the `Nan::IndexQueryCallback` signature (see <a href=\"#api_nan_index_query\">Index query declaration</a>)\n* Indexed property deleters with the `Nan::IndexDeleterCallback` signature (see <a href=\"#api_nan_index_deleter\">Index deleter declaration</a>)\n* Indexed property enumerators with the `Nan::IndexEnumeratorCallback` signature (see <a href=\"#api_nan_index_enumerator\">Index enumerator declaration</a>)\n\nSignature:\n\n```c++\nvoid SetIndexedPropertyHandler(v8::Local<v8::ObjectTemplate> tpl,\n                               Nan::IndexGetterCallback getter,\n                               Nan::IndexSetterCallback setter = 0,\n                               Nan::IndexQueryCallback query = 0,\n                               Nan::IndexDeleterCallback deleter = 0,\n                               Nan::IndexEnumeratorCallback enumerator = 0,\n                               v8::Local<v8::Value> data = v8::Local<v8::Value>())\n```\n\nSee the V8 [`ObjectTemplate#SetIndexedPropertyHandler()`](https://v8docs.nodesource.com/node-8.11/db/d5f/classv8_1_1_object_template.html#ac89f06d634add0e890452033f7d17ff1) for further information about how to use `Nan::SetIndexedPropertyHandler()`.\n\n<a name=\"api_nan_set_template\"></a>\n### Nan::SetTemplate()\n\nAdds properties on an `Object`'s or `Function`'s template.\n\nSignature:\n\n```c++\nvoid Nan::SetTemplate(v8::Local<v8::Template> templ,\n                      const char *name,\n                      v8::Local<v8::Data> value);\nvoid Nan::SetTemplate(v8::Local<v8::Template> templ,\n                      v8::Local<v8::String> name,\n                      v8::Local<v8::Data> value,\n                      v8::PropertyAttribute attributes)\n```\n\nCalls the `Template`'s [`Set()`](https://v8docs.nodesource.com/node-8.11/db/df7/classv8_1_1_template.html#ae3fbaff137557aa6a0233bc7e52214ac).\n\n<a name=\"api_nan_set_prototype_template\"></a>\n### Nan::SetPrototypeTemplate()\n\nAdds properties on an `Object`'s or `Function`'s prototype template.\n\nSignature:\n\n```c++\nvoid Nan::SetPrototypeTemplate(v8::Local<v8::FunctionTemplate> templ,\n                               const char *name,\n                               v8::Local<v8::Data> value);\nvoid Nan::SetPrototypeTemplate(v8::Local<v8::FunctionTemplate> templ,\n                               v8::Local<v8::String> name,\n                               v8::Local<v8::Data> value,\n                               v8::PropertyAttribute attributes)\n```\n\nCalls the `FunctionTemplate`'s _PrototypeTemplate's_ [`Set()`](https://v8docs.nodesource.com/node-8.11/db/df7/classv8_1_1_template.html#a2db6a56597bf23c59659c0659e564ddf).\n\n<a name=\"api_nan_set_instance_template\"></a>\n### Nan::SetInstanceTemplate()\n\nUse to add instance properties on `FunctionTemplate`'s.\n\nSignature:\n\n```c++\nvoid Nan::SetInstanceTemplate(v8::Local<v8::FunctionTemplate> templ,\n                              const char *name,\n                              v8::Local<v8::Data> value);\nvoid Nan::SetInstanceTemplate(v8::Local<v8::FunctionTemplate> templ,\n                              v8::Local<v8::String> name,\n                              v8::Local<v8::Data> value,\n                              v8::PropertyAttribute attributes)\n```\n\nCalls the `FunctionTemplate`'s _InstanceTemplate's_ [`Set()`](https://v8docs.nodesource.com/node-8.11/db/df7/classv8_1_1_template.html#a2db6a56597bf23c59659c0659e564ddf).\n\n<a name=\"api_nan_set_call_handler\"></a>\n### Nan::SetCallHandler()\n\nSet the call-handler callback for a `v8::FunctionTemplate`.\nThis callback is called whenever the function created from this FunctionTemplate is called.\n\nSignature:\n\n```c++\nvoid Nan::SetCallHandler(v8::Local<v8::FunctionTemplate> templ, Nan::FunctionCallback callback, v8::Local<v8::Value> data = v8::Local<v8::Value>())\n```\n\nCalls the `FunctionTemplate`'s [`SetCallHandler()`](https://v8docs.nodesource.com/node-8.11/d8/d83/classv8_1_1_function_template.html#ab7574b298db3c27fbc2ed465c08ea2f8).\n\n<a name=\"api_nan_set_call_as_function_handler\"></a>\n### Nan::SetCallAsFunctionHandler()\n\nSets the callback to be used when calling instances created from the `v8::ObjectTemplate` as a function.\nIf no callback is set, instances behave like normal JavaScript objects that cannot be called as a function.\n\nSignature:\n\n```c++\nvoid Nan::SetCallAsFunctionHandler(v8::Local<v8::ObjectTemplate> templ, Nan::FunctionCallback callback, v8::Local<v8::Value> data = v8::Local<v8::Value>())\n```\n\nCalls the `ObjectTemplate`'s [`SetCallAsFunctionHandler()`](https://v8docs.nodesource.com/node-8.11/db/d5f/classv8_1_1_object_template.html#a5e9612fc80bf6db8f2da199b9b0bd04e).",
      "metadata": {}
    },
    "new": {
      "reference": "new",
      "route": "new",
      "sourcePath": "src\\docs-data\\node_modules\\nan\\doc\\new.md",
      "title": "(untitled)",
      "contents": [
        "<h2 id=\"new\">New</h2>\n<p>NAN provides a <code>Nan::New()</code> helper for the creation of new JavaScript objects in a way that&#39;s compatible across the supported versions of V8.</p>\n<ul>\n<li><a href=\"#api_nan_new\"><b><code>Nan::New()</code></b></a></li>\n<li><a href=\"#api_nan_undefined\"><b><code>Nan::Undefined()</code></b></a></li>\n<li><a href=\"#api_nan_null\"><b><code>Nan::Null()</code></b></a></li>\n<li><a href=\"#api_nan_true\"><b><code>Nan::True()</code></b></a></li>\n<li><a href=\"#api_nan_false\"><b><code>Nan::False()</code></b></a></li>\n<li><a href=\"#api_nan_empty_string\"><b><code>Nan::EmptyString()</code></b></a></li>\n</ul>\n<p><a name=\"api_nan_new\"></a></p>\n<h3 id=\"nan-new-\">Nan::New()</h3>\n<p><code>Nan::New()</code> should be used to instantiate new JavaScript objects.</p>\n<p>Refer to the specific V8 type in the <a href=\"https://v8docs.nodesource.com/node-8.11/d1/d83/classv8_1_1_data.html\">V8 documentation</a> for information on the types of arguments required for instantiation.</p>\n<p>Signatures:</p>\n<p>Return types are mostly omitted from the signatures for simplicity. In most cases the type will be contained within a <code>v8::Local&lt;T&gt;</code>. The following types will be contained within a <code>Nan::MaybeLocal&lt;T&gt;</code>: <code>v8::String</code>, <code>v8::Date</code>, <code>v8::RegExp</code>, <code>v8::Script</code>, <code>v8::UnboundScript</code>.</p>\n<p>Empty objects:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::New&lt;T&gt;();</span></span></div></pre><p>Generic single and multiple-argument:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::New&lt;T&gt;(A0&nbsp;arg0);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::New&lt;T&gt;(A0&nbsp;arg0,&nbsp;A1&nbsp;arg1);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::New&lt;T&gt;(A0&nbsp;arg0,&nbsp;A1&nbsp;arg1,&nbsp;A2&nbsp;arg2);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::New&lt;T&gt;(A0&nbsp;arg0,&nbsp;A1&nbsp;arg1,&nbsp;A2&nbsp;arg2,&nbsp;A3&nbsp;arg3);</span></span></div></pre><p>For creating <code>v8::FunctionTemplate</code> and <code>v8::Function</code> objects:</p>\n<p>_The definition of <code>Nan::FunctionCallback</code> can be found in the <a href=\"./methods.md#api_nan_method\">Method declaration</a> documentation._</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::New&lt;T&gt;(Nan::FunctionCallback&nbsp;callback,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;data&nbsp;=&nbsp;v8::Local&lt;v8::Value&gt;());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::New&lt;T&gt;(Nan::FunctionCallback&nbsp;callback,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;data&nbsp;=&nbsp;v8::Local&lt;v8::Value&gt;(),</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A2&nbsp;a2&nbsp;=&nbsp;A2());</span></span></div></pre><p>Native number types:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Boolean&gt;&nbsp;Nan::New&lt;T&gt;(bool&nbsp;value);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Int32&gt;&nbsp;Nan::New&lt;T&gt;(int32_t&nbsp;value);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Uint32&gt;&nbsp;Nan::New&lt;T&gt;(uint32_t&nbsp;value);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Number&gt;&nbsp;Nan::New&lt;T&gt;(double&nbsp;value);</span></span></div></pre><p>String types:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::String&gt;&nbsp;Nan::New&lt;T&gt;(std::string&nbsp;const&amp;&nbsp;value);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::String&gt;&nbsp;Nan::New&lt;T&gt;(const&nbsp;char&nbsp;*&nbsp;value,&nbsp;int&nbsp;length);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::String&gt;&nbsp;Nan::New&lt;T&gt;(const&nbsp;char&nbsp;*&nbsp;value);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::String&gt;&nbsp;Nan::New&lt;T&gt;(const&nbsp;uint16_t&nbsp;*&nbsp;value);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::String&gt;&nbsp;Nan::New&lt;T&gt;(const&nbsp;uint16_t&nbsp;*&nbsp;value,&nbsp;int&nbsp;length);</span></span></div></pre><p>Specialized types:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::String&gt;&nbsp;Nan::New&lt;T&gt;(v8::String::ExternalStringResource&nbsp;*&nbsp;value);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::String&gt;&nbsp;Nan::New&lt;T&gt;(Nan::ExternalOneByteStringResource&nbsp;*&nbsp;value);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::RegExp&gt;&nbsp;Nan::New&lt;T&gt;(v8::Local&lt;v8::String&gt;&nbsp;pattern,&nbsp;v8::RegExp::Flags&nbsp;flags);</span></span></div></pre><p>Note that <code>Nan::ExternalOneByteStringResource</code> maps to <a href=\"https://v8docs.nodesource.com/node-8.11/d9/db3/classv8_1_1_string_1_1_external_one_byte_string_resource.html\"><code>v8::String::ExternalOneByteStringResource</code></a>, and <code>v8::String::ExternalAsciiStringResource</code> in older versions of V8.</p>\n<p><a name=\"api_nan_undefined\"></a></p>\n<h3 id=\"nan-undefined-\">Nan::Undefined()</h3>\n<p>A helper method to reference the <code>v8::Undefined</code> object in a way that is compatible across all supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Primitive&gt;&nbsp;Nan::Undefined()</span></span></div></pre><p><a name=\"api_nan_null\"></a></p>\n<h3 id=\"nan-null-\">Nan::Null()</h3>\n<p>A helper method to reference the <code>v8::Null</code> object in a way that is compatible across all supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Primitive&gt;&nbsp;Nan::Null()</span></span></div></pre><p><a name=\"api_nan_true\"></a></p>\n<h3 id=\"nan-true-\">Nan::True()</h3>\n<p>A helper method to reference the <code>v8::Boolean</code> object representing the <code>true</code> value in a way that is compatible across all supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Boolean&gt;&nbsp;Nan::True()</span></span></div></pre><p><a name=\"api_nan_false\"></a></p>\n<h3 id=\"nan-false-\">Nan::False()</h3>\n<p>A helper method to reference the <code>v8::Boolean</code> object representing the <code>false</code> value in a way that is compatible across all supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Boolean&gt;&nbsp;Nan::False()</span></span></div></pre><p><a name=\"api_nan_empty_string\"></a></p>\n<h3 id=\"nan-emptystring-\">Nan::EmptyString()</h3>\n<p>Call <a href=\"https://v8docs.nodesource.com/node-8.11/d2/db3/classv8_1_1_string.html#a7c1bc8886115d7ee46f1d571dd6ebc6d\"><code>v8::String::Empty</code></a> to reference the empty string in a way that is compatible across all supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::String&gt;&nbsp;Nan::EmptyString()</span></span></div></pre><p><a name=\"api_nan_new_one_byte_string\"></a></p>\n<h3 id=\"nan-newonebytestring-\">Nan::NewOneByteString()</h3>\n<p>An implementation of <a href=\"https://v8docs.nodesource.com/node-8.11/d2/db3/classv8_1_1_string.html#a5264d50b96d2c896ce525a734dc10f09\"><code>v8::String::NewFromOneByte()</code></a> provided for consistent availability and API across supported versions of V8. Allocates a new string from Latin-1 data.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::String&gt;&nbsp;Nan::NewOneByteString(const&nbsp;uint8_t&nbsp;*&nbsp;value,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;length&nbsp;=&nbsp;-1)</span></span></div></pre>"
      ],
      "contentsRaw": "## New\n\nNAN provides a `Nan::New()` helper for the creation of new JavaScript objects in a way that's compatible across the supported versions of V8.\n\n - <a href=\"#api_nan_new\"><b><code>Nan::New()</code></b></a>\n - <a href=\"#api_nan_undefined\"><b><code>Nan::Undefined()</code></b></a>\n - <a href=\"#api_nan_null\"><b><code>Nan::Null()</code></b></a>\n - <a href=\"#api_nan_true\"><b><code>Nan::True()</code></b></a>\n - <a href=\"#api_nan_false\"><b><code>Nan::False()</code></b></a>\n - <a href=\"#api_nan_empty_string\"><b><code>Nan::EmptyString()</code></b></a>\n\n\n<a name=\"api_nan_new\"></a>\n### Nan::New()\n\n`Nan::New()` should be used to instantiate new JavaScript objects.\n\nRefer to the specific V8 type in the [V8 documentation](https://v8docs.nodesource.com/node-8.11/d1/d83/classv8_1_1_data.html) for information on the types of arguments required for instantiation.\n\nSignatures:\n\nReturn types are mostly omitted from the signatures for simplicity. In most cases the type will be contained within a `v8::Local<T>`. The following types will be contained within a `Nan::MaybeLocal<T>`: `v8::String`, `v8::Date`, `v8::RegExp`, `v8::Script`, `v8::UnboundScript`.\n\nEmpty objects:\n\n```c++\nNan::New<T>();\n```\n\nGeneric single and multiple-argument:\n\n```c++\nNan::New<T>(A0 arg0);\nNan::New<T>(A0 arg0, A1 arg1);\nNan::New<T>(A0 arg0, A1 arg1, A2 arg2);\nNan::New<T>(A0 arg0, A1 arg1, A2 arg2, A3 arg3);\n```\n\nFor creating `v8::FunctionTemplate` and `v8::Function` objects:\n\n_The definition of `Nan::FunctionCallback` can be found in the [Method declaration](./methods.md#api_nan_method) documentation._\n\n```c++\nNan::New<T>(Nan::FunctionCallback callback,\n            v8::Local<v8::Value> data = v8::Local<v8::Value>());\nNan::New<T>(Nan::FunctionCallback callback,\n            v8::Local<v8::Value> data = v8::Local<v8::Value>(),\n            A2 a2 = A2());\n```\n\nNative number types:\n\n```c++\nv8::Local<v8::Boolean> Nan::New<T>(bool value);\nv8::Local<v8::Int32> Nan::New<T>(int32_t value);\nv8::Local<v8::Uint32> Nan::New<T>(uint32_t value);\nv8::Local<v8::Number> Nan::New<T>(double value);\n```\n\nString types:\n\n```c++\nNan::MaybeLocal<v8::String> Nan::New<T>(std::string const& value);\nNan::MaybeLocal<v8::String> Nan::New<T>(const char * value, int length);\nNan::MaybeLocal<v8::String> Nan::New<T>(const char * value);\nNan::MaybeLocal<v8::String> Nan::New<T>(const uint16_t * value);\nNan::MaybeLocal<v8::String> Nan::New<T>(const uint16_t * value, int length);\n```\n\nSpecialized types:\n\n```c++\nv8::Local<v8::String> Nan::New<T>(v8::String::ExternalStringResource * value);\nv8::Local<v8::String> Nan::New<T>(Nan::ExternalOneByteStringResource * value);\nv8::Local<v8::RegExp> Nan::New<T>(v8::Local<v8::String> pattern, v8::RegExp::Flags flags);\n```\n\nNote that `Nan::ExternalOneByteStringResource` maps to [`v8::String::ExternalOneByteStringResource`](https://v8docs.nodesource.com/node-8.11/d9/db3/classv8_1_1_string_1_1_external_one_byte_string_resource.html), and `v8::String::ExternalAsciiStringResource` in older versions of V8.\n\n\n<a name=\"api_nan_undefined\"></a>\n### Nan::Undefined()\n\nA helper method to reference the `v8::Undefined` object in a way that is compatible across all supported versions of V8.\n\nSignature:\n\n```c++\nv8::Local<v8::Primitive> Nan::Undefined()\n```\n\n<a name=\"api_nan_null\"></a>\n### Nan::Null()\n\nA helper method to reference the `v8::Null` object in a way that is compatible across all supported versions of V8.\n\nSignature:\n\n```c++\nv8::Local<v8::Primitive> Nan::Null()\n```\n\n<a name=\"api_nan_true\"></a>\n### Nan::True()\n\nA helper method to reference the `v8::Boolean` object representing the `true` value in a way that is compatible across all supported versions of V8.\n\nSignature:\n\n```c++\nv8::Local<v8::Boolean> Nan::True()\n```\n\n<a name=\"api_nan_false\"></a>\n### Nan::False()\n\nA helper method to reference the `v8::Boolean` object representing the `false` value in a way that is compatible across all supported versions of V8.\n\nSignature:\n\n```c++\nv8::Local<v8::Boolean> Nan::False()\n```\n\n<a name=\"api_nan_empty_string\"></a>\n### Nan::EmptyString()\n\nCall [`v8::String::Empty`](https://v8docs.nodesource.com/node-8.11/d2/db3/classv8_1_1_string.html#a7c1bc8886115d7ee46f1d571dd6ebc6d) to reference the empty string in a way that is compatible across all supported versions of V8.\n\nSignature:\n\n```c++\nv8::Local<v8::String> Nan::EmptyString()\n```\n\n\n<a name=\"api_nan_new_one_byte_string\"></a>\n### Nan::NewOneByteString()\n\nAn implementation of [`v8::String::NewFromOneByte()`](https://v8docs.nodesource.com/node-8.11/d2/db3/classv8_1_1_string.html#a5264d50b96d2c896ce525a734dc10f09) provided for consistent availability and API across supported versions of V8. Allocates a new string from Latin-1 data.\n\nSignature:\n\n```c++\nNan::MaybeLocal<v8::String> Nan::NewOneByteString(const uint8_t * value,\n                                                  int length = -1)\n```",
      "metadata": {}
    },
    "node_misc": {
      "reference": "node_misc",
      "route": "node_misc",
      "sourcePath": "src\\docs-data\\node_modules\\nan\\doc\\node_misc.md",
      "title": "(untitled)",
      "contents": [
        "<h2 id=\"miscellaneous-node-helpers\">Miscellaneous Node Helpers</h2>\n<ul>\n<li><a href=\"#api_nan_asyncresource\"><b><code>Nan::AsyncResource</code></b></a></li>\n<li><a href=\"#api_nan_make_callback\"><b><code>Nan::MakeCallback()</code></b></a></li>\n<li><a href=\"#api_nan_module_init\"><b><code>NAN_MODULE_INIT()</code></b></a></li>\n<li><a href=\"#api_nan_export\"><b><code>Nan::Export()</code></b></a></li>\n</ul>\n<p><a name=\"api_nan_asyncresource\"></a></p>\n<h3 id=\"nan-asyncresource\">Nan::AsyncResource</h3>\n<p>This class is analogous to the <code>AsyncResource</code> JavaScript class exposed by Node&#39;s <a href=\"https://nodejs.org/dist/latest-v9.x/docs/api/async_hooks.html\">async_hooks</a> API.</p>\n<p>When calling back into JavaScript asynchronously, special care must be taken to ensure that the runtime can properly track\nasync hops. <code>Nan::AsyncResource</code> is a class that provides an RAII wrapper around <code>node::EmitAsyncInit</code>, <code>node::EmitAsyncDestroy</code>,\nand <code>node::MakeCallback</code>. Using this mechanism to call back into JavaScript, as opposed to <code>Nan::MakeCallback</code> or\n<code>v8::Function::Call</code> ensures that the callback is executed in the correct async context. This ensures that async mechanisms\nsuch as domains and <a href=\"https://nodejs.org/dist/latest-v9.x/docs/api/async_hooks.html\">async_hooks</a> function correctly.</p>\n<p>Definition:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>class&nbsp;AsyncResource&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;AsyncResource(v8::Local&lt;v8::String&gt;&nbsp;name,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Object&gt;&nbsp;resource&nbsp;=&nbsp;New&lt;v8::Object&gt;());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;AsyncResource(const&nbsp;char*&nbsp;name,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Object&gt;&nbsp;resource&nbsp;=&nbsp;New&lt;v8::Object&gt;());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;~AsyncResource();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::MaybeLocal&lt;v8::Value&gt;&nbsp;runInAsyncScope(v8::Local&lt;v8::Object&gt;&nbsp;target,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Function&gt;&nbsp;func,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;argc,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;*&nbsp;argv);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::MaybeLocal&lt;v8::Value&gt;&nbsp;runInAsyncScope(v8::Local&lt;v8::Object&gt;&nbsp;target,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::String&gt;&nbsp;symbol,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;argc,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;*&nbsp;argv);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::MaybeLocal&lt;v8::Value&gt;&nbsp;runInAsyncScope(v8::Local&lt;v8::Object&gt;&nbsp;target,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;char*&nbsp;method,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;argc,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;*&nbsp;argv);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div></pre><ul>\n<li><code>name</code>: Identifier for the kind of resource that is being provided for diagnostics information exposed by the <a href=\"https://nodejs.org/dist/latest-v9.x/docs/api/async_hooks.html\">async_hooks</a>\nAPI. This will be passed to the possible <code>init</code> hook as the <code>type</code>. To avoid name collisions with other modules we recommend\nthat the name include the name of the owning module as a prefix. For example <code>mysql</code> module could use something like\n<code>mysql:batch-db-query-resource</code>.</li>\n<li><code>resource</code>: An optional object associated with the async work that will be passed to the possible <a href=\"https://nodejs.org/dist/latest-v9.x/docs/api/async_hooks.html\">async_hooks</a>\n<code>init</code> hook. If this parameter is omitted, or an empty handle is provided, this object will be created automatically.</li>\n<li>When calling JS on behalf of this resource, one can use <code>runInAsyncScope</code>. This will ensure that the callback runs in the\ncorrect async execution context.</li>\n<li><code>AsyncDestroy</code> is automatically called when an AsyncResource object is destroyed.</li>\n</ul>\n<p>For more details, see the Node <a href=\"https://nodejs.org/dist/latest-v9.x/docs/api/async_hooks.html\">async_hooks</a> documentation. You might also want to take a look at the documentation for the\n<a href=\"https://nodejs.org/dist/latest-v9.x/docs/api/n-api.html#n_api_custom_asynchronous_operations\">N-API counterpart</a>. For example usage, see the <code>asyncresource.cpp</code> example in the <code>test/cpp</code> directory.</p>\n<p><a name=\"api_nan_make_callback\"></a></p>\n<h3 id=\"nan-makecallback-\">Nan::MakeCallback()</h3>\n<p>Deprecated wrappers around the legacy <code>node::MakeCallback()</code> APIs. Node.js 10+\nhas deprecated these legacy APIs as they do not provide a mechanism to preserve\nasync context.</p>\n<p>We recommend that you use the <code>AsyncResource</code> class and <code>AsyncResource::runInAsyncScope</code> instead of using <code>Nan::MakeCallback</code> or\n<code>v8::Function#Call()</code> directly. <code>AsyncResource</code> properly takes care of running the callback in the correct async execution\ncontext – something that is essential for functionality like domains, async_hooks and async debugging.</p>\n<p>Signatures:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>NAN_DEPRECATED</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Value&gt;&nbsp;Nan::MakeCallback(v8::Local&lt;v8::Object&gt;&nbsp;target,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Function&gt;&nbsp;func,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;argc,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;*&nbsp;argv);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>NAN_DEPRECATED</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Value&gt;&nbsp;Nan::MakeCallback(v8::Local&lt;v8::Object&gt;&nbsp;target,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::String&gt;&nbsp;symbol,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;argc,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;*&nbsp;argv);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>NAN_DEPRECATED</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Value&gt;&nbsp;Nan::MakeCallback(v8::Local&lt;v8::Object&gt;&nbsp;target,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;char*&nbsp;method,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;argc,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;*&nbsp;argv);</span></span></div></pre><p><a name=\"api_nan_module_init\"></a></p>\n<h3 id=\"nan_module_init-\">NAN_MODULE_INIT()</h3>\n<p>Used to define the entry point function to a Node add-on. Creates a function with a given <code>name</code> that receives a <code>target</code> object representing the equivalent of the JavaScript <code>exports</code> object.</p>\n<p>See example below.</p>\n<p><a name=\"api_nan_export\"></a></p>\n<h3 id=\"nan-export-\">Nan::Export()</h3>\n<p>A simple helper to register a <code>v8::FunctionTemplate</code> from a JavaScript-accessible method (see <a href=\"./methods.md\">Methods</a>) as a property on an object. Can be used in a way similar to assigning properties to <code>module.exports</code> in JavaScript.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Export(v8::Local&lt;v8::Object&gt;&nbsp;target,&nbsp;const&nbsp;char&nbsp;*name,&nbsp;Nan::FunctionCallback&nbsp;f)</span></span></div></pre><p>Also available as the shortcut <code>NAN_EXPORT</code> macro.</p>\n<p>Example:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>NAN_METHOD(Foo)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;...</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>NAN_MODULE_INIT(Init)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;NAN_EXPORT(target,&nbsp;Foo);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div></pre>"
      ],
      "contentsRaw": "## Miscellaneous Node Helpers\n\n - <a href=\"#api_nan_asyncresource\"><b><code>Nan::AsyncResource</code></b></a>\n - <a href=\"#api_nan_make_callback\"><b><code>Nan::MakeCallback()</code></b></a>\n - <a href=\"#api_nan_module_init\"><b><code>NAN_MODULE_INIT()</code></b></a>\n - <a href=\"#api_nan_export\"><b><code>Nan::Export()</code></b></a>\n\n<a name=\"api_nan_asyncresource\"></a>\n### Nan::AsyncResource\n\nThis class is analogous to the `AsyncResource` JavaScript class exposed by Node's [async_hooks][] API.\n\nWhen calling back into JavaScript asynchronously, special care must be taken to ensure that the runtime can properly track\nasync hops. `Nan::AsyncResource` is a class that provides an RAII wrapper around `node::EmitAsyncInit`, `node::EmitAsyncDestroy`,\nand `node::MakeCallback`. Using this mechanism to call back into JavaScript, as opposed to `Nan::MakeCallback` or\n`v8::Function::Call` ensures that the callback is executed in the correct async context. This ensures that async mechanisms\nsuch as domains and [async_hooks][] function correctly.\n\nDefinition:\n\n```c++\nclass AsyncResource {\n public:\n  AsyncResource(v8::Local<v8::String> name,\n                v8::Local<v8::Object> resource = New<v8::Object>());\n  AsyncResource(const char* name,\n                v8::Local<v8::Object> resource = New<v8::Object>());\n  ~AsyncResource();\n\n  v8::MaybeLocal<v8::Value> runInAsyncScope(v8::Local<v8::Object> target,\n                                            v8::Local<v8::Function> func,\n                                            int argc,\n                                            v8::Local<v8::Value>* argv);\n  v8::MaybeLocal<v8::Value> runInAsyncScope(v8::Local<v8::Object> target,\n                                            v8::Local<v8::String> symbol,\n                                            int argc,\n                                            v8::Local<v8::Value>* argv);\n  v8::MaybeLocal<v8::Value> runInAsyncScope(v8::Local<v8::Object> target,\n                                            const char* method,\n                                            int argc,\n                                            v8::Local<v8::Value>* argv);\n};\n```\n\n* `name`: Identifier for the kind of resource that is being provided for diagnostics information exposed by the [async_hooks][]\n  API. This will be passed to the possible `init` hook as the `type`. To avoid name collisions with other modules we recommend\n  that the name include the name of the owning module as a prefix. For example `mysql` module could use something like\n  `mysql:batch-db-query-resource`.\n* `resource`: An optional object associated with the async work that will be passed to the possible [async_hooks][]\n  `init` hook. If this parameter is omitted, or an empty handle is provided, this object will be created automatically.\n* When calling JS on behalf of this resource, one can use `runInAsyncScope`. This will ensure that the callback runs in the\n  correct async execution context.\n* `AsyncDestroy` is automatically called when an AsyncResource object is destroyed.\n\nFor more details, see the Node [async_hooks][] documentation. You might also want to take a look at the documentation for the\n[N-API counterpart][napi]. For example usage, see the `asyncresource.cpp` example in the `test/cpp` directory.\n\n<a name=\"api_nan_make_callback\"></a>\n### Nan::MakeCallback()\n\nDeprecated wrappers around the legacy `node::MakeCallback()` APIs. Node.js 10+\nhas deprecated these legacy APIs as they do not provide a mechanism to preserve\nasync context.\n\nWe recommend that you use the `AsyncResource` class and `AsyncResource::runInAsyncScope` instead of using `Nan::MakeCallback` or\n`v8::Function#Call()` directly. `AsyncResource` properly takes care of running the callback in the correct async execution\ncontext – something that is essential for functionality like domains, async_hooks and async debugging.\n\nSignatures:\n\n```c++\nNAN_DEPRECATED\nv8::Local<v8::Value> Nan::MakeCallback(v8::Local<v8::Object> target,\n                                       v8::Local<v8::Function> func,\n                                       int argc,\n                                       v8::Local<v8::Value>* argv);\nNAN_DEPRECATED\nv8::Local<v8::Value> Nan::MakeCallback(v8::Local<v8::Object> target,\n                                       v8::Local<v8::String> symbol,\n                                       int argc,\n                                       v8::Local<v8::Value>* argv);\nNAN_DEPRECATED\nv8::Local<v8::Value> Nan::MakeCallback(v8::Local<v8::Object> target,\n                                       const char* method,\n                                       int argc,\n                                       v8::Local<v8::Value>* argv);\n```\n\n\n<a name=\"api_nan_module_init\"></a>\n### NAN_MODULE_INIT()\n\nUsed to define the entry point function to a Node add-on. Creates a function with a given `name` that receives a `target` object representing the equivalent of the JavaScript `exports` object.\n\nSee example below.\n\n<a name=\"api_nan_export\"></a>\n### Nan::Export()\n\nA simple helper to register a `v8::FunctionTemplate` from a JavaScript-accessible method (see [Methods](./methods.md)) as a property on an object. Can be used in a way similar to assigning properties to `module.exports` in JavaScript.\n\nSignature:\n\n```c++\nvoid Export(v8::Local<v8::Object> target, const char *name, Nan::FunctionCallback f)\n```\n\nAlso available as the shortcut `NAN_EXPORT` macro.\n\nExample:\n\n```c++\nNAN_METHOD(Foo) {\n  ...\n}\n\nNAN_MODULE_INIT(Init) {\n  NAN_EXPORT(target, Foo);\n}\n```\n\n[async_hooks]: https://nodejs.org/dist/latest-v9.x/docs/api/async_hooks.html\n[napi]: https://nodejs.org/dist/latest-v9.x/docs/api/n-api.html#n_api_custom_asynchronous_operations",
      "metadata": {}
    },
    "object_wrappers": {
      "reference": "object_wrappers",
      "route": "object_wrappers",
      "sourcePath": "src\\docs-data\\node_modules\\nan\\doc\\object_wrappers.md",
      "title": "(untitled)",
      "contents": [
        "<h2 id=\"object-wrappers\">Object Wrappers</h2>\n<p>The <code>ObjectWrap</code> class can be used to make wrapped C++ objects and a factory of wrapped objects.</p>\n<ul>\n<li><a href=\"#api_nan_object_wrap\"><b><code>Nan::ObjectWrap</code></b></a></li>\n</ul>\n<p><a name=\"api_nan_object_wrap\"></a></p>\n<h3 id=\"nan-objectwrap-\">Nan::ObjectWrap()</h3>\n<p>A reimplementation of <code>node::ObjectWrap</code> that adds some API not present in older versions of Node. Should be preferred over <code>node::ObjectWrap</code> in all cases for consistency.</p>\n<p>Definition:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>class&nbsp;ObjectWrap&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;ObjectWrap();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;virtual&nbsp;~ObjectWrap();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;template&nbsp;&lt;class&nbsp;T&gt;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;static&nbsp;inline&nbsp;T*&nbsp;Unwrap(v8::Local&lt;v8::Object&gt;&nbsp;handle);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;inline&nbsp;v8::Local&lt;v8::Object&gt;&nbsp;handle();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;inline&nbsp;Nan::Persistent&lt;v8::Object&gt;&amp;&nbsp;persistent();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;protected:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;inline&nbsp;void&nbsp;Wrap(v8::Local&lt;v8::Object&gt;&nbsp;handle);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;inline&nbsp;void&nbsp;MakeWeak();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;/*&nbsp;Ref()&nbsp;marks&nbsp;the&nbsp;object&nbsp;as&nbsp;being&nbsp;attached&nbsp;to&nbsp;an&nbsp;event&nbsp;loop.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;Refed&nbsp;objects&nbsp;will&nbsp;not&nbsp;be&nbsp;garbage&nbsp;collected,&nbsp;even&nbsp;if</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;all&nbsp;references&nbsp;are&nbsp;lost.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;virtual&nbsp;void&nbsp;Ref();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;/*&nbsp;Unref()&nbsp;marks&nbsp;an&nbsp;object&nbsp;as&nbsp;detached&nbsp;from&nbsp;the&nbsp;event&nbsp;loop.&nbsp;&nbsp;This&nbsp;is&nbsp;its</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;default&nbsp;state.&nbsp;&nbsp;When&nbsp;an&nbsp;object&nbsp;with&nbsp;a&nbsp;&quot;weak&quot;&nbsp;reference&nbsp;changes&nbsp;from</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;attached&nbsp;to&nbsp;detached&nbsp;state&nbsp;it&nbsp;will&nbsp;be&nbsp;freed.&nbsp;Be&nbsp;careful&nbsp;not&nbsp;to&nbsp;access</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;the&nbsp;object&nbsp;after&nbsp;making&nbsp;this&nbsp;call&nbsp;as&nbsp;it&nbsp;might&nbsp;be&nbsp;gone!</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;(A&nbsp;&quot;weak&nbsp;reference&quot;&nbsp;means&nbsp;an&nbsp;object&nbsp;that&nbsp;only&nbsp;has&nbsp;a</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;persistant&nbsp;handle.)</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;DO&nbsp;NOT&nbsp;CALL&nbsp;THIS&nbsp;FROM&nbsp;DESTRUCTOR</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;virtual&nbsp;void&nbsp;Unref();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;int&nbsp;refs_;&nbsp;&nbsp;//&nbsp;ro</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div></pre><p>See the Node documentation on <a href=\"https://nodejs.org/api/addons.html#addons_wrapping_c_objects\">Wrapping C++ Objects</a> for more details.</p>\n<h3 id=\"this-vs-holder\">This vs. Holder</h3>\n<p>When calling <code>Unwrap</code>, it is important that the argument is indeed some JavaScript object which got wrapped by a <code>Wrap</code> call for this class or any derived class.\nThe <code>Signature</code> installed by <a href=\"methods.md#api_nan_set_prototype_method\"><code>Nan::SetPrototypeMethod()</code></a> does ensure that <code>info.Holder()</code> is just such an instance.\nIn Node 0.12 and later, <code>info.This()</code> will also be of such a type, since otherwise the invocation will get rejected.\nHowever, in Node 0.10 and before it was possible to invoke a method on a JavaScript object which just had the extension type in its prototype chain.\nIn such a situation, calling <code>Unwrap</code> on <code>info.This()</code> will likely lead to a failed assertion causing a crash, but could lead to even more serious corruption.</p>\n<p>On the other hand, calling <code>Unwrap</code> in an <a href=\"methods.md#api_nan_set_accessor\">accessor</a> should not use <code>Holder()</code> if the accessor is defined on the prototype.\nSo either define your accessors on the instance template,\nor use <code>This()</code> after verifying that it is indeed a valid object.</p>\n<h3 id=\"examples\">Examples</h3>\n<h4 id=\"basic\">Basic</h4>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>class&nbsp;MyObject&nbsp;:&nbsp;public&nbsp;Nan::ObjectWrap&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;static&nbsp;NAN_MODULE_INIT(Init)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::FunctionTemplate&gt;&nbsp;tpl&nbsp;=&nbsp;Nan::New&lt;v8::FunctionTemplate&gt;(New);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;tpl-&gt;SetClassName(Nan::New(&quot;MyObject&quot;).ToLocalChecked());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;tpl-&gt;InstanceTemplate()-&gt;SetInternalFieldCount(1);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Nan::SetPrototypeMethod(tpl,&nbsp;&quot;getHandle&quot;,&nbsp;GetHandle);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Nan::SetPrototypeMethod(tpl,&nbsp;&quot;getValue&quot;,&nbsp;GetValue);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;constructor().Reset(Nan::GetFunction(tpl).ToLocalChecked());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Nan::Set(target,&nbsp;Nan::New(&quot;MyObject&quot;).ToLocalChecked(),</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nan::GetFunction(tpl).ToLocalChecked());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;private:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;explicit&nbsp;MyObject(double&nbsp;value&nbsp;=&nbsp;0)&nbsp;:&nbsp;value_(value)&nbsp;{}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;~MyObject()&nbsp;{}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;static&nbsp;NAN_METHOD(New)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(info.IsConstructCall())&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;value&nbsp;=&nbsp;info[0]-&gt;IsUndefined()&nbsp;?&nbsp;0&nbsp;:&nbsp;Nan::To&lt;double&gt;(info[0]).FromJust();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MyObject&nbsp;*obj&nbsp;=&nbsp;new&nbsp;MyObject(value);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj-&gt;Wrap(info.This());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;info.GetReturnValue().Set(info.This());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;int&nbsp;argc&nbsp;=&nbsp;1;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;argv[argc]&nbsp;=&nbsp;{info[0]};</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Function&gt;&nbsp;cons&nbsp;=&nbsp;Nan::New(constructor());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;info.GetReturnValue().Set(Nan::NewInstance(cons,&nbsp;argc,&nbsp;argv).ToLocalChecked());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;static&nbsp;NAN_METHOD(GetHandle)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;MyObject*&nbsp;obj&nbsp;=&nbsp;Nan::ObjectWrap::Unwrap&lt;MyObject&gt;(info.Holder());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;info.GetReturnValue().Set(obj-&gt;handle());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;static&nbsp;NAN_METHOD(GetValue)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;MyObject*&nbsp;obj&nbsp;=&nbsp;Nan::ObjectWrap::Unwrap&lt;MyObject&gt;(info.Holder());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;info.GetReturnValue().Set(obj-&gt;value_);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;static&nbsp;inline&nbsp;Nan::Persistent&lt;v8::Function&gt;&nbsp;&amp;&nbsp;constructor()&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;static&nbsp;Nan::Persistent&lt;v8::Function&gt;&nbsp;my_constructor;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;my_constructor;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;double&nbsp;value_;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>NODE_MODULE(objectwrapper,&nbsp;MyObject::Init)</span></span></div></pre><p>To use in Javascript:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>var&nbsp;objectwrapper&nbsp;=&nbsp;require(&#39;bindings&#39;)(&#39;objectwrapper&#39;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>var&nbsp;obj&nbsp;=&nbsp;new&nbsp;objectwrapper.MyObject(5);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>console.log(&#39;Should&nbsp;be&nbsp;5:&nbsp;&#39;&nbsp;+&nbsp;obj.getValue());</span></span></div></pre><h4 id=\"factory-of-wrapped-objects\">Factory of wrapped objects</h4>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>class&nbsp;MyFactoryObject&nbsp;:&nbsp;public&nbsp;Nan::ObjectWrap&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;static&nbsp;NAN_MODULE_INIT(Init)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::FunctionTemplate&gt;&nbsp;tpl&nbsp;=&nbsp;Nan::New&lt;v8::FunctionTemplate&gt;(New);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;tpl-&gt;InstanceTemplate()-&gt;SetInternalFieldCount(1);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Nan::SetPrototypeMethod(tpl,&nbsp;&quot;getValue&quot;,&nbsp;GetValue);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;constructor().Reset(Nan::GetFunction(tpl).ToLocalChecked());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;static&nbsp;NAN_METHOD(NewInstance)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Function&gt;&nbsp;cons&nbsp;=&nbsp;Nan::New(constructor());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;value&nbsp;=&nbsp;info[0]-&gt;IsNumber()&nbsp;?&nbsp;Nan::To&lt;double&gt;(info[0]).FromJust()&nbsp;:&nbsp;0;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;int&nbsp;argc&nbsp;=&nbsp;1;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;argv[1]&nbsp;=&nbsp;{Nan::New(value)};</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;info.GetReturnValue().Set(Nan::NewInstance(cons,&nbsp;argc,&nbsp;argv).ToLocalChecked());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;//&nbsp;Needed&nbsp;for&nbsp;the&nbsp;next&nbsp;example:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;inline&nbsp;double&nbsp;value()&nbsp;const&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;value_;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;private:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;explicit&nbsp;MyFactoryObject(double&nbsp;value&nbsp;=&nbsp;0)&nbsp;:&nbsp;value_(value)&nbsp;{}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;~MyFactoryObject()&nbsp;{}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;static&nbsp;NAN_METHOD(New)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(info.IsConstructCall())&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;value&nbsp;=&nbsp;info[0]-&gt;IsNumber()&nbsp;?&nbsp;Nan::To&lt;double&gt;(info[0]).FromJust()&nbsp;:&nbsp;0;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MyFactoryObject&nbsp;*&nbsp;obj&nbsp;=&nbsp;new&nbsp;MyFactoryObject(value);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj-&gt;Wrap(info.This());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;info.GetReturnValue().Set(info.This());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;int&nbsp;argc&nbsp;=&nbsp;1;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;argv[argc]&nbsp;=&nbsp;{info[0]};</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Function&gt;&nbsp;cons&nbsp;=&nbsp;Nan::New(constructor());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;info.GetReturnValue().Set(Nan::NewInstance(cons,&nbsp;argc,&nbsp;argv).ToLocalChecked());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;static&nbsp;NAN_METHOD(GetValue)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;MyFactoryObject*&nbsp;obj&nbsp;=&nbsp;ObjectWrap::Unwrap&lt;MyFactoryObject&gt;(info.Holder());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;info.GetReturnValue().Set(obj-&gt;value_);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;static&nbsp;inline&nbsp;Nan::Persistent&lt;v8::Function&gt;&nbsp;&amp;&nbsp;constructor()&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;static&nbsp;Nan::Persistent&lt;v8::Function&gt;&nbsp;my_constructor;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;my_constructor;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;double&nbsp;value_;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>NAN_MODULE_INIT(Init)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;MyFactoryObject::Init(target);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Nan::Set(target,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Nan::New&lt;v8::String&gt;(&quot;newFactoryObjectInstance&quot;).ToLocalChecked(),</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Nan::GetFunction(</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nan::New&lt;v8::FunctionTemplate&gt;(MyFactoryObject::NewInstance)).ToLocalChecked()</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>NODE_MODULE(wrappedobjectfactory,&nbsp;Init)</span></span></div></pre><p>To use in Javascript:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>var&nbsp;wrappedobjectfactory&nbsp;=&nbsp;require(&#39;bindings&#39;)(&#39;wrappedobjectfactory&#39;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>var&nbsp;obj&nbsp;=&nbsp;wrappedobjectfactory.newFactoryObjectInstance(10);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>console.log(&#39;Should&nbsp;be&nbsp;10:&nbsp;&#39;&nbsp;+&nbsp;obj.getValue());</span></span></div></pre><h4 id=\"passing-wrapped-objects-around\">Passing wrapped objects around</h4>\n<p>Use the <code>MyFactoryObject</code> class above along with the following:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>static&nbsp;NAN_METHOD(Sum)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Nan::MaybeLocal&lt;v8::Object&gt;&nbsp;maybe1&nbsp;=&nbsp;Nan::To&lt;v8::Object&gt;(info[0]);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Nan::MaybeLocal&lt;v8::Object&gt;&nbsp;maybe2&nbsp;=&nbsp;Nan::To&lt;v8::Object&gt;(info[1]);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;//&nbsp;Quick&nbsp;check:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;if&nbsp;(maybe1.IsEmpty()&nbsp;||&nbsp;maybe2.IsEmpty())&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;return&nbsp;value&nbsp;is&nbsp;undefined&nbsp;by&nbsp;default</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;return;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;MyFactoryObject*&nbsp;obj1&nbsp;=</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Nan::ObjectWrap::Unwrap&lt;MyFactoryObject&gt;(maybe1.ToLocalChecked());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;MyFactoryObject*&nbsp;obj2&nbsp;=</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Nan::ObjectWrap::Unwrap&lt;MyFactoryObject&gt;(maybe2.ToLocalChecked());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;info.GetReturnValue().Set(Nan::New&lt;v8::Number&gt;(obj1-&gt;value()&nbsp;+&nbsp;obj2-&gt;value()));</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>NAN_MODULE_INIT(Init)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;MyFactoryObject::Init(target);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Nan::Set(target,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Nan::New&lt;v8::String&gt;(&quot;newFactoryObjectInstance&quot;).ToLocalChecked(),</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Nan::GetFunction(</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nan::New&lt;v8::FunctionTemplate&gt;(MyFactoryObject::NewInstance)).ToLocalChecked()</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Nan::Set(target,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Nan::New&lt;v8::String&gt;(&quot;sum&quot;).ToLocalChecked(),</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Nan::GetFunction(Nan::New&lt;v8::FunctionTemplate&gt;(Sum)).ToLocalChecked()</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>NODE_MODULE(myaddon,&nbsp;Init)</span></span></div></pre><p>To use in Javascript:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>var&nbsp;myaddon&nbsp;=&nbsp;require(&#39;bindings&#39;)(&#39;myaddon&#39;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>var&nbsp;obj1&nbsp;=&nbsp;myaddon.newFactoryObjectInstance(5);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>var&nbsp;obj2&nbsp;=&nbsp;myaddon.newFactoryObjectInstance(10);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>console.log(&#39;sum&nbsp;of&nbsp;object&nbsp;values:&nbsp;&#39;&nbsp;+&nbsp;myaddon.sum(obj1,&nbsp;obj2));</span></span></div></pre>"
      ],
      "contentsRaw": "## Object Wrappers\n\nThe `ObjectWrap` class can be used to make wrapped C++ objects and a factory of wrapped objects.\n\n - <a href=\"#api_nan_object_wrap\"><b><code>Nan::ObjectWrap</code></b></a>\n\n\n<a name=\"api_nan_object_wrap\"></a>\n### Nan::ObjectWrap()\n\nA reimplementation of `node::ObjectWrap` that adds some API not present in older versions of Node. Should be preferred over `node::ObjectWrap` in all cases for consistency.\n\nDefinition:\n\n```c++\nclass ObjectWrap {\n public:\n  ObjectWrap();\n\n  virtual ~ObjectWrap();\n\n  template <class T>\n  static inline T* Unwrap(v8::Local<v8::Object> handle);\n\n  inline v8::Local<v8::Object> handle();\n\n  inline Nan::Persistent<v8::Object>& persistent();\n\n protected:\n  inline void Wrap(v8::Local<v8::Object> handle);\n\n  inline void MakeWeak();\n\n  /* Ref() marks the object as being attached to an event loop.\n   * Refed objects will not be garbage collected, even if\n   * all references are lost.\n   */\n  virtual void Ref();\n\n  /* Unref() marks an object as detached from the event loop.  This is its\n   * default state.  When an object with a \"weak\" reference changes from\n   * attached to detached state it will be freed. Be careful not to access\n   * the object after making this call as it might be gone!\n   * (A \"weak reference\" means an object that only has a\n   * persistant handle.)\n   *\n   * DO NOT CALL THIS FROM DESTRUCTOR\n   */\n  virtual void Unref();\n\n  int refs_;  // ro\n};\n```\n\nSee the Node documentation on [Wrapping C++ Objects](https://nodejs.org/api/addons.html#addons_wrapping_c_objects) for more details.\n\n### This vs. Holder\n\nWhen calling `Unwrap`, it is important that the argument is indeed some JavaScript object which got wrapped by a `Wrap` call for this class or any derived class.\nThe `Signature` installed by [`Nan::SetPrototypeMethod()`](methods.md#api_nan_set_prototype_method) does ensure that `info.Holder()` is just such an instance.\nIn Node 0.12 and later, `info.This()` will also be of such a type, since otherwise the invocation will get rejected.\nHowever, in Node 0.10 and before it was possible to invoke a method on a JavaScript object which just had the extension type in its prototype chain.\nIn such a situation, calling `Unwrap` on `info.This()` will likely lead to a failed assertion causing a crash, but could lead to even more serious corruption.\n\nOn the other hand, calling `Unwrap` in an [accessor](methods.md#api_nan_set_accessor) should not use `Holder()` if the accessor is defined on the prototype.\nSo either define your accessors on the instance template,\nor use `This()` after verifying that it is indeed a valid object.\n\n### Examples\n\n#### Basic\n\n```c++\nclass MyObject : public Nan::ObjectWrap {\n public:\n  static NAN_MODULE_INIT(Init) {\n    v8::Local<v8::FunctionTemplate> tpl = Nan::New<v8::FunctionTemplate>(New);\n    tpl->SetClassName(Nan::New(\"MyObject\").ToLocalChecked());\n    tpl->InstanceTemplate()->SetInternalFieldCount(1);\n\n    Nan::SetPrototypeMethod(tpl, \"getHandle\", GetHandle);\n    Nan::SetPrototypeMethod(tpl, \"getValue\", GetValue);\n\n    constructor().Reset(Nan::GetFunction(tpl).ToLocalChecked());\n    Nan::Set(target, Nan::New(\"MyObject\").ToLocalChecked(),\n      Nan::GetFunction(tpl).ToLocalChecked());\n  }\n\n private:\n  explicit MyObject(double value = 0) : value_(value) {}\n  ~MyObject() {}\n\n  static NAN_METHOD(New) {\n    if (info.IsConstructCall()) {\n      double value = info[0]->IsUndefined() ? 0 : Nan::To<double>(info[0]).FromJust();\n      MyObject *obj = new MyObject(value);\n      obj->Wrap(info.This());\n      info.GetReturnValue().Set(info.This());\n    } else {\n      const int argc = 1;\n      v8::Local<v8::Value> argv[argc] = {info[0]};\n      v8::Local<v8::Function> cons = Nan::New(constructor());\n      info.GetReturnValue().Set(Nan::NewInstance(cons, argc, argv).ToLocalChecked());\n    }\n  }\n\n  static NAN_METHOD(GetHandle) {\n    MyObject* obj = Nan::ObjectWrap::Unwrap<MyObject>(info.Holder());\n    info.GetReturnValue().Set(obj->handle());\n  }\n\n  static NAN_METHOD(GetValue) {\n    MyObject* obj = Nan::ObjectWrap::Unwrap<MyObject>(info.Holder());\n    info.GetReturnValue().Set(obj->value_);\n  }\n\n  static inline Nan::Persistent<v8::Function> & constructor() {\n    static Nan::Persistent<v8::Function> my_constructor;\n    return my_constructor;\n  }\n\n  double value_;\n};\n\nNODE_MODULE(objectwrapper, MyObject::Init)\n```\n\nTo use in Javascript:\n\n```Javascript\nvar objectwrapper = require('bindings')('objectwrapper');\n\nvar obj = new objectwrapper.MyObject(5);\nconsole.log('Should be 5: ' + obj.getValue());\n```\n\n#### Factory of wrapped objects\n\n```c++\nclass MyFactoryObject : public Nan::ObjectWrap {\n public:\n  static NAN_MODULE_INIT(Init) {\n    v8::Local<v8::FunctionTemplate> tpl = Nan::New<v8::FunctionTemplate>(New);\n    tpl->InstanceTemplate()->SetInternalFieldCount(1);\n\n    Nan::SetPrototypeMethod(tpl, \"getValue\", GetValue);\n\n    constructor().Reset(Nan::GetFunction(tpl).ToLocalChecked());\n  }\n\n  static NAN_METHOD(NewInstance) {\n    v8::Local<v8::Function> cons = Nan::New(constructor());\n    double value = info[0]->IsNumber() ? Nan::To<double>(info[0]).FromJust() : 0;\n    const int argc = 1;\n    v8::Local<v8::Value> argv[1] = {Nan::New(value)};\n    info.GetReturnValue().Set(Nan::NewInstance(cons, argc, argv).ToLocalChecked());\n  }\n\n  // Needed for the next example:\n  inline double value() const {\n    return value_;\n  }\n\n private:\n  explicit MyFactoryObject(double value = 0) : value_(value) {}\n  ~MyFactoryObject() {}\n\n  static NAN_METHOD(New) {\n    if (info.IsConstructCall()) {\n      double value = info[0]->IsNumber() ? Nan::To<double>(info[0]).FromJust() : 0;\n      MyFactoryObject * obj = new MyFactoryObject(value);\n      obj->Wrap(info.This());\n      info.GetReturnValue().Set(info.This());\n    } else {\n      const int argc = 1;\n      v8::Local<v8::Value> argv[argc] = {info[0]};\n      v8::Local<v8::Function> cons = Nan::New(constructor());\n      info.GetReturnValue().Set(Nan::NewInstance(cons, argc, argv).ToLocalChecked());\n    }\n  }\n\n  static NAN_METHOD(GetValue) {\n    MyFactoryObject* obj = ObjectWrap::Unwrap<MyFactoryObject>(info.Holder());\n    info.GetReturnValue().Set(obj->value_);\n  }\n\n  static inline Nan::Persistent<v8::Function> & constructor() {\n    static Nan::Persistent<v8::Function> my_constructor;\n    return my_constructor;\n  }\n\n  double value_;\n};\n\nNAN_MODULE_INIT(Init) {\n  MyFactoryObject::Init(target);\n  Nan::Set(target,\n    Nan::New<v8::String>(\"newFactoryObjectInstance\").ToLocalChecked(),\n    Nan::GetFunction(\n      Nan::New<v8::FunctionTemplate>(MyFactoryObject::NewInstance)).ToLocalChecked()\n  );\n}\n\nNODE_MODULE(wrappedobjectfactory, Init)\n```\n\nTo use in Javascript:\n\n```Javascript\nvar wrappedobjectfactory = require('bindings')('wrappedobjectfactory');\n\nvar obj = wrappedobjectfactory.newFactoryObjectInstance(10);\nconsole.log('Should be 10: ' + obj.getValue());\n```\n\n#### Passing wrapped objects around\n\nUse the `MyFactoryObject` class above along with the following:\n\n```c++\nstatic NAN_METHOD(Sum) {\n  Nan::MaybeLocal<v8::Object> maybe1 = Nan::To<v8::Object>(info[0]);\n  Nan::MaybeLocal<v8::Object> maybe2 = Nan::To<v8::Object>(info[1]);\n\n  // Quick check:\n  if (maybe1.IsEmpty() || maybe2.IsEmpty()) {\n    // return value is undefined by default\n    return;\n  }\n\n  MyFactoryObject* obj1 =\n    Nan::ObjectWrap::Unwrap<MyFactoryObject>(maybe1.ToLocalChecked());\n  MyFactoryObject* obj2 =\n    Nan::ObjectWrap::Unwrap<MyFactoryObject>(maybe2.ToLocalChecked());\n\n  info.GetReturnValue().Set(Nan::New<v8::Number>(obj1->value() + obj2->value()));\n}\n\nNAN_MODULE_INIT(Init) {\n  MyFactoryObject::Init(target);\n  Nan::Set(target,\n    Nan::New<v8::String>(\"newFactoryObjectInstance\").ToLocalChecked(),\n    Nan::GetFunction(\n      Nan::New<v8::FunctionTemplate>(MyFactoryObject::NewInstance)).ToLocalChecked()\n  );\n  Nan::Set(target,\n    Nan::New<v8::String>(\"sum\").ToLocalChecked(),\n    Nan::GetFunction(Nan::New<v8::FunctionTemplate>(Sum)).ToLocalChecked()\n  );\n}\n\nNODE_MODULE(myaddon, Init)\n```\n\nTo use in Javascript:\n\n```Javascript\nvar myaddon = require('bindings')('myaddon');\n\nvar obj1 = myaddon.newFactoryObjectInstance(5);\nvar obj2 = myaddon.newFactoryObjectInstance(10);\nconsole.log('sum of object values: ' + myaddon.sum(obj1, obj2));\n```",
      "metadata": {}
    },
    "persistent": {
      "reference": "persistent",
      "route": "persistent",
      "sourcePath": "src\\docs-data\\node_modules\\nan\\doc\\persistent.md",
      "title": "(untitled)",
      "contents": [
        "<h2 id=\"persistent-references\">Persistent references</h2>\n<p>An object reference that is independent of any <code>HandleScope</code> is a <em>persistent</em> reference. Where a <code>Local</code> handle only lives as long as the <code>HandleScope</code> in which it was allocated, a <code>Persistent</code> handle remains valid until it is explicitly disposed.</p>\n<p>Due to the evolution of the V8 API, it is necessary for NAN to provide a wrapper implementation of the <code>Persistent</code> classes to supply compatibility across the V8 versions supported.</p>\n<ul>\n<li><a href=\"#api_nan_persistent_base\"><b><code>Nan::PersistentBase &amp; v8::PersistentBase</code></b></a></li>\n<li><a href=\"#api_nan_non_copyable_persistent_traits\"><b><code>Nan::NonCopyablePersistentTraits &amp; v8::NonCopyablePersistentTraits</code></b></a></li>\n<li><a href=\"#api_nan_copyable_persistent_traits\"><b><code>Nan::CopyablePersistentTraits &amp; v8::CopyablePersistentTraits</code></b></a></li>\n<li><a href=\"#api_nan_persistent\"><b><code>Nan::Persistent</code></b></a></li>\n<li><a href=\"#api_nan_global\"><b><code>Nan::Global</code></b></a></li>\n<li><a href=\"#api_nan_weak_callback_info\"><b><code>Nan::WeakCallbackInfo</code></b></a></li>\n<li><a href=\"#api_nan_weak_callback_type\"><b><code>Nan::WeakCallbackType</code></b></a></li>\n</ul>\n<p>Also see the V8 Embedders Guide section on <a href=\"https://developers.google.com/v8/embed#handles\">Handles and Garbage Collection</a>.</p>\n<p><a name=\"api_nan_persistent_base\"></a></p>\n<h3 id=\"nan-persistentbase-v8-persistentbase\">Nan::PersistentBase &amp; v8::PersistentBase</h3>\n<p>A persistent handle contains a reference to a storage cell in V8 which holds an object value and which is updated by the garbage collector whenever the object is moved. A new storage cell can be created using the constructor or <code>Nan::PersistentBase::Reset()</code>. Existing handles can be disposed using an argument-less <code>Nan::PersistentBase::Reset()</code>.</p>\n<p>Definition:</p>\n<p><em>(note: this is implemented as <code>Nan::PersistentBase</code> for older versions of V8 and the native <code>v8::PersistentBase</code> is used for newer versions of V8)</em></p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>template&lt;typename&nbsp;T&gt;&nbsp;class&nbsp;PersistentBase&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;If&nbsp;non-empty,&nbsp;destroy&nbsp;the&nbsp;underlying&nbsp;storage&nbsp;cell</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;Reset();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;If&nbsp;non-empty,&nbsp;destroy&nbsp;the&nbsp;underlying&nbsp;storage&nbsp;cell&nbsp;and&nbsp;create&nbsp;a&nbsp;new&nbsp;one&nbsp;with</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;the&nbsp;contents&nbsp;of&nbsp;another&nbsp;if&nbsp;it&nbsp;is&nbsp;also&nbsp;non-empty</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;template&lt;typename&nbsp;S&gt;&nbsp;void&nbsp;Reset(const&nbsp;v8::Local&lt;S&gt;&nbsp;&amp;other);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;If&nbsp;non-empty,&nbsp;destroy&nbsp;the&nbsp;underlying&nbsp;storage&nbsp;cell&nbsp;and&nbsp;create&nbsp;a&nbsp;new&nbsp;one&nbsp;with</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;the&nbsp;contents&nbsp;of&nbsp;another&nbsp;if&nbsp;it&nbsp;is&nbsp;also&nbsp;non-empty</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;template&lt;typename&nbsp;S&gt;&nbsp;void&nbsp;Reset(const&nbsp;PersistentBase&lt;S&gt;&nbsp;&amp;other);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;/**&nbsp;Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;handle&nbsp;is&nbsp;empty.&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;bool&nbsp;IsEmpty()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;If&nbsp;non-empty,&nbsp;destroy&nbsp;the&nbsp;underlying&nbsp;storage&nbsp;cell</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;IsEmpty()&nbsp;will&nbsp;return&nbsp;true&nbsp;after&nbsp;this&nbsp;call.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;Empty();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;template&lt;typename&nbsp;S&gt;&nbsp;bool&nbsp;operator==(const&nbsp;PersistentBase&lt;S&gt;&nbsp;&amp;that);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;template&lt;typename&nbsp;S&gt;&nbsp;bool&nbsp;operator==(const&nbsp;v8::Local&lt;S&gt;&nbsp;&amp;that);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;template&lt;typename&nbsp;S&gt;&nbsp;bool&nbsp;operator!=(const&nbsp;PersistentBase&lt;S&gt;&nbsp;&amp;that);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;template&lt;typename&nbsp;S&gt;&nbsp;bool&nbsp;operator!=(const&nbsp;v8::Local&lt;S&gt;&nbsp;&amp;that);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;Install&nbsp;a&nbsp;finalization&nbsp;callback&nbsp;on&nbsp;this&nbsp;object.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;NOTE:&nbsp;There&nbsp;is&nbsp;no&nbsp;guarantee&nbsp;as&nbsp;to&nbsp;*when*&nbsp;or&nbsp;even&nbsp;*if*&nbsp;the&nbsp;callback&nbsp;is</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;invoked.&nbsp;The&nbsp;invocation&nbsp;is&nbsp;performed&nbsp;solely&nbsp;on&nbsp;a&nbsp;best&nbsp;effort&nbsp;basis.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;As&nbsp;always,&nbsp;GC-based&nbsp;finalization&nbsp;should&nbsp;*not*&nbsp;be&nbsp;relied&nbsp;upon&nbsp;for&nbsp;any</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;critical&nbsp;form&nbsp;of&nbsp;resource&nbsp;management!&nbsp;At&nbsp;the&nbsp;moment&nbsp;you&nbsp;can&nbsp;either</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;specify&nbsp;a&nbsp;parameter&nbsp;for&nbsp;the&nbsp;callback&nbsp;or&nbsp;the&nbsp;location&nbsp;of&nbsp;two&nbsp;internal</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;fields&nbsp;in&nbsp;the&nbsp;dying&nbsp;object.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;template&lt;typename&nbsp;P&gt;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;SetWeak(P&nbsp;*parameter,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;typename&nbsp;WeakCallbackInfo&lt;P&gt;::Callback&nbsp;callback,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WeakCallbackType&nbsp;type);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;ClearWeak();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;Marks&nbsp;the&nbsp;reference&nbsp;to&nbsp;this&nbsp;object&nbsp;independent.&nbsp;Garbage&nbsp;collector&nbsp;is&nbsp;free</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;to&nbsp;ignore&nbsp;any&nbsp;object&nbsp;groups&nbsp;containing&nbsp;this&nbsp;object.&nbsp;Weak&nbsp;callback&nbsp;for&nbsp;an</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;independent&nbsp;handle&nbsp;should&nbsp;not&nbsp;assume&nbsp;that&nbsp;it&nbsp;will&nbsp;be&nbsp;preceded&nbsp;by&nbsp;a&nbsp;global</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;GC&nbsp;prologue&nbsp;callback&nbsp;or&nbsp;followed&nbsp;by&nbsp;a&nbsp;global&nbsp;GC&nbsp;epilogue&nbsp;callback.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;MarkIndependent()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;bool&nbsp;IsIndependent()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;/**&nbsp;Checks&nbsp;if&nbsp;the&nbsp;handle&nbsp;holds&nbsp;the&nbsp;only&nbsp;reference&nbsp;to&nbsp;an&nbsp;object.&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;bool&nbsp;IsNearDeath()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;/**&nbsp;Returns&nbsp;true&nbsp;if&nbsp;the&nbsp;handle&#39;s&nbsp;reference&nbsp;is&nbsp;weak.&nbsp;&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;bool&nbsp;IsWeak()&nbsp;const</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div></pre><p>See the V8 documentation for <a href=\"https://v8docs.nodesource.com/node-8.11/d4/dca/classv8_1_1_persistent_base.html\"><code>PersistentBase</code></a> for further information.</p>\n<p><strong>Tip:</strong> To get a <code>v8::Local</code> reference to the original object back from a <code>PersistentBase</code> or <code>Persistent</code> object:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Object&gt;&nbsp;object&nbsp;=&nbsp;Nan::New(persistent);</span></span></div></pre><p><a name=\"api_nan_non_copyable_persistent_traits\"></a></p>\n<h3 id=\"nan-noncopyablepersistenttraits-v8-noncopyablepersistenttraits\">Nan::NonCopyablePersistentTraits &amp; v8::NonCopyablePersistentTraits</h3>\n<p>Default traits for <code>Nan::Persistent</code>. This class does not allow use of the a copy constructor or assignment operator. At present <code>kResetInDestructor</code> is not set, but that will change in a future version.</p>\n<p>Definition:</p>\n<p><em>(note: this is implemented as <code>Nan::NonCopyablePersistentTraits</code> for older versions of V8 and the native <code>v8::NonCopyablePersistentTraits</code> is used for newer versions of V8)</em></p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>template&lt;typename&nbsp;T&gt;&nbsp;class&nbsp;NonCopyablePersistentTraits&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;typedef&nbsp;Persistent&lt;T,&nbsp;NonCopyablePersistentTraits&lt;T&gt;&nbsp;&gt;&nbsp;NonCopyablePersistent;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;static&nbsp;const&nbsp;bool&nbsp;kResetInDestructor&nbsp;=&nbsp;false;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;template&lt;typename&nbsp;S,&nbsp;typename&nbsp;M&gt;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;static&nbsp;void&nbsp;Copy(const&nbsp;Persistent&lt;S,&nbsp;M&gt;&nbsp;&amp;source,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NonCopyablePersistent&nbsp;*dest);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;template&lt;typename&nbsp;O&gt;&nbsp;static&nbsp;void&nbsp;Uncompilable();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div></pre><p>See the V8 documentation for <a href=\"https://v8docs.nodesource.com/node-8.11/de/d73/classv8_1_1_non_copyable_persistent_traits.html\"><code>NonCopyablePersistentTraits</code></a> for further information.</p>\n<p><a name=\"api_nan_copyable_persistent_traits\"></a></p>\n<h3 id=\"nan-copyablepersistenttraits-v8-copyablepersistenttraits\">Nan::CopyablePersistentTraits &amp; v8::CopyablePersistentTraits</h3>\n<p>A helper class of traits to allow copying and assignment of <code>Persistent</code>. This will clone the contents of storage cell, but not any of the flags, etc..</p>\n<p>Definition:</p>\n<p><em>(note: this is implemented as <code>Nan::CopyablePersistentTraits</code> for older versions of V8 and the native <code>v8::NonCopyablePersistentTraits</code> is used for newer versions of V8)</em></p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>template&lt;typename&nbsp;T&gt;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>class&nbsp;CopyablePersistentTraits&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;typedef&nbsp;Persistent&lt;T,&nbsp;CopyablePersistentTraits&lt;T&gt;&nbsp;&gt;&nbsp;CopyablePersistent;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;static&nbsp;const&nbsp;bool&nbsp;kResetInDestructor&nbsp;=&nbsp;true;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;template&lt;typename&nbsp;S,&nbsp;typename&nbsp;M&gt;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;static&nbsp;void&nbsp;Copy(const&nbsp;Persistent&lt;S,&nbsp;M&gt;&nbsp;&amp;source,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CopyablePersistent&nbsp;*dest);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div></pre><p>See the V8 documentation for <a href=\"https://v8docs.nodesource.com/node-8.11/da/d5c/structv8_1_1_copyable_persistent_traits.html\"><code>CopyablePersistentTraits</code></a> for further information.</p>\n<p><a name=\"api_nan_persistent\"></a></p>\n<h3 id=\"nan-persistent\">Nan::Persistent</h3>\n<p>A type of <code>PersistentBase</code> which allows copy and assignment. Copy, assignment and destructor behavior is controlled by the traits class <code>M</code>.</p>\n<p>Definition:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>template&lt;typename&nbsp;T,&nbsp;typename&nbsp;M&nbsp;=&nbsp;NonCopyablePersistentTraits&lt;T&gt;&nbsp;&gt;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>class&nbsp;Persistent;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>template&lt;typename&nbsp;T,&nbsp;typename&nbsp;M&gt;&nbsp;class&nbsp;Persistent&nbsp;:&nbsp;public&nbsp;PersistentBase&lt;T&gt;&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;*&nbsp;A&nbsp;Persistent&nbsp;with&nbsp;no&nbsp;storage&nbsp;cell.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Persistent();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;Construct&nbsp;a&nbsp;Persistent&nbsp;from&nbsp;a&nbsp;v8::Local.&nbsp;When&nbsp;the&nbsp;v8::Local&nbsp;is&nbsp;non-empty,&nbsp;a</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;new&nbsp;storage&nbsp;cell&nbsp;is&nbsp;created&nbsp;pointing&nbsp;to&nbsp;the&nbsp;same&nbsp;object,&nbsp;and&nbsp;no&nbsp;flags&nbsp;are</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;set.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;template&lt;typename&nbsp;S&gt;&nbsp;Persistent(v8::Local&lt;S&gt;&nbsp;that);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;Construct&nbsp;a&nbsp;Persistent&nbsp;from&nbsp;a&nbsp;Persistent.&nbsp;When&nbsp;the&nbsp;Persistent&nbsp;is&nbsp;non-empty,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;a&nbsp;new&nbsp;storage&nbsp;cell&nbsp;is&nbsp;created&nbsp;pointing&nbsp;to&nbsp;the&nbsp;same&nbsp;object,&nbsp;and&nbsp;no&nbsp;flags&nbsp;are</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;set.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Persistent(const&nbsp;Persistent&nbsp;&amp;that);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;The&nbsp;copy&nbsp;constructors&nbsp;and&nbsp;assignment&nbsp;operator&nbsp;create&nbsp;a&nbsp;Persistent&nbsp;exactly</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;as&nbsp;the&nbsp;Persistent&nbsp;constructor,&nbsp;but&nbsp;the&nbsp;Copy&nbsp;function&nbsp;from&nbsp;the&nbsp;traits&nbsp;class</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;is&nbsp;called,&nbsp;allowing&nbsp;the&nbsp;setting&nbsp;of&nbsp;flags&nbsp;based&nbsp;on&nbsp;the&nbsp;copied&nbsp;Persistent.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Persistent&nbsp;&amp;operator=(const&nbsp;Persistent&nbsp;&amp;that);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;template&nbsp;&lt;typename&nbsp;S,&nbsp;typename&nbsp;M2&gt;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Persistent&nbsp;&amp;operator=(const&nbsp;Persistent&lt;S,&nbsp;M2&gt;&nbsp;&amp;that);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;The&nbsp;destructor&nbsp;will&nbsp;dispose&nbsp;the&nbsp;Persistent&nbsp;based&nbsp;on&nbsp;the&nbsp;kResetInDestructor</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;flags&nbsp;in&nbsp;the&nbsp;traits&nbsp;class.&nbsp;&nbsp;Since&nbsp;not&nbsp;calling&nbsp;dispose&nbsp;can&nbsp;result&nbsp;in&nbsp;a</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;memory&nbsp;leak,&nbsp;it&nbsp;is&nbsp;recommended&nbsp;to&nbsp;always&nbsp;set&nbsp;this&nbsp;flag.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;~Persistent();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div></pre><p>See the V8 documentation for <a href=\"https://v8docs.nodesource.com/node-8.11/d2/d78/classv8_1_1_persistent.html\"><code>Persistent</code></a> for further information.</p>\n<p><a name=\"api_nan_global\"></a></p>\n<h3 id=\"nan-global\">Nan::Global</h3>\n<p>A type of <code>PersistentBase</code> which has move semantics.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>template&lt;typename&nbsp;T&gt;&nbsp;class&nbsp;Global&nbsp;:&nbsp;public&nbsp;PersistentBase&lt;T&gt;&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;A&nbsp;Global&nbsp;with&nbsp;no&nbsp;storage&nbsp;cell.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Global();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;Construct&nbsp;a&nbsp;Global&nbsp;from&nbsp;a&nbsp;v8::Local.&nbsp;When&nbsp;the&nbsp;v8::Local&nbsp;is&nbsp;non-empty,&nbsp;a&nbsp;new</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;storage&nbsp;cell&nbsp;is&nbsp;created&nbsp;pointing&nbsp;to&nbsp;the&nbsp;same&nbsp;object,&nbsp;and&nbsp;no&nbsp;flags&nbsp;are&nbsp;set.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;template&lt;typename&nbsp;S&gt;&nbsp;Global(v8::Local&lt;S&gt;&nbsp;that);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;Construct&nbsp;a&nbsp;Global&nbsp;from&nbsp;a&nbsp;PersistentBase.&nbsp;When&nbsp;the&nbsp;Persistent&nbsp;is&nbsp;non-empty,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;a&nbsp;new&nbsp;storage&nbsp;cell&nbsp;is&nbsp;created&nbsp;pointing&nbsp;to&nbsp;the&nbsp;same&nbsp;object,&nbsp;and&nbsp;no&nbsp;flags&nbsp;are</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;set.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;template&lt;typename&nbsp;S&gt;&nbsp;Global(const&nbsp;PersistentBase&lt;S&gt;&nbsp;&amp;that);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;Pass&nbsp;allows&nbsp;returning&nbsp;globals&nbsp;from&nbsp;functions,&nbsp;etc.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Global&nbsp;Pass();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div></pre><p>See the V8 documentation for <a href=\"https://v8docs.nodesource.com/node-8.11/d5/d40/classv8_1_1_global.html\"><code>Global</code></a> for further information.</p>\n<p><a name=\"api_nan_weak_callback_info\"></a></p>\n<h3 id=\"nan-weakcallbackinfo\">Nan::WeakCallbackInfo</h3>\n<p><code>Nan::WeakCallbackInfo</code> is used as an argument when setting a persistent reference as weak. You may need to free any external resources attached to the object. It is a mirror of <code>v8:WeakCallbackInfo</code> as found in newer versions of V8.</p>\n<p>Definition:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>template&lt;typename&nbsp;T&gt;&nbsp;class&nbsp;WeakCallbackInfo&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;typedef&nbsp;void&nbsp;(*Callback)(const&nbsp;WeakCallbackInfo&lt;T&gt;&amp;&nbsp;data);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Isolate&nbsp;*GetIsolate()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;Get&nbsp;the&nbsp;parameter&nbsp;that&nbsp;was&nbsp;associated&nbsp;with&nbsp;the&nbsp;weak&nbsp;handle.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;T&nbsp;*GetParameter()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*&nbsp;Get&nbsp;pointer&nbsp;from&nbsp;internal&nbsp;field,&nbsp;index&nbsp;can&nbsp;be&nbsp;0&nbsp;or&nbsp;1.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;*/</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;void&nbsp;*GetInternalField(int&nbsp;index)&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div></pre><p>Example usage:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;weakCallback(const&nbsp;WeakCallbackInfo&lt;int&gt;&nbsp;&amp;data)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;int&nbsp;*parameter&nbsp;=&nbsp;data.GetParameter();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;delete&nbsp;parameter;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Persistent&lt;v8::Object&gt;&nbsp;obj;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>int&nbsp;*data&nbsp;=&nbsp;new&nbsp;int(0);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>obj.SetWeak(data,&nbsp;callback,&nbsp;WeakCallbackType::kParameter);</span></span></div></pre><p>See the V8 documentation for <a href=\"https://v8docs.nodesource.com/node-8.11/d8/d06/classv8_1_1_weak_callback_info.html\"><code>WeakCallbackInfo</code></a> for further information.</p>\n<p><a name=\"api_nan_weak_callback_type\"></a></p>\n<h3 id=\"nan-weakcallbacktype\">Nan::WeakCallbackType</h3>\n<p>Represents the type of a weak callback.\nA weak callback of type <code>kParameter</code> makes the supplied parameter to <code>Nan::PersistentBase::SetWeak</code> available through <code>WeakCallbackInfo::GetParameter</code>.\nA weak callback of type <code>kInternalFields</code> uses up to two internal fields at indices 0 and 1 on the <code>Nan::PersistentBase&lt;v8::Object&gt;</code> being made weak.\nNote that only <code>v8::Object</code>s and derivatives can have internal fields.</p>\n<p>Definition:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>enum&nbsp;class&nbsp;WeakCallbackType&nbsp;{&nbsp;kParameter,&nbsp;kInternalFields&nbsp;};</span></span></div></pre>"
      ],
      "contentsRaw": "## Persistent references\n\nAn object reference that is independent of any `HandleScope` is a _persistent_ reference. Where a `Local` handle only lives as long as the `HandleScope` in which it was allocated, a `Persistent` handle remains valid until it is explicitly disposed.\n\nDue to the evolution of the V8 API, it is necessary for NAN to provide a wrapper implementation of the `Persistent` classes to supply compatibility across the V8 versions supported.\n\n - <a href=\"#api_nan_persistent_base\"><b><code>Nan::PersistentBase & v8::PersistentBase</code></b></a>\n - <a href=\"#api_nan_non_copyable_persistent_traits\"><b><code>Nan::NonCopyablePersistentTraits & v8::NonCopyablePersistentTraits</code></b></a>\n - <a href=\"#api_nan_copyable_persistent_traits\"><b><code>Nan::CopyablePersistentTraits & v8::CopyablePersistentTraits</code></b></a>\n - <a href=\"#api_nan_persistent\"><b><code>Nan::Persistent</code></b></a>\n - <a href=\"#api_nan_global\"><b><code>Nan::Global</code></b></a>\n - <a href=\"#api_nan_weak_callback_info\"><b><code>Nan::WeakCallbackInfo</code></b></a>\n - <a href=\"#api_nan_weak_callback_type\"><b><code>Nan::WeakCallbackType</code></b></a>\n\nAlso see the V8 Embedders Guide section on [Handles and Garbage Collection](https://developers.google.com/v8/embed#handles).\n\n<a name=\"api_nan_persistent_base\"></a>\n### Nan::PersistentBase & v8::PersistentBase\n\nA persistent handle contains a reference to a storage cell in V8 which holds an object value and which is updated by the garbage collector whenever the object is moved. A new storage cell can be created using the constructor or `Nan::PersistentBase::Reset()`. Existing handles can be disposed using an argument-less `Nan::PersistentBase::Reset()`.\n\nDefinition:\n\n_(note: this is implemented as `Nan::PersistentBase` for older versions of V8 and the native `v8::PersistentBase` is used for newer versions of V8)_\n\n```c++\ntemplate<typename T> class PersistentBase {\n public:\n  /**\n   * If non-empty, destroy the underlying storage cell\n   */\n  void Reset();\n\n  /**\n   * If non-empty, destroy the underlying storage cell and create a new one with\n   * the contents of another if it is also non-empty\n   */\n  template<typename S> void Reset(const v8::Local<S> &other);\n\n  /**\n   * If non-empty, destroy the underlying storage cell and create a new one with\n   * the contents of another if it is also non-empty\n   */\n  template<typename S> void Reset(const PersistentBase<S> &other);\n\n  /** Returns true if the handle is empty. */\n  bool IsEmpty() const;\n\n  /**\n   * If non-empty, destroy the underlying storage cell\n   * IsEmpty() will return true after this call.\n   */\n  void Empty();\n\n  template<typename S> bool operator==(const PersistentBase<S> &that);\n\n  template<typename S> bool operator==(const v8::Local<S> &that);\n\n  template<typename S> bool operator!=(const PersistentBase<S> &that);\n\n  template<typename S> bool operator!=(const v8::Local<S> &that);\n\n   /**\n   *  Install a finalization callback on this object.\n   *  NOTE: There is no guarantee as to *when* or even *if* the callback is\n   *  invoked. The invocation is performed solely on a best effort basis.\n   *  As always, GC-based finalization should *not* be relied upon for any\n   *  critical form of resource management! At the moment you can either\n   *  specify a parameter for the callback or the location of two internal\n   *  fields in the dying object.\n   */\n  template<typename P>\n  void SetWeak(P *parameter,\n               typename WeakCallbackInfo<P>::Callback callback,\n               WeakCallbackType type);\n\n  void ClearWeak();\n\n  /**\n   * Marks the reference to this object independent. Garbage collector is free\n   * to ignore any object groups containing this object. Weak callback for an\n   * independent handle should not assume that it will be preceded by a global\n   * GC prologue callback or followed by a global GC epilogue callback.\n   */\n  void MarkIndependent() const;\n\n  bool IsIndependent() const;\n\n  /** Checks if the handle holds the only reference to an object. */\n  bool IsNearDeath() const;\n\n  /** Returns true if the handle's reference is weak.  */\n  bool IsWeak() const\n};\n```\n\nSee the V8 documentation for [`PersistentBase`](https://v8docs.nodesource.com/node-8.11/d4/dca/classv8_1_1_persistent_base.html) for further information.\n\n**Tip:** To get a `v8::Local` reference to the original object back from a `PersistentBase` or `Persistent` object:\n\n```c++\nv8::Local<v8::Object> object = Nan::New(persistent);\n```\n\n<a name=\"api_nan_non_copyable_persistent_traits\"></a>\n### Nan::NonCopyablePersistentTraits & v8::NonCopyablePersistentTraits\n\nDefault traits for `Nan::Persistent`. This class does not allow use of the a copy constructor or assignment operator. At present `kResetInDestructor` is not set, but that will change in a future version.\n\nDefinition:\n\n_(note: this is implemented as `Nan::NonCopyablePersistentTraits` for older versions of V8 and the native `v8::NonCopyablePersistentTraits` is used for newer versions of V8)_\n\n```c++\ntemplate<typename T> class NonCopyablePersistentTraits {\n public:\n  typedef Persistent<T, NonCopyablePersistentTraits<T> > NonCopyablePersistent;\n\n  static const bool kResetInDestructor = false;\n\n  template<typename S, typename M>\n  static void Copy(const Persistent<S, M> &source,\n                   NonCopyablePersistent *dest);\n\n  template<typename O> static void Uncompilable();\n};\n```\n\nSee the V8 documentation for [`NonCopyablePersistentTraits`](https://v8docs.nodesource.com/node-8.11/de/d73/classv8_1_1_non_copyable_persistent_traits.html) for further information.\n\n<a name=\"api_nan_copyable_persistent_traits\"></a>\n### Nan::CopyablePersistentTraits & v8::CopyablePersistentTraits\n\nA helper class of traits to allow copying and assignment of `Persistent`. This will clone the contents of storage cell, but not any of the flags, etc..\n\nDefinition:\n\n_(note: this is implemented as `Nan::CopyablePersistentTraits` for older versions of V8 and the native `v8::NonCopyablePersistentTraits` is used for newer versions of V8)_\n\n```c++\ntemplate<typename T>\nclass CopyablePersistentTraits {\n public:\n  typedef Persistent<T, CopyablePersistentTraits<T> > CopyablePersistent;\n\n  static const bool kResetInDestructor = true;\n\n  template<typename S, typename M>\n  static void Copy(const Persistent<S, M> &source,\n                   CopyablePersistent *dest);\n};\n```\n\nSee the V8 documentation for [`CopyablePersistentTraits`](https://v8docs.nodesource.com/node-8.11/da/d5c/structv8_1_1_copyable_persistent_traits.html) for further information.\n\n<a name=\"api_nan_persistent\"></a>\n### Nan::Persistent\n\nA type of `PersistentBase` which allows copy and assignment. Copy, assignment and destructor behavior is controlled by the traits class `M`.\n\nDefinition:\n\n```c++\ntemplate<typename T, typename M = NonCopyablePersistentTraits<T> >\nclass Persistent;\n\ntemplate<typename T, typename M> class Persistent : public PersistentBase<T> {\n public:\n /**\n  * A Persistent with no storage cell.\n  */\n  Persistent();\n\n  /**\n   * Construct a Persistent from a v8::Local. When the v8::Local is non-empty, a\n   * new storage cell is created pointing to the same object, and no flags are\n   * set.\n   */\n  template<typename S> Persistent(v8::Local<S> that);\n\n  /**\n   * Construct a Persistent from a Persistent. When the Persistent is non-empty,\n   * a new storage cell is created pointing to the same object, and no flags are\n   * set.\n   */\n  Persistent(const Persistent &that);\n\n  /**\n   * The copy constructors and assignment operator create a Persistent exactly\n   * as the Persistent constructor, but the Copy function from the traits class\n   * is called, allowing the setting of flags based on the copied Persistent.\n   */\n  Persistent &operator=(const Persistent &that);\n\n  template <typename S, typename M2>\n  Persistent &operator=(const Persistent<S, M2> &that);\n\n  /**\n   * The destructor will dispose the Persistent based on the kResetInDestructor\n   * flags in the traits class.  Since not calling dispose can result in a\n   * memory leak, it is recommended to always set this flag.\n   */\n  ~Persistent();\n};\n```\n\nSee the V8 documentation for [`Persistent`](https://v8docs.nodesource.com/node-8.11/d2/d78/classv8_1_1_persistent.html) for further information.\n\n<a name=\"api_nan_global\"></a>\n### Nan::Global\n\nA type of `PersistentBase` which has move semantics.\n\n```c++\ntemplate<typename T> class Global : public PersistentBase<T> {\n public:\n  /**\n   * A Global with no storage cell.\n   */\n  Global();\n\n  /**\n   * Construct a Global from a v8::Local. When the v8::Local is non-empty, a new\n   * storage cell is created pointing to the same object, and no flags are set.\n   */\n  template<typename S> Global(v8::Local<S> that);\n  /**\n   * Construct a Global from a PersistentBase. When the Persistent is non-empty,\n   * a new storage cell is created pointing to the same object, and no flags are\n   * set.\n   */\n  template<typename S> Global(const PersistentBase<S> &that);\n\n  /**\n   * Pass allows returning globals from functions, etc.\n   */\n  Global Pass();\n};\n```\n\nSee the V8 documentation for [`Global`](https://v8docs.nodesource.com/node-8.11/d5/d40/classv8_1_1_global.html) for further information.\n\n<a name=\"api_nan_weak_callback_info\"></a>\n### Nan::WeakCallbackInfo\n\n`Nan::WeakCallbackInfo` is used as an argument when setting a persistent reference as weak. You may need to free any external resources attached to the object. It is a mirror of `v8:WeakCallbackInfo` as found in newer versions of V8.\n\nDefinition:\n\n```c++\ntemplate<typename T> class WeakCallbackInfo {\n public:\n  typedef void (*Callback)(const WeakCallbackInfo<T>& data);\n\n  v8::Isolate *GetIsolate() const;\n\n  /**\n   * Get the parameter that was associated with the weak handle.\n   */\n  T *GetParameter() const;\n\n  /**\n   * Get pointer from internal field, index can be 0 or 1.\n   */\n  void *GetInternalField(int index) const;\n};\n```\n\nExample usage:\n\n```c++\nvoid weakCallback(const WeakCallbackInfo<int> &data) {\n  int *parameter = data.GetParameter();\n  delete parameter;\n}\n\nPersistent<v8::Object> obj;\nint *data = new int(0);\nobj.SetWeak(data, callback, WeakCallbackType::kParameter);\n```\n\nSee the V8 documentation for [`WeakCallbackInfo`](https://v8docs.nodesource.com/node-8.11/d8/d06/classv8_1_1_weak_callback_info.html) for further information.\n\n<a name=\"api_nan_weak_callback_type\"></a>\n### Nan::WeakCallbackType\n\nRepresents the type of a weak callback.\nA weak callback of type `kParameter` makes the supplied parameter to `Nan::PersistentBase::SetWeak` available through `WeakCallbackInfo::GetParameter`.\nA weak callback of type `kInternalFields` uses up to two internal fields at indices 0 and 1 on the `Nan::PersistentBase<v8::Object>` being made weak.\nNote that only `v8::Object`s and derivatives can have internal fields.\n\nDefinition:\n\n```c++\nenum class WeakCallbackType { kParameter, kInternalFields };\n```",
      "metadata": {}
    },
    "scopes": {
      "reference": "scopes",
      "route": "scopes",
      "sourcePath": "src\\docs-data\\node_modules\\nan\\doc\\scopes.md",
      "title": "(untitled)",
      "contents": [
        "<h2 id=\"scopes\">Scopes</h2>\n<p>A <em>local handle</em> is a pointer to an object. All V8 objects are accessed using handles, they are necessary because of the way the V8 garbage collector works.</p>\n<p>A handle scope can be thought of as a container for any number of handles. When you&#39;ve finished with your handles, instead of deleting each one individually you can simply delete their scope.</p>\n<p>The creation of <code>HandleScope</code> objects is different across the supported versions of V8. Therefore, NAN provides its own implementations that can be used safely across these.</p>\n<ul>\n<li><a href=\"#api_nan_handle_scope\"><b><code>Nan::HandleScope</code></b></a></li>\n<li><a href=\"#api_nan_escapable_handle_scope\"><b><code>Nan::EscapableHandleScope</code></b></a></li>\n</ul>\n<p>Also see the V8 Embedders Guide section on <a href=\"https://github.com/v8/v8/wiki/Embedder%27s%20Guide#handles-and-garbage-collection\">Handles and Garbage Collection</a>.</p>\n<p><a name=\"api_nan_handle_scope\"></a></p>\n<h3 id=\"nan-handlescope\">Nan::HandleScope</h3>\n<p>A simple wrapper around <a href=\"https://v8docs.nodesource.com/node-8.11/d3/d95/classv8_1_1_handle_scope.html\"><code>v8::HandleScope</code></a>.</p>\n<p>Definition:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>class&nbsp;Nan::HandleScope&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Nan::HandleScope();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;static&nbsp;int&nbsp;NumberOfHandles();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div></pre><p>Allocate a new <code>Nan::HandleScope</code> whenever you are creating new V8 JavaScript objects. Note that an implicit <code>HandleScope</code> is created for you on JavaScript-accessible methods so you do not need to insert one yourself.</p>\n<p>Example:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>//&nbsp;new&nbsp;object&nbsp;is&nbsp;created,&nbsp;it&nbsp;needs&nbsp;a&nbsp;new&nbsp;scope:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Pointless()&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Nan::HandleScope&nbsp;scope;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Object&gt;&nbsp;obj&nbsp;=&nbsp;Nan::New&lt;v8::Object&gt;();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>//&nbsp;JavaScript-accessible&nbsp;method&nbsp;already&nbsp;has&nbsp;a&nbsp;HandleScope</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>NAN_METHOD(Pointless2)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Object&gt;&nbsp;obj&nbsp;=&nbsp;Nan::New&lt;v8::Object&gt;();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div></pre><p><a name=\"api_nan_escapable_handle_scope\"></a></p>\n<h3 id=\"nan-escapablehandlescope\">Nan::EscapableHandleScope</h3>\n<p>Similar to <a href=\"#api_nan_handle_scope\"><code>Nan::HandleScope</code></a> but should be used in cases where a function needs to return a V8 JavaScript type that has been created within it.</p>\n<p>Definition:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>class&nbsp;Nan::EscapableHandleScope&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Nan::EscapableHandleScope();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;static&nbsp;int&nbsp;NumberOfHandles();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;template&lt;typename&nbsp;T&gt;&nbsp;v8::Local&lt;T&gt;&nbsp;Escape(v8::Local&lt;T&gt;&nbsp;value);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div></pre><p>Use <code>Escape(value)</code> to return the object.</p>\n<p>Example:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Object&gt;&nbsp;EmptyObj()&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Nan::EscapableHandleScope&nbsp;scope;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;v8::Object&gt;&nbsp;obj&nbsp;=&nbsp;Nan::New&lt;v8::Object&gt;();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;return&nbsp;scope.Escape(obj);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div></pre>"
      ],
      "contentsRaw": "## Scopes\n\nA _local handle_ is a pointer to an object. All V8 objects are accessed using handles, they are necessary because of the way the V8 garbage collector works.\n\nA handle scope can be thought of as a container for any number of handles. When you've finished with your handles, instead of deleting each one individually you can simply delete their scope.\n\nThe creation of `HandleScope` objects is different across the supported versions of V8. Therefore, NAN provides its own implementations that can be used safely across these.\n\n - <a href=\"#api_nan_handle_scope\"><b><code>Nan::HandleScope</code></b></a>\n - <a href=\"#api_nan_escapable_handle_scope\"><b><code>Nan::EscapableHandleScope</code></b></a>\n\nAlso see the V8 Embedders Guide section on [Handles and Garbage Collection](https://github.com/v8/v8/wiki/Embedder%27s%20Guide#handles-and-garbage-collection).\n\n<a name=\"api_nan_handle_scope\"></a>\n### Nan::HandleScope\n\nA simple wrapper around [`v8::HandleScope`](https://v8docs.nodesource.com/node-8.11/d3/d95/classv8_1_1_handle_scope.html).\n\nDefinition:\n\n```c++\nclass Nan::HandleScope {\n public:\n  Nan::HandleScope();\n  static int NumberOfHandles();\n};\n```\n\nAllocate a new `Nan::HandleScope` whenever you are creating new V8 JavaScript objects. Note that an implicit `HandleScope` is created for you on JavaScript-accessible methods so you do not need to insert one yourself.\n\nExample:\n\n```c++\n// new object is created, it needs a new scope:\nvoid Pointless() {\n  Nan::HandleScope scope;\n  v8::Local<v8::Object> obj = Nan::New<v8::Object>();\n}\n\n// JavaScript-accessible method already has a HandleScope\nNAN_METHOD(Pointless2) {\n  v8::Local<v8::Object> obj = Nan::New<v8::Object>();\n}\n```\n\n<a name=\"api_nan_escapable_handle_scope\"></a>\n### Nan::EscapableHandleScope\n\nSimilar to [`Nan::HandleScope`](#api_nan_handle_scope) but should be used in cases where a function needs to return a V8 JavaScript type that has been created within it.\n\nDefinition:\n\n```c++\nclass Nan::EscapableHandleScope {\n public:\n  Nan::EscapableHandleScope();\n  static int NumberOfHandles();\n  template<typename T> v8::Local<T> Escape(v8::Local<T> value);\n}\n```\n\nUse `Escape(value)` to return the object.\n\nExample:\n\n```c++\nv8::Local<v8::Object> EmptyObj() {\n  Nan::EscapableHandleScope scope;\n  v8::Local<v8::Object> obj = Nan::New<v8::Object>();\n  return scope.Escape(obj);\n}\n```",
      "metadata": {}
    },
    "script": {
      "reference": "script",
      "route": "script",
      "sourcePath": "src\\docs-data\\node_modules\\nan\\doc\\script.md",
      "title": "(untitled)",
      "contents": [
        "<h2 id=\"script\">Script</h2>\n<p>NAN provides a <code>v8::Script</code> helpers as the API has changed over the supported versions of V8.</p>\n<ul>\n<li><a href=\"#api_nan_compile_script\"><b><code>Nan::CompileScript()</code></b></a></li>\n<li><a href=\"#api_nan_run_script\"><b><code>Nan::RunScript()</code></b></a></li>\n</ul>\n<p><a name=\"api_nan_compile_script\"></a></p>\n<h3 id=\"nan-compilescript-\">Nan::CompileScript()</h3>\n<p>A wrapper around <a href=\"https://v8docs.nodesource.com/node-8.11/da/da5/classv8_1_1_script_compiler.html#a93f5072a0db55d881b969e9fc98e564b\"><code>v8::ScriptCompiler::Compile()</code></a>.</p>\n<p>Note that <code>Nan::BoundScript</code> is an alias for <code>v8::Script</code>.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;Nan::BoundScript&gt;&nbsp;Nan::CompileScript(</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::String&gt;&nbsp;s,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;v8::ScriptOrigin&amp;&nbsp;origin);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;Nan::BoundScript&gt;&nbsp;Nan::CompileScript(v8::Local&lt;v8::String&gt;&nbsp;s);</span></span></div></pre><p><a name=\"api_nan_run_script\"></a></p>\n<h3 id=\"nan-runscript-\">Nan::RunScript()</h3>\n<p>Calls <code>script-&gt;Run()</code> or <code>script-&gt;BindToCurrentContext()-&gt;Run(Nan::GetCurrentContext())</code>.</p>\n<p>Note that <code>Nan::BoundScript</code> is an alias for <code>v8::Script</code> and <code>Nan::UnboundScript</code> is an alias for <code>v8::UnboundScript</code> where available and <code>v8::Script</code> on older versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Value&gt;&nbsp;Nan::RunScript(v8::Local&lt;Nan::UnboundScript&gt;&nbsp;script)</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Nan::MaybeLocal&lt;v8::Value&gt;&nbsp;Nan::RunScript(v8::Local&lt;Nan::BoundScript&gt;&nbsp;script)&nbsp;</span></span></div></pre>"
      ],
      "contentsRaw": "## Script\n\nNAN provides a `v8::Script` helpers as the API has changed over the supported versions of V8.\n\n - <a href=\"#api_nan_compile_script\"><b><code>Nan::CompileScript()</code></b></a>\n - <a href=\"#api_nan_run_script\"><b><code>Nan::RunScript()</code></b></a>\n\n\n<a name=\"api_nan_compile_script\"></a>\n### Nan::CompileScript()\n\nA wrapper around [`v8::ScriptCompiler::Compile()`](https://v8docs.nodesource.com/node-8.11/da/da5/classv8_1_1_script_compiler.html#a93f5072a0db55d881b969e9fc98e564b).\n\nNote that `Nan::BoundScript` is an alias for `v8::Script`.\n\nSignature:\n\n```c++\nNan::MaybeLocal<Nan::BoundScript> Nan::CompileScript(\n    v8::Local<v8::String> s,\n    const v8::ScriptOrigin& origin);\nNan::MaybeLocal<Nan::BoundScript> Nan::CompileScript(v8::Local<v8::String> s);\n```\n\n\n<a name=\"api_nan_run_script\"></a>\n### Nan::RunScript()\n\nCalls `script->Run()` or `script->BindToCurrentContext()->Run(Nan::GetCurrentContext())`.\n\nNote that `Nan::BoundScript` is an alias for `v8::Script` and `Nan::UnboundScript` is an alias for `v8::UnboundScript` where available and `v8::Script` on older versions of V8.\n\nSignature:\n\n```c++\nNan::MaybeLocal<v8::Value> Nan::RunScript(v8::Local<Nan::UnboundScript> script)\nNan::MaybeLocal<v8::Value> Nan::RunScript(v8::Local<Nan::BoundScript> script) \n```",
      "metadata": {}
    },
    "string_bytes": {
      "reference": "string_bytes",
      "route": "string_bytes",
      "sourcePath": "src\\docs-data\\node_modules\\nan\\doc\\string_bytes.md",
      "title": "(untitled)",
      "contents": [
        "<h2 id=\"strings-bytes\">Strings &amp; Bytes</h2>\n<p>Miscellaneous string &amp; byte encoding and decoding functionality provided for compatibility across supported versions of V8 and Node. Implemented by NAN to ensure that all encoding types are supported, even for older versions of Node where they are missing.</p>\n<ul>\n<li><a href=\"#api_nan_encoding\"><b><code>Nan::Encoding</code></b></a></li>\n<li><a href=\"#api_nan_encode\"><b><code>Nan::Encode()</code></b></a></li>\n<li><a href=\"#api_nan_decode_bytes\"><b><code>Nan::DecodeBytes()</code></b></a></li>\n<li><a href=\"#api_nan_decode_write\"><b><code>Nan::DecodeWrite()</code></b></a></li>\n</ul>\n<p><a name=\"api_nan_encoding\"></a></p>\n<h3 id=\"nan-encoding\">Nan::Encoding</h3>\n<p>An enum representing the supported encoding types. A copy of <code>node::encoding</code> that is consistent across versions of Node.</p>\n<p>Definition:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>enum&nbsp;Nan::Encoding&nbsp;{&nbsp;ASCII,&nbsp;UTF8,&nbsp;BASE64,&nbsp;UCS2,&nbsp;BINARY,&nbsp;HEX,&nbsp;BUFFER&nbsp;}</span></span></div></pre><p><a name=\"api_nan_encode\"></a></p>\n<h3 id=\"nan-encode-\">Nan::Encode()</h3>\n<p>A wrapper around <code>node::Encode()</code> that provides a consistent implementation across supported versions of Node.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Value&gt;&nbsp;Nan::Encode(const&nbsp;void&nbsp;*buf,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;len,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;enum&nbsp;Nan::Encoding&nbsp;encoding&nbsp;=&nbsp;BINARY);</span></span></div></pre><p><a name=\"api_nan_decode_bytes\"></a></p>\n<h3 id=\"nan-decodebytes-\">Nan::DecodeBytes()</h3>\n<p>A wrapper around <code>node::DecodeBytes()</code> that provides a consistent implementation across supported versions of Node.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>ssize_t&nbsp;Nan::DecodeBytes(v8::Local&lt;v8::Value&gt;&nbsp;val,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;enum&nbsp;Nan::Encoding&nbsp;encoding&nbsp;=&nbsp;BINARY);</span></span></div></pre><p><a name=\"api_nan_decode_write\"></a></p>\n<h3 id=\"nan-decodewrite-\">Nan::DecodeWrite()</h3>\n<p>A wrapper around <code>node::DecodeWrite()</code> that provides a consistent implementation across supported versions of Node.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>ssize_t&nbsp;Nan::DecodeWrite(char&nbsp;*buf,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;len,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v8::Local&lt;v8::Value&gt;&nbsp;val,</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;enum&nbsp;Nan::Encoding&nbsp;encoding&nbsp;=&nbsp;BINARY);</span></span></div></pre>"
      ],
      "contentsRaw": "## Strings & Bytes\n\nMiscellaneous string & byte encoding and decoding functionality provided for compatibility across supported versions of V8 and Node. Implemented by NAN to ensure that all encoding types are supported, even for older versions of Node where they are missing.\n\n - <a href=\"#api_nan_encoding\"><b><code>Nan::Encoding</code></b></a>\n - <a href=\"#api_nan_encode\"><b><code>Nan::Encode()</code></b></a>\n - <a href=\"#api_nan_decode_bytes\"><b><code>Nan::DecodeBytes()</code></b></a>\n - <a href=\"#api_nan_decode_write\"><b><code>Nan::DecodeWrite()</code></b></a>\n\n\n<a name=\"api_nan_encoding\"></a>\n### Nan::Encoding\n\nAn enum representing the supported encoding types. A copy of `node::encoding` that is consistent across versions of Node.\n\nDefinition:\n\n```c++\nenum Nan::Encoding { ASCII, UTF8, BASE64, UCS2, BINARY, HEX, BUFFER }\n```\n\n\n<a name=\"api_nan_encode\"></a>\n### Nan::Encode()\n\nA wrapper around `node::Encode()` that provides a consistent implementation across supported versions of Node.\n\nSignature:\n\n```c++\nv8::Local<v8::Value> Nan::Encode(const void *buf,\n                                 size_t len,\n                                 enum Nan::Encoding encoding = BINARY);\n```\n\n\n<a name=\"api_nan_decode_bytes\"></a>\n### Nan::DecodeBytes()\n\nA wrapper around `node::DecodeBytes()` that provides a consistent implementation across supported versions of Node.\n\nSignature:\n\n```c++\nssize_t Nan::DecodeBytes(v8::Local<v8::Value> val,\n                         enum Nan::Encoding encoding = BINARY);\n```\n\n\n<a name=\"api_nan_decode_write\"></a>\n### Nan::DecodeWrite()\n\nA wrapper around `node::DecodeWrite()` that provides a consistent implementation across supported versions of Node.\n\nSignature:\n\n```c++\nssize_t Nan::DecodeWrite(char *buf,\n                         size_t len,\n                         v8::Local<v8::Value> val,\n                         enum Nan::Encoding encoding = BINARY);\n```",
      "metadata": {}
    },
    "v8_internals": {
      "reference": "v8_internals",
      "route": "v8_internals",
      "sourcePath": "src\\docs-data\\node_modules\\nan\\doc\\v8_internals.md",
      "title": "(untitled)",
      "contents": [
        "<h2 id=\"v8-internals\">V8 internals</h2>\n<p>The hooks to access V8 internals—including GC and statistics—are different across the supported versions of V8, therefore NAN provides its own hooks that call the appropriate V8 methods.</p>\n<ul>\n<li><a href=\"#api_nan_gc_callback\"><b><code>NAN_GC_CALLBACK()</code></b></a></li>\n<li><a href=\"#api_nan_add_gc_epilogue_callback\"><b><code>Nan::AddGCEpilogueCallback()</code></b></a></li>\n<li><a href=\"#api_nan_remove_gc_epilogue_callback\"><b><code>Nan::RemoveGCEpilogueCallback()</code></b></a></li>\n<li><a href=\"#api_nan_add_gc_prologue_callback\"><b><code>Nan::AddGCPrologueCallback()</code></b></a></li>\n<li><a href=\"#api_nan_remove_gc_prologue_callback\"><b><code>Nan::RemoveGCPrologueCallback()</code></b></a></li>\n<li><a href=\"#api_nan_get_heap_statistics\"><b><code>Nan::GetHeapStatistics()</code></b></a></li>\n<li><a href=\"#api_nan_set_counter_function\"><b><code>Nan::SetCounterFunction()</code></b></a></li>\n<li><a href=\"#api_nan_set_create_histogram_function\"><b><code>Nan::SetCreateHistogramFunction()</code></b></a></li>\n<li><a href=\"#api_nan_set_add_histogram_sample_function\"><b><code>Nan::SetAddHistogramSampleFunction()</code></b></a></li>\n<li><a href=\"#api_nan_idle_notification\"><b><code>Nan::IdleNotification()</code></b></a></li>\n<li><a href=\"#api_nan_low_memory_notification\"><b><code>Nan::LowMemoryNotification()</code></b></a></li>\n<li><a href=\"#api_nan_context_disposed_notification\"><b><code>Nan::ContextDisposedNotification()</code></b></a></li>\n<li><a href=\"#api_nan_get_internal_field_pointer\"><b><code>Nan::GetInternalFieldPointer()</code></b></a></li>\n<li><a href=\"#api_nan_set_internal_field_pointer\"><b><code>Nan::SetInternalFieldPointer()</code></b></a></li>\n<li><a href=\"#api_nan_adjust_external_memory\"><b><code>Nan::AdjustExternalMemory()</code></b></a></li>\n</ul>\n<p><a name=\"api_nan_gc_callback\"></a></p>\n<h3 id=\"nan_gc_callback-callbackname-\">NAN_GC_CALLBACK(callbackname)</h3>\n<p>Use <code>NAN_GC_CALLBACK</code> to declare your callbacks for <code>Nan::AddGCPrologueCallback()</code> and <code>Nan::AddGCEpilogueCallback()</code>. Your new method receives the arguments <code>v8::GCType type</code> and <code>v8::GCCallbackFlags flags</code>.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>static&nbsp;Nan::Persistent&lt;Function&gt;&nbsp;callback;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>NAN_GC_CALLBACK(gcPrologueCallback)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;v8::Local&lt;Value&gt;&nbsp;argv[]&nbsp;=&nbsp;{&nbsp;Nan::New(&quot;prologue&quot;).ToLocalChecked()&nbsp;};</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Nan::MakeCallback(Nan::GetCurrentContext()-&gt;Global(),&nbsp;Nan::New(callback),&nbsp;1,&nbsp;argv);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>NAN_METHOD(Hook)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;callback.Reset(To&lt;Function&gt;(args[0]).ToLocalChecked());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Nan::AddGCPrologueCallback(gcPrologueCallback);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;info.GetReturnValue().Set(info.Holder());</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}</span></span></div></pre><p><a name=\"api_nan_add_gc_epilogue_callback\"></a></p>\n<h3 id=\"nan-addgcepiloguecallback-\">Nan::AddGCEpilogueCallback()</h3>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::AddGCEpilogueCallback(v8::Isolate::GCEpilogueCallback&nbsp;callback,&nbsp;v8::GCType&nbsp;gc_type_filter&nbsp;=&nbsp;v8::kGCTypeAll)</span></span></div></pre><p>Calls V8&#39;s <a href=\"https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#a580f976e4290cead62c2fc4dd396be3e\"><code>AddGCEpilogueCallback()</code></a>.</p>\n<p><a name=\"api_nan_remove_gc_epilogue_callback\"></a></p>\n<h3 id=\"nan-removegcepiloguecallback-\">Nan::RemoveGCEpilogueCallback()</h3>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::RemoveGCEpilogueCallback(v8::Isolate::GCEpilogueCallback&nbsp;callback)</span></span></div></pre><p>Calls V8&#39;s <a href=\"https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#adca9294555a3908e9f23c7bb0f0f284c\"><code>RemoveGCEpilogueCallback()</code></a>.</p>\n<p><a name=\"api_nan_add_gc_prologue_callback\"></a></p>\n<h3 id=\"nan-addgcprologuecallback-\">Nan::AddGCPrologueCallback()</h3>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::AddGCPrologueCallback(v8::Isolate::GCPrologueCallback,&nbsp;v8::GCType&nbsp;gc_type_filter&nbsp;callback)</span></span></div></pre><p>Calls V8&#39;s <a href=\"https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#a6dbef303603ebdb03da6998794ea05b8\"><code>AddGCPrologueCallback()</code></a>.</p>\n<p><a name=\"api_nan_remove_gc_prologue_callback\"></a></p>\n<h3 id=\"nan-removegcprologuecallback-\">Nan::RemoveGCPrologueCallback()</h3>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::RemoveGCPrologueCallback(v8::Isolate::GCPrologueCallback&nbsp;callback)</span></span></div></pre><p>Calls V8&#39;s <a href=\"https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#a5f72c7cda21415ce062bbe5c58abe09e\"><code>RemoveGCPrologueCallback()</code></a>.</p>\n<p><a name=\"api_nan_get_heap_statistics\"></a></p>\n<h3 id=\"nan-getheapstatistics-\">Nan::GetHeapStatistics()</h3>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::GetHeapStatistics(v8::HeapStatistics&nbsp;*heap_statistics)</span></span></div></pre><p>Calls V8&#39;s <a href=\"https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#a5593ac74687b713095c38987e5950b34\"><code>GetHeapStatistics()</code></a>.</p>\n<p><a name=\"api_nan_set_counter_function\"></a></p>\n<h3 id=\"nan-setcounterfunction-\">Nan::SetCounterFunction()</h3>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::SetCounterFunction(v8::CounterLookupCallback&nbsp;cb)</span></span></div></pre><p>Calls V8&#39;s <a href=\"https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#a045d7754e62fa0ec72ae6c259b29af94\"><code>SetCounterFunction()</code></a>.</p>\n<p><a name=\"api_nan_set_create_histogram_function\"></a></p>\n<h3 id=\"nan-setcreatehistogramfunction-\">Nan::SetCreateHistogramFunction()</h3>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::SetCreateHistogramFunction(v8::CreateHistogramCallback&nbsp;cb)&nbsp;</span></span></div></pre><p>Calls V8&#39;s <a href=\"https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#a542d67e85089cb3f92aadf032f99e732\"><code>SetCreateHistogramFunction()</code></a>.</p>\n<p><a name=\"api_nan_set_add_histogram_sample_function\"></a></p>\n<h3 id=\"nan-setaddhistogramsamplefunction-\">Nan::SetAddHistogramSampleFunction()</h3>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::SetAddHistogramSampleFunction(v8::AddHistogramSampleCallback&nbsp;cb)&nbsp;</span></span></div></pre><p>Calls V8&#39;s <a href=\"https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#aeb420b690bc2c216882d6fdd00ddd3ea\"><code>SetAddHistogramSampleFunction()</code></a>.</p>\n<p><a name=\"api_nan_idle_notification\"></a></p>\n<h3 id=\"nan-idlenotification-\">Nan::IdleNotification()</h3>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>bool&nbsp;Nan::IdleNotification(int&nbsp;idle_time_in_ms)</span></span></div></pre><p>Calls V8&#39;s <a href=\"https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#ad6a2a02657f5425ad460060652a5a118\"><code>IdleNotification()</code> or <code>IdleNotificationDeadline()</code></a> depending on V8 version.</p>\n<p><a name=\"api_nan_low_memory_notification\"></a></p>\n<h3 id=\"nan-lowmemorynotification-\">Nan::LowMemoryNotification()</h3>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::LowMemoryNotification()&nbsp;</span></span></div></pre><p>Calls V8&#39;s <a href=\"https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#a24647f61d6b41f69668094bdcd6ea91f\"><code>LowMemoryNotification()</code></a>.</p>\n<p><a name=\"api_nan_context_disposed_notification\"></a></p>\n<h3 id=\"nan-contextdisposednotification-\">Nan::ContextDisposedNotification()</h3>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::ContextDisposedNotification()</span></span></div></pre><p>Calls V8&#39;s <a href=\"https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#ad7f5dc559866343fe6cd8db1f134d48b\"><code>ContextDisposedNotification()</code></a>.</p>\n<p><a name=\"api_nan_get_internal_field_pointer\"></a></p>\n<h3 id=\"nan-getinternalfieldpointer-\">Nan::GetInternalFieldPointer()</h3>\n<p>Gets a pointer to the internal field with at <code>index</code> from a V8 <code>Object</code> handle.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void*&nbsp;Nan::GetInternalFieldPointer(v8::Local&lt;v8::Object&gt;&nbsp;object,&nbsp;int&nbsp;index)&nbsp;</span></span></div></pre><p>Calls the Object&#39;s <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a580ea84afb26c005d6762eeb9e3c308f\"><code>GetAlignedPointerFromInternalField()</code> or <code>GetPointerFromInternalField()</code></a> depending on the version of V8.</p>\n<p><a name=\"api_nan_set_internal_field_pointer\"></a></p>\n<h3 id=\"nan-setinternalfieldpointer-\">Nan::SetInternalFieldPointer()</h3>\n<p>Sets the value of the internal field at <code>index</code> on a V8 <code>Object</code> handle.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::SetInternalFieldPointer(v8::Local&lt;v8::Object&gt;&nbsp;object,&nbsp;int&nbsp;index,&nbsp;void*&nbsp;value)</span></span></div></pre><p>Calls the Object&#39;s <a href=\"https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#ab3c57184263cf29963ef0017bec82281\"><code>SetAlignedPointerInInternalField()</code> or <code>SetPointerInInternalField()</code></a> depending on the version of V8.</p>\n<p><a name=\"api_nan_adjust_external_memory\"></a></p>\n<h3 id=\"nan-adjustexternalmemory-\">Nan::AdjustExternalMemory()</h3>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>int&nbsp;Nan::AdjustExternalMemory(int&nbsp;bytesChange)</span></span></div></pre><p>Calls V8&#39;s <a href=\"https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#ae1a59cac60409d3922582c4af675473e\"><code>AdjustAmountOfExternalAllocatedMemory()</code></a>.</p>\n"
      ],
      "contentsRaw": "## V8 internals\n\nThe hooks to access V8 internals—including GC and statistics—are different across the supported versions of V8, therefore NAN provides its own hooks that call the appropriate V8 methods.\n\n - <a href=\"#api_nan_gc_callback\"><b><code>NAN_GC_CALLBACK()</code></b></a>\n - <a href=\"#api_nan_add_gc_epilogue_callback\"><b><code>Nan::AddGCEpilogueCallback()</code></b></a>\n - <a href=\"#api_nan_remove_gc_epilogue_callback\"><b><code>Nan::RemoveGCEpilogueCallback()</code></b></a>\n - <a href=\"#api_nan_add_gc_prologue_callback\"><b><code>Nan::AddGCPrologueCallback()</code></b></a>\n - <a href=\"#api_nan_remove_gc_prologue_callback\"><b><code>Nan::RemoveGCPrologueCallback()</code></b></a>\n - <a href=\"#api_nan_get_heap_statistics\"><b><code>Nan::GetHeapStatistics()</code></b></a>\n - <a href=\"#api_nan_set_counter_function\"><b><code>Nan::SetCounterFunction()</code></b></a>\n - <a href=\"#api_nan_set_create_histogram_function\"><b><code>Nan::SetCreateHistogramFunction()</code></b></a>\n - <a href=\"#api_nan_set_add_histogram_sample_function\"><b><code>Nan::SetAddHistogramSampleFunction()</code></b></a>\n - <a href=\"#api_nan_idle_notification\"><b><code>Nan::IdleNotification()</code></b></a>\n - <a href=\"#api_nan_low_memory_notification\"><b><code>Nan::LowMemoryNotification()</code></b></a>\n - <a href=\"#api_nan_context_disposed_notification\"><b><code>Nan::ContextDisposedNotification()</code></b></a>\n - <a href=\"#api_nan_get_internal_field_pointer\"><b><code>Nan::GetInternalFieldPointer()</code></b></a>\n - <a href=\"#api_nan_set_internal_field_pointer\"><b><code>Nan::SetInternalFieldPointer()</code></b></a>\n - <a href=\"#api_nan_adjust_external_memory\"><b><code>Nan::AdjustExternalMemory()</code></b></a>\n\n\n<a name=\"api_nan_gc_callback\"></a>\n### NAN_GC_CALLBACK(callbackname)\n\nUse `NAN_GC_CALLBACK` to declare your callbacks for `Nan::AddGCPrologueCallback()` and `Nan::AddGCEpilogueCallback()`. Your new method receives the arguments `v8::GCType type` and `v8::GCCallbackFlags flags`.\n\n```c++\nstatic Nan::Persistent<Function> callback;\n\nNAN_GC_CALLBACK(gcPrologueCallback) {\n  v8::Local<Value> argv[] = { Nan::New(\"prologue\").ToLocalChecked() };\n  Nan::MakeCallback(Nan::GetCurrentContext()->Global(), Nan::New(callback), 1, argv);\n}\n\nNAN_METHOD(Hook) {\n  callback.Reset(To<Function>(args[0]).ToLocalChecked());\n  Nan::AddGCPrologueCallback(gcPrologueCallback);\n  info.GetReturnValue().Set(info.Holder());\n}\n```\n\n<a name=\"api_nan_add_gc_epilogue_callback\"></a>\n### Nan::AddGCEpilogueCallback()\n\nSignature:\n\n```c++\nvoid Nan::AddGCEpilogueCallback(v8::Isolate::GCEpilogueCallback callback, v8::GCType gc_type_filter = v8::kGCTypeAll)\n```\n\nCalls V8's [`AddGCEpilogueCallback()`](https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#a580f976e4290cead62c2fc4dd396be3e).\n\n<a name=\"api_nan_remove_gc_epilogue_callback\"></a>\n### Nan::RemoveGCEpilogueCallback()\n\nSignature:\n\n```c++\nvoid Nan::RemoveGCEpilogueCallback(v8::Isolate::GCEpilogueCallback callback)\n```\n\nCalls V8's [`RemoveGCEpilogueCallback()`](https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#adca9294555a3908e9f23c7bb0f0f284c).\n\n<a name=\"api_nan_add_gc_prologue_callback\"></a>\n### Nan::AddGCPrologueCallback()\n\nSignature:\n\n```c++\nvoid Nan::AddGCPrologueCallback(v8::Isolate::GCPrologueCallback, v8::GCType gc_type_filter callback)\n```\n\nCalls V8's [`AddGCPrologueCallback()`](https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#a6dbef303603ebdb03da6998794ea05b8).\n\n<a name=\"api_nan_remove_gc_prologue_callback\"></a>\n### Nan::RemoveGCPrologueCallback()\n\nSignature:\n\n```c++\nvoid Nan::RemoveGCPrologueCallback(v8::Isolate::GCPrologueCallback callback)\n```\n\nCalls V8's [`RemoveGCPrologueCallback()`](https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#a5f72c7cda21415ce062bbe5c58abe09e).\n\n<a name=\"api_nan_get_heap_statistics\"></a>\n### Nan::GetHeapStatistics()\n\nSignature:\n\n```c++\nvoid Nan::GetHeapStatistics(v8::HeapStatistics *heap_statistics)\n```\n\nCalls V8's [`GetHeapStatistics()`](https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#a5593ac74687b713095c38987e5950b34).\n\n<a name=\"api_nan_set_counter_function\"></a>\n### Nan::SetCounterFunction()\n\nSignature:\n\n```c++\nvoid Nan::SetCounterFunction(v8::CounterLookupCallback cb)\n```\n\nCalls V8's [`SetCounterFunction()`](https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#a045d7754e62fa0ec72ae6c259b29af94).\n\n<a name=\"api_nan_set_create_histogram_function\"></a>\n### Nan::SetCreateHistogramFunction()\n\nSignature:\n\n```c++\nvoid Nan::SetCreateHistogramFunction(v8::CreateHistogramCallback cb) \n```\n\nCalls V8's [`SetCreateHistogramFunction()`](https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#a542d67e85089cb3f92aadf032f99e732).\n\n<a name=\"api_nan_set_add_histogram_sample_function\"></a>\n### Nan::SetAddHistogramSampleFunction()\n\nSignature:\n\n```c++\nvoid Nan::SetAddHistogramSampleFunction(v8::AddHistogramSampleCallback cb) \n```\n\nCalls V8's [`SetAddHistogramSampleFunction()`](https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#aeb420b690bc2c216882d6fdd00ddd3ea).\n\n<a name=\"api_nan_idle_notification\"></a>\n### Nan::IdleNotification()\n\nSignature:\n\n```c++\nbool Nan::IdleNotification(int idle_time_in_ms)\n```\n\nCalls V8's [`IdleNotification()` or `IdleNotificationDeadline()`](https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#ad6a2a02657f5425ad460060652a5a118) depending on V8 version.\n\n<a name=\"api_nan_low_memory_notification\"></a>\n### Nan::LowMemoryNotification()\n\nSignature:\n\n```c++\nvoid Nan::LowMemoryNotification() \n```\n\nCalls V8's [`LowMemoryNotification()`](https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#a24647f61d6b41f69668094bdcd6ea91f).\n\n<a name=\"api_nan_context_disposed_notification\"></a>\n### Nan::ContextDisposedNotification()\n\nSignature:\n\n```c++\nvoid Nan::ContextDisposedNotification()\n```\n\nCalls V8's [`ContextDisposedNotification()`](https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#ad7f5dc559866343fe6cd8db1f134d48b).\n\n<a name=\"api_nan_get_internal_field_pointer\"></a>\n### Nan::GetInternalFieldPointer()\n\nGets a pointer to the internal field with at `index` from a V8 `Object` handle.\n\nSignature:\n\n```c++\nvoid* Nan::GetInternalFieldPointer(v8::Local<v8::Object> object, int index) \n```\n\nCalls the Object's [`GetAlignedPointerFromInternalField()` or `GetPointerFromInternalField()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#a580ea84afb26c005d6762eeb9e3c308f) depending on the version of V8.\n\n<a name=\"api_nan_set_internal_field_pointer\"></a>\n### Nan::SetInternalFieldPointer()\n\nSets the value of the internal field at `index` on a V8 `Object` handle.\n\nSignature:\n\n```c++\nvoid Nan::SetInternalFieldPointer(v8::Local<v8::Object> object, int index, void* value)\n```\n\nCalls the Object's [`SetAlignedPointerInInternalField()` or `SetPointerInInternalField()`](https://v8docs.nodesource.com/node-8.11/db/d85/classv8_1_1_object.html#ab3c57184263cf29963ef0017bec82281) depending on the version of V8.\n\n<a name=\"api_nan_adjust_external_memory\"></a>\n### Nan::AdjustExternalMemory()\n\nSignature:\n\n```c++\nint Nan::AdjustExternalMemory(int bytesChange)\n```\n\nCalls V8's [`AdjustAmountOfExternalAllocatedMemory()`](https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#ae1a59cac60409d3922582c4af675473e).",
      "metadata": {}
    },
    "v8_misc": {
      "reference": "v8_misc",
      "route": "v8_misc",
      "sourcePath": "src\\docs-data\\node_modules\\nan\\doc\\v8_misc.md",
      "title": "(untitled)",
      "contents": [
        "<h2 id=\"miscellaneous-v8-helpers\">Miscellaneous V8 Helpers</h2>\n<ul>\n<li><a href=\"#api_nan_utf8_string\"><b><code>Nan::Utf8String</code></b></a></li>\n<li><a href=\"#api_nan_get_current_context\"><b><code>Nan::GetCurrentContext()</code></b></a></li>\n<li><a href=\"#api_nan_set_isolate_data\"><b><code>Nan::SetIsolateData()</code></b></a></li>\n<li><a href=\"#api_nan_get_isolate_data\"><b><code>Nan::GetIsolateData()</code></b></a></li>\n<li><a href=\"#api_nan_typedarray_contents\"><b><code>Nan::TypedArrayContents</code></b></a></li>\n</ul>\n<p><a name=\"api_nan_utf8_string\"></a></p>\n<h3 id=\"nan-utf8string\">Nan::Utf8String</h3>\n<p>Converts an object to a UTF-8-encoded character array. If conversion to a string fails (e.g. due to an exception in the toString() method of the object) then the length() method returns 0 and the * operator returns NULL. The underlying memory used for this object is managed by the object.</p>\n<p>An implementation of <a href=\"https://v8docs.nodesource.com/node-8.11/d4/d1b/classv8_1_1_string_1_1_utf8_value.html\"><code>v8::String::Utf8Value</code></a> that is consistent across all supported versions of V8.</p>\n<p>Definition:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>class&nbsp;Nan::Utf8String&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;Nan::Utf8String(v8::Local&lt;v8::Value&gt;&nbsp;from);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;int&nbsp;length()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;char*&nbsp;operator*();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;const&nbsp;char*&nbsp;operator*()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div></pre><p><a name=\"api_nan_get_current_context\"></a></p>\n<h3 id=\"nan-getcurrentcontext-\">Nan::GetCurrentContext()</h3>\n<p>A call to <a href=\"https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#a81c7a1ed7001ae2a65e89107f75fd053\"><code>v8::Isolate::GetCurrent()-&gt;GetCurrentContext()</code></a> that works across all supported versions of V8.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>v8::Local&lt;v8::Context&gt;&nbsp;Nan::GetCurrentContext()</span></span></div></pre><p><a name=\"api_nan_set_isolate_data\"></a></p>\n<h3 id=\"nan-setisolatedata-\">Nan::SetIsolateData()</h3>\n<p>A helper to provide a consistent API to <a href=\"https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#a7acadfe7965997e9c386a05f098fbe36\"><code>v8::Isolate#SetData()</code></a>.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>void&nbsp;Nan::SetIsolateData(v8::Isolate&nbsp;*isolate,&nbsp;T&nbsp;*data)</span></span></div></pre><p><a name=\"api_nan_get_isolate_data\"></a></p>\n<h3 id=\"nan-getisolatedata-\">Nan::GetIsolateData()</h3>\n<p>A helper to provide a consistent API to <a href=\"https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#aabd223436bc1100a787dadaa024c6257\"><code>v8::Isolate#GetData()</code></a>.</p>\n<p>Signature:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>T&nbsp;*Nan::GetIsolateData(v8::Isolate&nbsp;*isolate)</span></span></div></pre><p><a name=\"api_nan_typedarray_contents\"></a></p>\n<h3 id=\"nan-typedarraycontents-t-\">Nan::TypedArrayContents<T></h3>\n<p>A helper class for accessing the contents of an ArrayBufferView (aka a typedarray) from C++.  If the input array is not a valid typedarray, then the data pointer of TypedArrayContents will default to <code>NULL</code> and the length will be 0.  If the data pointer is not compatible with the alignment requirements of type, an assertion error will fail.</p>\n<p>Note that you must store a reference to the <code>array</code> object while you are accessing its contents.</p>\n<p>Definition:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>template&lt;typename&nbsp;T&gt;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>class&nbsp;Nan::TypedArrayContents&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;public:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;TypedArrayContents(v8::Local&lt;Value&gt;&nbsp;array);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;size_t&nbsp;length()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;T*&nbsp;const&nbsp;operator*();</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;const&nbsp;T*&nbsp;const&nbsp;operator*()&nbsp;const;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>};</span></span></div></pre>"
      ],
      "contentsRaw": "## Miscellaneous V8 Helpers\n\n - <a href=\"#api_nan_utf8_string\"><b><code>Nan::Utf8String</code></b></a>\n - <a href=\"#api_nan_get_current_context\"><b><code>Nan::GetCurrentContext()</code></b></a>\n - <a href=\"#api_nan_set_isolate_data\"><b><code>Nan::SetIsolateData()</code></b></a>\n - <a href=\"#api_nan_get_isolate_data\"><b><code>Nan::GetIsolateData()</code></b></a>\n - <a href=\"#api_nan_typedarray_contents\"><b><code>Nan::TypedArrayContents</code></b></a>\n\n\n<a name=\"api_nan_utf8_string\"></a>\n### Nan::Utf8String\n\nConverts an object to a UTF-8-encoded character array. If conversion to a string fails (e.g. due to an exception in the toString() method of the object) then the length() method returns 0 and the * operator returns NULL. The underlying memory used for this object is managed by the object.\n\nAn implementation of [`v8::String::Utf8Value`](https://v8docs.nodesource.com/node-8.11/d4/d1b/classv8_1_1_string_1_1_utf8_value.html) that is consistent across all supported versions of V8.\n\nDefinition:\n\n```c++\nclass Nan::Utf8String {\n public:\n  Nan::Utf8String(v8::Local<v8::Value> from);\n\n  int length() const;\n\n  char* operator*();\n  const char* operator*() const;\n};\n```\n\n<a name=\"api_nan_get_current_context\"></a>\n### Nan::GetCurrentContext()\n\nA call to [`v8::Isolate::GetCurrent()->GetCurrentContext()`](https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#a81c7a1ed7001ae2a65e89107f75fd053) that works across all supported versions of V8.\n\nSignature:\n\n```c++\nv8::Local<v8::Context> Nan::GetCurrentContext()\n```\n\n<a name=\"api_nan_set_isolate_data\"></a>\n### Nan::SetIsolateData()\n\nA helper to provide a consistent API to [`v8::Isolate#SetData()`](https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#a7acadfe7965997e9c386a05f098fbe36).\n\nSignature:\n\n```c++\nvoid Nan::SetIsolateData(v8::Isolate *isolate, T *data)\n```\n\n\n<a name=\"api_nan_get_isolate_data\"></a>\n### Nan::GetIsolateData()\n\nA helper to provide a consistent API to [`v8::Isolate#GetData()`](https://v8docs.nodesource.com/node-8.11/d5/dda/classv8_1_1_isolate.html#aabd223436bc1100a787dadaa024c6257).\n\nSignature:\n\n```c++\nT *Nan::GetIsolateData(v8::Isolate *isolate)\n```\n\n<a name=\"api_nan_typedarray_contents\"></a>\n### Nan::TypedArrayContents<T>\n\nA helper class for accessing the contents of an ArrayBufferView (aka a typedarray) from C++.  If the input array is not a valid typedarray, then the data pointer of TypedArrayContents will default to `NULL` and the length will be 0.  If the data pointer is not compatible with the alignment requirements of type, an assertion error will fail.\n\nNote that you must store a reference to the `array` object while you are accessing its contents.\n\nDefinition:\n\n```c++\ntemplate<typename T>\nclass Nan::TypedArrayContents {\n public:\n  TypedArrayContents(v8::Local<Value> array);\n\n  size_t length() const;\n\n  T* const operator*();\n  const T* const operator*() const;\n};\n```",
      "metadata": {}
    },
    "ERROR-HANDLING": {
      "reference": "ERROR-HANDLING",
      "route": "ERROR-HANDLING",
      "sourcePath": "src\\docs-data\\node_modules\\node-fetch\\ERROR-HANDLING.md",
      "title": "(untitled)",
      "contents": [
        "<h1 id=\"error-handling-with-node-fetch\">Error handling with node-fetch</h1>\n<p>Because <code>window.fetch</code> isn&#39;t designed to transparent about the cause of request errors, we have to come up with our own solutions.</p>\n<p>The basics:</p>\n<ul>\n<li><p>All <a href=\"https://www.joyent.com/node-js/production/design/errors\">operational errors</a> are rejected as <a href=\"https://github.com/bitinn/node-fetch/blob/master/lib/fetch-error.js\">FetchError</a>, you can handle them all through promise <code>catch</code> clause.</p>\n</li>\n<li><p>All errors comes with <code>err.message</code> detailing the cause of errors.</p>\n</li>\n<li><p>All errors originated from <code>node-fetch</code> are marked with custom <code>err.type</code>.</p>\n</li>\n<li><p>All errors originated from Node.js core are marked with <code>err.type = system</code>, and contains addition <code>err.code</code> and <code>err.errno</code> for error handling, they are alias to error codes thrown by Node.js core.</p>\n</li>\n<li><p><a href=\"https://www.joyent.com/node-js/production/design/errors\">Programmer errors</a> are either thrown as soon as possible, or rejected with default <code>Error</code> with <code>err.message</code> for ease of troubleshooting.</p>\n</li>\n</ul>\n<p>List of error types:</p>\n<ul>\n<li>Because we maintain 100% coverage, see <a href=\"https://github.com/bitinn/node-fetch/blob/master/test/test.js\">test.js</a> for a full list of custom <code>FetchError</code> types, as well as some of the common errors from Node.js</li>\n</ul>\n"
      ],
      "contentsRaw": "Error handling with node-fetch\n==============================\n\nBecause `window.fetch` isn't designed to transparent about the cause of request errors, we have to come up with our own solutions.\n\nThe basics:\n\n- All [operational errors](https://www.joyent.com/node-js/production/design/errors) are rejected as [FetchError](https://github.com/bitinn/node-fetch/blob/master/lib/fetch-error.js), you can handle them all through promise `catch` clause.\n\n- All errors comes with `err.message` detailing the cause of errors.\n\n- All errors originated from `node-fetch` are marked with custom `err.type`.\n\n- All errors originated from Node.js core are marked with `err.type = system`, and contains addition `err.code` and `err.errno` for error handling, they are alias to error codes thrown by Node.js core.\n\n- [Programmer errors](https://www.joyent.com/node-js/production/design/errors) are either thrown as soon as possible, or rejected with default `Error` with `err.message` for ease of troubleshooting.\n\nList of error types:\n\n- Because we maintain 100% coverage, see [test.js](https://github.com/bitinn/node-fetch/blob/master/test/test.js) for a full list of custom `FetchError` types, as well as some of the common errors from Node.js",
      "metadata": {}
    },
    "LIMITS": {
      "reference": "LIMITS",
      "route": "LIMITS",
      "sourcePath": "src\\docs-data\\node_modules\\node-fetch\\LIMITS.md",
      "title": "(untitled)",
      "contents": [
        "<h1 id=\"known-differences\">Known differences</h1>\n<p><em>As of 1.x release</em></p>\n<ul>\n<li><p>Topics such as Cross-Origin, Content Security Policy, Mixed Content, Service Workers are ignored, given our server-side context.</p>\n</li>\n<li><p>URL input must be an absolute URL, using either <code>http</code> or <code>https</code> as scheme.</p>\n</li>\n<li><p>On the upside, there are no forbidden headers, and <code>res.url</code> contains the final url when following redirects.</p>\n</li>\n<li><p>For convenience, <code>res.body</code> is a transform stream, so decoding can be handled independently.</p>\n</li>\n<li><p>Similarly, <code>req.body</code> can either be a string, a buffer or a readable stream.</p>\n</li>\n<li><p>Also, you can handle rejected fetch requests through checking <code>err.type</code> and <code>err.code</code>.</p>\n</li>\n<li><p>Only support <code>res.text()</code>, <code>res.json()</code>, <code>res.buffer()</code> at the moment, until there are good use-cases for blob/arrayBuffer.</p>\n</li>\n<li><p>There is currently no built-in caching, as server-side caching varies by use-cases.</p>\n</li>\n<li><p>Current implementation lacks server-side cookie store, you will need to extract <code>Set-Cookie</code> headers manually.</p>\n</li>\n<li><p>If you are using <code>res.clone()</code> and writing an isomorphic app, note that stream on Node.js have a smaller internal buffer size (16Kb, aka <code>highWaterMark</code>) from client-side browsers (&gt;1Mb, not consistent across browsers).</p>\n</li>\n<li><p>ES6 features such as <code>headers.entries()</code> are missing at the moment, but you can use <code>headers.raw()</code> to retrieve the raw headers object.</p>\n</li>\n</ul>\n"
      ],
      "contentsRaw": "Known differences\n=================\n\n*As of 1.x release*\n\n- Topics such as Cross-Origin, Content Security Policy, Mixed Content, Service Workers are ignored, given our server-side context.\n\n- URL input must be an absolute URL, using either `http` or `https` as scheme.\n\n- On the upside, there are no forbidden headers, and `res.url` contains the final url when following redirects.\n\n- For convenience, `res.body` is a transform stream, so decoding can be handled independently.\n\n- Similarly, `req.body` can either be a string, a buffer or a readable stream.\n\n- Also, you can handle rejected fetch requests through checking `err.type` and `err.code`.\n\n- Only support `res.text()`, `res.json()`, `res.buffer()` at the moment, until there are good use-cases for blob/arrayBuffer.\n\n- There is currently no built-in caching, as server-side caching varies by use-cases.\n\n- Current implementation lacks server-side cookie store, you will need to extract `Set-Cookie` headers manually.\n\n- If you are using `res.clone()` and writing an isomorphic app, note that stream on Node.js have a smaller internal buffer size (16Kb, aka `highWaterMark`) from client-side browsers (>1Mb, not consistent across browsers).\n\n- ES6 features such as `headers.entries()` are missing at the moment, but you can use `headers.raw()` to retrieve the raw headers object.",
      "metadata": {}
    },
    "MAINTENANCE": {
      "reference": "MAINTENANCE",
      "route": "MAINTENANCE",
      "sourcePath": "src\\docs-data\\node_modules\\nunjucks\\MAINTENANCE.md",
      "title": "(untitled)",
      "contents": [
        "<h1 id=\"pushing-a-new-version\">Pushing a New Version</h1>\n<p>Nunjucks attempts to adhere to semantic versioning. The API is very stable, so\nfrom here on out it will most likely be point releases.</p>\n<ol>\n<li><p>Do a <code>pull</code> from github to make sure you have all the latest updates.</p>\n</li>\n<li><p>View all the changes since the last version:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"variable other readwrite tsx\"><span>$</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>git</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>log</span></span><span>&nbsp;</span><span class=\"keyword operator decrement tsx\"><span>--</span></span><span class=\"variable other readwrite tsx\"><span>oneline</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>v1</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"constant numeric decimal tsx\"><span>2</span><span class=\"meta delimiter decimal period tsx\"><span>.</span></span><span>3</span></span><span class=\"punctuation accessor tsx\"><span>.</span><span>.</span></span><span class=\"variable other property tsx\"><span>master</span></span></span></div></pre></li>\n</ol>\n<p>Replace <code>v1.2.3</code> with whatever the last version was, and you&#39;ll see all the\nchanges going out in this version. Ensure that all significant user-facing\nchanges (new features and bugfixes) are mentioned in <code>CHANGELOG.md</code>. Change the\n&quot;master (unreleased)&quot; heading in <code>CHANGELOG.md</code> to the new version number and\ndate.</p>\n<ol start=\"3\">\n<li><p>Update the version in <code>package.json</code>.</p>\n</li>\n<li><p>Run the command to update the ready-made files for the browser.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"variable other readwrite tsx\"><span>$</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>npm</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>run</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>browserfiles</span></span></span></div></pre></li>\n<li><p>Commit above changes and push to <code>master</code> (or a release branch, if using one).</p>\n</li>\n<li><p>Draft a new release on GitHub and copy the changelog to the description. The\ntag and title should both be the version, in the form <code>v2.3.0</code>. Publish the\nrelease.</p>\n</li>\n<li><p>Publish to npm:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"variable other readwrite tsx\"><span>npm</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>publish</span></span></span></div></pre></li>\n<li><p>Make sure docs are up-to-date. You need to copy all the <code>nunjucks*.js</code> files\nin <code>browser/</code> to the docs. This is where the &quot;download&quot; link points to in\nthe docs. You also need to copy the tests into the docs, for the online\nbrowser tests. <code>make prod</code> in the <code>docs/</code> dir will handle these tasks\nfor you. Push (force push if necessary) the build out _site folder onto the\n<code>gh-pages</code> branch of the <code>nunjucks</code> repo to get it live. One way to do that\nis the following commands. These commands presume that you have another\nnunjucks git clone inside the (git-ignored) <code>docs/_site</code> directory, checked\nout to the <code>gh-pages</code> branch (and tracking <code>origin/gh-pages</code>). (To set that\nup the first time, <code>cd docs/_site</code>, <code>rm -rf *</code>, <code>git clone\ngit@github.com:mozilla/nunjucks.git .</code>, and <code>git checkout gh-pages</code>).</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"variable other readwrite tsx\"><span>cd</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>docs</span></span><span>&nbsp;</span><span class=\"keyword operator logical tsx\"><span>&amp;&amp;</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>make</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>prod</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"variable other readwrite tsx\"><span>cd</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>files</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"variable other readwrite tsx\"><span>python</span></span><span>&nbsp;</span><span class=\"keyword operator arithmetic tsx\"><span>-</span></span><span class=\"variable other readwrite tsx\"><span>m</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>SimpleHTTPServer</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>#&nbsp;</span><span class=\"variable other readwrite tsx\"><span>load</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>http</span></span><span>:</span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>localhost:8000/tests/browser/&nbsp;and&nbsp;verify&nbsp;tests&nbsp;pass&nbsp;in&nbsp;browser</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"variable other readwrite tsx\"><span>cd</span></span><span>&nbsp;</span><span class=\"punctuation accessor tsx\"><span>.</span><span>.</span></span><span class=\"keyword operator arithmetic tsx\"><span>/</span></span><span class=\"variable other readwrite tsx\"><span>_site</span></span><span>&nbsp;</span><span class=\"keyword operator logical tsx\"><span>&amp;&amp;</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>git</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>add</span></span><span>&nbsp;</span><span class=\"keyword operator arithmetic tsx\"><span>-</span></span><span class=\"variable other constant tsx\"><span>A</span></span><span>&nbsp;</span><span class=\"keyword operator logical tsx\"><span>&amp;&amp;</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>git</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>commit</span></span><span>&nbsp;</span><span class=\"keyword operator logical tsx\"><span>&amp;&amp;</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>git</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>push</span></span></span></div></pre></li>\n<li><p>Add a new &quot;master (unreleased)&quot; section at the top of <code>CHANGELOG.md</code>.</p>\n</li>\n<li><p>Bump the version number in <code>package.json</code> to a development pre-release of\nthe next anticipated release number (e.g. &quot;2.2.0-dev.1&quot;).</p>\n</li>\n</ol>\n"
      ],
      "contentsRaw": "# Pushing a New Version\n\nNunjucks attempts to adhere to semantic versioning. The API is very stable, so\nfrom here on out it will most likely be point releases.\n\n1. Do a `pull` from github to make sure you have all the latest updates.\n\n2. View all the changes since the last version:\n\n   ```\n   $ git log --oneline v1.2.3..master\n   ```\n\nReplace `v1.2.3` with whatever the last version was, and you'll see all the\nchanges going out in this version. Ensure that all significant user-facing\nchanges (new features and bugfixes) are mentioned in `CHANGELOG.md`. Change the\n\"master (unreleased)\" heading in `CHANGELOG.md` to the new version number and\ndate.\n\n3. Update the version in `package.json`.\n\n3. Run the command to update the ready-made files for the browser.\n\n   ```\n   $ npm run browserfiles\n   ```\n\n5. Commit above changes and push to `master` (or a release branch, if using one).\n\n6. Draft a new release on GitHub and copy the changelog to the description. The\n   tag and title should both be the version, in the form `v2.3.0`. Publish the\n   release.\n\n7. Publish to npm:\n\n   ```\n   npm publish\n   ```\n\n8. Make sure docs are up-to-date. You need to copy all the `nunjucks*.js` files\n   in `browser/` to the docs. This is where the \"download\" link points to in\n   the docs. You also need to copy the tests into the docs, for the online\n   browser tests. ``make prod`` in the ``docs/`` dir will handle these tasks\n   for you. Push (force push if necessary) the build out _site folder onto the\n   `gh-pages` branch of the `nunjucks` repo to get it live. One way to do that\n   is the following commands. These commands presume that you have another\n   nunjucks git clone inside the (git-ignored) `docs/_site` directory, checked\n   out to the `gh-pages` branch (and tracking `origin/gh-pages`). (To set that\n   up the first time, `cd docs/_site`, `rm -rf *`, `git clone\n   git@github.com:mozilla/nunjucks.git .`, and `git checkout gh-pages`).\n\n   ```\n   cd docs && make prod\n   cd files\n   python -m SimpleHTTPServer\n   # load http://localhost:8000/tests/browser/ and verify tests pass in browser\n   cd ../_site && git add -A && git commit && git push\n   ```\n\n9. Add a new \"master (unreleased)\" section at the top of `CHANGELOG.md`.\n\n10. Bump the version number in `package.json` to a development pre-release of\n    the next anticipated release number (e.g. \"2.2.0-dev.1\").",
      "metadata": {}
    },
    "2015-01-30": {
      "reference": "2015-01-30",
      "route": "2015-01-30",
      "sourcePath": "src\\docs-data\\node_modules\\readable-stream\\doc\\wg-meetings\\2015-01-30.md",
      "title": "(untitled)",
      "contents": [
        "<h1 id=\"streams-wg-meeting-2015-01-30\">streams WG Meeting 2015-01-30</h1>\n<h2 id=\"links\">Links</h2>\n<ul>\n<li><strong>Google Hangouts Video</strong>: <a href=\"http://www.youtube.com/watch?v=I9nDOSGfwZg\">http://www.youtube.com/watch?v=I9nDOSGfwZg</a></li>\n<li><strong>GitHub Issue</strong>: <a href=\"https://github.com/iojs/readable-stream/issues/106\">https://github.com/iojs/readable-stream/issues/106</a></li>\n<li><strong>Original Minutes Google Doc</strong>: <a href=\"https://docs.google.com/document/d/17aTgLnjMXIrfjgNaTUnHQO7m3xgzHR2VXBTmi03Qii4/\">https://docs.google.com/document/d/17aTgLnjMXIrfjgNaTUnHQO7m3xgzHR2VXBTmi03Qii4/</a></li>\n</ul>\n<h2 id=\"agenda\">Agenda</h2>\n<p>Extracted from <a href=\"https://github.com/iojs/readable-stream/labels/wg-agenda\">https://github.com/iojs/readable-stream/labels/wg-agenda</a> prior to meeting.</p>\n<ul>\n<li>adopt a charter <a href=\"https://github.com/iojs/readable-stream/issues/105\">#105</a></li>\n<li>release and versioning strategy <a href=\"https://github.com/iojs/readable-stream/issues/101\">#101</a></li>\n<li>simpler stream creation <a href=\"https://github.com/iojs/readable-stream/issues/102\">#102</a></li>\n<li>proposal: deprecate implicit flowing of streams <a href=\"https://github.com/iojs/readable-stream/issues/99\">#99</a></li>\n</ul>\n<h2 id=\"minutes\">Minutes</h2>\n<h3 id=\"adopt-a-charter\">adopt a charter</h3>\n<ul>\n<li>group: +1&#39;s all around</li>\n</ul>\n<h3 id=\"what-versioning-scheme-should-be-adopted-\">What versioning scheme should be adopted?</h3>\n<ul>\n<li>group: +1’s 3.0.0</li>\n<li>domenic+group: pulling in patches from other sources where appropriate</li>\n<li>mikeal: version independently, suggesting versions for io.js</li>\n<li>mikeal+domenic: work with TC to notify in advance of changes\nsimpler stream creation</li>\n</ul>\n<h3 id=\"streamline-creation-of-streams\">streamline creation of streams</h3>\n<ul>\n<li>sam: streamline creation of streams</li>\n<li><p>domenic: nice simple solution posted\nbut, we lose the opportunity to change the model\nmay not be backwards incompatible (double check keys)</p>\n<p><strong>action item:</strong> domenic will check</p>\n</li>\n</ul>\n<h3 id=\"remove-implicit-flowing-of-streams-on-data-\">remove implicit flowing of streams on(‘data’)</h3>\n<ul>\n<li>add isFlowing / isPaused</li>\n<li>mikeal: worrying that we’re documenting polyfill methods – confuses users</li>\n<li>domenic: more reflective API is probably good, with warning labels for users</li>\n<li>new section for mad scientists (reflective stream access)</li>\n<li>calvin: name the “third state”</li>\n<li>mikeal: maybe borrow the name from whatwg?</li>\n<li>domenic: we’re missing the “third state”</li>\n<li>consensus: kind of difficult to name the third state</li>\n<li>mikeal: figure out differences in states / compat</li>\n<li>mathias: always flow on data – eliminates third state<ul>\n<li>explore what it breaks</li>\n</ul>\n</li>\n</ul>\n<p><strong>action items:</strong></p>\n<ul>\n<li>ask isaac for ability to list packages by what public io.js APIs they use (esp. Stream)</li>\n<li>ask rod/build for infrastructure</li>\n<li><strong>chris</strong>: explore the “flow on data” approach</li>\n<li>add isPaused/isFlowing</li>\n<li>add new docs section</li>\n<li>move isPaused to that section</li>\n</ul>\n"
      ],
      "contentsRaw": "# streams WG Meeting 2015-01-30\n\n## Links\n\n* **Google Hangouts Video**: http://www.youtube.com/watch?v=I9nDOSGfwZg\n* **GitHub Issue**: https://github.com/iojs/readable-stream/issues/106\n* **Original Minutes Google Doc**: https://docs.google.com/document/d/17aTgLnjMXIrfjgNaTUnHQO7m3xgzHR2VXBTmi03Qii4/\n\n## Agenda\n\nExtracted from https://github.com/iojs/readable-stream/labels/wg-agenda prior to meeting.\n\n* adopt a charter [#105](https://github.com/iojs/readable-stream/issues/105)\n* release and versioning strategy [#101](https://github.com/iojs/readable-stream/issues/101)\n* simpler stream creation [#102](https://github.com/iojs/readable-stream/issues/102)\n* proposal: deprecate implicit flowing of streams [#99](https://github.com/iojs/readable-stream/issues/99)\n\n## Minutes\n\n### adopt a charter\n\n* group: +1's all around\n\n### What versioning scheme should be adopted?\n* group: +1’s 3.0.0\n* domenic+group: pulling in patches from other sources where appropriate\n* mikeal: version independently, suggesting versions for io.js\n* mikeal+domenic: work with TC to notify in advance of changes\nsimpler stream creation\n\n### streamline creation of streams\n* sam: streamline creation of streams\n* domenic: nice simple solution posted\n  but, we lose the opportunity to change the model\n  may not be backwards incompatible (double check keys)\n\n  **action item:** domenic will check\n\n### remove implicit flowing of streams on(‘data’)\n* add isFlowing / isPaused\n* mikeal: worrying that we’re documenting polyfill methods – confuses users\n* domenic: more reflective API is probably good, with warning labels for users\n* new section for mad scientists (reflective stream access)\n* calvin: name the “third state”\n* mikeal: maybe borrow the name from whatwg?\n* domenic: we’re missing the “third state”\n* consensus: kind of difficult to name the third state\n* mikeal: figure out differences in states / compat\n* mathias: always flow on data – eliminates third state\n  * explore what it breaks\n\n**action items:**\n* ask isaac for ability to list packages by what public io.js APIs they use (esp. Stream)\n* ask rod/build for infrastructure\n* **chris**: explore the “flow on data” approach\n* add isPaused/isFlowing\n* add new docs section\n* move isPaused to that section",
      "metadata": {}
    },
    "GOVERNANCE": {
      "reference": "GOVERNANCE",
      "route": "GOVERNANCE",
      "sourcePath": "src\\docs-data\\node_modules\\readable-stream\\GOVERNANCE.md",
      "title": "(untitled)",
      "contents": [
        "<h3 id=\"streams-working-group\">Streams Working Group</h3>\n<p>The Node.js Streams is jointly governed by a Working Group\n(WG)\nthat is responsible for high-level guidance of the project.</p>\n<p>The WG has final authority over this project including:</p>\n<ul>\n<li>Technical direction</li>\n<li>Project governance and process (including this policy)</li>\n<li>Contribution policy</li>\n<li>GitHub repository hosting</li>\n<li>Conduct guidelines</li>\n<li>Maintaining the list of additional Collaborators</li>\n</ul>\n<p>For the current list of WG members, see the project\n<a href=\"./README.md#current-project-team-members\">README.md</a>.</p>\n<h3 id=\"collaborators\">Collaborators</h3>\n<p>The readable-stream GitHub repository is\nmaintained by the WG and additional Collaborators who are added by the\nWG on an ongoing basis.</p>\n<p>Individuals making significant and valuable contributions are made\nCollaborators and given commit-access to the project. These\nindividuals are identified by the WG and their addition as\nCollaborators is discussed during the WG meeting.</p>\n<p><em>Note:</em> If you make a significant contribution and are not considered\nfor commit-access log an issue or contact a WG member directly and it\nwill be brought up in the next WG meeting.</p>\n<p>Modifications of the contents of the readable-stream repository are\nmade on\na collaborative basis. Anybody with a GitHub account may propose a\nmodification via pull request and it will be considered by the project\nCollaborators. All pull requests must be reviewed and accepted by a\nCollaborator with sufficient expertise who is able to take full\nresponsibility for the change. In the case of pull requests proposed\nby an existing Collaborator, an additional Collaborator is required\nfor sign-off. Consensus should be sought if additional Collaborators\nparticipate and there is disagreement around a particular\nmodification. See <em>Consensus Seeking Process</em> below for further detail\non the consensus model used for governance.</p>\n<p>Collaborators may opt to elevate significant or controversial\nmodifications, or modifications that have not found consensus to the\nWG for discussion by assigning the <strong><em>WG-agenda</em></strong> tag to a pull\nrequest or issue. The WG should serve as the final arbiter where\nrequired.</p>\n<p>For the current list of Collaborators, see the project\n<a href=\"./README.md#members\">README.md</a>.</p>\n<h3 id=\"wg-membership\">WG Membership</h3>\n<p>WG seats are not time-limited.  There is no fixed size of the WG.\nHowever, the expected target is between 6 and 12, to ensure adequate\ncoverage of important areas of expertise, balanced with the ability to\nmake decisions efficiently.</p>\n<p>There is no specific set of requirements or qualifications for WG\nmembership beyond these rules.</p>\n<p>The WG may add additional members to the WG by unanimous consensus.</p>\n<p>A WG member may be removed from the WG by voluntary resignation, or by\nunanimous consensus of all other WG members.</p>\n<p>Changes to WG membership should be posted in the agenda, and may be\nsuggested as any other agenda item (see &quot;WG Meetings&quot; below).</p>\n<p>If an addition or removal is proposed during a meeting, and the full\nWG is not in attendance to participate, then the addition or removal\nis added to the agenda for the subsequent meeting.  This is to ensure\nthat all members are given the opportunity to participate in all\nmembership decisions.  If a WG member is unable to attend a meeting\nwhere a planned membership decision is being made, then their consent\nis assumed.</p>\n<p>No more than 1/3 of the WG members may be affiliated with the same\nemployer.  If removal or resignation of a WG member, or a change of\nemployment by a WG member, creates a situation where more than 1/3 of\nthe WG membership shares an employer, then the situation must be\nimmediately remedied by the resignation or removal of one or more WG\nmembers affiliated with the over-represented employer(s).</p>\n<h3 id=\"wg-meetings\">WG Meetings</h3>\n<p>The WG meets occasionally on a Google Hangout On Air. A designated moderator\napproved by the WG runs the meeting. Each meeting should be\npublished to YouTube.</p>\n<p>Items are added to the WG agenda that are considered contentious or\nare modifications of governance, contribution policy, WG membership,\nor release process.</p>\n<p>The intention of the agenda is not to approve or review all patches;\nthat should happen continuously on GitHub and be handled by the larger\ngroup of Collaborators.</p>\n<p>Any community member or contributor can ask that something be added to\nthe next meeting&#39;s agenda by logging a GitHub Issue. Any Collaborator,\nWG member or the moderator can add the item to the agenda by adding\nthe <strong><em>WG-agenda</em></strong> tag to the issue.</p>\n<p>Prior to each WG meeting the moderator will share the Agenda with\nmembers of the WG. WG members can add any items they like to the\nagenda at the beginning of each meeting. The moderator and the WG\ncannot veto or remove items.</p>\n<p>The WG may invite persons or representatives from certain projects to\nparticipate in a non-voting capacity.</p>\n<p>The moderator is responsible for summarizing the discussion of each\nagenda item and sends it as a pull request after the meeting.</p>\n<h3 id=\"consensus-seeking-process\">Consensus Seeking Process</h3>\n<p>The WG follows a\n<a href=\"http://en.wikipedia.org/wiki/Consensus-seeking_decision-making\">Consensus\nSeeking</a>\ndecision-making model.</p>\n<p>When an agenda item has appeared to reach a consensus the moderator\nwill ask &quot;Does anyone object?&quot; as a final call for dissent from the\nconsensus.</p>\n<p>If an agenda item cannot reach a consensus a WG member can call for\neither a closing vote or a vote to table the issue to the next\nmeeting. The call for a vote must be seconded by a majority of the WG\nor else the discussion will continue. Simple majority wins.</p>\n<p>Note that changes to WG membership require a majority consensus.  See\n&quot;WG Membership&quot; above.</p>\n"
      ],
      "contentsRaw": "### Streams Working Group\n\nThe Node.js Streams is jointly governed by a Working Group\n(WG)\nthat is responsible for high-level guidance of the project.\n\nThe WG has final authority over this project including:\n\n* Technical direction\n* Project governance and process (including this policy)\n* Contribution policy\n* GitHub repository hosting\n* Conduct guidelines\n* Maintaining the list of additional Collaborators\n\nFor the current list of WG members, see the project\n[README.md](./README.md#current-project-team-members).\n\n### Collaborators\n\nThe readable-stream GitHub repository is\nmaintained by the WG and additional Collaborators who are added by the\nWG on an ongoing basis.\n\nIndividuals making significant and valuable contributions are made\nCollaborators and given commit-access to the project. These\nindividuals are identified by the WG and their addition as\nCollaborators is discussed during the WG meeting.\n\n_Note:_ If you make a significant contribution and are not considered\nfor commit-access log an issue or contact a WG member directly and it\nwill be brought up in the next WG meeting.\n\nModifications of the contents of the readable-stream repository are\nmade on\na collaborative basis. Anybody with a GitHub account may propose a\nmodification via pull request and it will be considered by the project\nCollaborators. All pull requests must be reviewed and accepted by a\nCollaborator with sufficient expertise who is able to take full\nresponsibility for the change. In the case of pull requests proposed\nby an existing Collaborator, an additional Collaborator is required\nfor sign-off. Consensus should be sought if additional Collaborators\nparticipate and there is disagreement around a particular\nmodification. See _Consensus Seeking Process_ below for further detail\non the consensus model used for governance.\n\nCollaborators may opt to elevate significant or controversial\nmodifications, or modifications that have not found consensus to the\nWG for discussion by assigning the ***WG-agenda*** tag to a pull\nrequest or issue. The WG should serve as the final arbiter where\nrequired.\n\nFor the current list of Collaborators, see the project\n[README.md](./README.md#members).\n\n### WG Membership\n\nWG seats are not time-limited.  There is no fixed size of the WG.\nHowever, the expected target is between 6 and 12, to ensure adequate\ncoverage of important areas of expertise, balanced with the ability to\nmake decisions efficiently.\n\nThere is no specific set of requirements or qualifications for WG\nmembership beyond these rules.\n\nThe WG may add additional members to the WG by unanimous consensus.\n\nA WG member may be removed from the WG by voluntary resignation, or by\nunanimous consensus of all other WG members.\n\nChanges to WG membership should be posted in the agenda, and may be\nsuggested as any other agenda item (see \"WG Meetings\" below).\n\nIf an addition or removal is proposed during a meeting, and the full\nWG is not in attendance to participate, then the addition or removal\nis added to the agenda for the subsequent meeting.  This is to ensure\nthat all members are given the opportunity to participate in all\nmembership decisions.  If a WG member is unable to attend a meeting\nwhere a planned membership decision is being made, then their consent\nis assumed.\n\nNo more than 1/3 of the WG members may be affiliated with the same\nemployer.  If removal or resignation of a WG member, or a change of\nemployment by a WG member, creates a situation where more than 1/3 of\nthe WG membership shares an employer, then the situation must be\nimmediately remedied by the resignation or removal of one or more WG\nmembers affiliated with the over-represented employer(s).\n\n### WG Meetings\n\nThe WG meets occasionally on a Google Hangout On Air. A designated moderator\napproved by the WG runs the meeting. Each meeting should be\npublished to YouTube.\n\nItems are added to the WG agenda that are considered contentious or\nare modifications of governance, contribution policy, WG membership,\nor release process.\n\nThe intention of the agenda is not to approve or review all patches;\nthat should happen continuously on GitHub and be handled by the larger\ngroup of Collaborators.\n\nAny community member or contributor can ask that something be added to\nthe next meeting's agenda by logging a GitHub Issue. Any Collaborator,\nWG member or the moderator can add the item to the agenda by adding\nthe ***WG-agenda*** tag to the issue.\n\nPrior to each WG meeting the moderator will share the Agenda with\nmembers of the WG. WG members can add any items they like to the\nagenda at the beginning of each meeting. The moderator and the WG\ncannot veto or remove items.\n\nThe WG may invite persons or representatives from certain projects to\nparticipate in a non-voting capacity.\n\nThe moderator is responsible for summarizing the discussion of each\nagenda item and sends it as a pull request after the meeting.\n\n### Consensus Seeking Process\n\nThe WG follows a\n[Consensus\nSeeking](http://en.wikipedia.org/wiki/Consensus-seeking_decision-making)\ndecision-making model.\n\nWhen an agenda item has appeared to reach a consensus the moderator\nwill ask \"Does anyone object?\" as a final call for dissent from the\nconsensus.\n\nIf an agenda item cannot reach a consensus a WG member can call for\neither a closing vote or a vote to table the issue to the next\nmeeting. The call for a vote must be seconded by a majority of the WG\nor else the discussion will continue. Simple majority wins.\n\nNote that changes to WG membership require a majority consensus.  See\n\"WG Membership\" above.",
      "metadata": {}
    },
    "history": {
      "reference": "history",
      "route": "history",
      "sourcePath": "src\\docs-data\\node_modules\\remove-trailing-separator\\history.md",
      "title": "(untitled)",
      "contents": [
        "<h2 id=\"history\">History</h2>\n<h3 id=\"1-1-0-16th-aug-2017\">1.1.0 - 16th Aug 2017</h3>\n<ul>\n<li><a href=\"https://github.com/darsain/remove-trailing-separator/commit/f4576e3638c39b794998b533fffb27854dcbee01\">f4576e3</a> Implement faster slash slicing</li>\n</ul>\n<h3 id=\"1-0-2-07th-jun-2017\">1.0.2 - 07th Jun 2017</h3>\n<ul>\n<li><a href=\"https://github.com/darsain/remove-trailing-separator/commit/8e13ecbfd7b9f5fdf97c5d5ff923e4718b874e31\">8e13ecb</a> ES5 compatibility</li>\n</ul>\n<h3 id=\"1-0-1-25th-sep-2016\">1.0.1 - 25th Sep 2016</h3>\n<ul>\n<li><a href=\"https://github.com/darsain/remove-trailing-separator/commit/af90b4e153a4527894741af6c7005acaeb78606d\">b78606d</a> Remove backslash only on win32 systems</li>\n</ul>\n<h3 id=\"1-0-0-24th-sep-2016\">1.0.0 - 24th Sep 2016</h3>\n<p>Initial release.</p>\n"
      ],
      "contentsRaw": "## History\n\n### 1.1.0 - 16th Aug 2017\n\n- [f4576e3](https://github.com/darsain/remove-trailing-separator/commit/f4576e3638c39b794998b533fffb27854dcbee01) Implement faster slash slicing\n\n### 1.0.2 - 07th Jun 2017\n\n- [8e13ecb](https://github.com/darsain/remove-trailing-separator/commit/8e13ecbfd7b9f5fdf97c5d5ff923e4718b874e31) ES5 compatibility\n\n### 1.0.1 - 25th Sep 2016\n\n- [b78606d](https://github.com/darsain/remove-trailing-separator/commit/af90b4e153a4527894741af6c7005acaeb78606d) Remove backslash only on win32 systems\n\n### 1.0.0 - 24th Sep 2016\n\nInitial release.",
      "metadata": {}
    },
    "Porting-Buffer": {
      "reference": "Porting-Buffer",
      "route": "Porting-Buffer",
      "sourcePath": "src\\docs-data\\node_modules\\safer-buffer\\Porting-Buffer.md",
      "title": "(untitled)",
      "contents": [
        "<h1 id=\"porting-to-the-buffer-from-buffer-alloc-api\">Porting to the Buffer.from/Buffer.alloc API</h1>\n<p><a id=\"overview\"></a></p>\n<h2 id=\"overview\">Overview</h2>\n<ul>\n<li><a href=\"#variant-1\">Variant 1: Drop support for Node.js ≤ 4.4.x and 5.0.0 — 5.9.x.</a> (<em>recommended</em>)</li>\n<li><a href=\"#variant-2\">Variant 2: Use a polyfill</a></li>\n<li><a href=\"#variant-3\">Variant 3: manual detection, with safeguards</a></li>\n</ul>\n<h3 id=\"finding-problematic-bits-of-code-using-grep\">Finding problematic bits of code using grep</h3>\n<p>Just run <code>grep -nrE &#39;[^a-zA-Z](Slow)?Buffer\\s*\\(&#39; --exclude-dir node_modules</code>.</p>\n<p>It will find all the potentially unsafe places in your own code (with some considerably unlikely\nexceptions).</p>\n<h3 id=\"finding-problematic-bits-of-code-using-node-js-8\">Finding problematic bits of code using Node.js 8</h3>\n<p>If you’re using Node.js ≥ 8.0.0 (which is recommended), Node.js exposes multiple options that help with finding the relevant pieces of code:</p>\n<ul>\n<li><code>--trace-warnings</code> will make Node.js show a stack trace for this warning and other warnings that are printed by Node.js.</li>\n<li><code>--trace-deprecation</code> does the same thing, but only for deprecation warnings.</li>\n<li><code>--pending-deprecation</code> will show more types of deprecation warnings. In particular, it will show the <code>Buffer()</code> deprecation warning, even on Node.js 8.</li>\n</ul>\n<p>You can set these flags using an environment variable:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>$&nbsp;export&nbsp;NODE_OPTIONS=&#39;--trace-warnings&nbsp;--pending-deprecation&#39;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>$&nbsp;cat&nbsp;example.js</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&#39;use&nbsp;strict&#39;;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>const&nbsp;foo&nbsp;=&nbsp;new&nbsp;Buffer(&#39;foo&#39;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>$&nbsp;node&nbsp;example.js</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>(node:7147)&nbsp;[DEP0005]&nbsp;DeprecationWarning:&nbsp;The&nbsp;Buffer()&nbsp;and&nbsp;new&nbsp;Buffer()&nbsp;constructors&nbsp;are&nbsp;not&nbsp;recommended&nbsp;for&nbsp;use&nbsp;due&nbsp;to&nbsp;security&nbsp;and&nbsp;usability&nbsp;concerns.&nbsp;Please&nbsp;use&nbsp;the&nbsp;new&nbsp;Buffer.alloc(),&nbsp;Buffer.allocUnsafe(),&nbsp;or&nbsp;Buffer.from()&nbsp;construction&nbsp;methods&nbsp;instead.</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;showFlaggedDeprecation&nbsp;(buffer.js:127:13)</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;new&nbsp;Buffer&nbsp;(buffer.js:148:3)</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;Object.&lt;anonymous&gt;&nbsp;(/path/to/example.js:2:13)</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;[...&nbsp;more&nbsp;stack&nbsp;trace&nbsp;lines&nbsp;...]</span></span></div></pre><h3 id=\"finding-problematic-bits-of-code-using-linters\">Finding problematic bits of code using linters</h3>\n<p>Eslint rules <a href=\"https://eslint.org/docs/rules/no-buffer-constructor\">no-buffer-constructor</a>\nor\n<a href=\"https://github.com/mysticatea/eslint-plugin-node/blob/master/docs/rules/no-deprecated-api.md\">node/no-deprecated-api</a>\nalso find calls to deprecated <code>Buffer()</code> API. Those rules are included in some pre-sets.</p>\n<p>There is a drawback, though, that it doesn&#39;t always\n<a href=\"https://github.com/chalker/safer-buffer#why-not-safe-buffer\">work correctly</a> when <code>Buffer</code> is\noverriden e.g. with a polyfill, so recommended is a combination of this and some other method\ndescribed above.</p>\n<p><a id=\"variant-1\"></a></p>\n<h2 id=\"variant-1-drop-support-for-node-js-4-4-x-and-5-0-0-5-9-x-\">Variant 1: Drop support for Node.js ≤ 4.4.x and 5.0.0 — 5.9.x.</h2>\n<p>This is the recommended solution nowadays that would imply only minimal overhead.</p>\n<p>The Node.js 5.x release line has been unsupported since July 2016, and the Node.js 4.x release line reaches its End of Life in April 2018 (→ <a href=\"https://github.com/nodejs/Release#release-schedule\">Schedule</a>). This means that these versions of Node.js will <em>not</em> receive any updates, even in case of security issues, so using these release lines should be avoided, if at all possible.</p>\n<p>What you would do in this case is to convert all <code>new Buffer()</code> or <code>Buffer()</code> calls to use <code>Buffer.alloc()</code> or <code>Buffer.from()</code>, in the following way:</p>\n<ul>\n<li>For <code>new Buffer(number)</code>, replace it with <code>Buffer.alloc(number)</code>.</li>\n<li>For <code>new Buffer(string)</code> (or <code>new Buffer(string, encoding)</code>), replace it with <code>Buffer.from(string)</code> (or <code>Buffer.from(string, encoding)</code>).</li>\n<li>For all other combinations of arguments (these are much rarer), also replace <code>new Buffer(...arguments)</code> with <code>Buffer.from(...arguments)</code>.</li>\n</ul>\n<p>Note that <code>Buffer.alloc()</code> is also <em>faster</em> on the current Node.js versions than\n<code>new Buffer(size).fill(0)</code>, which is what you would otherwise need to ensure zero-filling.</p>\n<p>Enabling eslint rule <a href=\"https://eslint.org/docs/rules/no-buffer-constructor\">no-buffer-constructor</a>\nor\n<a href=\"https://github.com/mysticatea/eslint-plugin-node/blob/master/docs/rules/no-deprecated-api.md\">node/no-deprecated-api</a>\nis recommended to avoid accidential unsafe Buffer API usage.</p>\n<p>There is also a <a href=\"https://github.com/joyeecheung/node-dep-codemod#dep005\">JSCodeshift codemod</a>\nfor automatically migrating Buffer constructors to <code>Buffer.alloc()</code> or <code>Buffer.from()</code>.\nNote that it currently only works with cases where the arguments are literals or where the\nconstructor is invoked with two arguments.</p>\n<p><em>If you currently support those older Node.js versions and dropping them would be a semver-major change\nfor you, or if you support older branches of your packages, consider using <a href=\"#variant-2\">Variant 2</a>\nor <a href=\"#variant-3\">Variant 3</a> on older branches, so people using those older branches will also receive\nthe fix. That way, you will eradicate potential issues caused by unguarded Buffer API usage and\nyour users will not observe a runtime deprecation warning when running your code on Node.js 10.</em></p>\n<p><a id=\"variant-2\"></a></p>\n<h2 id=\"variant-2-use-a-polyfill\">Variant 2: Use a polyfill</h2>\n<p>Utilize <a href=\"https://www.npmjs.com/package/safer-buffer\">safer-buffer</a> as a polyfill to support older\nNode.js versions.</p>\n<p>You would take exacly the same steps as in <a href=\"#variant-1\">Variant 1</a>, but with a polyfill\n<code>const Buffer = require(&#39;safer-buffer&#39;).Buffer</code> in all files where you use the new <code>Buffer</code> api.</p>\n<p>Make sure that you do not use old <code>new Buffer</code> API — in any files where the line above is added,\nusing old <code>new Buffer()</code> API will <em>throw</em>. It will be easy to notice that in CI, though.</p>\n<p>Alternatively, you could use <a href=\"https://www.npmjs.com/package/buffer-from\">buffer-from</a> and/or\n<a href=\"https://www.npmjs.com/package/buffer-alloc\">buffer-alloc</a> <a href=\"https://ponyfill.com/\">ponyfills</a> —\nthose are great, the only downsides being 4 deps in the tree and slightly more code changes to\nmigrate off them (as you would be using e.g. <code>Buffer.from</code> under a different name). If you need only\n<code>Buffer.from</code> polyfilled — <code>buffer-from</code> alone which comes with no extra dependencies.</p>\n<p><em>Alternatively, you could use <a href=\"https://www.npmjs.com/package/safe-buffer\">safe-buffer</a> — it also\nprovides a polyfill, but takes a different approach which has\n<a href=\"https://github.com/chalker/safer-buffer#why-not-safe-buffer\">it&#39;s drawbacks</a>. It will allow you\nto also use the older <code>new Buffer()</code> API in your code, though — but that&#39;s arguably a benefit, as\nit is problematic, can cause issues in your code, and will start emitting runtime deprecation\nwarnings starting with Node.js 10.</em></p>\n<p>Note that in either case, it is important that you also remove all calls to the old Buffer\nAPI manually — just throwing in <code>safe-buffer</code> doesn&#39;t fix the problem by itself, it just provides\na polyfill for the new API. I have seen people doing that mistake.</p>\n<p>Enabling eslint rule <a href=\"https://eslint.org/docs/rules/no-buffer-constructor\">no-buffer-constructor</a>\nor\n<a href=\"https://github.com/mysticatea/eslint-plugin-node/blob/master/docs/rules/no-deprecated-api.md\">node/no-deprecated-api</a>\nis recommended.</p>\n<p><em>Don&#39;t forget to drop the polyfill usage once you drop support for Node.js &lt; 4.5.0.</em></p>\n<p><a id=\"variant-3\"></a></p>\n<h2 id=\"variant-3-manual-detection-with-safeguards\">Variant 3 — manual detection, with safeguards</h2>\n<p>This is useful if you create Buffer instances in only a few places (e.g. one), or you have your own\nwrapper around them.</p>\n<h3 id=\"buffer-0-\">Buffer(0)</h3>\n<p>This special case for creating empty buffers can be safely replaced with <code>Buffer.concat([])</code>, which\nreturns the same result all the way down to Node.js 0.8.x.</p>\n<h3 id=\"buffer-notnumber-\">Buffer(notNumber)</h3>\n<p>Before:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&nbsp;buf&nbsp;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&nbsp;</span><span class=\"meta class instance constructor js\"><span class=\"keyword operator new js\"><span>new</span></span><span>&nbsp;</span><span class=\"entity name type instance js\"><span>Buffer</span></span></span><span class=\"meta brace round js\"><span>(</span></span><span>notNumber</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&nbsp;encoding</span><span class=\"meta brace round js\"><span>)</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></div></pre><p>After:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&nbsp;buf</span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"keyword control js\"><span>if</span></span><span>&nbsp;</span><span class=\"meta brace round js\"><span>(</span></span><span class=\"variable other object js\"><span>Buffer</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>from</span></span><span>&nbsp;</span><span class=\"keyword operator logical js\"><span>&amp;&amp;</span></span><span>&nbsp;</span><span class=\"variable other object js\"><span>Buffer</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>from</span></span><span>&nbsp;</span><span class=\"keyword operator comparison js\"><span>!==</span></span><span>&nbsp;</span><span class=\"support class js\"><span>Uint8Array</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>from</span></span><span class=\"meta brace round js\"><span>)</span></span><span>&nbsp;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&nbsp;&nbsp;buf&nbsp;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&nbsp;</span><span class=\"variable other object js\"><span>Buffer</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>from</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span>notNumber</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&nbsp;encoding</span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span><span>&nbsp;</span><span class=\"keyword control js\"><span>else</span></span><span>&nbsp;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&nbsp;&nbsp;</span><span class=\"keyword control js\"><span>if</span></span><span>&nbsp;</span><span class=\"meta brace round js\"><span>(</span></span><span class=\"keyword operator typeof js\"><span>typeof</span></span><span>&nbsp;notNumber&nbsp;</span><span class=\"keyword operator comparison js\"><span>===</span></span><span>&nbsp;</span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span>number</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"keyword control js\"><span>throw</span></span><span>&nbsp;</span><span class=\"meta class instance constructor js\"><span class=\"keyword operator new js\"><span>new</span></span><span>&nbsp;</span><span class=\"entity name type instance js\"><span>Error</span></span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&#39;</span></span><span>The&nbsp;&quot;size&quot;&nbsp;argument&nbsp;must&nbsp;be&nbsp;of&nbsp;type&nbsp;number.</span><span class=\"punctuation definition string end js\"><span>&#39;</span></span></span><span class=\"meta brace round js\"><span>)</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&nbsp;&nbsp;buf&nbsp;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&nbsp;</span><span class=\"meta class instance constructor js\"><span class=\"keyword operator new js\"><span>new</span></span><span>&nbsp;</span><span class=\"entity name type instance js\"><span>Buffer</span></span></span><span class=\"meta brace round js\"><span>(</span></span><span>notNumber</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&nbsp;encoding</span><span class=\"meta brace round js\"><span>)</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span></span></div></pre><p><code>encoding</code> is optional.</p>\n<p>Note that the <code>typeof notNumber</code> before <code>new Buffer</code> is required (for cases when <code>notNumber</code> argument is not\nhard-coded) and <em>is not caused by the deprecation of Buffer constructor</em> — it&#39;s exactly <em>why</em> the\nBuffer constructor is deprecated. Ecosystem packages lacking this type-check caused numereous\nsecurity issues — situations when unsanitized user input could end up in the <code>Buffer(arg)</code> create\nproblems ranging from DoS to leaking sensitive information to the attacker from the process memory.</p>\n<p>When <code>notNumber</code> argument is hardcoded (e.g. literal <code>&quot;abc&quot;</code> or <code>[0,1,2]</code>), the <code>typeof</code> check can\nbe omitted.</p>\n<p>Also note that using TypeScript does not fix this problem for you — when libs written in\n<code>TypeScript</code> are used from JS, or when user input ends up there — it behaves exactly as pure JS, as\nall type checks are translation-time only and are not present in the actual JS code which TS\ncompiles to.</p>\n<h3 id=\"buffer-number-\">Buffer(number)</h3>\n<p>For Node.js 0.10.x (and below) support:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&nbsp;buf</span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"keyword control js\"><span>if</span></span><span>&nbsp;</span><span class=\"meta brace round js\"><span>(</span></span><span class=\"variable other object js\"><span>Buffer</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>alloc</span></span><span class=\"meta brace round js\"><span>)</span></span><span>&nbsp;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&nbsp;&nbsp;buf&nbsp;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&nbsp;</span><span class=\"variable other object js\"><span>Buffer</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>alloc</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span>number</span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span><span>&nbsp;</span><span class=\"keyword control js\"><span>else</span></span><span>&nbsp;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&nbsp;&nbsp;buf&nbsp;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&nbsp;</span><span class=\"meta class instance constructor js\"><span class=\"keyword operator new js\"><span>new</span></span><span>&nbsp;</span><span class=\"entity name type instance js\"><span>Buffer</span></span></span><span class=\"meta brace round js\"><span>(</span></span><span>number</span><span class=\"meta brace round js\"><span>)</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&nbsp;&nbsp;</span><span class=\"variable other object js\"><span>buf</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>fill</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span class=\"constant numeric decimal js\"><span>0</span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span></span></div></pre><p>Otherwise (Node.js ≥ 0.12.x):</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type const js\"><span>const</span></span><span>&nbsp;</span><span class=\"constant other js\"><span>buf</span></span><span>&nbsp;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&nbsp;</span><span class=\"variable other object js\"><span>Buffer</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>alloc</span></span><span>&nbsp;</span><span class=\"keyword operator ternary js\"><span>?</span></span><span>&nbsp;</span><span class=\"variable other object js\"><span>Buffer</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>alloc</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span>number</span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"keyword operator ternary js\"><span>:</span></span><span>&nbsp;</span><span class=\"meta class instance constructor js\"><span class=\"keyword operator new js\"><span>new</span></span><span>&nbsp;</span><span class=\"entity name type instance js\"><span>Buffer</span></span></span><span class=\"meta brace round js\"><span>(</span></span><span>number</span><span class=\"meta brace round js\"><span>)</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>fill</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span class=\"constant numeric decimal js\"><span>0</span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></div></pre><h2 id=\"regarding-buffer-allocunsafe\">Regarding Buffer.allocUnsafe</h2>\n<p>Be extra cautious when using <code>Buffer.allocUnsafe</code>:</p>\n<ul>\n<li>Don&#39;t use it if you don&#39;t have a good reason to<ul>\n<li>e.g. you probably won&#39;t ever see a performance difference for small buffers, in fact, those\nmight be even faster with <code>Buffer.alloc()</code>,</li>\n<li>if your code is not in the hot code path — you also probably won&#39;t notice a difference,</li>\n<li>keep in mind that zero-filling minimizes the potential risks.</li>\n</ul>\n</li>\n<li>If you use it, make sure that you never return the buffer in a partially-filled state,<ul>\n<li>if you are writing to it sequentially — always truncate it to the actuall written length</li>\n</ul>\n</li>\n</ul>\n<p>Errors in handling buffers allocated with <code>Buffer.allocUnsafe</code> could result in various issues,\nranged from undefined behaviour of your code to sensitive data (user input, passwords, certs)\nleaking to the remote attacker.</p>\n<p><em>Note that the same applies to <code>new Buffer</code> usage without zero-filling, depending on the Node.js\nversion (and lacking type checks also adds DoS to the list of potential problems).</em></p>\n<p><a id=\"faq\"></a></p>\n<h2 id=\"faq\">FAQ</h2>\n<p><a id=\"design-flaws\"></a></p>\n<h3 id=\"what-is-wrong-with-the-buffer-constructor-\">What is wrong with the <code>Buffer</code> constructor?</h3>\n<p>The <code>Buffer</code> constructor could be used to create a buffer in many different ways:</p>\n<ul>\n<li><code>new Buffer(42)</code> creates a <code>Buffer</code> of 42 bytes. Before Node.js 8, this buffer contained\n<em>arbitrary memory</em> for performance reasons, which could include anything ranging from\nprogram source code to passwords and encryption keys.</li>\n<li><code>new Buffer(&#39;abc&#39;)</code> creates a <code>Buffer</code> that contains the UTF-8-encoded version of\nthe string <code>&#39;abc&#39;</code>. A second argument could specify another encoding: For example,\n<code>new Buffer(string, &#39;base64&#39;)</code> could be used to convert a Base64 string into the original\nsequence of bytes that it represents.</li>\n<li>There are several other combinations of arguments.</li>\n</ul>\n<p>This meant that, in code like <code>var buffer = new Buffer(foo);</code>, <em>it is not possible to tell\nwhat exactly the contents of the generated buffer are</em> without knowing the type of <code>foo</code>.</p>\n<p>Sometimes, the value of <code>foo</code> comes from an external source. For example, this function\ncould be exposed as a service on a web server, converting a UTF-8 string into its Base64 form:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"storage type function tsx\"><span>function</span></span><span>&nbsp;</span><span class=\"meta definition function tsx entity name function tsx\"><span>stringToBase64</span></span><span class=\"meta parameters tsx\"><span class=\"punctuation definition parameters begin tsx\"><span>(</span></span><span class=\"variable parameter tsx\"><span>req</span></span><span class=\"punctuation separator parameter tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable parameter tsx\"><span>res</span></span><span class=\"punctuation definition parameters end tsx\"><span>)</span></span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span class=\"punctuation whitespace comment leading tsx\"><span>&nbsp;&nbsp;</span></span><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;The&nbsp;request&nbsp;body&nbsp;should&nbsp;have&nbsp;the&nbsp;format&nbsp;of&nbsp;`{&nbsp;string:&nbsp;&#39;foobar&#39;&nbsp;}`</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;</span><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr tsx\"><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>rawBytes</span></span><span>&nbsp;</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"new expr tsx\"><span class=\"keyword operator new tsx\"><span>new</span></span><span>&nbsp;</span><span class=\"entity name type tsx\"><span>Buffer</span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"variable other object tsx\"><span>req</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support variable property dom tsx\"><span>body</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other property tsx\"><span>string</span></span><span class=\"meta brace round tsx\"><span>)</span></span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;</span><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr tsx\"><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>encoded</span></span><span>&nbsp;</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>rawBytes</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function tsx\"><span>toString</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"string quoted single tsx\"><span class=\"punctuation definition string begin tsx\"><span>&#39;</span></span><span>base64</span><span class=\"punctuation definition string end tsx\"><span>&#39;</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span>&nbsp;&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>res</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>end</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>encoded</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>encoded</span></span><span>&nbsp;</span></span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function tsx\"><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>}</span></span></span></span></span></div></pre><p>Note that this code does <em>not</em> validate the type of <code>req.body.string</code>:</p>\n<ul>\n<li><code>req.body.string</code> is expected to be a string. If this is the case, all goes well.</li>\n<li><code>req.body.string</code> is controlled by the client that sends the request.</li>\n<li>If <code>req.body.string</code> is the <em>number</em> <code>50</code>, the <code>rawBytes</code> would be 50 bytes:<ul>\n<li>Before Node.js 8, the content would be uninitialized</li>\n<li>After Node.js 8, the content would be <code>50</code> bytes with the value <code>0</code></li>\n</ul>\n</li>\n</ul>\n<p>Because of the missing type check, an attacker could intentionally send a number\nas part of the request. Using this, they can either:</p>\n<ul>\n<li>Read uninitialized memory. This <strong>will</strong> leak passwords, encryption keys and other\nkinds of sensitive information. (Information leak)</li>\n<li>Force the program to allocate a large amount of memory. For example, when specifying\n<code>500000000</code> as the input value, each request will allocate 500MB of memory.\nThis can be used to either exhaust the memory available of a program completely\nand make it crash, or slow it down significantly. (Denial of Service)</li>\n</ul>\n<p>Both of these scenarios are considered serious security issues in a real-world\nweb server context.</p>\n<p>when using <code>Buffer.from(req.body.string)</code> instead, passing a number will always\nthrow an exception instead, giving a controlled behaviour that can always be\nhandled by the program.</p>\n<p><a id=\"ecosystem-usage\"></a></p>\n<h3 id=\"the-buffer-constructor-has-been-deprecated-for-a-while-is-this-really-an-issue-\">The <code>Buffer()</code> constructor has been deprecated for a while. Is this really an issue?</h3>\n<p>Surveys of code in the <code>npm</code> ecosystem have shown that the <code>Buffer()</code> constructor is still\nwidely used. This includes new code, and overall usage of such code has actually been\n<em>increasing</em>.</p>\n"
      ],
      "contentsRaw": "# Porting to the Buffer.from/Buffer.alloc API\n\n<a id=\"overview\"></a>\n## Overview\n\n- [Variant 1: Drop support for Node.js ≤ 4.4.x and 5.0.0 — 5.9.x.](#variant-1) (*recommended*)\n- [Variant 2: Use a polyfill](#variant-2)\n- [Variant 3: manual detection, with safeguards](#variant-3)\n\n### Finding problematic bits of code using grep\n\nJust run `grep -nrE '[^a-zA-Z](Slow)?Buffer\\s*\\(' --exclude-dir node_modules`.\n\nIt will find all the potentially unsafe places in your own code (with some considerably unlikely\nexceptions).\n\n### Finding problematic bits of code using Node.js 8\n\nIf you’re using Node.js ≥ 8.0.0 (which is recommended), Node.js exposes multiple options that help with finding the relevant pieces of code:\n\n- `--trace-warnings` will make Node.js show a stack trace for this warning and other warnings that are printed by Node.js.\n- `--trace-deprecation` does the same thing, but only for deprecation warnings.\n- `--pending-deprecation` will show more types of deprecation warnings. In particular, it will show the `Buffer()` deprecation warning, even on Node.js 8.\n\nYou can set these flags using an environment variable:\n\n```console\n$ export NODE_OPTIONS='--trace-warnings --pending-deprecation'\n$ cat example.js\n'use strict';\nconst foo = new Buffer('foo');\n$ node example.js\n(node:7147) [DEP0005] DeprecationWarning: The Buffer() and new Buffer() constructors are not recommended for use due to security and usability concerns. Please use the new Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() construction methods instead.\n    at showFlaggedDeprecation (buffer.js:127:13)\n    at new Buffer (buffer.js:148:3)\n    at Object.<anonymous> (/path/to/example.js:2:13)\n    [... more stack trace lines ...]\n```\n\n### Finding problematic bits of code using linters\n\nEslint rules [no-buffer-constructor](https://eslint.org/docs/rules/no-buffer-constructor)\nor\n[node/no-deprecated-api](https://github.com/mysticatea/eslint-plugin-node/blob/master/docs/rules/no-deprecated-api.md)\nalso find calls to deprecated `Buffer()` API. Those rules are included in some pre-sets.\n\nThere is a drawback, though, that it doesn't always\n[work correctly](https://github.com/chalker/safer-buffer#why-not-safe-buffer) when `Buffer` is\noverriden e.g. with a polyfill, so recommended is a combination of this and some other method\ndescribed above.\n\n<a id=\"variant-1\"></a>\n## Variant 1: Drop support for Node.js ≤ 4.4.x and 5.0.0 — 5.9.x.\n\nThis is the recommended solution nowadays that would imply only minimal overhead.\n\nThe Node.js 5.x release line has been unsupported since July 2016, and the Node.js 4.x release line reaches its End of Life in April 2018 (→ [Schedule](https://github.com/nodejs/Release#release-schedule)). This means that these versions of Node.js will *not* receive any updates, even in case of security issues, so using these release lines should be avoided, if at all possible.\n\nWhat you would do in this case is to convert all `new Buffer()` or `Buffer()` calls to use `Buffer.alloc()` or `Buffer.from()`, in the following way:\n\n- For `new Buffer(number)`, replace it with `Buffer.alloc(number)`.\n- For `new Buffer(string)` (or `new Buffer(string, encoding)`), replace it with `Buffer.from(string)` (or `Buffer.from(string, encoding)`).\n- For all other combinations of arguments (these are much rarer), also replace `new Buffer(...arguments)` with `Buffer.from(...arguments)`.\n\nNote that `Buffer.alloc()` is also _faster_ on the current Node.js versions than\n`new Buffer(size).fill(0)`, which is what you would otherwise need to ensure zero-filling.\n\nEnabling eslint rule [no-buffer-constructor](https://eslint.org/docs/rules/no-buffer-constructor)\nor\n[node/no-deprecated-api](https://github.com/mysticatea/eslint-plugin-node/blob/master/docs/rules/no-deprecated-api.md)\nis recommended to avoid accidential unsafe Buffer API usage.\n\nThere is also a [JSCodeshift codemod](https://github.com/joyeecheung/node-dep-codemod#dep005)\nfor automatically migrating Buffer constructors to `Buffer.alloc()` or `Buffer.from()`.\nNote that it currently only works with cases where the arguments are literals or where the\nconstructor is invoked with two arguments.\n\n_If you currently support those older Node.js versions and dropping them would be a semver-major change\nfor you, or if you support older branches of your packages, consider using [Variant 2](#variant-2)\nor [Variant 3](#variant-3) on older branches, so people using those older branches will also receive\nthe fix. That way, you will eradicate potential issues caused by unguarded Buffer API usage and\nyour users will not observe a runtime deprecation warning when running your code on Node.js 10._\n\n<a id=\"variant-2\"></a>\n## Variant 2: Use a polyfill\n\nUtilize [safer-buffer](https://www.npmjs.com/package/safer-buffer) as a polyfill to support older\nNode.js versions.\n\nYou would take exacly the same steps as in [Variant 1](#variant-1), but with a polyfill\n`const Buffer = require('safer-buffer').Buffer` in all files where you use the new `Buffer` api.\n\nMake sure that you do not use old `new Buffer` API — in any files where the line above is added,\nusing old `new Buffer()` API will _throw_. It will be easy to notice that in CI, though.\n\nAlternatively, you could use [buffer-from](https://www.npmjs.com/package/buffer-from) and/or\n[buffer-alloc](https://www.npmjs.com/package/buffer-alloc) [ponyfills](https://ponyfill.com/) —\nthose are great, the only downsides being 4 deps in the tree and slightly more code changes to\nmigrate off them (as you would be using e.g. `Buffer.from` under a different name). If you need only\n`Buffer.from` polyfilled — `buffer-from` alone which comes with no extra dependencies.\n\n_Alternatively, you could use [safe-buffer](https://www.npmjs.com/package/safe-buffer) — it also\nprovides a polyfill, but takes a different approach which has\n[it's drawbacks](https://github.com/chalker/safer-buffer#why-not-safe-buffer). It will allow you\nto also use the older `new Buffer()` API in your code, though — but that's arguably a benefit, as\nit is problematic, can cause issues in your code, and will start emitting runtime deprecation\nwarnings starting with Node.js 10._\n\nNote that in either case, it is important that you also remove all calls to the old Buffer\nAPI manually — just throwing in `safe-buffer` doesn't fix the problem by itself, it just provides\na polyfill for the new API. I have seen people doing that mistake.\n\nEnabling eslint rule [no-buffer-constructor](https://eslint.org/docs/rules/no-buffer-constructor)\nor\n[node/no-deprecated-api](https://github.com/mysticatea/eslint-plugin-node/blob/master/docs/rules/no-deprecated-api.md)\nis recommended.\n\n_Don't forget to drop the polyfill usage once you drop support for Node.js < 4.5.0._\n\n<a id=\"variant-3\"></a>\n## Variant 3 — manual detection, with safeguards\n\nThis is useful if you create Buffer instances in only a few places (e.g. one), or you have your own\nwrapper around them.\n\n### Buffer(0)\n\nThis special case for creating empty buffers can be safely replaced with `Buffer.concat([])`, which\nreturns the same result all the way down to Node.js 0.8.x.\n\n### Buffer(notNumber)\n\nBefore:\n\n```js\nvar buf = new Buffer(notNumber, encoding);\n```\n\nAfter:\n\n```js\nvar buf;\nif (Buffer.from && Buffer.from !== Uint8Array.from) {\n  buf = Buffer.from(notNumber, encoding);\n} else {\n  if (typeof notNumber === 'number')\n    throw new Error('The \"size\" argument must be of type number.');\n  buf = new Buffer(notNumber, encoding);\n}\n```\n\n`encoding` is optional.\n\nNote that the `typeof notNumber` before `new Buffer` is required (for cases when `notNumber` argument is not\nhard-coded) and _is not caused by the deprecation of Buffer constructor_ — it's exactly _why_ the\nBuffer constructor is deprecated. Ecosystem packages lacking this type-check caused numereous\nsecurity issues — situations when unsanitized user input could end up in the `Buffer(arg)` create\nproblems ranging from DoS to leaking sensitive information to the attacker from the process memory.\n\nWhen `notNumber` argument is hardcoded (e.g. literal `\"abc\"` or `[0,1,2]`), the `typeof` check can\nbe omitted.\n\nAlso note that using TypeScript does not fix this problem for you — when libs written in\n`TypeScript` are used from JS, or when user input ends up there — it behaves exactly as pure JS, as\nall type checks are translation-time only and are not present in the actual JS code which TS\ncompiles to.\n\n### Buffer(number)\n\nFor Node.js 0.10.x (and below) support:\n\n```js\nvar buf;\nif (Buffer.alloc) {\n  buf = Buffer.alloc(number);\n} else {\n  buf = new Buffer(number);\n  buf.fill(0);\n}\n```\n\nOtherwise (Node.js ≥ 0.12.x):\n\n```js\nconst buf = Buffer.alloc ? Buffer.alloc(number) : new Buffer(number).fill(0);\n```\n\n## Regarding Buffer.allocUnsafe\n\nBe extra cautious when using `Buffer.allocUnsafe`:\n * Don't use it if you don't have a good reason to\n   * e.g. you probably won't ever see a performance difference for small buffers, in fact, those\n     might be even faster with `Buffer.alloc()`,\n   * if your code is not in the hot code path — you also probably won't notice a difference,\n   * keep in mind that zero-filling minimizes the potential risks.\n * If you use it, make sure that you never return the buffer in a partially-filled state,\n   * if you are writing to it sequentially — always truncate it to the actuall written length\n\nErrors in handling buffers allocated with `Buffer.allocUnsafe` could result in various issues,\nranged from undefined behaviour of your code to sensitive data (user input, passwords, certs)\nleaking to the remote attacker.\n\n_Note that the same applies to `new Buffer` usage without zero-filling, depending on the Node.js\nversion (and lacking type checks also adds DoS to the list of potential problems)._\n\n<a id=\"faq\"></a>\n## FAQ\n\n<a id=\"design-flaws\"></a>\n### What is wrong with the `Buffer` constructor?\n\nThe `Buffer` constructor could be used to create a buffer in many different ways:\n\n- `new Buffer(42)` creates a `Buffer` of 42 bytes. Before Node.js 8, this buffer contained\n  *arbitrary memory* for performance reasons, which could include anything ranging from\n  program source code to passwords and encryption keys.\n- `new Buffer('abc')` creates a `Buffer` that contains the UTF-8-encoded version of\n  the string `'abc'`. A second argument could specify another encoding: For example,\n  `new Buffer(string, 'base64')` could be used to convert a Base64 string into the original\n  sequence of bytes that it represents.\n- There are several other combinations of arguments.\n\nThis meant that, in code like `var buffer = new Buffer(foo);`, *it is not possible to tell\nwhat exactly the contents of the generated buffer are* without knowing the type of `foo`.\n\nSometimes, the value of `foo` comes from an external source. For example, this function\ncould be exposed as a service on a web server, converting a UTF-8 string into its Base64 form:\n\n```\nfunction stringToBase64(req, res) {\n  // The request body should have the format of `{ string: 'foobar' }`\n  const rawBytes = new Buffer(req.body.string)\n  const encoded = rawBytes.toString('base64')\n  res.end({ encoded: encoded })\n}\n```\n\nNote that this code does *not* validate the type of `req.body.string`:\n\n- `req.body.string` is expected to be a string. If this is the case, all goes well.\n- `req.body.string` is controlled by the client that sends the request.\n- If `req.body.string` is the *number* `50`, the `rawBytes` would be 50 bytes:\n  - Before Node.js 8, the content would be uninitialized\n  - After Node.js 8, the content would be `50` bytes with the value `0`\n\nBecause of the missing type check, an attacker could intentionally send a number\nas part of the request. Using this, they can either:\n\n- Read uninitialized memory. This **will** leak passwords, encryption keys and other\n  kinds of sensitive information. (Information leak)\n- Force the program to allocate a large amount of memory. For example, when specifying\n  `500000000` as the input value, each request will allocate 500MB of memory.\n  This can be used to either exhaust the memory available of a program completely\n  and make it crash, or slow it down significantly. (Denial of Service)\n\nBoth of these scenarios are considered serious security issues in a real-world\nweb server context.\n\nwhen using `Buffer.from(req.body.string)` instead, passing a number will always\nthrow an exception instead, giving a controlled behaviour that can always be\nhandled by the program.\n\n<a id=\"ecosystem-usage\"></a>\n### The `Buffer()` constructor has been deprecated for a while. Is this really an issue?\n\nSurveys of code in the `npm` ecosystem have shown that the `Buffer()` constructor is still\nwidely used. This includes new code, and overall usage of such code has actually been\n*increasing*.",
      "metadata": {}
    },
    "ASYNC": {
      "reference": "ASYNC",
      "route": "ASYNC",
      "sourcePath": "src\\docs-data\\node_modules\\twig\\ASYNC.md",
      "title": "(untitled)",
      "contents": [
        "<h1 id=\"twig-asynchronous-rendering\">Twig Asynchronous Rendering</h1>\n<h2 id=\"synchronous-promises\">Synchronous promises</h2>\n<p>The asynchronous behaviour of Twig.js relies on promises, in order to support both the synchronous and asynchronous behaviour there is an internal promise implementation that runs fully synchronous.</p>\n<p>The internal implementation of promises does not use <code>setTimeout</code> to run through the promise chain, but instead synchronously runs through the promise chain.</p>\n<p>The different promise implementations can be mixed, synchronous behaviour however is no longer guaranteed as soon as the regular promise implementation is run.</p>\n<h3 id=\"examples\">Examples</h3>\n<p><strong>Internal (synchronous) implementation</strong></p>\n<p><a href=\"https://github.com/JorgenEvens/twig.js/tree/master/src/twig.async.js#L40\">Internal implementation</a></p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>console.log(&#39;start&#39;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Twig.Promise.resolve(&#39;1&#39;)</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>.then(function(v)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;console.log(v);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&#39;2&#39;;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>})</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>.then(function(v)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;console.log(v);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>});</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>console.log(&#39;stop&#39;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;Prints&nbsp;to&nbsp;the&nbsp;console:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;start</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;1</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;2</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;stop</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*/</span></span></div></pre><p><strong>Regular / native promises</strong></p>\n<p>Implementations such as the native promises or <a href=\"http://bluebirdjs.com/docs/getting-started.html\">bluebird</a> promises.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>console.log(&#39;start&#39;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Promise.resolve(&#39;1&#39;)</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>.then(function(v)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;console.log(v);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&#39;2&#39;;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>})</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>.then(function(v)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;console.log(v);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>});</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>console.log(&#39;stop&#39;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;Prints&nbsp;to&nbsp;the&nbsp;console:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;start</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;stop</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;1</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;2</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*/</span></span></div></pre><p><strong>Mixing promises</strong></p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>console.log(&#39;start&#39;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Twig.Promise.resolve(&#39;1&#39;)</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>.then(function(v)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;console.log(v);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Promise.resolve(&#39;2&#39;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>})</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>.then(function(v)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;console.log(v);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>});</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>console.log(&#39;stop&#39;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;Prints&nbsp;to&nbsp;the&nbsp;console:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;start</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;1</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;stop</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;2</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*/</span></span></div></pre><h2 id=\"async-helpers\">Async helpers</h2>\n<p>To preserve the correct order of execution there is an implemenation of <code>Twig.forEach()</code> that waits any promises returned from the callback before executing the next iteration of the loop. If no promise is returned the next iteration is invoked immediately.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>var&nbsp;arr&nbsp;=&nbsp;new&nbsp;Array(5);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Twig.async.forEach(arr,&nbsp;function(value,&nbsp;index)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;console.log(index);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(index&nbsp;%&nbsp;2&nbsp;==&nbsp;0)</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;index;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Promise.resolve(index);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>})</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>.then(function()&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;console.log(&#39;finished&#39;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>});</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;Prints&nbsp;to&nbsp;the&nbsp;console:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;0</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;1</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;2</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;3</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;4</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;finished</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*/</span></span></div></pre><h2 id=\"switching-render-mode\">Switching render mode</h2>\n<p>The rendering mode of Twig.js internally is determined by the <code>allow_async</code> argument that can be passed into <code>Twig.expression.parse</code>, <code>Twig.logic.parse</code>, <code>Twig.parse</code> and <code>Twig.Template.render</code>. Detecting if at any point code runs asynchronously is explained in <a href=\"#detecting-asynchronous-behaviour\">detecting asynchronous behaviour</a>.</p>\n<p>For the end user switching between synchronous and asynchronous is as simple as using a different method on the template instance.</p>\n<p><strong>Render template synchronously</strong></p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>var&nbsp;output&nbsp;=&nbsp;twig({</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;&#39;a&nbsp;{{value}}&#39;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}).render({</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;value:&nbsp;&#39;test&#39;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>});</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;Prints&nbsp;to&nbsp;the&nbsp;console:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;a&nbsp;test</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*/</span></span></div></pre><p><strong>Render template asynchronously</strong></p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>var&nbsp;template&nbsp;=&nbsp;twig({</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;data:&nbsp;&#39;a&nbsp;{{value}}&#39;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>}).renderAsync({</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;value:&nbsp;&#39;test&#39;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>})</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>.then(function(output)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;console.log(output);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>});</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;Prints&nbsp;to&nbsp;the&nbsp;console:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;a&nbsp;test</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*/</span></span></div></pre><h2 id=\"detecting-asynchronous-behaviour\">Detecting asynchronous behaviour</h2>\n<p>The pattern used to detect asynchronous behaviour is the same everywhere it is used and follows a simple pattern.</p>\n<ol>\n<li>Set a variable <code>is_async = true</code></li>\n<li>Run the promise chain that might contain some asynchronous behaviour.</li>\n<li>As the last method in the promise chain set <code>is_async = false</code></li>\n<li>Underneath the promise chain test whether <code>is_async</code> is <code>true</code></li>\n</ol>\n<p>This pattern works because the last method in the chain will be executed in the next run of the eventloop (<code>setTimeout</code>/<code>setImmediate</code>).</p>\n<h3 id=\"examples\">Examples</h3>\n<p><strong>Synchronous promises only</strong></p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>var&nbsp;is_async&nbsp;=&nbsp;true;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Twig.Promise.resolve()</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>.then(function()&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;We&nbsp;run&nbsp;our&nbsp;work&nbsp;in&nbsp;here&nbsp;such&nbsp;to&nbsp;allow&nbsp;for&nbsp;asynchronous&nbsp;work</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;This&nbsp;example&nbsp;is&nbsp;fully&nbsp;synchronous</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&#39;hello&nbsp;world&#39;;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>})</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>.then(function()&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;is_async&nbsp;=&nbsp;false;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>});</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>if&nbsp;(is_async)</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;console.log(&#39;method&nbsp;ran&nbsp;asynchronous&#39;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>console.log(&#39;method&nbsp;ran&nbsp;synchronous&#39;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;Prints&nbsp;to&nbsp;the&nbsp;console:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;method&nbsp;ran&nbsp;synchronous</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*/</span></span></div></pre><p><strong>Mixed promises</strong></p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>var&nbsp;is_async&nbsp;=&nbsp;true;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>Twig.Promise.resolve()</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>.then(function()&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;We&nbsp;run&nbsp;our&nbsp;work&nbsp;in&nbsp;here&nbsp;such&nbsp;to&nbsp;allow&nbsp;for&nbsp;asynchronous&nbsp;work</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Promise.resolve(&#39;hello&nbsp;world&#39;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>})</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>.then(function()&nbsp;{</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;is_async&nbsp;=&nbsp;false;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>});</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>if&nbsp;(is_async)</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;&nbsp;&nbsp;&nbsp;console.log(&#39;method&nbsp;ran&nbsp;asynchronous&#39;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>console.log(&#39;method&nbsp;ran&nbsp;synchronous&#39;);</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>/**</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;Prints&nbsp;to&nbsp;the&nbsp;console:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*&nbsp;method&nbsp;ran&nbsp;asynchronous</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;*/</span></span></div></pre>"
      ],
      "contentsRaw": "# Twig Asynchronous Rendering\n\n## Synchronous promises\n\nThe asynchronous behaviour of Twig.js relies on promises, in order to support both the synchronous and asynchronous behaviour there is an internal promise implementation that runs fully synchronous.\n\nThe internal implementation of promises does not use `setTimeout` to run through the promise chain, but instead synchronously runs through the promise chain.\n\nThe different promise implementations can be mixed, synchronous behaviour however is no longer guaranteed as soon as the regular promise implementation is run.\n\n### Examples\n\n**Internal (synchronous) implementation**\n\n[Internal implementation](https://github.com/JorgenEvens/twig.js/tree/master/src/twig.async.js#L40)\n\n```javascript\nconsole.log('start');\nTwig.Promise.resolve('1')\n.then(function(v) {\n    console.log(v);\n    return '2';\n})\n.then(function(v) {\n    console.log(v);\n});\nconsole.log('stop');\n\n/**\n * Prints to the console:\n * start\n * 1\n * 2\n * stop\n */\n```\n\n**Regular / native promises**\n\nImplementations such as the native promises or [bluebird](http://bluebirdjs.com/docs/getting-started.html) promises.\n\n```javascript\nconsole.log('start');\nPromise.resolve('1')\n.then(function(v) {\n    console.log(v);\n    return '2';\n})\n.then(function(v) {\n    console.log(v);\n});\nconsole.log('stop');\n\n/**\n * Prints to the console:\n * start\n * stop\n * 1\n * 2\n */\n```\n\n**Mixing promises**\n\n```javascript\nconsole.log('start');\nTwig.Promise.resolve('1')\n.then(function(v) {\n    console.log(v);\n    return Promise.resolve('2');\n})\n.then(function(v) {\n    console.log(v);\n});\nconsole.log('stop');\n\n/**\n * Prints to the console:\n * start\n * 1\n * stop\n * 2\n */\n```\n\n\n## Async helpers\n\nTo preserve the correct order of execution there is an implemenation of `Twig.forEach()` that waits any promises returned from the callback before executing the next iteration of the loop. If no promise is returned the next iteration is invoked immediately.\n\n```javascript\nvar arr = new Array(5);\n\nTwig.async.forEach(arr, function(value, index) {\n    console.log(index);\n\n    if (index % 2 == 0)\n        return index;\n\n    return Promise.resolve(index);\n})\n.then(function() {\n    console.log('finished');\n});\n\n/**\n * Prints to the console:\n * 0\n * 1\n * 2\n * 3\n * 4\n * finished\n */\n```\n\n## Switching render mode\n\nThe rendering mode of Twig.js internally is determined by the `allow_async` argument that can be passed into `Twig.expression.parse`, `Twig.logic.parse`, `Twig.parse` and `Twig.Template.render`. Detecting if at any point code runs asynchronously is explained in [detecting asynchronous behaviour](#detecting-asynchronous-behaviour).\n\nFor the end user switching between synchronous and asynchronous is as simple as using a different method on the template instance.\n\n**Render template synchronously**\n\n```javascript\nvar output = twig({\n    data: 'a {{value}}'\n}).render({\n    value: 'test'\n});\n\n/**\n * Prints to the console:\n * a test\n */\n```\n\n**Render template asynchronously**\n\n```javascript\nvar template = twig({\n    data: 'a {{value}}'\n}).renderAsync({\n    value: 'test'\n})\n.then(function(output) {\n    console.log(output);\n});\n\n/**\n * Prints to the console:\n * a test\n */\n```\n\n## Detecting asynchronous behaviour\n\nThe pattern used to detect asynchronous behaviour is the same everywhere it is used and follows a simple pattern.\n\n1. Set a variable `is_async = true`\n2. Run the promise chain that might contain some asynchronous behaviour.\n3. As the last method in the promise chain set `is_async = false`\n4. Underneath the promise chain test whether `is_async` is `true`\n\nThis pattern works because the last method in the chain will be executed in the next run of the eventloop (`setTimeout`/`setImmediate`).\n\n### Examples\n\n**Synchronous promises only**\n\n```javascript\nvar is_async = true;\n\nTwig.Promise.resolve()\n.then(function() {\n    // We run our work in here such to allow for asynchronous work\n    // This example is fully synchronous\n    return 'hello world';\n})\n.then(function() {\n    is_async = false;\n});\n\nif (is_async)\n    console.log('method ran asynchronous');\n\nconsole.log('method ran synchronous');\n\n/**\n * Prints to the console:\n * method ran synchronous\n */\n```\n\n**Mixed promises**\n\n```javascript\nvar is_async = true;\n\nTwig.Promise.resolve()\n.then(function() {\n    // We run our work in here such to allow for asynchronous work\n    return Promise.resolve('hello world');\n})\n.then(function() {\n    is_async = false;\n});\n\nif (is_async)\n    console.log('method ran asynchronous');\n\nconsole.log('method ran synchronous');\n\n/**\n * Prints to the console:\n * method ran asynchronous\n */\n```",
      "metadata": {}
    },
    "AUTHORS": {
      "reference": "AUTHORS",
      "route": "AUTHORS",
      "sourcePath": "src\\docs-data\\node_modules\\typescript\\AUTHORS.md",
      "title": "(untitled)",
      "contents": [
        "<p>TypeScript is authored by:</p>\n<ul>\n<li>Aaron Holmes</li>\n<li>Abubaker Bashir</li>\n<li>Adam Freidin</li>\n<li>Adi Dahiya</li>\n<li>Aditya Daflapurkar</li>\n<li>Adnan Chowdhury </li>\n<li>Adrian Leonhard </li>\n<li>Adrien Gibrat </li>\n<li>Ahmad Farid</li>\n<li>Akshar Patel</li>\n<li>Alan Agius </li>\n<li>Alex Chugaev </li>\n<li>Alex Eagle</li>\n<li>Alex Khomchenko </li>\n<li>Alex Ryan </li>\n<li>Alexander Kuvaev</li>\n<li>Alexander Rusakov </li>\n<li>Alexander Tarasyuk</li>\n<li>Ali Sabzevari</li>\n<li>Aliaksandr Radzivanovich</li>\n<li>Aluan Haddad </li>\n<li>Anatoly Ressin </li>\n<li>Anders Hejlsberg</li>\n<li>Andreas Martin</li>\n<li>Andrej Baran </li>\n<li>Andrew Casey </li>\n<li>Andrew Faulkner </li>\n<li>Andrew Ochsner </li>\n<li>Andrew Stegmaier </li>\n<li>Andrew Z Allen</li>\n<li>András Parditka </li>\n<li>Andy Hanson</li>\n<li>Anil Anar</li>\n<li>Anton Khlynovskiy </li>\n<li>Anton Tolmachev</li>\n<li>Anubha Mathur </li>\n<li>Armando Aguirre </li>\n<li>Arnaud Tournier </li>\n<li>Arnav Singh</li>\n<li>Artem Tyurin </li>\n<li>Arthur Ozga</li>\n<li>Asad Saeeduddin</li>\n<li>Avery Morin</li>\n<li>Basarat Ali Syed</li>\n<li>@begincalendar</li>\n<li>Ben Duffield</li>\n<li>Ben Mosher </li>\n<li>Benjamin Bock </li>\n<li>Benjamin Lichtman </li>\n<li>Benny Neugebauer </li>\n<li>Bill Ticehurst</li>\n<li>Blaine Bublitz </li>\n<li>Blake Embrey</li>\n<li>@bluelovers</li>\n<li>@bootstraponline</li>\n<li>Bowden Kelly</li>\n<li>Bowden Kenny</li>\n<li>Brandon Slade </li>\n<li>Brett Mayen</li>\n<li>Bryan Forbes</li>\n<li>Caitlin Potter</li>\n<li>Cameron Taggart </li>\n<li>@cedvdb</li>\n<li>Charles Pierce </li>\n<li>Charly POLY </li>\n<li>Chris Bubernak</li>\n<li>Christophe Vidal </li>\n<li>Chuck Jazdzewski</li>\n<li>Colby Russell</li>\n<li>Colin Snover</li>\n<li>Cotton Hou </li>\n<li>Cyrus Najmabadi</li>\n<li>Dafrok Zhang</li>\n<li>Dahan Gong</li>\n<li>Dan Corder</li>\n<li>Dan Freeman </li>\n<li>Dan Quirk</li>\n<li>Daniel Gooss</li>\n<li>Daniel Hollocher</li>\n<li>Daniel Król </li>\n<li>Daniel Lehenbauer</li>\n<li>Daniel Rosenwasser</li>\n<li>David Kmenta</li>\n<li>David Li</li>\n<li>David Sheldrick </li>\n<li>David Sherret </li>\n<li>David Souther</li>\n<li>David Staheli </li>\n<li>Denis Nedelyaev</li>\n<li>Derek P Sifford </li>\n<li>Dhruv Rajvanshi </li>\n<li>Dick van den Brink</li>\n<li>Diogo Franco (Kovensky) </li>\n<li>Dirk Bäumer</li>\n<li>Dirk Holtwick</li>\n<li>Dom Chen </li>\n<li>Donald Pipowitch </li>\n<li>Doug Ilijev</li>\n<li>@e-cloud</li>\n<li>Ecole Keine</li>\n<li>Elisée Maurer</li>\n<li>Elizabeth Dinella </li>\n<li>Emilio García-Pumarino</li>\n<li>Eric Grube </li>\n<li>Eric Tsang</li>\n<li>Erik Edrosa</li>\n<li>Erik McClenney </li>\n<li>Esakki Raj </li>\n<li>Ethan Resnick </li>\n<li>Ethan Rubio</li>\n<li>Eugene Timokhov </li>\n<li>Evan Martin</li>\n<li>Evan Sebastian</li>\n<li>Eyas Sharaiha</li>\n<li>Fabian Cook </li>\n<li>@falsandtru</li>\n<li>Filipe Silva </li>\n<li>@flowmemo</li>\n<li>Francois Wouts </li>\n<li>Frank Wallis</li>\n<li>Franklin Tse</li>\n<li>František Žiacik</li>\n<li>Gabe Moothart </li>\n<li>Gabriel Isenberg</li>\n<li>Gilad Peleg</li>\n<li>Godfrey Chan </li>\n<li>Graeme Wicksted</li>\n<li>Guilherme Oenning</li>\n<li>Guillaume Salles</li>\n<li>Guy Bedford</li>\n<li>Halasi Tamás </li>\n<li>Harald Niesche</li>\n<li>Hendrik Liebau </li>\n<li>Henry Mercer </li>\n<li>Herrington Darkholme</li>\n<li>Holger Jeromin </li>\n<li>Homa Wong </li>\n<li>Iain Monro</li>\n<li>@IdeaHunter</li>\n<li>Igor Novozhilov</li>\n<li>Ika </li>\n<li>Ingvar Stepanyan</li>\n<li>Isiah Meadows</li>\n<li>Ivan Enderlin </li>\n<li>Ivo Gabe de Wolff</li>\n<li>Iwata Hidetaka </li>\n<li>Jack Williams </li>\n<li>Jakub Korzeniowski</li>\n<li>Jakub Młokosiewicz </li>\n<li>James Henry </li>\n<li>James Whitney</li>\n<li>Jan Melcher </li>\n<li>Jason Freeman</li>\n<li>Jason Jarrett </li>\n<li>Jason Killian</li>\n<li>Jason Ramsay</li>\n<li>JBerger</li>\n<li>Jed Mao</li>\n<li>Jeffrey Morlan</li>\n<li>Jesse Schalken</li>\n<li>Jing Ma </li>\n<li>Jiri Tobisek</li>\n<li>Joe Calzaretta </li>\n<li>Joe Chung </li>\n<li>Joel Day </li>\n<li>Joey Wilson</li>\n<li>Johannes Rieken</li>\n<li>John Doe </li>\n<li>John Vilk</li>\n<li>Jonathan Bond-Caron</li>\n<li>Jonathan Park</li>\n<li>Jonathan Toland</li>\n<li>Jonathan Turner</li>\n<li>Jonathon Smith</li>\n<li>Jordi Oliveras Rovira </li>\n<li>Joscha Feth </li>\n<li>Josh Abernathy </li>\n<li>Josh Goldberg </li>\n<li>Josh Kalderimis</li>\n<li>Josh Soref</li>\n<li>Juan Luis Boya García</li>\n<li>Julian Williams</li>\n<li>Justin Bay </li>\n<li>Justin Johansson </li>\n<li>K. Preißer</li>\n<li>Kagami Sascha Rosylight</li>\n<li>Kanchalai Tanglertsampan</li>\n<li>Kate Miháliková </li>\n<li>Keith Mashinter</li>\n<li>Ken Howard</li>\n<li>Kenji Imamula</li>\n<li>Kerem Kat</li>\n<li>Kevin Donnelly </li>\n<li>Kevin Gibbons </li>\n<li>Kevin Lang </li>\n<li>Khải </li>\n<li>Kitson Kelly </li>\n<li>Klaus Meinhardt </li>\n<li>Kris Zyp </li>\n<li>Kyle Kelley</li>\n<li>Kārlis Gaņģis</li>\n<li>Lorant Pinter</li>\n<li>Lucien Greathouse</li>\n<li>Lukas Elmer </li>\n<li>Maarten Sijm </li>\n<li>Magnus Hiie </li>\n<li>Magnus Kulke </li>\n<li>Manish Giri</li>\n<li>Marin Marinov</li>\n<li>Marius Schulz </li>\n<li>Markus Johnsson </li>\n<li>Martin Hiller </li>\n<li>Martin Probst </li>\n<li>Martin Vseticka</li>\n<li>Martyn Janes </li>\n<li>Masahiro Wakame</li>\n<li>Mateusz Burzyński </li>\n<li>Matt Bierner </li>\n<li>Matt McCutchen</li>\n<li>Matt Mitchell </li>\n<li>Mattias Buelens</li>\n<li>Mattias Buelens </li>\n<li>Max Deepfield</li>\n<li>Maxwell Paul Brickner </li>\n<li>@meyer</li>\n<li>Micah Zoltu</li>\n<li>@micbou</li>\n<li>Michael </li>\n<li>Michael Bromley</li>\n<li>Mike Busyrev </li>\n<li>Mike Morearty </li>\n<li>Mine Starks </li>\n<li>Mohamed Hegazy</li>\n<li>Mohsen Azimi </li>\n<li>Myles Megyesi </li>\n<li>Nathan Shively-Sanders</li>\n<li>Nathan Yee</li>\n<li>Nicolas Henry</li>\n<li>Nicu Micleușanu</li>\n<li>@nieltg</li>\n<li>Nima Zahedi</li>\n<li>Noah Chen </li>\n<li>Noel Varanda </li>\n<li>Noj Vek</li>\n<li>Oleg Mihailik</li>\n<li>Oleksandr Chekhovskyi</li>\n<li>Omer Sheikh </li>\n<li>Orta Therox</li>\n<li>Oskar Segersva¨rd</li>\n<li>Oussama Ben Brahim </li>\n<li>Patrick Zhong</li>\n<li>Paul Jolly</li>\n<li>Paul Koerbitz </li>\n<li>Paul van Brenk</li>\n<li>@pcbro</li>\n<li>Pedro Maltez</li>\n<li>Perry Jiang</li>\n<li>Peter Burns</li>\n<li>Philip Bulley</li>\n<li>Philippe Voinov </li>\n<li>Pi Lanningham </li>\n<li>Piero Cangianiello</li>\n<li>@piloopin</li>\n<li>Prayag Verma</li>\n<li>Priyantha Lankapura </li>\n<li>@progre</li>\n<li>Punya Biswal</li>\n<li>Rado Kirov</li>\n<li>Raj Dosanjh</li>\n<li>Reiner Dolp </li>\n<li>Remo H. Jansen </li>\n<li>@rflorian</li>\n<li>@rhysd</li>\n<li>Ricardo N Feliciano </li>\n<li>Richard Karmazín </li>\n<li>Richard Knoll</li>\n<li>Richard Sentino</li>\n<li>Robert Coie</li>\n<li>Rohit Verma</li>\n<li>Ron Buckton</li>\n<li>Rostislav Galimsky </li>\n<li>Rowan Wyborn</li>\n<li>Ryan Cavanaugh</li>\n<li>Ryohei Ikegami</li>\n<li>Sam Bostock </li>\n<li>Sam El-Husseini </li>\n<li>Sarangan Rajamanickam</li>\n<li>Sean Barag </li>\n<li>Sergey Rubanov</li>\n<li>Sergey Shandar </li>\n<li>Sergii Bezliudnyi </li>\n<li>Sharon Rolel </li>\n<li>Sheetal Nandi</li>\n<li>Shengping Zhong</li>\n<li>Shyyko Serhiy</li>\n<li>Simon Hürlimann</li>\n<li>Slawomir Sadziak </li>\n<li>Solal Pirelli</li>\n<li>Soo Jae Hwang </li>\n<li>Stan Thomas</li>\n<li>Stanislav Iliev </li>\n<li>Stanislav Sysoev</li>\n<li>Stas Vilchik </li>\n<li>Stephan Ginthör </li>\n<li>Steve Lucco</li>\n<li>@styfle</li>\n<li>Sudheesh Singanamalla </li>\n<li>Sébastien Arod</li>\n<li>@T18970237136</li>\n<li>@t_</li>\n<li>Taras Mankovski </li>\n<li>Tarik Ozket</li>\n<li>Tetsuharu Ohzeki</li>\n<li>Thomas den Hollander </li>\n<li>Thomas Loubiou</li>\n<li>Tien Hoanhtien</li>\n<li>Tim Lancina </li>\n<li>Tim Perry</li>\n<li>Tim Viiding-Spader</li>\n<li>Tingan Ho</li>\n<li>Todd Thomson</li>\n<li>togru</li>\n<li>Tomas Grubliauskas</li>\n<li>Torben Fitschen </li>\n<li>@TravCav</li>\n<li>TruongSinh Tran-Nguyen</li>\n<li>Tycho Grouwstra </li>\n<li>Vadi Taslim </li>\n<li>Vakhurin Sergey </li>\n<li>Vidar Tonaas Fauske</li>\n<li>Viktor Zozulyak</li>\n<li>Vilic Vane</li>\n<li>Vimal Raghubir </li>\n<li>Vladimir Kurchatkin </li>\n<li>Vladimir Matveev</li>\n<li>Vyacheslav Pukhanov </li>\n<li>Wenlu Wang </li>\n<li>Wesley Wigham</li>\n<li>William Orr </li>\n<li>Wilson Hobbs </li>\n<li>York Yao</li>\n<li>@yortus</li>\n<li>Yuichi Nukiyama</li>\n<li>Yuval Greenfield </li>\n<li>Zeeshan Ahmed </li>\n<li>Zev Spitz</li>\n<li>Zhengbo Li</li>\n<li>@Zzzen</li>\n</ul>\n"
      ],
      "contentsRaw": "TypeScript is authored by:\r\n* Aaron Holmes\r\n* Abubaker Bashir\r\n* Adam Freidin\r\n* Adi Dahiya\r\n* Aditya Daflapurkar\r\n* Adnan Chowdhury \r\n* Adrian Leonhard \r\n* Adrien Gibrat \r\n* Ahmad Farid\r\n* Akshar Patel\r\n* Alan Agius \r\n* Alex Chugaev \r\n* Alex Eagle\r\n* Alex Khomchenko \r\n* Alex Ryan \r\n* Alexander Kuvaev\r\n* Alexander Rusakov \r\n* Alexander Tarasyuk\r\n* Ali Sabzevari\r\n* Aliaksandr Radzivanovich\r\n* Aluan Haddad \r\n* Anatoly Ressin \r\n* Anders Hejlsberg\r\n* Andreas Martin\r\n* Andrej Baran \r\n* Andrew Casey \r\n* Andrew Faulkner \r\n* Andrew Ochsner \r\n* Andrew Stegmaier \r\n* Andrew Z Allen\r\n* András Parditka \r\n* Andy Hanson\r\n* Anil Anar\r\n* Anton Khlynovskiy \r\n* Anton Tolmachev\r\n* Anubha Mathur \r\n* Armando Aguirre \r\n* Arnaud Tournier \r\n* Arnav Singh\r\n* Artem Tyurin \r\n* Arthur Ozga\r\n* Asad Saeeduddin\r\n* Avery Morin\r\n* Basarat Ali Syed\r\n* @begincalendar\r\n* Ben Duffield\r\n* Ben Mosher \r\n* Benjamin Bock \r\n* Benjamin Lichtman \r\n* Benny Neugebauer \r\n* Bill Ticehurst\r\n* Blaine Bublitz \r\n* Blake Embrey\r\n* @bluelovers\r\n* @bootstraponline\r\n* Bowden Kelly\r\n* Bowden Kenny\r\n* Brandon Slade \r\n* Brett Mayen\r\n* Bryan Forbes\r\n* Caitlin Potter\r\n* Cameron Taggart \r\n* @cedvdb\r\n* Charles Pierce \r\n* Charly POLY \r\n* Chris Bubernak\r\n* Christophe Vidal \r\n* Chuck Jazdzewski\r\n* Colby Russell\r\n* Colin Snover\r\n* Cotton Hou \r\n* Cyrus Najmabadi\r\n* Dafrok Zhang\r\n* Dahan Gong\r\n* Dan Corder\r\n* Dan Freeman \r\n* Dan Quirk\r\n* Daniel Gooss\r\n* Daniel Hollocher\r\n* Daniel Król \r\n* Daniel Lehenbauer\r\n* Daniel Rosenwasser\r\n* David Kmenta\r\n* David Li\r\n* David Sheldrick \r\n* David Sherret \r\n* David Souther\r\n* David Staheli \r\n* Denis Nedelyaev\r\n* Derek P Sifford \r\n* Dhruv Rajvanshi \r\n* Dick van den Brink\r\n* Diogo Franco (Kovensky) \r\n* Dirk Bäumer\r\n* Dirk Holtwick\r\n* Dom Chen \r\n* Donald Pipowitch \r\n* Doug Ilijev\r\n* @e-cloud\r\n* Ecole Keine\r\n* Elisée Maurer\r\n* Elizabeth Dinella \r\n* Emilio García-Pumarino\r\n* Eric Grube \r\n* Eric Tsang\r\n* Erik Edrosa\r\n* Erik McClenney \r\n* Esakki Raj \r\n* Ethan Resnick \r\n* Ethan Rubio\r\n* Eugene Timokhov \r\n* Evan Martin\r\n* Evan Sebastian\r\n* Eyas Sharaiha\r\n* Fabian Cook \r\n* @falsandtru\r\n* Filipe Silva \r\n* @flowmemo\r\n* Francois Wouts \r\n* Frank Wallis\r\n* Franklin Tse\r\n* František Žiacik\r\n* Gabe Moothart \r\n* Gabriel Isenberg\r\n* Gilad Peleg\r\n* Godfrey Chan \r\n* Graeme Wicksted\r\n* Guilherme Oenning\r\n* Guillaume Salles\r\n* Guy Bedford\r\n* Halasi Tamás \r\n* Harald Niesche\r\n* Hendrik Liebau \r\n* Henry Mercer \r\n* Herrington Darkholme\r\n* Holger Jeromin \r\n* Homa Wong \r\n* Iain Monro\r\n* @IdeaHunter\r\n* Igor Novozhilov\r\n* Ika \r\n* Ingvar Stepanyan\r\n* Isiah Meadows\r\n* Ivan Enderlin \r\n* Ivo Gabe de Wolff\r\n* Iwata Hidetaka \r\n* Jack Williams \r\n* Jakub Korzeniowski\r\n* Jakub Młokosiewicz \r\n* James Henry \r\n* James Whitney\r\n* Jan Melcher \r\n* Jason Freeman\r\n* Jason Jarrett \r\n* Jason Killian\r\n* Jason Ramsay\r\n* JBerger\r\n* Jed Mao\r\n* Jeffrey Morlan\r\n* Jesse Schalken\r\n* Jing Ma \r\n* Jiri Tobisek\r\n* Joe Calzaretta \r\n* Joe Chung \r\n* Joel Day \r\n* Joey Wilson\r\n* Johannes Rieken\r\n* John Doe \r\n* John Vilk\r\n* Jonathan Bond-Caron\r\n* Jonathan Park\r\n* Jonathan Toland\r\n* Jonathan Turner\r\n* Jonathon Smith\r\n* Jordi Oliveras Rovira \r\n* Joscha Feth \r\n* Josh Abernathy \r\n* Josh Goldberg \r\n* Josh Kalderimis\r\n* Josh Soref\r\n* Juan Luis Boya García\r\n* Julian Williams\r\n* Justin Bay \r\n* Justin Johansson \r\n* K. Preißer\r\n* Kagami Sascha Rosylight\r\n* Kanchalai Tanglertsampan\r\n* Kate Miháliková \r\n* Keith Mashinter\r\n* Ken Howard\r\n* Kenji Imamula\r\n* Kerem Kat\r\n* Kevin Donnelly \r\n* Kevin Gibbons \r\n* Kevin Lang \r\n* Khải \r\n* Kitson Kelly \r\n* Klaus Meinhardt \r\n* Kris Zyp \r\n* Kyle Kelley\r\n* Kārlis Gaņģis\r\n* Lorant Pinter\r\n* Lucien Greathouse\r\n* Lukas Elmer \r\n* Maarten Sijm \r\n* Magnus Hiie \r\n* Magnus Kulke \r\n* Manish Giri\r\n* Marin Marinov\r\n* Marius Schulz \r\n* Markus Johnsson \r\n* Martin Hiller \r\n* Martin Probst \r\n* Martin Vseticka\r\n* Martyn Janes \r\n* Masahiro Wakame\r\n* Mateusz Burzyński \r\n* Matt Bierner \r\n* Matt McCutchen\r\n* Matt Mitchell \r\n* Mattias Buelens\r\n* Mattias Buelens \r\n* Max Deepfield\r\n* Maxwell Paul Brickner \r\n* @meyer\r\n* Micah Zoltu\r\n* @micbou\r\n* Michael \r\n* Michael Bromley\r\n* Mike Busyrev \r\n* Mike Morearty \r\n* Mine Starks \r\n* Mohamed Hegazy\r\n* Mohsen Azimi \r\n* Myles Megyesi \r\n* Nathan Shively-Sanders\r\n* Nathan Yee\r\n* Nicolas Henry\r\n* Nicu Micleușanu\r\n* @nieltg\r\n* Nima Zahedi\r\n* Noah Chen \r\n* Noel Varanda \r\n* Noj Vek\r\n* Oleg Mihailik\r\n* Oleksandr Chekhovskyi\r\n* Omer Sheikh \r\n* Orta Therox\r\n* Oskar Segersva¨rd\r\n* Oussama Ben Brahim \r\n* Patrick Zhong\r\n* Paul Jolly\r\n* Paul Koerbitz \r\n* Paul van Brenk\r\n* @pcbro\r\n* Pedro Maltez\r\n* Perry Jiang\r\n* Peter Burns\r\n* Philip Bulley\r\n* Philippe Voinov \r\n* Pi Lanningham \r\n* Piero Cangianiello\r\n* @piloopin\r\n* Prayag Verma\r\n* Priyantha Lankapura \r\n* @progre\r\n* Punya Biswal\r\n* Rado Kirov\r\n* Raj Dosanjh\r\n* Reiner Dolp \r\n* Remo H. Jansen \r\n* @rflorian\r\n* @rhysd\r\n* Ricardo N Feliciano \r\n* Richard Karmazín \r\n* Richard Knoll\r\n* Richard Sentino\r\n* Robert Coie\r\n* Rohit Verma\r\n* Ron Buckton\r\n* Rostislav Galimsky \r\n* Rowan Wyborn\r\n* Ryan Cavanaugh\r\n* Ryohei Ikegami\r\n* Sam Bostock \r\n* Sam El-Husseini \r\n* Sarangan Rajamanickam\r\n* Sean Barag \r\n* Sergey Rubanov\r\n* Sergey Shandar \r\n* Sergii Bezliudnyi \r\n* Sharon Rolel \r\n* Sheetal Nandi\r\n* Shengping Zhong\r\n* Shyyko Serhiy\r\n* Simon Hürlimann\r\n* Slawomir Sadziak \r\n* Solal Pirelli\r\n* Soo Jae Hwang \r\n* Stan Thomas\r\n* Stanislav Iliev \r\n* Stanislav Sysoev\r\n* Stas Vilchik \r\n* Stephan Ginthör \r\n* Steve Lucco\r\n* @styfle\r\n* Sudheesh Singanamalla \r\n* Sébastien Arod\r\n* @T18970237136\r\n* @t_\r\n* Taras Mankovski \r\n* Tarik Ozket\r\n* Tetsuharu Ohzeki\r\n* Thomas den Hollander \r\n* Thomas Loubiou\r\n* Tien Hoanhtien\r\n* Tim Lancina \r\n* Tim Perry\r\n* Tim Viiding-Spader\r\n* Tingan Ho\r\n* Todd Thomson\r\n* togru\r\n* Tomas Grubliauskas\r\n* Torben Fitschen \r\n* @TravCav\r\n* TruongSinh Tran-Nguyen\r\n* Tycho Grouwstra \r\n* Vadi Taslim \r\n* Vakhurin Sergey \r\n* Vidar Tonaas Fauske\r\n* Viktor Zozulyak\r\n* Vilic Vane\r\n* Vimal Raghubir \r\n* Vladimir Kurchatkin \r\n* Vladimir Matveev\r\n* Vyacheslav Pukhanov \r\n* Wenlu Wang \r\n* Wesley Wigham\r\n* William Orr \r\n* Wilson Hobbs \r\n* York Yao\r\n* @yortus\r\n* Yuichi Nukiyama\r\n* Yuval Greenfield \r\n* Zeeshan Ahmed \r\n* Zev Spitz\r\n* Zhengbo Li\r\n* @Zzzen",
      "metadata": {}
    },
    "CODE_OF_CONDUCT": {
      "reference": "CODE_OF_CONDUCT",
      "route": "CODE_OF_CONDUCT",
      "sourcePath": "src\\docs-data\\node_modules\\typescript\\CODE_OF_CONDUCT.md",
      "title": "(untitled)",
      "contents": [
        "<p>This project has adopted the <a href=\"https://opensource.microsoft.com/codeofconduct/\">Microsoft Open Source Code of Conduct</a>. For more information see the <a href=\"https://opensource.microsoft.com/codeofconduct/faq/\">Code of Conduct FAQ</a> or contact <a href=\"mailto:opencode@microsoft.com\">opencode@microsoft.com</a> with any additional questions or comments.</p>\n"
      ],
      "contentsRaw": "This project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.",
      "metadata": {}
    },
    "getting-started": {
      "reference": "getting-started",
      "route": "blueprint/getting-started",
      "sourcePath": "src\\getting-started.md",
      "title": "Getting started",
      "contents": [
        {
          "tag": "heading",
          "value": "Getting started",
          "level": 1,
          "route": "blueprint/getting-started"
        },
        {
          "tag": "heading",
          "value": "Installing Blueprint",
          "level": 2,
          "route": "blueprint/getting-started.installing-blueprint"
        },
        "<p>Blueprint is available as a collection of NPM packages under the <code>@blueprintjs</code>\nscope. Each package appears at the top level of the sidebar to the left, along\nwith its current version.</p>\n<p>Each package contains a CSS file and a collection of CommonJS modules exposing React components.\nThe <code>main</code> module exports all symbols from all modules so you don&#39;t have to import individual files\n(though you can if you want to). The JavaScript components are stable and their APIs adhere to\n<a href=\"http://semver.org/\">semantic versioning</a>.</p>\n<ol>\n<li><p>Install the core package and its peer dependencies with an NPM client like\n<code>npm</code> or <code>yarn</code>, pulling in all relevant dependencies:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>yarn&nbsp;add&nbsp;@blueprintjs/core&nbsp;react&nbsp;react-dom</span></span></div></pre></li>\n<li><p>After installation, you&#39;ll be able to import the React components in your application:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Button</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Intent</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Spinner</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;using&nbsp;JSX:</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr tsx\"><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>mySpinner</span></span><span>&nbsp;</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Spinner</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>intent</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Intent</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>PRIMARY</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;use&nbsp;React.createElement&nbsp;if&nbsp;you&#39;re&nbsp;not&nbsp;using&nbsp;JSX.</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr tsx\"><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>myButton</span></span><span>&nbsp;</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>React</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function dom tsx\"><span>createElement</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"variable other readwrite tsx\"><span>Button</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>intent</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"variable other object tsx\"><span>Intent</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>SUCCESS</span></span><span>&nbsp;</span></span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>button&nbsp;content</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div></pre></li>\n<li><p><strong>Don&#39;t forget to include the main CSS file from each Blueprint package!</strong> Additionally, the\n<code>resources/</code> directory contains supporting media such as fonts and images.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source css scss\"><span class=\"comment line scss\"><span>//</span><span>&nbsp;using&nbsp;node-style&nbsp;package&nbsp;resolution&nbsp;in&nbsp;a&nbsp;CSS&nbsp;file:</span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"meta at-rule import scss\"><span class=\"keyword control at-rule import scss\"><span class=\"punctuation definition keyword scss\"><span>@</span></span><span>import</span></span><span>&nbsp;</span><span class=\"string quoted double scss\"><span class=\"punctuation definition string begin scss\"><span>&quot;</span></span><span>~normalize.css</span><span class=\"punctuation definition string end scss\"><span>&quot;</span></span></span></span><span>;</span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"meta at-rule import scss\"><span class=\"keyword control at-rule import scss\"><span class=\"punctuation definition keyword scss\"><span>@</span></span><span>import</span></span><span>&nbsp;</span><span class=\"string quoted double scss\"><span class=\"punctuation definition string begin scss\"><span>&quot;</span></span><span>~@blueprintjs/core/lib/css/blueprint.css</span><span class=\"punctuation definition string end scss\"><span>&quot;</span></span></span></span><span>;</span></span></div><div class=\"line\"><span class=\"source css scss\"><span class=\"meta at-rule import scss\"><span class=\"keyword control at-rule import scss\"><span class=\"punctuation definition keyword scss\"><span>@</span></span><span>import</span></span><span>&nbsp;</span><span class=\"string quoted double scss\"><span class=\"punctuation definition string begin scss\"><span>&quot;</span></span><span>~@blueprintjs/icons/lib/css/blueprint-icons.css</span><span class=\"punctuation definition string end scss\"><span>&quot;</span></span></span></span><span>;</span></span></div></pre><pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"comment block html\"><span class=\"punctuation definition comment html\"><span>&lt;!--</span></span><span>&nbsp;or&nbsp;using&nbsp;plain&nbsp;old&nbsp;HTML&nbsp;</span><span class=\"punctuation definition comment html\"><span>--&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag structure any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag structure any html\"><span>head</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"comment block html\"><span class=\"punctuation definition comment html\"><span>&lt;!--</span></span><span>&nbsp;include&nbsp;dependencies&nbsp;manually&nbsp;</span><span class=\"punctuation definition comment html\"><span>--&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>link</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>href</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>path/to/node_modules/normalize.css/normalize.css</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>rel</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>stylesheet</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>link</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>href</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>path/to/node_modules/@blueprintjs/core/lib/css/blueprint.css</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>rel</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>stylesheet</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>link</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>href</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>path/to/node_modules/@blueprintjs/icons/lib/css/blueprint-icons.css</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>rel</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>stylesheet</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"comment block html\"><span class=\"punctuation definition comment html\"><span>&lt;!--</span></span><span>&nbsp;NOTE:&nbsp;blueprint-icons.css&nbsp;file&nbsp;must&nbsp;be&nbsp;included&nbsp;alongside&nbsp;blueprint.css!&nbsp;</span><span class=\"punctuation definition comment html\"><span>--&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag structure any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag structure any html\"><span>head</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre></li>\n</ol>\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">CDN-only usage</h4>\n    Blueprint can instead be quickly added to a page using the Unpkg CDN.\n    <a href=\"#blueprint/getting-started.cdn-consumption\">See below for instructions</a>.\n</div>\n\n",
        {
          "tag": "heading",
          "value": "JS environment",
          "level": 2,
          "route": "blueprint/getting-started.js-environment"
        },
        {
          "tag": "heading",
          "value": "Language features",
          "level": 3,
          "route": "blueprint/getting-started.language-features"
        },
        "<p>Note that since the minimum supported version of React is <a href=\"https://reactjs.org/blog/2017/09/26/react-v16.0.html\">v16</a>,\nall of its <a href=\"https://reactjs.org/docs/javascript-environment-requirements.html\">JavaScript Environment Requirements</a> apply to\nBlueprint as well. Blueprint components require the following ES2015 features:</p>\n<ul>\n<li><code>Map</code></li>\n<li><code>Set</code></li>\n<li><code>Array.fill</code></li>\n<li><code>Array.from</code></li>\n</ul>\n<p>We recommend polyfilling these features using <a href=\"https://github.com/paulmillr/es6-shim\">es6-shim</a> or\n<a href=\"https://github.com/zloirock/core-js\">core-js</a>.</p>\n",
        {
          "tag": "heading",
          "value": "DOM4",
          "level": 3,
          "route": "blueprint/getting-started.dom4"
        },
        "<p>Blueprint relies on a handful of DOM Level 4 API methods: <code>el.closest()</code> and <code>el.contains()</code>.\n<code>@blueprintjs/core</code> depends on a <a href=\"https://webreflection.github.io/dom4/\">polyfill library called <code>dom4</code></a> to ensure\nthese methods are available. This module is conditionally loaded if Blueprint is used in a browser environment.</p>\n",
        {
          "tag": "heading",
          "value": "TypeScript",
          "level": 2,
          "route": "blueprint/getting-started.typescript"
        },
        "<p>Blueprint is written in TypeScript and therefore its own <code>.d.ts</code> type definitions are distributed in\nthe NPM package and should be resolved automatically by the compiler. However, you&#39;ll need to\ninstall typings for Blueprint&#39;s dependencies before you can consume it:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>#&nbsp;required&nbsp;for&nbsp;all&nbsp;@blueprintjs&nbsp;packages:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>npm&nbsp;install&nbsp;--save&nbsp;@types/react&nbsp;@types/react-dom</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>#&nbsp;@blueprintjs/timezone&nbsp;requires:</span></span></div><div class=\"line\"><span class=\"text plain null-grammar\"><span>npm&nbsp;install&nbsp;--save&nbsp;@types/moment-timezone</span></span></div></pre><p>Blueprint&#39;s declaration files require <strong>TypeScript 2.3+</strong> for default generic parameter arguments: <code>&lt;P = {}&gt;</code>.</p>\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n  For more information, see <a href=\"#blueprint/reading-the-docs.understanding-typescript\">Understanding TypeScript</a>.\n</div>\n\n",
        {
          "tag": "heading",
          "value": "Vanilla JS APIs",
          "level": 2,
          "route": "blueprint/getting-started.vanilla-js-apis"
        },
        "<p>JS components are built using React, but that does not limit their usage to just React applications.\nYou can render any component in any JavaScript application with <code>ReactDOM.render</code>. Think of it like\nusing a jQuery plugin.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta import tsx\"><span class=\"keyword control import tsx\"><span>import</span></span><span>&nbsp;</span><span class=\"meta block tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Classes</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Intent</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite alias tsx\"><span>Spinner</span></span><span>&nbsp;</span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"keyword control from tsx\"><span>from</span></span><span>&nbsp;</span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>@blueprintjs/core</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta var expr tsx\"><span class=\"storage type tsx\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr tsx\"><span class=\"meta definition variable tsx variable other readwrite tsx\"><span>myContainerElement</span></span><span>&nbsp;</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span>&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"support variable dom tsx\"><span>document</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function dom tsx\"><span>getElementById</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"string quoted double tsx\"><span class=\"punctuation definition string begin tsx\"><span>&quot;</span></span><span>container</span><span class=\"punctuation definition string end tsx\"><span>&quot;</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;with&nbsp;JSX</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>ReactDOM</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>render</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"meta tag tsx\"><span class=\"punctuation definition tag begin tsx\"><span>&lt;</span></span><span class=\"entity name tag tsx\"><span class=\"support class component tsx\"><span>Spinner</span></span></span><span class=\"meta tag attributes tsx\"><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>className</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Classes</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>SMALL</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name tsx\"><span>intent</span></span><span class=\"keyword operator assignment tsx\"><span>=</span></span><span class=\"meta embedded expression tsx\"><span class=\"punctuation section embedded begin tsx\"><span>{</span></span><span class=\"variable other object tsx\"><span>Intent</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>PRIMARY</span></span><span class=\"punctuation section embedded end tsx\"><span>}</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition tag end tsx\"><span>/&gt;</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"variable other readwrite tsx\"><span>myContainerElement</span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"comment line double-slash tsx\"><span class=\"punctuation definition comment tsx\"><span>//</span></span><span>&nbsp;with&nbsp;vanilla&nbsp;JS,&nbsp;use&nbsp;React.createElement</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>ReactDOM</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>render</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>React</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"support function dom tsx\"><span>createElement</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"variable other readwrite tsx\"><span>Spinner</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span><span>&nbsp;</span><span class=\"meta objectliteral tsx\"><span class=\"punctuation definition block tsx\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta objectliteral tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>className</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"variable other object tsx\"><span>Classes</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>SMALL</span></span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta objectliteral tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta object member tsx\"><span class=\"meta object-literal key tsx\"><span>intent</span></span><span class=\"meta object-literal key tsx punctuation separator key-value tsx\"><span>:</span></span><span>&nbsp;</span><span class=\"variable other object tsx\"><span>Intent</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"variable other constant property tsx\"><span>PRIMARY</span></span></span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta objectliteral tsx\"><span class=\"meta object member tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=\"punctuation definition block tsx\"><span>}</span></span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation separator comma tsx\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"variable other readwrite tsx\"><span>myContainerElement</span></span></span></div><div class=\"line\"><span class=\"source tsx\"><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div></pre><p>To remove the component from the DOM and clean up, unmount it:</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source tsx\"><span class=\"meta function-call tsx\"><span class=\"variable other object tsx\"><span>ReactDOM</span></span><span class=\"punctuation accessor tsx\"><span>.</span></span><span class=\"entity name function tsx\"><span>unmountComponentAtNode</span></span></span><span class=\"meta brace round tsx\"><span>(</span></span><span class=\"variable other readwrite tsx\"><span>myContainerElement</span></span><span class=\"meta brace round tsx\"><span>)</span></span><span class=\"punctuation terminator statement tsx\"><span>;</span></span></span></div></pre><p>Check out the <a href=\"https://facebook.github.io/react/docs/react-api.html\">React API docs</a> for more details.</p>\n",
        {
          "tag": "heading",
          "value": "CDN consumption",
          "level": 2,
          "route": "blueprint/getting-started.cdn-consumption"
        },
        "<p>Blueprint supports the venerable <a href=\"https://unpkg.com\">unpkg CDN</a>. Each package provides a UMD\n<code>dist/[name].bundle.js</code> file containing the bundled source code. The UMD wrapper exposes each\nlibrary on the <code>Blueprint</code> global variable: <code>Blueprint.Core</code>, <code>Blueprint.Datetime</code>, etc.</p>\n<p>These bundles <em>do not include</em> external dependencies; your application will need to ensure that\n<code>normalize.css</code>, <code>classnames</code>, <code>dom4</code>, <code>react</code>, <code>react-dom</code>, <code>react-transition-group</code>, <code>popper.js</code>, and\n<code>react-popper</code> are available at runtime.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag sgml html\"><span class=\"punctuation definition tag html\"><span>&lt;!</span></span><span class=\"meta tag sgml doctype html\"><span class=\"entity name tag doctype html\"><span>DOCTYPE</span></span><span>&nbsp;html</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag structure any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag structure any html\"><span>html</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag structure any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag structure any html\"><span>head</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>meta</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>charset</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>utf-8</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>meta</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>name</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>viewport</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>content</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>width=device-width</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>title</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Blueprint&nbsp;Starter&nbsp;Kit</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>title</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment block html\"><span class=\"punctuation definition comment html\"><span>&lt;!--</span></span><span>&nbsp;Style&nbsp;dependencies&nbsp;</span><span class=\"punctuation definition comment html\"><span>--&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>link</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>href</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span class=\"markup underline link https hyperlink\"><span>https://unpkg.com/normalize.css@</span></span><span>^7.0.0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>rel</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>stylesheet</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment block html\"><span class=\"punctuation definition comment html\"><span>&lt;!--</span></span><span>&nbsp;Blueprint&nbsp;stylesheets&nbsp;</span><span class=\"punctuation definition comment html\"><span>--&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>link</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>href</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span class=\"markup underline link https hyperlink\"><span>https://unpkg.com/@blueprintjs/icons@</span></span><span>^3.4.0/lib/css/blueprint-icons.css</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>rel</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>stylesheet</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>link</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>href</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span class=\"markup underline link https hyperlink\"><span>https://unpkg.com/@blueprintjs/core@</span></span><span>^3.10.0/lib/css/blueprint.css</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>rel</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>stylesheet</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag structure any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag structure any html\"><span>head</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag structure any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag structure any html\"><span>body</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment block html\"><span class=\"punctuation definition comment html\"><span>&lt;!--</span></span><span>&nbsp;Blueprint&nbsp;dependencies&nbsp;</span><span class=\"punctuation definition comment html\"><span>--&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"source js embedded html\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag script html\"><span>script</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>src</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span class=\"markup underline link https hyperlink\"><span>https://unpkg.com/classnames@</span></span><span>^2.2</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag script html\"><span>script</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"source js embedded html\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag script html\"><span>script</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>src</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span class=\"markup underline link https hyperlink\"><span>https://unpkg.com/dom4@</span></span><span>^1.8</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag script html\"><span>script</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"source js embedded html\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag script html\"><span>script</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>src</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span class=\"markup underline link https hyperlink\"><span>https://unpkg.com/tslib@</span></span><span>^1.9.0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag script html\"><span>script</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"source js embedded html\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag script html\"><span>script</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>src</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span class=\"markup underline link https hyperlink\"><span>https://unpkg.com/react@</span></span><span>^16.2.0/umd/react.production.min.js</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag script html\"><span>script</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"source js embedded html\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag script html\"><span>script</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>src</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span class=\"markup underline link https hyperlink\"><span>https://unpkg.com/react-dom@</span></span><span>^16.2.0/umd/react-dom.production.min.js</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag script html\"><span>script</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"source js embedded html\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag script html\"><span>script</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>src</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span class=\"markup underline link https hyperlink\"><span>https://unpkg.com/react-transition-group@</span></span><span>^2.2.1/dist/react-transition-group.min.js</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag script html\"><span>script</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"source js embedded html\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag script html\"><span>script</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>src</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span class=\"markup underline link https hyperlink\"><span>https://unpkg.com/popper.js@</span></span><span>^1.14.1/dist/umd/popper.js</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag script html\"><span>script</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"source js embedded html\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag script html\"><span>script</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>src</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span class=\"markup underline link https hyperlink\"><span>https://unpkg.com/react-popper@</span></span><span>^1.0.0/dist/index.umd.min.js</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag script html\"><span>script</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"source js embedded html\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag script html\"><span>script</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>src</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span class=\"markup underline link https hyperlink\"><span>https://unpkg.com/resize-observer-polyfill@</span></span><span>^1.5.0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag script html\"><span>script</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"comment block html\"><span class=\"punctuation definition comment html\"><span>&lt;!--</span></span><span>&nbsp;Blueprint&nbsp;packages&nbsp;(note:&nbsp;icons&nbsp;script&nbsp;must&nbsp;come&nbsp;first)&nbsp;</span><span class=\"punctuation definition comment html\"><span>--&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"source js embedded html\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag script html\"><span>script</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>src</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span class=\"markup underline link https hyperlink\"><span>https://unpkg.com/@blueprintjs/icons@</span></span><span>^3.4.0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag script html\"><span>script</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"source js embedded html\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag script html\"><span>script</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>src</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span class=\"markup underline link https hyperlink\"><span>https://unpkg.com/@blueprintjs/core@</span></span><span>^3.10.0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag script html\"><span>script</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>div</span></span><span>&nbsp;</span><span class=\"meta attribute-with-value id html\"><span class=\"entity other attribute-name id html\"><span>id</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>btn</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"source js embedded html\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag script html\"><span>script</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"source js embedded html\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"storage type const js\"><span>const</span></span><span>&nbsp;</span><span class=\"constant other js\"><span>button</span></span><span>&nbsp;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&nbsp;</span><span class=\"variable other object js\"><span>React</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function dom js\"><span>createElement</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span class=\"variable other object js\"><span>Blueprint</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other object property js\"><span>Core</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>Button</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&nbsp;</span><span class=\"meta brace curly js\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"source js embedded html\"><span class=\"meta method-call js\"><span class=\"meta arguments js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon</span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>cloud</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"source js embedded html\"><span class=\"meta method-call js\"><span class=\"meta arguments js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text</span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>CDN&nbsp;Blueprint&nbsp;is&nbsp;go!</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"source js embedded html\"><span class=\"meta method-call js\"><span class=\"meta arguments js\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"source js embedded html\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"variable other object js\"><span>ReactDOM</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>render</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span>button</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&nbsp;</span><span class=\"support variable dom js\"><span>document</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function dom js\"><span>querySelector</span></span><span class=\"meta arguments js\"><span class=\"punctuation definition arguments begin bracket round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>#btn</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span><span class=\"punctuation definition arguments end bracket round js\"><span>)</span></span></span></span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"source js embedded html\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag script html\"><span>script</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span><span>&nbsp;</span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag structure any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag structure any html\"><span>body</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag structure any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag structure any html\"><span>html</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>"
      ],
      "contentsRaw": "@# Getting started\n\n@## Installing Blueprint\n\nBlueprint is available as a collection of NPM packages under the `@blueprintjs`\nscope. Each package appears at the top level of the sidebar to the left, along\nwith its current version.\n\nEach package contains a CSS file and a collection of CommonJS modules exposing React components.\nThe `main` module exports all symbols from all modules so you don't have to import individual files\n(though you can if you want to). The JavaScript components are stable and their APIs adhere to\n[semantic versioning](http://semver.org/).\n\n1.  Install the core package and its peer dependencies with an NPM client like\n    `npm` or `yarn`, pulling in all relevant dependencies:\n\n    ```sh\n    yarn add @blueprintjs/core react react-dom\n    ```\n\n1.  After installation, you'll be able to import the React components in your application:\n\n    ```tsx\n    import { Button, Intent, Spinner } from \"@blueprintjs/core\";\n\n    // using JSX:\n    const mySpinner = <Spinner intent={Intent.PRIMARY} />;\n\n    // use React.createElement if you're not using JSX.\n    const myButton = React.createElement(Button, { intent: Intent.SUCCESS }, \"button content\");\n    ```\n\n1.  **Don't forget to include the main CSS file from each Blueprint package!** Additionally, the\n    `resources/` directory contains supporting media such as fonts and images.\n\n    ```css.scss\n    // using node-style package resolution in a CSS file:\n    @import \"~normalize.css\";\n    @import \"~@blueprintjs/core/lib/css/blueprint.css\";\n    @import \"~@blueprintjs/icons/lib/css/blueprint-icons.css\";\n    ```\n\n    ```html\n    <!-- or using plain old HTML -->\n    <head>\n      <!-- include dependencies manually -->\n      <link href=\"path/to/node_modules/normalize.css/normalize.css\" rel=\"stylesheet\" />\n      <link href=\"path/to/node_modules/@blueprintjs/core/lib/css/blueprint.css\" rel=\"stylesheet\" />\n      <link href=\"path/to/node_modules/@blueprintjs/icons/lib/css/blueprint-icons.css\" rel=\"stylesheet\" />\n      <!-- NOTE: blueprint-icons.css file must be included alongside blueprint.css! -->\n    </head>\n    ```\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n    <h4 class=\"bp3-heading\">CDN-only usage</h4>\n    Blueprint can instead be quickly added to a page using the Unpkg CDN.\n    [See below for instructions](#blueprint/getting-started.cdn-consumption).\n</div>\n\n@## JS environment\n\n@### Language features\n\nNote that since the minimum supported version of React is [v16](https://reactjs.org/blog/2017/09/26/react-v16.0.html),\nall of its [JavaScript Environment Requirements](https://reactjs.org/docs/javascript-environment-requirements.html) apply to\nBlueprint as well. Blueprint components require the following ES2015 features:\n\n-   `Map`\n-   `Set`\n-   `Array.fill`\n-   `Array.from`\n\nWe recommend polyfilling these features using [es6-shim](https://github.com/paulmillr/es6-shim) or\n[core-js](https://github.com/zloirock/core-js).\n\n@### DOM4\n\nBlueprint relies on a handful of DOM Level 4 API methods: `el.closest()` and `el.contains()`.\n`@blueprintjs/core` depends on a [polyfill library called `dom4`](https://webreflection.github.io/dom4/) to ensure\nthese methods are available. This module is conditionally loaded if Blueprint is used in a browser environment.\n\n@## TypeScript\n\nBlueprint is written in TypeScript and therefore its own `.d.ts` type definitions are distributed in\nthe NPM package and should be resolved automatically by the compiler. However, you'll need to\ninstall typings for Blueprint's dependencies before you can consume it:\n\n```sh\n# required for all @blueprintjs packages:\nnpm install --save @types/react @types/react-dom\n\n# @blueprintjs/timezone requires:\nnpm install --save @types/moment-timezone\n```\n\nBlueprint's declaration files require **TypeScript 2.3+** for default generic parameter arguments: `<P = {}>`.\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n  For more information, see [Understanding TypeScript](#blueprint/reading-the-docs.understanding-typescript).\n</div>\n\n@## Vanilla JS APIs\n\nJS components are built using React, but that does not limit their usage to just React applications.\nYou can render any component in any JavaScript application with `ReactDOM.render`. Think of it like\nusing a jQuery plugin.\n\n```tsx\nimport { Classes, Intent, Spinner } from \"@blueprintjs/core\";\n\nconst myContainerElement = document.getElementById(\"container\");\n\n// with JSX\nReactDOM.render(<Spinner className={Classes.SMALL} intent={Intent.PRIMARY} />, myContainerElement);\n\n// with vanilla JS, use React.createElement\nReactDOM.render(\n    React.createElement(Spinner, {\n        className: Classes.SMALL,\n        intent: Intent.PRIMARY\n    }),\n    myContainerElement\n);\n```\n\nTo remove the component from the DOM and clean up, unmount it:\n\n```tsx\nReactDOM.unmountComponentAtNode(myContainerElement);\n```\n\nCheck out the [React API docs](https://facebook.github.io/react/docs/react-api.html) for more details.\n\n@## CDN consumption\n\nBlueprint supports the venerable [unpkg CDN](https://unpkg.com). Each package provides a UMD\n`dist/[name].bundle.js` file containing the bundled source code. The UMD wrapper exposes each\nlibrary on the `Blueprint` global variable: `Blueprint.Core`, `Blueprint.Datetime`, etc.\n\nThese bundles _do not include_ external dependencies; your application will need to ensure that\n`normalize.css`, `classnames`, `dom4`, `react`, `react-dom`, `react-transition-group`, `popper.js`, and\n`react-popper` are available at runtime.\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width\">\n    <title>Blueprint Starter Kit</title>\n\n    <!-- Style dependencies -->\n    <link href=\"https://unpkg.com/normalize.css@^7.0.0\" rel=\"stylesheet\" />\n    <!-- Blueprint stylesheets -->\n    <link href=\"https://unpkg.com/@blueprintjs/icons@^3.4.0/lib/css/blueprint-icons.css\" rel=\"stylesheet\" />\n    <link href=\"https://unpkg.com/@blueprintjs/core@^3.10.0/lib/css/blueprint.css\" rel=\"stylesheet\" />\n  </head>\n  <body>\n    <!-- Blueprint dependencies -->\n    <script src=\"https://unpkg.com/classnames@^2.2\"></script>\n    <script src=\"https://unpkg.com/dom4@^1.8\"></script>\n    <script src=\"https://unpkg.com/tslib@^1.9.0\"></script>\n    <script src=\"https://unpkg.com/react@^16.2.0/umd/react.production.min.js\"></script>\n    <script src=\"https://unpkg.com/react-dom@^16.2.0/umd/react-dom.production.min.js\"></script>\n    <script src=\"https://unpkg.com/react-transition-group@^2.2.1/dist/react-transition-group.min.js\"></script>\n    <script src=\"https://unpkg.com/popper.js@^1.14.1/dist/umd/popper.js\"></script>\n    <script src=\"https://unpkg.com/react-popper@^1.0.0/dist/index.umd.min.js\"></script>\n    <script src=\"https://unpkg.com/resize-observer-polyfill@^1.5.0\"></script>\n    <!-- Blueprint packages (note: icons script must come first) -->\n    <script src=\"https://unpkg.com/@blueprintjs/icons@^3.4.0\"></script>\n    <script src=\"https://unpkg.com/@blueprintjs/core@^3.10.0\"></script>\n\n    <div id=\"btn\"></div>\n    <script>\n      const button = React.createElement(Blueprint.Core.Button, {\n        icon: \"cloud\",\n        text: \"CDN Blueprint is go!\",\n      });\n      ReactDOM.render(button, document.querySelector(\"#btn\"));\n    </script>\n  </body>\n</html>\n```",
      "metadata": {}
    },
    "reading-the-docs": {
      "reference": "reading-the-docs",
      "route": "blueprint/reading-the-docs",
      "sourcePath": "src\\reading-the-docs.md",
      "title": "Reading the documentation",
      "contents": [
        {
          "tag": "heading",
          "value": "Reading the documentation",
          "level": 1,
          "route": "blueprint/reading-the-docs"
        },
        {
          "tag": "heading",
          "value": "Understanding TypeScript",
          "level": 2,
          "route": "blueprint/reading-the-docs.understanding-typescript"
        },
        "<p>Blueprint is written in <a href=\"https://www.typescriptlang.org/\">TypeScript</a>, a statically typed superset\nof JavaScript that compiles to plain JavaScript. All the code samples throughout this site and\nall interactive examples are also written in TypeScript. TypeScript code looks exactly like ES2015+\ncode with the addition of type signatures, which typically appear after colons and are <em>italicized</em>\nin our syntax theme.</p>\n<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"source ts\"><span class=\"comment line double-slash ts\"><span class=\"punctuation definition comment ts\"><span>//</span></span><span>&nbsp;variables</span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta var expr ts\"><span class=\"storage type ts\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr ts\"><span class=\"meta definition variable ts variable other readwrite ts\"><span>variableName</span></span><span class=\"meta type annotation ts\"><span class=\"keyword operator type annotation ts\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type ts\"><span>varType</span></span></span></span></span><span class=\"punctuation terminator statement ts\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta var expr ts\"><span class=\"storage type ts\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr ts\"><span class=\"meta definition variable ts variable other readwrite ts\"><span>name</span></span><span class=\"meta type annotation ts\"><span class=\"keyword operator type annotation ts\"><span>:</span></span><span>&nbsp;</span><span class=\"support type primitive ts\"><span>string</span></span></span></span></span><span class=\"punctuation terminator statement ts\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta var expr ts\"><span class=\"storage type ts\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr ts\"><span class=\"meta definition variable ts variable other readwrite ts\"><span>disabled</span></span><span class=\"meta type annotation ts\"><span class=\"keyword operator type annotation ts\"><span>:</span></span><span>&nbsp;</span><span class=\"support type primitive ts\"><span>boolean</span></span></span></span></span><span class=\"punctuation terminator statement ts\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source ts\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"comment line double-slash ts\"><span class=\"punctuation definition comment ts\"><span>//</span></span><span>&nbsp;functions&nbsp;(and&nbsp;function&nbsp;variables)</span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta function ts\"><span class=\"storage type function ts\"><span>function</span></span><span>&nbsp;</span><span class=\"meta definition function ts entity name function ts\"><span>funcName</span></span><span class=\"meta parameters ts\"><span class=\"punctuation definition parameters begin ts\"><span>(</span></span><span class=\"variable parameter ts\"><span>arg1</span></span><span class=\"meta type annotation ts\"><span class=\"keyword operator type annotation ts\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type ts\"><span>argType</span></span></span><span class=\"punctuation separator parameter ts\"><span>,</span></span><span>&nbsp;</span><span class=\"variable parameter ts\"><span>arg2</span></span><span class=\"meta type annotation ts\"><span class=\"keyword operator type annotation ts\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type ts\"><span>argType</span></span></span><span class=\"punctuation definition parameters end ts\"><span>)</span></span></span><span class=\"meta return type ts\"><span class=\"keyword operator type annotation ts\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type ts\"><span>returnType</span></span><span>&nbsp;</span></span><span class=\"meta block ts\"><span class=\"punctuation definition block ts\"><span>{</span><span>}</span></span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta var expr ts\"><span class=\"storage type ts\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr ts\"><span class=\"meta definition variable ts entity name function ts\"><span>funcName</span></span><span class=\"meta type annotation ts\"><span class=\"keyword operator type annotation ts\"><span>:</span></span><span>&nbsp;</span><span class=\"meta type function ts\"><span class=\"meta parameters ts\"><span class=\"punctuation definition parameters begin ts\"><span>(</span></span><span class=\"variable parameter ts\"><span>arg1</span></span><span class=\"meta type annotation ts\"><span class=\"keyword operator type annotation ts\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type ts\"><span>argType</span></span></span><span class=\"punctuation definition parameters end ts\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"meta type function return ts\"><span class=\"storage type function arrow ts\"><span>=&gt;</span></span><span>&nbsp;</span><span class=\"entity name type ts\"><span>returnType</span></span></span></span></span></span><span class=\"punctuation terminator statement ts\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta function ts\"><span class=\"storage type function ts\"><span>function</span></span><span>&nbsp;</span><span class=\"meta definition function ts entity name function ts\"><span>split</span></span><span class=\"meta parameters ts\"><span class=\"punctuation definition parameters begin ts\"><span>(</span></span><span class=\"variable parameter ts\"><span>str</span></span><span class=\"meta type annotation ts\"><span class=\"keyword operator type annotation ts\"><span>:</span></span><span>&nbsp;</span><span class=\"support type primitive ts\"><span>string</span></span></span><span class=\"punctuation separator parameter ts\"><span>,</span></span><span>&nbsp;</span><span class=\"variable parameter ts\"><span>delim</span></span><span class=\"meta type annotation ts\"><span class=\"keyword operator type annotation ts\"><span>:</span></span><span>&nbsp;</span><span class=\"support type primitive ts\"><span>string</span></span></span><span class=\"punctuation definition parameters end ts\"><span>)</span></span></span><span class=\"meta return type ts\"><span class=\"keyword operator type annotation ts\"><span>:</span></span><span>&nbsp;</span><span class=\"support type primitive ts\"><span>string</span></span><span class=\"meta type tuple ts\"><span class=\"meta brace square ts\"><span>[</span><span>]</span></span></span><span>&nbsp;</span></span><span class=\"meta block ts\"><span class=\"punctuation definition block ts\"><span>{</span><span>}</span></span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta function ts\"><span class=\"storage type function ts\"><span>function</span></span><span>&nbsp;</span><span class=\"meta definition function ts entity name function ts\"><span>map</span></span><span class=\"meta type parameters ts\"><span class=\"punctuation definition typeparameters begin ts\"><span>&lt;</span></span><span class=\"entity name type ts\"><span>T</span></span><span class=\"punctuation separator comma ts\"><span>,</span></span><span>&nbsp;</span><span class=\"entity name type ts\"><span>U</span></span><span class=\"punctuation definition typeparameters end ts\"><span>&gt;</span></span></span><span class=\"meta parameters ts\"><span class=\"punctuation definition parameters begin ts\"><span>(</span></span><span class=\"variable parameter ts\"><span>array</span></span><span class=\"meta type annotation ts\"><span class=\"keyword operator type annotation ts\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type ts\"><span>T</span></span><span class=\"meta type tuple ts\"><span class=\"meta brace square ts\"><span>[</span><span>]</span></span></span></span><span class=\"punctuation separator parameter ts\"><span>,</span></span><span>&nbsp;</span><span class=\"entity name function ts\"><span>iterator</span></span><span class=\"meta type annotation ts\"><span class=\"keyword operator type annotation ts\"><span>:</span></span><span>&nbsp;</span><span class=\"meta type function ts\"><span class=\"meta parameters ts\"><span class=\"punctuation definition parameters begin ts\"><span>(</span></span><span class=\"variable parameter ts\"><span>item</span></span><span class=\"meta type annotation ts\"><span class=\"keyword operator type annotation ts\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type ts\"><span>T</span></span></span><span class=\"punctuation separator parameter ts\"><span>,</span></span><span>&nbsp;</span><span class=\"variable parameter ts\"><span>index</span></span><span class=\"meta type annotation ts\"><span class=\"keyword operator type annotation ts\"><span>:</span></span><span>&nbsp;</span><span class=\"support type primitive ts\"><span>number</span></span></span><span class=\"punctuation definition parameters end ts\"><span>)</span></span></span></span><span>&nbsp;</span><span class=\"meta type function return ts\"><span class=\"storage type function arrow ts\"><span>=&gt;</span></span><span>&nbsp;</span><span class=\"entity name type ts\"><span>U</span></span></span></span><span class=\"punctuation definition parameters end ts\"><span>)</span></span></span><span class=\"meta return type ts\"><span class=\"keyword operator type annotation ts\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type ts\"><span>U</span></span><span class=\"meta type tuple ts\"><span class=\"meta brace square ts\"><span>[</span><span>]</span></span></span></span></span><span class=\"punctuation terminator statement ts\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source ts\"><span>&nbsp;</span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"comment line double-slash ts\"><span class=\"punctuation definition comment ts\"><span>//</span></span><span>&nbsp;interfaces&nbsp;describe&nbsp;plain&nbsp;objects</span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"comment line double-slash ts\"><span class=\"punctuation definition comment ts\"><span>//</span></span><span>&nbsp;(we&nbsp;use&nbsp;the&nbsp;convention&nbsp;that&nbsp;interfaces&nbsp;begin&nbsp;with&nbsp;&quot;I&quot;)</span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta interface ts\"><span class=\"storage type interface ts\"><span>interface</span></span><span>&nbsp;</span><span class=\"entity name type interface ts\"><span>IOption</span></span><span>&nbsp;</span><span class=\"punctuation definition block ts\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta interface ts\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta field declaration ts\"><span class=\"meta definition property ts variable object property ts\"><span>label</span></span><span class=\"meta type annotation ts\"><span class=\"keyword operator type annotation ts\"><span>:</span></span><span>&nbsp;</span><span class=\"support type primitive ts\"><span>string</span></span></span></span><span class=\"punctuation terminator statement ts\"><span>;</span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta interface ts\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta field declaration ts\"><span class=\"meta definition property ts variable object property ts\"><span>value</span></span><span class=\"meta type annotation ts\"><span class=\"keyword operator type annotation ts\"><span>:</span></span><span>&nbsp;</span><span class=\"support type primitive ts\"><span>string</span></span></span></span><span class=\"punctuation terminator statement ts\"><span>;</span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta interface ts\"><span class=\"punctuation definition block ts\"><span>}</span></span></span></span></div><div class=\"line\"><span class=\"source ts\"><span class=\"meta var expr ts\"><span class=\"storage type ts\"><span>const</span></span><span>&nbsp;</span><span class=\"meta var-single-variable expr ts\"><span class=\"meta definition variable ts variable other readwrite ts\"><span>option</span></span><span class=\"meta type annotation ts\"><span class=\"keyword operator type annotation ts\"><span>:</span></span><span>&nbsp;</span><span class=\"entity name type ts\"><span>IOption</span></span><span>&nbsp;</span></span></span><span class=\"keyword operator assignment ts\"><span>=</span></span><span>&nbsp;</span><span class=\"meta objectliteral ts\"><span class=\"punctuation definition block ts\"><span>{</span></span><span>&nbsp;</span><span class=\"meta object member ts\"><span class=\"meta object-literal key ts\"><span>label</span></span><span class=\"meta object-literal key ts punctuation separator key-value ts\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted double ts\"><span class=\"punctuation definition string begin ts\"><span>&quot;</span></span><span>Name</span><span class=\"punctuation definition string end ts\"><span>&quot;</span></span></span></span><span class=\"punctuation separator comma ts\"><span>,</span></span><span>&nbsp;</span><span class=\"meta object member ts\"><span class=\"meta object-literal key ts\"><span>value</span></span><span class=\"meta object-literal key ts punctuation separator key-value ts\"><span>:</span></span><span>&nbsp;</span><span class=\"string quoted double ts\"><span class=\"punctuation definition string begin ts\"><span>&quot;</span></span><span>Gilad</span><span class=\"punctuation definition string end ts\"><span>&quot;</span></span></span><span>&nbsp;</span></span><span class=\"punctuation definition block ts\"><span>}</span></span></span></span><span class=\"punctuation terminator statement ts\"><span>;</span></span></span></div></pre><p><strong>You do not need to use TypeScript to consume Blueprint</strong> (but major &quot;props&quot; if you do).\nSimply ignoring the type annotations (any italics in code blocks) will produce valid ES2015 code.\nFamiliarity with the syntax is suggested so you can follow our examples source code.</p>\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n  For more information, see the TypeScript Handbook for <a href=\"https://www.typescriptlang.org/docs/handbook/basic-types.html\">basic types</a>\n  and <a href=\"https://www.typescriptlang.org/docs/handbook/declaration-files/consumption.html\">consuming declaration files</a>.\n</div>\n\n"
      ],
      "contentsRaw": "@# Reading the documentation\n\n@## Understanding TypeScript\n\nBlueprint is written in [TypeScript](https://www.typescriptlang.org/), a statically typed superset\nof JavaScript that compiles to plain JavaScript. All the code samples throughout this site and\nall interactive examples are also written in TypeScript. TypeScript code looks exactly like ES2015+\ncode with the addition of type signatures, which typically appear after colons and are _italicized_\nin our syntax theme.\n\n```ts\n// variables\nconst variableName: varType;\nconst name: string;\nconst disabled: boolean;\n\n// functions (and function variables)\nfunction funcName(arg1: argType, arg2: argType): returnType {}\nconst funcName: (arg1: argType) => returnType;\nfunction split(str: string, delim: string): string[] {}\nfunction map<T, U>(array: T[], iterator: (item: T, index: number) => U): U[];\n\n// interfaces describe plain objects\n// (we use the convention that interfaces begin with \"I\")\ninterface IOption {\n    label: string;\n    value: string;\n}\nconst option: IOption = { label: \"Name\", value: \"Gilad\" };\n```\n\n**You do not need to use TypeScript to consume Blueprint** (but major \"props\" if you do).\nSimply ignoring the type annotations (any italics in code blocks) will produce valid ES2015 code.\nFamiliarity with the syntax is suggested so you can follow our examples source code.\n\n<div class=\"bp3-callout bp3-intent-primary bp3-icon-info-sign\">\n  For more information, see the TypeScript Handbook for [basic types][basic-types]\n  and [consuming declaration files][decl-files].\n</div>\n\n[basic-types]: https://www.typescriptlang.org/docs/handbook/basic-types.html\n[decl-files]: https://www.typescriptlang.org/docs/handbook/declaration-files/consumption.html",
      "metadata": {}
    },
    "resources": {
      "reference": "resources",
      "route": "resources",
      "sourcePath": "src\\resources.md",
      "title": "Resources",
      "contents": [
        {
          "tag": "heading",
          "value": "Resources",
          "level": 1,
          "route": ""
        },
        {
          "tag": "heading",
          "value": "Sketch assets",
          "level": 2,
          "route": ""
        },
        {
          "tag": "reactDocs",
          "value": "Resources"
        }
      ],
      "contentsRaw": "@# Resources\n\n@## Sketch assets\n\n@reactDocs Resources",
      "metadata": {}
    },
    "whats-new-2.0": {
      "reference": "whats-new-2.0",
      "route": "blueprint/whats-new-2.0",
      "sourcePath": "src\\whats-new-2.0.md",
      "title": "What's new in 2.0",
      "contents": [
        {
          "tag": "heading",
          "value": "What's new in 2.0",
          "level": 1,
          "route": "blueprint/whats-new-2.0"
        },
        "<p>Blueprint 2.0 features JavaScript API refactors, smaller &amp; more modular packages, and very few changes to the CSS API.</p>\n<h3 id=\"highlights\">Highlights</h3>\n<ul>\n<li>The minimum version of React is now 16.2.</li>\n<li>The minimum version of TypeScript for the declaration files is now 2.3.</li>\n<li><code>Portal</code> now uses React 16&#39;s built-in Portal functionality instead of <code>ReactDOM.unstable_renderSubtreeIntoContainer</code>.</li>\n<li><code>Icon</code> now renders SVG elements and is used in all Blueprint components.<ul>\n<li>This also means that you can <em>provide your own SVG icons for all components</em>.</li>\n<li>Support for the icon font remains, but will be removed in the next major version.</li>\n</ul>\n</li>\n<li>Icon styles and fonts have moved to a new <strong>@blueprintjs/icons</strong> package<ul>\n<li>Core depends on this package, so you will have to import its CSS alongside <code>blueprint.css</code></li>\n</ul>\n</li>\n<li><code>Popover2</code> is now the default <code>Popover</code>. It uses <a href=\"https://popper.js.org/\">Popper.js</a> instead of <a href=\"http://tether.io/\">Tether</a>, which provides much better auto-positioning capabilities and solves a number of outstanding bugs out-of-the-box.</li>\n<li>All Labs components (in <code>@blueprintjs/labs</code>) have been moved into separate packages so that you no longer have to deal with the <code>0.x</code> version range for many components that are used widely in production.</li>\n</ul>\n<p><a class=\"bp3-button bp3-intent-primary\" href=\"https://github.com/palantir/blueprint/wiki/What's-new-in-Blueprint-2.0\" target=\"_blank\" style=\"margin-top: 30px;\">\n    View the full changelog on the wiki\n</a></p>\n"
      ],
      "contentsRaw": "@# What's new in 2.0\n\nBlueprint 2.0 features JavaScript API refactors, smaller & more modular packages, and very few changes to the CSS API.\n\n### Highlights\n\n- The minimum version of React is now 16.2.\n- The minimum version of TypeScript for the declaration files is now 2.3.\n- `Portal` now uses React 16's built-in Portal functionality instead of `ReactDOM.unstable_renderSubtreeIntoContainer`.\n- `Icon` now renders SVG elements and is used in all Blueprint components.\n    - This also means that you can _provide your own SVG icons for all components_.\n    - Support for the icon font remains, but will be removed in the next major version.\n- Icon styles and fonts have moved to a new **@blueprintjs/icons** package\n    - Core depends on this package, so you will have to import its CSS alongside `blueprint.css`\n- `Popover2` is now the default `Popover`. It uses [Popper.js](https://popper.js.org/) instead of [Tether](http://tether.io/), which provides much better auto-positioning capabilities and solves a number of outstanding bugs out-of-the-box.\n- All Labs components (in `@blueprintjs/labs`) have been moved into separate packages so that you no longer have to deal with the `0.x` version range for many components that are used widely in production.\n\n<a class=\"bp3-button bp3-intent-primary\" href=\"https://github.com/palantir/blueprint/wiki/What's-new-in-Blueprint-2.0\" target=\"_blank\" style=\"margin-top: 30px;\">\n    View the full changelog on the wiki\n</a>",
      "metadata": {}
    },
    "whats-new-3.0": {
      "reference": "whats-new-3.0",
      "route": "blueprint/whats-new-3.0",
      "sourcePath": "src\\whats-new-3.0.md",
      "title": "What's new in 3.0",
      "contents": [
        {
          "tag": "heading",
          "value": "What's new in 3.0",
          "level": 1,
          "route": "blueprint/whats-new-3.0"
        },
        "<p>Blueprint 3.0 supports multiple major versions of Blueprint on the same page through removing global styles and deconflicting selectors by changing the namespace. It also restores support for React 15 in most packages.</p>\n<h3 id=\"highlights\">Highlights</h3>\n<ul>\n<li>The minimum version of React is back to 15.3 or 16.<ul>\n<li><code>Portal</code> will use React 16&#39;s <code>React.createPortal</code> if available and fall back to <code>ReactDOM.unstable_renderSubtreeIntoContainer</code>.</li>\n</ul>\n</li>\n<li>Change CSS namespace to <code>bp3-</code> to avoid conflicts with previous major versions.</li>\n<li>Move styles attached to global selectors to their own CSS classes.<ul>\n<li>Affects <code>&lt;h1&gt;</code>-<code>&lt;h6&gt;</code>, <code>&lt;blockquote&gt;</code>, <code>&lt;code&gt;</code>, <code>&lt;pre&gt;</code>, <code>&lt;ol&gt;</code>, <code>&lt;ul&gt;</code>, <code>&lt;hr&gt;</code>, <code>&lt;table&gt;</code></li>\n<li>The above elements do not require classes when used inside a container element with <code>Classes.RUNNING_TEXT</code>.</li>\n</ul>\n</li>\n<li>Allow string literals for enums! <code>&lt;Button intent=&quot;success&quot; /&gt;</code></li>\n<li>Many new components! Look for the <span class=\"bp3-tag bp3-intent-success bp3-minimal\">new</span> tag in the sidebar.</li>\n<li>Complete refactor of documentation content to focus on React usage and de-emphasize CSS/HTML usage.</li>\n</ul>\n<p><a class=\"bp3-button bp3-intent-primary\" href=\"https://github.com/palantir/blueprint/wiki/3.0-Changelog\" target=\"_blank\" style=\"margin-top: 30px;\">\n    View the full changelog on the wiki\n</a></p>\n"
      ],
      "contentsRaw": "\n@# What's new in 3.0\n\nBlueprint 3.0 supports multiple major versions of Blueprint on the same page through removing global styles and deconflicting selectors by changing the namespace. It also restores support for React 15 in most packages.\n\n### Highlights\n\n- The minimum version of React is back to 15.3 or 16.\n    - `Portal` will use React 16's `React.createPortal` if available and fall back to `ReactDOM.unstable_renderSubtreeIntoContainer`.\n- Change CSS namespace to `bp3-` to avoid conflicts with previous major versions.\n- Move styles attached to global selectors to their own CSS classes.\n    - Affects `<h1>`-`<h6>`, `<blockquote>`, `<code>`, `<pre>`, `<ol>`, `<ul>`, `<hr>`, `<table>`\n    - The above elements do not require classes when used inside a container element with `Classes.RUNNING_TEXT`.\n- Allow string literals for enums! `<Button intent=\"success\" />`\n- Many new components! Look for the <span class=\"bp3-tag bp3-intent-success bp3-minimal\">new</span> tag in the sidebar.\n- Complete refactor of documentation content to focus on React usage and de-emphasize CSS/HTML usage.\n\n<a class=\"bp3-button bp3-intent-primary\" href=\"https://github.com/palantir/blueprint/wiki/3.0-Changelog\" target=\"_blank\" style=\"margin-top: 30px;\">\n    View the full changelog on the wiki\n</a>",
      "metadata": {
        "tag": "new"
      }
    }
  },
  "typescript": {
    "IIntentSelectProps": {
      "fileName": "examples\\core-examples\\common\\intentSelect.tsx",
      "flags": {
        "isExported": true,
        "isExternal": true,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "interface",
      "name": "IIntentSelectProps",
      "methods": [],
      "properties": [
        {
          "fileName": "examples\\core-examples\\common\\intentSelect.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "inline",
          "type": "boolean"
        },
        {
          "fileName": "examples\\core-examples\\common\\intentSelect.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "intent",
          "type": "Intent"
        },
        {
          "fileName": "examples\\core-examples\\common\\intentSelect.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onChange",
          "type": "React.FormEventHandler<HTMLSelectElement>"
        }
      ]
    },
    "IFormatSelectProps": {
      "fileName": "examples\\datetime-examples\\common\\formatSelect.tsx",
      "flags": {
        "isExported": true,
        "isExternal": true,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "interface",
      "name": "IFormatSelectProps",
      "methods": [],
      "properties": [
        {
          "documentation": {
            "contents": [
              "<p>Selected formatter.</p>\n"
            ],
            "contentsRaw": "Selected formatter.",
            "metadata": {}
          },
          "fileName": "examples\\datetime-examples\\common\\formatSelect.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "format",
          "type": "IDateFormatProps"
        },
        {
          "documentation": {
            "contents": [
              "<p>The callback to fire when a new formatter is chosen.</p>\n"
            ],
            "contentsRaw": "The callback to fire when a new formatter is chosen.",
            "metadata": {}
          },
          "fileName": "examples\\datetime-examples\\common\\formatSelect.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onChange",
          "type": "(format: IDateFormatProps) => void"
        }
      ]
    },
    "IFilm": {
      "fileName": "examples\\select-examples\\films.tsx",
      "flags": {
        "isExported": true,
        "isExternal": true,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "interface",
      "name": "IFilm",
      "methods": [],
      "properties": [
        {
          "documentation": {
            "contents": [
              "<p>IMDb ranking.</p>\n"
            ],
            "contentsRaw": "IMDb ranking.",
            "metadata": {}
          },
          "fileName": "examples\\select-examples\\films.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "rank",
          "type": "number"
        },
        {
          "documentation": {
            "contents": [
              "<p>Title of film.</p>\n"
            ],
            "contentsRaw": "Title of film.",
            "metadata": {}
          },
          "fileName": "examples\\select-examples\\films.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "title",
          "type": "string"
        },
        {
          "documentation": {
            "contents": [
              "<p>Release year.</p>\n"
            ],
            "contentsRaw": "Release year.",
            "metadata": {}
          },
          "fileName": "examples\\select-examples\\films.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "year",
          "type": "number"
        }
      ]
    },
    "ISortableColumn": {
      "fileName": "examples\\table-examples\\tableSortableExample.tsx",
      "flags": {
        "isExported": true,
        "isExternal": true,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "interface",
      "name": "ISortableColumn",
      "methods": [
        {
          "fileName": "examples\\table-examples\\tableSortableExample.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "method",
          "name": "getColumn",
          "signatures": [
            {
              "fileName": "examples\\table-examples\\tableSortableExample.tsx",
              "kind": "signature",
              "name": "getColumn",
              "parameters": [
                {
                  "flags": {
                    "isExported": false,
                    "isExternal": false,
                    "isOptional": false,
                    "isPrivate": false,
                    "isProtected": false,
                    "isPublic": false,
                    "isRest": false,
                    "isStatic": false
                  },
                  "kind": "parameter",
                  "name": "getCellData",
                  "type": "ICellLookup"
                },
                {
                  "flags": {
                    "isExported": false,
                    "isExternal": false,
                    "isOptional": false,
                    "isPrivate": false,
                    "isProtected": false,
                    "isPublic": false,
                    "isRest": false,
                    "isStatic": false
                  },
                  "kind": "parameter",
                  "name": "sortColumn",
                  "type": "ISortCallback"
                }
              ],
              "returnType": "Element",
              "type": "(getCellData: ICellLookup, sortColumn: ISortCallback) => Element"
            }
          ]
        }
      ],
      "properties": []
    },
    "ICustomTimezonePickerTargetProps": {
      "fileName": "examples\\timezone-examples\\components\\customTimezoneTarget.tsx",
      "flags": {
        "isExported": true,
        "isExternal": true,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "interface",
      "name": "ICustomTimezonePickerTargetProps",
      "methods": [],
      "properties": [
        {
          "fileName": "examples\\timezone-examples\\components\\customTimezoneTarget.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "timezone",
          "type": "string"
        }
      ]
    },
    "INavHeaderProps": {
      "fileName": "components\\navHeader.tsx",
      "flags": {
        "isExported": true,
        "isExternal": true,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "interface",
      "name": "INavHeaderProps",
      "methods": [],
      "properties": [
        {
          "fileName": "components\\navHeader.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onToggleDark",
          "type": "(useDark: boolean) => void"
        },
        {
          "fileName": "components\\navHeader.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "packageData",
          "type": "INpmPackage"
        },
        {
          "fileName": "components\\navHeader.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "useDarkTheme",
          "type": "boolean"
        },
        {
          "fileName": "components\\navHeader.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "useNextVersion",
          "type": "boolean"
        }
      ]
    },
    "IBlueprintDocsProps": {
      "fileName": "components\\blueprintDocs.tsx",
      "flags": {
        "isExported": true,
        "isExternal": true,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "interface",
      "name": "IBlueprintDocsProps",
      "methods": [],
      "properties": [
        {
          "fileName": "components\\blueprintDocs.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "defaultPageId",
          "type": "string"
        },
        {
          "fileName": "components\\blueprintDocs.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "docs",
          "type": "IDocsCompleteData"
        },
        {
          "fileName": "components\\blueprintDocs.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "tagRenderers",
          "type": "ITagRendererMap"
        },
        {
          "documentation": {
            "contents": [
              "<p>Whether to use <code>next</code> versions for packages (as opposed to <code>latest</code>).</p>\n"
            ],
            "contentsRaw": "Whether to use `next` versions for packages (as opposed to `latest`).",
            "metadata": {}
          },
          "fileName": "components\\blueprintDocs.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "useNextVersion",
          "type": "boolean"
        }
      ]
    },
    "IBlueprintExampleData": {
      "documentation": {
        "contents": [
          "<p>Interface for <code>IExampleProps</code> <code>data</code> in this here Blueprint docs-app.</p>\n"
        ],
        "contentsRaw": "Interface for `IExampleProps` `data` in this here Blueprint docs-app.",
        "metadata": {}
      },
      "fileName": "tags\\reactExamples.ts",
      "flags": {
        "isExported": true,
        "isExternal": true,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "interface",
      "name": "IBlueprintExampleData",
      "methods": [],
      "properties": [
        {
          "documentation": {
            "contents": [
              "<p>CSS class of theme, typically <code>&quot;&quot;</code> or <code>Classes.DARK</code>.</p>\n"
            ],
            "contentsRaw": "CSS class of theme, typically `\"\"` or `Classes.DARK`.",
            "metadata": {}
          },
          "fileName": "tags\\reactExamples.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "themeName",
          "type": "string"
        }
      ]
    },
    "IPrecisionSelectProps": {
      "fileName": "examples\\datetime-examples\\common\\precisionSelect.tsx",
      "flags": {
        "isExported": true,
        "isExternal": true,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "interface",
      "name": "IPrecisionSelectProps",
      "methods": [],
      "properties": [
        {
          "documentation": {
            "contents": [
              "<p>Whether or not to allow a <code>&quot;none&quot;</code> option.</p>\n"
            ],
            "contentsRaw": "Whether or not to allow a `\"none\"` option.",
            "metadata": {}
          },
          "fileName": "examples\\datetime-examples\\common\\precisionSelect.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "allowNone",
          "type": "boolean"
        },
        {
          "documentation": {
            "contents": [
              "<p>Label to show over the dropdown of precisions.</p>\n"
            ],
            "contentsRaw": "Label to show over the dropdown of precisions.",
            "metadata": {}
          },
          "fileName": "examples\\datetime-examples\\common\\precisionSelect.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "label",
          "defaultValue": "\"Precision\"",
          "type": "string"
        },
        {
          "documentation": {
            "contents": [
              "<p>The callback to fire when the selected value changes.</p>\n"
            ],
            "contentsRaw": "The callback to fire when the selected value changes.",
            "metadata": {}
          },
          "fileName": "examples\\datetime-examples\\common\\precisionSelect.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onChange",
          "type": "(event: FormEvent<HTMLElement>) => void"
        },
        {
          "documentation": {
            "contents": [
              "<p>The precision-string option to display as selected.</p>\n"
            ],
            "contentsRaw": "The precision-string option to display as selected.",
            "metadata": {}
          },
          "fileName": "examples\\datetime-examples\\common\\precisionSelect.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "value",
          "type": "TimePrecision | \"none\" | undefined"
        }
      ]
    },
    "IAlignSelectProps": {
      "fileName": "examples\\core-examples\\common\\alignmentSelect.tsx",
      "flags": {
        "isExported": true,
        "isExternal": true,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "interface",
      "name": "IAlignSelectProps",
      "methods": [],
      "properties": [
        {
          "fileName": "examples\\core-examples\\common\\alignmentSelect.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "align",
          "type": "Alignment | undefined"
        },
        {
          "fileName": "examples\\core-examples\\common\\alignmentSelect.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "allowCenter",
          "type": "boolean"
        },
        {
          "fileName": "examples\\core-examples\\common\\alignmentSelect.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "label",
          "type": "string"
        },
        {
          "fileName": "examples\\core-examples\\common\\alignmentSelect.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onChange",
          "type": "(align: Alignment) => void"
        }
      ]
    },
    "IFileMenuProps": {
      "fileName": "examples\\core-examples\\common\\fileMenu.tsx",
      "flags": {
        "isExported": true,
        "isExternal": true,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "interface",
      "name": "IFileMenuProps",
      "extends": [
        "IProps"
      ],
      "methods": [],
      "properties": [
        {
          "documentation": {
            "contents": [
              "<p>A space-delimited list of class names to pass along to a child element.</p>\n"
            ],
            "contentsRaw": "A space-delimited list of class names to pass along to a child element.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@blueprintjs\\core\\lib\\esm\\common\\props.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "className",
          "inheritedFrom": "IProps.className",
          "type": "string"
        },
        {
          "fileName": "examples\\core-examples\\common\\fileMenu.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "shouldDismissPopover",
          "type": "boolean"
        }
      ]
    },
    "IIconSelectProps": {
      "fileName": "examples\\core-examples\\common\\iconSelect.tsx",
      "flags": {
        "isExported": true,
        "isExternal": true,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "interface",
      "name": "IIconSelectProps",
      "methods": [],
      "properties": [
        {
          "fileName": "examples\\core-examples\\common\\iconSelect.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "iconName",
          "type": "IconName"
        },
        {
          "fileName": "examples\\core-examples\\common\\iconSelect.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onChange",
          "type": "(iconName?: IconName) => void"
        }
      ]
    },
    "IClickToCopyProps": {
      "fileName": "components\\clickToCopy.tsx",
      "flags": {
        "isExported": true,
        "isExternal": true,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "interface",
      "name": "IClickToCopyProps",
      "extends": [
        "IProps",
        "HTMLAttributes"
      ],
      "methods": [],
      "properties": [
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onDropCapture",
          "inheritedFrom": "DOMAttributes.onDropCapture",
          "type": "DragEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "about",
          "inheritedFrom": "HTMLAttributes.about",
          "type": "string"
        },
        {
          "documentation": {
            "contents": [
              "<p>Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.</p>\n"
            ],
            "contentsRaw": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-activedescendant",
          "inheritedFrom": "AriaAttributes.'aria-activedescendant'",
          "type": "string"
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.</p>\n"
            ],
            "contentsRaw": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-atomic",
          "inheritedFrom": "AriaAttributes.'aria-atomic'",
          "type": "boolean | \"false\" | \"true\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates whether inputting text could trigger display of one or more predictions of the user&#39;s intended value for an input and specifies how predictions would be\npresented if they are made.</p>\n"
            ],
            "contentsRaw": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-autocomplete",
          "inheritedFrom": "AriaAttributes.'aria-autocomplete'",
          "type": "\"none\" | \"inline\" | \"list\" | \"both\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.</p>\n"
            ],
            "contentsRaw": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-busy",
          "inheritedFrom": "AriaAttributes.'aria-busy'",
          "type": "boolean | \"false\" | \"true\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates the current &quot;checked&quot; state of checkboxes, radio buttons, and other widgets.</p>\n",
              {
                "tag": "see",
                "value": "aria-pressed @see aria-selected."
              }
            ],
            "contentsRaw": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n\n@see aria-pressed @see aria-selected.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-checked",
          "inheritedFrom": "AriaAttributes.'aria-checked'",
          "type": "boolean | \"false\" | \"mixed\" | \"true\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Defines the total number of columns in a table, grid, or treegrid.</p>\n",
              {
                "tag": "see",
                "value": "aria-colindex."
              }
            ],
            "contentsRaw": "Defines the total number of columns in a table, grid, or treegrid.\n\n@see aria-colindex.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-colcount",
          "inheritedFrom": "AriaAttributes.'aria-colcount'",
          "type": "number"
        },
        {
          "documentation": {
            "contents": [
              "<p>Defines an element&#39;s column index or position with respect to the total number of columns within a table, grid, or treegrid.</p>\n",
              {
                "tag": "see",
                "value": "aria-colcount @see aria-colspan."
              }
            ],
            "contentsRaw": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n\n@see aria-colcount @see aria-colspan.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-colindex",
          "inheritedFrom": "AriaAttributes.'aria-colindex'",
          "type": "number"
        },
        {
          "documentation": {
            "contents": [
              "<p>Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.</p>\n",
              {
                "tag": "see",
                "value": "aria-colindex @see aria-rowspan."
              }
            ],
            "contentsRaw": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n\n@see aria-colindex @see aria-rowspan.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-colspan",
          "inheritedFrom": "AriaAttributes.'aria-colspan'",
          "type": "number"
        },
        {
          "documentation": {
            "contents": [
              "<p>Identifies the element (or elements) whose contents or presence are controlled by the current element.</p>\n",
              {
                "tag": "see",
                "value": "aria-owns."
              }
            ],
            "contentsRaw": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n\n@see aria-owns.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-controls",
          "inheritedFrom": "AriaAttributes.'aria-controls'",
          "type": "string"
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates the element that represents the current item within a container or set of related elements.</p>\n"
            ],
            "contentsRaw": "Indicates the element that represents the current item within a container or set of related elements.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-current",
          "inheritedFrom": "AriaAttributes.'aria-current'",
          "type": "boolean | \"false\" | \"true\" | \"page\" | \"step\" | \"location\" | \"date\" | \"time\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Identifies the element (or elements) that describes the object.</p>\n",
              {
                "tag": "see",
                "value": "aria-labelledby"
              }
            ],
            "contentsRaw": "Identifies the element (or elements) that describes the object.\n\n@see aria-labelledby",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-describedby",
          "inheritedFrom": "AriaAttributes.'aria-describedby'",
          "type": "string"
        },
        {
          "documentation": {
            "contents": [
              "<p>Identifies the element that provides a detailed, extended description for the object.</p>\n",
              {
                "tag": "see",
                "value": "aria-describedby."
              }
            ],
            "contentsRaw": "Identifies the element that provides a detailed, extended description for the object.\n\n@see aria-describedby.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-details",
          "inheritedFrom": "AriaAttributes.'aria-details'",
          "type": "string"
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.</p>\n",
              {
                "tag": "see",
                "value": "aria-hidden @see aria-readonly."
              }
            ],
            "contentsRaw": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n\n@see aria-hidden @see aria-readonly.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-disabled",
          "inheritedFrom": "AriaAttributes.'aria-disabled'",
          "type": "boolean | \"false\" | \"true\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates what functions can be performed when a dragged object is released on the drop target.</p>\n"
            ],
            "contentsRaw": "Indicates what functions can be performed when a dragged object is released on the drop target.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isDeprecated": "in ARIA 1.1",
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-dropeffect",
          "inheritedFrom": "AriaAttributes.'aria-dropeffect'",
          "type": "\"none\" | \"copy\" | \"execute\" | \"link\" | \"move\" | \"popup\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Identifies the element that provides an error message for the object.</p>\n",
              {
                "tag": "see",
                "value": "aria-invalid @see aria-describedby."
              }
            ],
            "contentsRaw": "Identifies the element that provides an error message for the object.\n\n@see aria-invalid @see aria-describedby.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-errormessage",
          "inheritedFrom": "AriaAttributes.'aria-errormessage'",
          "type": "string"
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.</p>\n"
            ],
            "contentsRaw": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-expanded",
          "inheritedFrom": "AriaAttributes.'aria-expanded'",
          "type": "boolean | \"false\" | \"true\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Identifies the next element (or elements) in an alternate reading order of content which, at the user&#39;s discretion,\nallows assistive technology to override the general default of reading in document source order.</p>\n"
            ],
            "contentsRaw": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-flowto",
          "inheritedFrom": "AriaAttributes.'aria-flowto'",
          "type": "string"
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates an element&#39;s &quot;grabbed&quot; state in a drag-and-drop operation.</p>\n"
            ],
            "contentsRaw": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isDeprecated": "in ARIA 1.1",
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-grabbed",
          "inheritedFrom": "AriaAttributes.'aria-grabbed'",
          "type": "boolean | \"false\" | \"true\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.</p>\n"
            ],
            "contentsRaw": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-haspopup",
          "inheritedFrom": "AriaAttributes.'aria-haspopup'",
          "type": "boolean | \"false\" | \"true\" | \"menu\" | \"listbox\" | \"tree\" | \"grid\" | \"dialog\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates whether the element is exposed to an accessibility API.</p>\n",
              {
                "tag": "see",
                "value": "aria-disabled."
              }
            ],
            "contentsRaw": "Indicates whether the element is exposed to an accessibility API.\n\n@see aria-disabled.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-hidden",
          "inheritedFrom": "AriaAttributes.'aria-hidden'",
          "type": "boolean | \"false\" | \"true\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates the entered value does not conform to the format expected by the application.</p>\n",
              {
                "tag": "see",
                "value": "aria-errormessage."
              }
            ],
            "contentsRaw": "Indicates the entered value does not conform to the format expected by the application.\n\n@see aria-errormessage.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-invalid",
          "inheritedFrom": "AriaAttributes.'aria-invalid'",
          "type": "boolean | \"false\" | \"true\" | \"grammar\" | \"spelling\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.</p>\n"
            ],
            "contentsRaw": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-keyshortcuts",
          "inheritedFrom": "AriaAttributes.'aria-keyshortcuts'",
          "type": "string"
        },
        {
          "documentation": {
            "contents": [
              "<p>Defines a string value that labels the current element.</p>\n",
              {
                "tag": "see",
                "value": "aria-labelledby."
              }
            ],
            "contentsRaw": "Defines a string value that labels the current element.\n\n@see aria-labelledby.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-label",
          "inheritedFrom": "AriaAttributes.'aria-label'",
          "type": "string"
        },
        {
          "documentation": {
            "contents": [
              "<p>Identifies the element (or elements) that labels the current element.</p>\n",
              {
                "tag": "see",
                "value": "aria-describedby."
              }
            ],
            "contentsRaw": "Identifies the element (or elements) that labels the current element.\n\n@see aria-describedby.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-labelledby",
          "inheritedFrom": "AriaAttributes.'aria-labelledby'",
          "type": "string"
        },
        {
          "documentation": {
            "contents": [
              "<p>Defines the hierarchical level of an element within a structure.</p>\n"
            ],
            "contentsRaw": "Defines the hierarchical level of an element within a structure.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-level",
          "inheritedFrom": "AriaAttributes.'aria-level'",
          "type": "number"
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.</p>\n"
            ],
            "contentsRaw": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-live",
          "inheritedFrom": "AriaAttributes.'aria-live'",
          "type": "\"off\" | \"assertive\" | \"polite\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates whether an element is modal when displayed.</p>\n"
            ],
            "contentsRaw": "Indicates whether an element is modal when displayed.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-modal",
          "inheritedFrom": "AriaAttributes.'aria-modal'",
          "type": "boolean | \"false\" | \"true\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates whether a text box accepts multiple lines of input or only a single line.</p>\n"
            ],
            "contentsRaw": "Indicates whether a text box accepts multiple lines of input or only a single line.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-multiline",
          "inheritedFrom": "AriaAttributes.'aria-multiline'",
          "type": "boolean | \"false\" | \"true\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates that the user may select more than one item from the current selectable descendants.</p>\n"
            ],
            "contentsRaw": "Indicates that the user may select more than one item from the current selectable descendants.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-multiselectable",
          "inheritedFrom": "AriaAttributes.'aria-multiselectable'",
          "type": "boolean | \"false\" | \"true\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates whether the element&#39;s orientation is horizontal, vertical, or unknown/ambiguous.</p>\n"
            ],
            "contentsRaw": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-orientation",
          "inheritedFrom": "AriaAttributes.'aria-orientation'",
          "type": "\"horizontal\" | \"vertical\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.</p>\n",
              {
                "tag": "see",
                "value": "aria-controls."
              }
            ],
            "contentsRaw": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n\n@see aria-controls.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-owns",
          "inheritedFrom": "AriaAttributes.'aria-owns'",
          "type": "string"
        },
        {
          "documentation": {
            "contents": [
              "<p>Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.</p>\n"
            ],
            "contentsRaw": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-placeholder",
          "inheritedFrom": "AriaAttributes.'aria-placeholder'",
          "type": "string"
        },
        {
          "documentation": {
            "contents": [
              "<p>Defines an element&#39;s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.</p>\n",
              {
                "tag": "see",
                "value": "aria-setsize."
              }
            ],
            "contentsRaw": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n\n@see aria-setsize.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-posinset",
          "inheritedFrom": "AriaAttributes.'aria-posinset'",
          "type": "number"
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates the current &quot;pressed&quot; state of toggle buttons.</p>\n",
              {
                "tag": "see",
                "value": "aria-checked @see aria-selected."
              }
            ],
            "contentsRaw": "Indicates the current \"pressed\" state of toggle buttons.\n\n@see aria-checked @see aria-selected.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-pressed",
          "inheritedFrom": "AriaAttributes.'aria-pressed'",
          "type": "boolean | \"false\" | \"mixed\" | \"true\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates that the element is not editable, but is otherwise operable.</p>\n",
              {
                "tag": "see",
                "value": "aria-disabled."
              }
            ],
            "contentsRaw": "Indicates that the element is not editable, but is otherwise operable.\n\n@see aria-disabled.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-readonly",
          "inheritedFrom": "AriaAttributes.'aria-readonly'",
          "type": "boolean | \"false\" | \"true\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.</p>\n",
              {
                "tag": "see",
                "value": "aria-atomic."
              }
            ],
            "contentsRaw": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n\n@see aria-atomic.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-relevant",
          "inheritedFrom": "AriaAttributes.'aria-relevant'",
          "type": "\"additions\" | \"additions text\" | \"all\" | \"removals\" | \"text\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates that user input is required on the element before a form may be submitted.</p>\n"
            ],
            "contentsRaw": "Indicates that user input is required on the element before a form may be submitted.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-required",
          "inheritedFrom": "AriaAttributes.'aria-required'",
          "type": "boolean | \"false\" | \"true\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Defines a human-readable, author-localized description for the role of an element.</p>\n"
            ],
            "contentsRaw": "Defines a human-readable, author-localized description for the role of an element.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-roledescription",
          "inheritedFrom": "AriaAttributes.'aria-roledescription'",
          "type": "string"
        },
        {
          "documentation": {
            "contents": [
              "<p>Defines the total number of rows in a table, grid, or treegrid.</p>\n",
              {
                "tag": "see",
                "value": "aria-rowindex."
              }
            ],
            "contentsRaw": "Defines the total number of rows in a table, grid, or treegrid.\n\n@see aria-rowindex.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-rowcount",
          "inheritedFrom": "AriaAttributes.'aria-rowcount'",
          "type": "number"
        },
        {
          "documentation": {
            "contents": [
              "<p>Defines an element&#39;s row index or position with respect to the total number of rows within a table, grid, or treegrid.</p>\n",
              {
                "tag": "see",
                "value": "aria-rowcount @see aria-rowspan."
              }
            ],
            "contentsRaw": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n\n@see aria-rowcount @see aria-rowspan.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-rowindex",
          "inheritedFrom": "AriaAttributes.'aria-rowindex'",
          "type": "number"
        },
        {
          "documentation": {
            "contents": [
              "<p>Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.</p>\n",
              {
                "tag": "see",
                "value": "aria-rowindex @see aria-colspan."
              }
            ],
            "contentsRaw": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n\n@see aria-rowindex @see aria-colspan.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-rowspan",
          "inheritedFrom": "AriaAttributes.'aria-rowspan'",
          "type": "number"
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates the current &quot;selected&quot; state of various widgets.</p>\n",
              {
                "tag": "see",
                "value": "aria-checked @see aria-pressed."
              }
            ],
            "contentsRaw": "Indicates the current \"selected\" state of various widgets.\n\n@see aria-checked @see aria-pressed.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-selected",
          "inheritedFrom": "AriaAttributes.'aria-selected'",
          "type": "boolean | \"false\" | \"true\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.</p>\n",
              {
                "tag": "see",
                "value": "aria-posinset."
              }
            ],
            "contentsRaw": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n\n@see aria-posinset.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-setsize",
          "inheritedFrom": "AriaAttributes.'aria-setsize'",
          "type": "number"
        },
        {
          "documentation": {
            "contents": [
              "<p>Indicates if items in a table or grid are sorted in ascending or descending order.</p>\n"
            ],
            "contentsRaw": "Indicates if items in a table or grid are sorted in ascending or descending order.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-sort",
          "inheritedFrom": "AriaAttributes.'aria-sort'",
          "type": "\"none\" | \"ascending\" | \"descending\" | \"other\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Defines the maximum allowed value for a range widget.</p>\n"
            ],
            "contentsRaw": "Defines the maximum allowed value for a range widget.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-valuemax",
          "inheritedFrom": "AriaAttributes.'aria-valuemax'",
          "type": "number"
        },
        {
          "documentation": {
            "contents": [
              "<p>Defines the minimum allowed value for a range widget.</p>\n"
            ],
            "contentsRaw": "Defines the minimum allowed value for a range widget.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-valuemin",
          "inheritedFrom": "AriaAttributes.'aria-valuemin'",
          "type": "number"
        },
        {
          "documentation": {
            "contents": [
              "<p>Defines the current value for a range widget.</p>\n",
              {
                "tag": "see",
                "value": "aria-valuetext."
              }
            ],
            "contentsRaw": "Defines the current value for a range widget.\n\n@see aria-valuetext.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-valuenow",
          "inheritedFrom": "AriaAttributes.'aria-valuenow'",
          "type": "number"
        },
        {
          "documentation": {
            "contents": [
              "<p>Defines the human readable text alternative of aria-valuenow for a range widget.</p>\n"
            ],
            "contentsRaw": "Defines the human readable text alternative of aria-valuenow for a range widget.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "aria-valuetext",
          "inheritedFrom": "AriaAttributes.'aria-valuetext'",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "autoCapitalize",
          "inheritedFrom": "HTMLAttributes.autoCapitalize",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "autoCorrect",
          "inheritedFrom": "HTMLAttributes.autoCorrect",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "autoSave",
          "inheritedFrom": "HTMLAttributes.autoSave",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "children",
          "inheritedFrom": "DOMAttributes.children",
          "type": "ReactNode"
        },
        {
          "documentation": {
            "contents": [
              "<p>A space-delimited list of class names to pass along to a child element.</p>\n"
            ],
            "contentsRaw": "A space-delimited list of class names to pass along to a child element.",
            "metadata": {}
          },
          "fileName": "..\\node_modules\\@blueprintjs\\core\\lib\\esm\\common\\props.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "className",
          "inheritedFrom": "IProps.className",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "color",
          "inheritedFrom": "HTMLAttributes.color",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "contentEditable",
          "inheritedFrom": "HTMLAttributes.contentEditable",
          "type": "boolean"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "contextMenu",
          "inheritedFrom": "HTMLAttributes.contextMenu",
          "type": "string"
        },
        {
          "documentation": {
            "contents": [
              "<p>Additional class names to apply after value has been copied</p>\n"
            ],
            "contentsRaw": "Additional class names to apply after value has been copied",
            "metadata": {}
          },
          "fileName": "components\\clickToCopy.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "copiedClassName",
          "defaultValue": "\"docs-clipboard-copied\"",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "dangerouslySetInnerHTML",
          "inheritedFrom": "DOMAttributes.dangerouslySetInnerHTML",
          "type": ""
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "datatype",
          "inheritedFrom": "HTMLAttributes.datatype",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "defaultChecked",
          "inheritedFrom": "HTMLAttributes.defaultChecked",
          "type": "boolean"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "defaultValue",
          "inheritedFrom": "HTMLAttributes.defaultValue",
          "type": "string | string[]"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "dir",
          "inheritedFrom": "HTMLAttributes.dir",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "draggable",
          "inheritedFrom": "HTMLAttributes.draggable",
          "type": "boolean"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "hidden",
          "inheritedFrom": "HTMLAttributes.hidden",
          "type": "boolean"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "id",
          "inheritedFrom": "HTMLAttributes.id",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "inlist",
          "inheritedFrom": "HTMLAttributes.inlist",
          "type": "any"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "inputMode",
          "inheritedFrom": "HTMLAttributes.inputMode",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "is",
          "inheritedFrom": "HTMLAttributes.is",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "itemID",
          "inheritedFrom": "HTMLAttributes.itemID",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "itemProp",
          "inheritedFrom": "HTMLAttributes.itemProp",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "itemRef",
          "inheritedFrom": "HTMLAttributes.itemRef",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "itemScope",
          "inheritedFrom": "HTMLAttributes.itemScope",
          "type": "boolean"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "itemType",
          "inheritedFrom": "HTMLAttributes.itemType",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "lang",
          "inheritedFrom": "HTMLAttributes.lang",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onAbort",
          "inheritedFrom": "DOMAttributes.onAbort",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onAbortCapture",
          "inheritedFrom": "DOMAttributes.onAbortCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onAnimationEnd",
          "inheritedFrom": "DOMAttributes.onAnimationEnd",
          "type": "AnimationEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onAnimationEndCapture",
          "inheritedFrom": "DOMAttributes.onAnimationEndCapture",
          "type": "AnimationEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onAnimationIteration",
          "inheritedFrom": "DOMAttributes.onAnimationIteration",
          "type": "AnimationEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onAnimationIterationCapture",
          "inheritedFrom": "DOMAttributes.onAnimationIterationCapture",
          "type": "AnimationEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onAnimationStart",
          "inheritedFrom": "DOMAttributes.onAnimationStart",
          "type": "AnimationEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onAnimationStartCapture",
          "inheritedFrom": "DOMAttributes.onAnimationStartCapture",
          "type": "AnimationEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onAuxClick",
          "inheritedFrom": "DOMAttributes.onAuxClick",
          "type": "MouseEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onAuxClickCapture",
          "inheritedFrom": "DOMAttributes.onAuxClickCapture",
          "type": "MouseEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onBeforeInput",
          "inheritedFrom": "DOMAttributes.onBeforeInput",
          "type": "FormEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onBeforeInputCapture",
          "inheritedFrom": "DOMAttributes.onBeforeInputCapture",
          "type": "FormEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onBlur",
          "inheritedFrom": "DOMAttributes.onBlur",
          "type": "FocusEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onBlurCapture",
          "inheritedFrom": "DOMAttributes.onBlurCapture",
          "type": "FocusEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onCanPlay",
          "inheritedFrom": "DOMAttributes.onCanPlay",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onCanPlayCapture",
          "inheritedFrom": "DOMAttributes.onCanPlayCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onCanPlayThrough",
          "inheritedFrom": "DOMAttributes.onCanPlayThrough",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onCanPlayThroughCapture",
          "inheritedFrom": "DOMAttributes.onCanPlayThroughCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onChange",
          "inheritedFrom": "DOMAttributes.onChange",
          "type": "FormEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onChangeCapture",
          "inheritedFrom": "DOMAttributes.onChangeCapture",
          "type": "FormEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onClick",
          "inheritedFrom": "DOMAttributes.onClick",
          "type": "MouseEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onClickCapture",
          "inheritedFrom": "DOMAttributes.onClickCapture",
          "type": "MouseEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onCompositionEnd",
          "inheritedFrom": "DOMAttributes.onCompositionEnd",
          "type": "CompositionEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onCompositionEndCapture",
          "inheritedFrom": "DOMAttributes.onCompositionEndCapture",
          "type": "CompositionEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onCompositionStart",
          "inheritedFrom": "DOMAttributes.onCompositionStart",
          "type": "CompositionEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onCompositionStartCapture",
          "inheritedFrom": "DOMAttributes.onCompositionStartCapture",
          "type": "CompositionEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onCompositionUpdate",
          "inheritedFrom": "DOMAttributes.onCompositionUpdate",
          "type": "CompositionEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onCompositionUpdateCapture",
          "inheritedFrom": "DOMAttributes.onCompositionUpdateCapture",
          "type": "CompositionEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onContextMenu",
          "inheritedFrom": "DOMAttributes.onContextMenu",
          "type": "MouseEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onContextMenuCapture",
          "inheritedFrom": "DOMAttributes.onContextMenuCapture",
          "type": "MouseEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onCopy",
          "inheritedFrom": "DOMAttributes.onCopy",
          "type": "ClipboardEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onCopyCapture",
          "inheritedFrom": "DOMAttributes.onCopyCapture",
          "type": "ClipboardEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onCut",
          "inheritedFrom": "DOMAttributes.onCut",
          "type": "ClipboardEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onCutCapture",
          "inheritedFrom": "DOMAttributes.onCutCapture",
          "type": "ClipboardEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onDoubleClick",
          "inheritedFrom": "DOMAttributes.onDoubleClick",
          "type": "MouseEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onDoubleClickCapture",
          "inheritedFrom": "DOMAttributes.onDoubleClickCapture",
          "type": "MouseEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onDrag",
          "inheritedFrom": "DOMAttributes.onDrag",
          "type": "DragEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onDragCapture",
          "inheritedFrom": "DOMAttributes.onDragCapture",
          "type": "DragEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onDragEnd",
          "inheritedFrom": "DOMAttributes.onDragEnd",
          "type": "DragEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onDragEndCapture",
          "inheritedFrom": "DOMAttributes.onDragEndCapture",
          "type": "DragEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onDragEnter",
          "inheritedFrom": "DOMAttributes.onDragEnter",
          "type": "DragEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onDragEnterCapture",
          "inheritedFrom": "DOMAttributes.onDragEnterCapture",
          "type": "DragEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onDragExit",
          "inheritedFrom": "DOMAttributes.onDragExit",
          "type": "DragEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onDragExitCapture",
          "inheritedFrom": "DOMAttributes.onDragExitCapture",
          "type": "DragEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onDragLeave",
          "inheritedFrom": "DOMAttributes.onDragLeave",
          "type": "DragEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onDragLeaveCapture",
          "inheritedFrom": "DOMAttributes.onDragLeaveCapture",
          "type": "DragEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onDragOver",
          "inheritedFrom": "DOMAttributes.onDragOver",
          "type": "DragEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onDragOverCapture",
          "inheritedFrom": "DOMAttributes.onDragOverCapture",
          "type": "DragEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onDragStart",
          "inheritedFrom": "DOMAttributes.onDragStart",
          "type": "DragEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onDragStartCapture",
          "inheritedFrom": "DOMAttributes.onDragStartCapture",
          "type": "DragEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onDrop",
          "inheritedFrom": "DOMAttributes.onDrop",
          "type": "DragEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "accessKey",
          "inheritedFrom": "HTMLAttributes.accessKey",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onDurationChange",
          "inheritedFrom": "DOMAttributes.onDurationChange",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onDurationChangeCapture",
          "inheritedFrom": "DOMAttributes.onDurationChangeCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onEmptied",
          "inheritedFrom": "DOMAttributes.onEmptied",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onEmptiedCapture",
          "inheritedFrom": "DOMAttributes.onEmptiedCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onEncrypted",
          "inheritedFrom": "DOMAttributes.onEncrypted",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onEncryptedCapture",
          "inheritedFrom": "DOMAttributes.onEncryptedCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onEnded",
          "inheritedFrom": "DOMAttributes.onEnded",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onEndedCapture",
          "inheritedFrom": "DOMAttributes.onEndedCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onError",
          "inheritedFrom": "DOMAttributes.onError",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onErrorCapture",
          "inheritedFrom": "DOMAttributes.onErrorCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onFocus",
          "inheritedFrom": "DOMAttributes.onFocus",
          "type": "FocusEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onFocusCapture",
          "inheritedFrom": "DOMAttributes.onFocusCapture",
          "type": "FocusEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onGotPointerCapture",
          "inheritedFrom": "DOMAttributes.onGotPointerCapture",
          "type": "PointerEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onGotPointerCaptureCapture",
          "inheritedFrom": "DOMAttributes.onGotPointerCaptureCapture",
          "type": "PointerEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onInput",
          "inheritedFrom": "DOMAttributes.onInput",
          "type": "FormEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onInputCapture",
          "inheritedFrom": "DOMAttributes.onInputCapture",
          "type": "FormEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onInvalid",
          "inheritedFrom": "DOMAttributes.onInvalid",
          "type": "FormEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onInvalidCapture",
          "inheritedFrom": "DOMAttributes.onInvalidCapture",
          "type": "FormEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onKeyDown",
          "inheritedFrom": "DOMAttributes.onKeyDown",
          "type": "KeyboardEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onKeyDownCapture",
          "inheritedFrom": "DOMAttributes.onKeyDownCapture",
          "type": "KeyboardEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onKeyPress",
          "inheritedFrom": "DOMAttributes.onKeyPress",
          "type": "KeyboardEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onKeyPressCapture",
          "inheritedFrom": "DOMAttributes.onKeyPressCapture",
          "type": "KeyboardEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onKeyUp",
          "inheritedFrom": "DOMAttributes.onKeyUp",
          "type": "KeyboardEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onKeyUpCapture",
          "inheritedFrom": "DOMAttributes.onKeyUpCapture",
          "type": "KeyboardEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onLoad",
          "inheritedFrom": "DOMAttributes.onLoad",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onLoadCapture",
          "inheritedFrom": "DOMAttributes.onLoadCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onLoadStart",
          "inheritedFrom": "DOMAttributes.onLoadStart",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onLoadStartCapture",
          "inheritedFrom": "DOMAttributes.onLoadStartCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onLoadedData",
          "inheritedFrom": "DOMAttributes.onLoadedData",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onLoadedDataCapture",
          "inheritedFrom": "DOMAttributes.onLoadedDataCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onLoadedMetadata",
          "inheritedFrom": "DOMAttributes.onLoadedMetadata",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onLoadedMetadataCapture",
          "inheritedFrom": "DOMAttributes.onLoadedMetadataCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onLostPointerCapture",
          "inheritedFrom": "DOMAttributes.onLostPointerCapture",
          "type": "PointerEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onLostPointerCaptureCapture",
          "inheritedFrom": "DOMAttributes.onLostPointerCaptureCapture",
          "type": "PointerEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onMouseDown",
          "inheritedFrom": "DOMAttributes.onMouseDown",
          "type": "MouseEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onMouseDownCapture",
          "inheritedFrom": "DOMAttributes.onMouseDownCapture",
          "type": "MouseEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onMouseEnter",
          "inheritedFrom": "DOMAttributes.onMouseEnter",
          "type": "MouseEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onMouseLeave",
          "inheritedFrom": "DOMAttributes.onMouseLeave",
          "type": "MouseEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onMouseMove",
          "inheritedFrom": "DOMAttributes.onMouseMove",
          "type": "MouseEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onMouseMoveCapture",
          "inheritedFrom": "DOMAttributes.onMouseMoveCapture",
          "type": "MouseEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onMouseOut",
          "inheritedFrom": "DOMAttributes.onMouseOut",
          "type": "MouseEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onMouseOutCapture",
          "inheritedFrom": "DOMAttributes.onMouseOutCapture",
          "type": "MouseEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onMouseOver",
          "inheritedFrom": "DOMAttributes.onMouseOver",
          "type": "MouseEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onMouseOverCapture",
          "inheritedFrom": "DOMAttributes.onMouseOverCapture",
          "type": "MouseEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onMouseUp",
          "inheritedFrom": "DOMAttributes.onMouseUp",
          "type": "MouseEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onMouseUpCapture",
          "inheritedFrom": "DOMAttributes.onMouseUpCapture",
          "type": "MouseEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPaste",
          "inheritedFrom": "DOMAttributes.onPaste",
          "type": "ClipboardEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPasteCapture",
          "inheritedFrom": "DOMAttributes.onPasteCapture",
          "type": "ClipboardEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPause",
          "inheritedFrom": "DOMAttributes.onPause",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPauseCapture",
          "inheritedFrom": "DOMAttributes.onPauseCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPlay",
          "inheritedFrom": "DOMAttributes.onPlay",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPlayCapture",
          "inheritedFrom": "DOMAttributes.onPlayCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPlaying",
          "inheritedFrom": "DOMAttributes.onPlaying",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPlayingCapture",
          "inheritedFrom": "DOMAttributes.onPlayingCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPointerCancel",
          "inheritedFrom": "DOMAttributes.onPointerCancel",
          "type": "PointerEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPointerCancelCapture",
          "inheritedFrom": "DOMAttributes.onPointerCancelCapture",
          "type": "PointerEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPointerDown",
          "inheritedFrom": "DOMAttributes.onPointerDown",
          "type": "PointerEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPointerDownCapture",
          "inheritedFrom": "DOMAttributes.onPointerDownCapture",
          "type": "PointerEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPointerEnter",
          "inheritedFrom": "DOMAttributes.onPointerEnter",
          "type": "PointerEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPointerEnterCapture",
          "inheritedFrom": "DOMAttributes.onPointerEnterCapture",
          "type": "PointerEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPointerLeave",
          "inheritedFrom": "DOMAttributes.onPointerLeave",
          "type": "PointerEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPointerLeaveCapture",
          "inheritedFrom": "DOMAttributes.onPointerLeaveCapture",
          "type": "PointerEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPointerMove",
          "inheritedFrom": "DOMAttributes.onPointerMove",
          "type": "PointerEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPointerMoveCapture",
          "inheritedFrom": "DOMAttributes.onPointerMoveCapture",
          "type": "PointerEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPointerOut",
          "inheritedFrom": "DOMAttributes.onPointerOut",
          "type": "PointerEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPointerOutCapture",
          "inheritedFrom": "DOMAttributes.onPointerOutCapture",
          "type": "PointerEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPointerOver",
          "inheritedFrom": "DOMAttributes.onPointerOver",
          "type": "PointerEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPointerOverCapture",
          "inheritedFrom": "DOMAttributes.onPointerOverCapture",
          "type": "PointerEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPointerUp",
          "inheritedFrom": "DOMAttributes.onPointerUp",
          "type": "PointerEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onPointerUpCapture",
          "inheritedFrom": "DOMAttributes.onPointerUpCapture",
          "type": "PointerEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onProgress",
          "inheritedFrom": "DOMAttributes.onProgress",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onProgressCapture",
          "inheritedFrom": "DOMAttributes.onProgressCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onRateChange",
          "inheritedFrom": "DOMAttributes.onRateChange",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onRateChangeCapture",
          "inheritedFrom": "DOMAttributes.onRateChangeCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onReset",
          "inheritedFrom": "DOMAttributes.onReset",
          "type": "FormEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onResetCapture",
          "inheritedFrom": "DOMAttributes.onResetCapture",
          "type": "FormEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onScroll",
          "inheritedFrom": "DOMAttributes.onScroll",
          "type": "UIEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onScrollCapture",
          "inheritedFrom": "DOMAttributes.onScrollCapture",
          "type": "UIEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onSeeked",
          "inheritedFrom": "DOMAttributes.onSeeked",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onSeekedCapture",
          "inheritedFrom": "DOMAttributes.onSeekedCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onSeeking",
          "inheritedFrom": "DOMAttributes.onSeeking",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onSeekingCapture",
          "inheritedFrom": "DOMAttributes.onSeekingCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onSelect",
          "inheritedFrom": "DOMAttributes.onSelect",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onSelectCapture",
          "inheritedFrom": "DOMAttributes.onSelectCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onStalled",
          "inheritedFrom": "DOMAttributes.onStalled",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onStalledCapture",
          "inheritedFrom": "DOMAttributes.onStalledCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onSubmit",
          "inheritedFrom": "DOMAttributes.onSubmit",
          "type": "FormEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onSubmitCapture",
          "inheritedFrom": "DOMAttributes.onSubmitCapture",
          "type": "FormEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onSuspend",
          "inheritedFrom": "DOMAttributes.onSuspend",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onSuspendCapture",
          "inheritedFrom": "DOMAttributes.onSuspendCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onTimeUpdate",
          "inheritedFrom": "DOMAttributes.onTimeUpdate",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onTimeUpdateCapture",
          "inheritedFrom": "DOMAttributes.onTimeUpdateCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onTouchCancel",
          "inheritedFrom": "DOMAttributes.onTouchCancel",
          "type": "TouchEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onTouchCancelCapture",
          "inheritedFrom": "DOMAttributes.onTouchCancelCapture",
          "type": "TouchEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onTouchEnd",
          "inheritedFrom": "DOMAttributes.onTouchEnd",
          "type": "TouchEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onTouchEndCapture",
          "inheritedFrom": "DOMAttributes.onTouchEndCapture",
          "type": "TouchEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onTouchMove",
          "inheritedFrom": "DOMAttributes.onTouchMove",
          "type": "TouchEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onTouchMoveCapture",
          "inheritedFrom": "DOMAttributes.onTouchMoveCapture",
          "type": "TouchEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onTouchStart",
          "inheritedFrom": "DOMAttributes.onTouchStart",
          "type": "TouchEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onTouchStartCapture",
          "inheritedFrom": "DOMAttributes.onTouchStartCapture",
          "type": "TouchEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onTransitionEnd",
          "inheritedFrom": "DOMAttributes.onTransitionEnd",
          "type": "TransitionEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onTransitionEndCapture",
          "inheritedFrom": "DOMAttributes.onTransitionEndCapture",
          "type": "TransitionEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onVolumeChange",
          "inheritedFrom": "DOMAttributes.onVolumeChange",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onVolumeChangeCapture",
          "inheritedFrom": "DOMAttributes.onVolumeChangeCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onWaiting",
          "inheritedFrom": "DOMAttributes.onWaiting",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onWaitingCapture",
          "inheritedFrom": "DOMAttributes.onWaitingCapture",
          "type": "ReactEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onWheel",
          "inheritedFrom": "DOMAttributes.onWheel",
          "type": "WheelEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "onWheelCapture",
          "inheritedFrom": "DOMAttributes.onWheelCapture",
          "type": "WheelEventHandler<T>"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "placeholder",
          "inheritedFrom": "HTMLAttributes.placeholder",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "prefix",
          "inheritedFrom": "HTMLAttributes.prefix",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "property",
          "inheritedFrom": "HTMLAttributes.property",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "radioGroup",
          "inheritedFrom": "HTMLAttributes.radioGroup",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "resource",
          "inheritedFrom": "HTMLAttributes.resource",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "results",
          "inheritedFrom": "HTMLAttributes.results",
          "type": "number"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "role",
          "inheritedFrom": "HTMLAttributes.role",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "security",
          "inheritedFrom": "HTMLAttributes.security",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "slot",
          "inheritedFrom": "HTMLAttributes.slot",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "spellCheck",
          "inheritedFrom": "HTMLAttributes.spellCheck",
          "type": "boolean"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "style",
          "inheritedFrom": "HTMLAttributes.style",
          "type": "CSSProperties"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "suppressContentEditableWarning",
          "inheritedFrom": "HTMLAttributes.suppressContentEditableWarning",
          "type": "boolean"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "suppressHydrationWarning",
          "inheritedFrom": "HTMLAttributes.suppressHydrationWarning",
          "type": "boolean"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "tabIndex",
          "inheritedFrom": "HTMLAttributes.tabIndex",
          "type": "number"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "title",
          "inheritedFrom": "HTMLAttributes.title",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "typeof",
          "inheritedFrom": "HTMLAttributes.typeof",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "unselectable",
          "inheritedFrom": "HTMLAttributes.unselectable",
          "type": "\"on\" | \"off\""
        },
        {
          "documentation": {
            "contents": [
              "<p>Value to copy when clicked</p>\n"
            ],
            "contentsRaw": "Value to copy when clicked",
            "metadata": {}
          },
          "fileName": "components\\clickToCopy.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "value",
          "type": "string"
        },
        {
          "fileName": "..\\node_modules\\@types\\react\\index.d.ts",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "vocab",
          "inheritedFrom": "HTMLAttributes.vocab",
          "type": "string"
        }
      ]
    },
    "IColorSchemeProps": {
      "fileName": "components\\colorSchemes.tsx",
      "flags": {
        "isExported": true,
        "isExternal": true,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "interface",
      "name": "IColorSchemeProps",
      "methods": [],
      "properties": [
        {
          "fileName": "components\\colorSchemes.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "schemes",
          "type": "Array<>"
        },
        {
          "fileName": "components\\colorSchemes.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "steps",
          "type": "number"
        }
      ]
    },
    "IDocsIconProps": {
      "fileName": "components\\docsIcon.tsx",
      "flags": {
        "isExported": true,
        "isExternal": true,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "interface",
      "name": "IDocsIconProps",
      "methods": [],
      "properties": [
        {
          "fileName": "components\\docsIcon.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "displayName",
          "type": "string"
        },
        {
          "fileName": "components\\docsIcon.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "group",
          "type": "string"
        },
        {
          "fileName": "components\\docsIcon.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "iconName",
          "type": "IconName"
        },
        {
          "fileName": "components\\docsIcon.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": false,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "tags",
          "type": "string"
        }
      ]
    },
    "IIconsProps": {
      "fileName": "components\\icons.tsx",
      "flags": {
        "isExported": true,
        "isExternal": true,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "interface",
      "name": "IIconsProps",
      "methods": [],
      "properties": [
        {
          "fileName": "components\\icons.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "iconFilter",
          "type": "(query: string, icon: IIcon) => boolean"
        },
        {
          "fileName": "components\\icons.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "iconRenderer",
          "type": "(icon: IIcon, index: number) => Element"
        },
        {
          "fileName": "components\\icons.tsx",
          "flags": {
            "isExported": true,
            "isExternal": true,
            "isOptional": true,
            "isPrivate": false,
            "isProtected": false,
            "isPublic": false,
            "isRest": false,
            "isStatic": false
          },
          "kind": "property",
          "name": "icons",
          "type": "IIcon[]"
        }
      ]
    },
    "ICellLookup": {
      "fileName": "examples\\table-examples\\tableSortableExample.tsx",
      "flags": {
        "isExported": true,
        "isExternal": true,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "type alias",
      "name": "ICellLookup",
      "type": "(rowIndex: number, columnIndex: number) => any"
    },
    "ISortCallback": {
      "fileName": "examples\\table-examples\\tableSortableExample.tsx",
      "flags": {
        "isExported": true,
        "isExternal": true,
        "isOptional": false,
        "isPrivate": false,
        "isProtected": false,
        "isPublic": false,
        "isRest": false,
        "isStatic": false
      },
      "kind": "type alias",
      "name": "ISortCallback",
      "type": "(columnIndex: number, comparator: (a: any, b: any) => number) => void"
    }
  },
  "css": {
    "blockquote": {
      "documentation": "",
      "markup": "<blockquote class=\"bp3-blockquote\">\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n  ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation\n  ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n  reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n</blockquote>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>blockquote</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-blockquote</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;Lorem&nbsp;ipsum&nbsp;dolor&nbsp;sit&nbsp;amet,&nbsp;consectetur&nbsp;adipiscing&nbsp;elit,&nbsp;sed&nbsp;do&nbsp;eiusmod&nbsp;tempor&nbsp;incididunt</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;ut&nbsp;labore&nbsp;et&nbsp;dolore&nbsp;magna&nbsp;aliqua.&nbsp;Ut&nbsp;enim&nbsp;ad&nbsp;minim&nbsp;veniam,&nbsp;quis&nbsp;nostrud&nbsp;exercitation</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;ullamco&nbsp;laboris&nbsp;nisi&nbsp;ut&nbsp;aliquip&nbsp;ex&nbsp;ea&nbsp;commodo&nbsp;consequat.&nbsp;Duis&nbsp;aute&nbsp;irure&nbsp;dolor&nbsp;in</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;reprehenderit&nbsp;in&nbsp;voluptate&nbsp;velit&nbsp;esse&nbsp;cillum&nbsp;dolore&nbsp;eu&nbsp;fugiat&nbsp;nulla&nbsp;pariatur.</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>blockquote</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [],
      "reference": "blockquote"
    },
    "breadcrumbs": {
      "documentation": "",
      "markup": "<ul class=\"bp3-breadcrumbs\">\n  <li><a class=\"bp3-breadcrumbs-collapsed\" href=\"#\"></a></li>\n  <li><a class=\"bp3-breadcrumb bp3-disabled\">Folder one</a></li>\n  <li><a class=\"bp3-breadcrumb\" href=\"#\">Folder two</a></li>\n  <li><a class=\"bp3-breadcrumb\" href=\"#\">Folder three</a></li>\n  <li><span class=\"bp3-breadcrumb bp3-breadcrumb-current\">File</span></li>\n</ul>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>ul</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-breadcrumbs</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-breadcrumbs-collapsed</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>href</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>#</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-breadcrumb&nbsp;bp3-disabled</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Folder&nbsp;one</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-breadcrumb</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>href</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>#</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Folder&nbsp;two</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-breadcrumb</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>href</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>#</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Folder&nbsp;three</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-breadcrumb&nbsp;bp3-breadcrumb-current</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>File</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>ul</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [],
      "reference": "breadcrumbs"
    },
    "button": {
      "documentation": "",
      "markup": "<a role=\"button\" class=\"bp3-button {{.modifier}}\" {{:modifier}} tabindex=\"0\">Anchor</a>\n<button type=\"button\" class=\"bp3-button bp3-icon-add {{.modifier}}\" {{:modifier}}>Button</button>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span>:modifier</span><span class=\"support constant handlebars\"><span>}}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Anchor</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-add&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span>:modifier</span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Button</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Disabled state</p>\n",
          "name": ":disabled"
        },
        {
          "documentation": "<p>Active appearance</p>\n",
          "name": ".bp3-active"
        },
        {
          "documentation": "<p>Disabled appearance</p>\n",
          "name": ".bp3-disabled"
        },
        {
          "documentation": "<p>Primary intent</p>\n",
          "name": ".bp3-intent-primary"
        },
        {
          "documentation": "<p>Success intent</p>\n",
          "name": ".bp3-intent-success"
        },
        {
          "documentation": "<p>Warning intent</p>\n",
          "name": ".bp3-intent-warning"
        },
        {
          "documentation": "<p>Danger intent</p>\n",
          "name": ".bp3-intent-danger"
        },
        {
          "documentation": "<p>More subtle appearance</p>\n",
          "name": ".bp3-minimal"
        },
        {
          "documentation": "<p>Larger size</p>\n",
          "name": ".bp3-large"
        },
        {
          "documentation": "<p>Smaller size</p>\n",
          "name": ".bp3-small"
        },
        {
          "documentation": "<p>Fill parent container</p>\n",
          "name": ".bp3-fill"
        }
      ],
      "reference": "button"
    },
    "button-group": {
      "documentation": "",
      "markup": "<div class=\"bp3-button-group {{.modifier}}\">\n  <button type=\"button\" class=\"bp3-button bp3-intent-success\">Save</button>\n  <button type=\"button\" class=\"bp3-button bp3-intent-success bp3-icon-caret-down\"></button>\n</div>\n<div class=\"bp3-button-group {{.modifier}}\">\n  <a class=\"bp3-button bp3-icon-database\" tabindex=\"0\" role=\"button\">Queries</a>\n  <a class=\"bp3-button bp3-icon-function\" tabindex=\"0\" role=\"button\">Functions</a>\n  <a class=\"bp3-button\" tabindex=\"0\" role=\"button\">\n    Options <span class=\"bp3-icon-standard bp3-icon-caret-down bp3-align-right\"></span>\n  </a>\n</div>\n<div class=\"bp3-button-group {{.modifier}}\">\n  <a class=\"bp3-button bp3-icon-chart\" tabindex=\"0\" role=\"button\"></a>\n  <a class=\"bp3-button bp3-icon-control\" tabindex=\"0\" role=\"button\"></a>\n  <a class=\"bp3-button bp3-icon-graph\" tabindex=\"0\" role=\"button\"></a>\n  <a class=\"bp3-button bp3-icon-camera\" tabindex=\"0\" role=\"button\"></a>\n  <a class=\"bp3-button bp3-icon-map\" tabindex=\"0\" role=\"button\"></a>\n  <a class=\"bp3-button bp3-icon-code\" tabindex=\"0\" role=\"button\"></a>\n  <a class=\"bp3-button bp3-icon-th\" tabindex=\"0\" role=\"button\"></a>\n  <a class=\"bp3-button bp3-icon-time\" tabindex=\"0\" role=\"button\"></a>\n  <a class=\"bp3-button bp3-icon-compressed\" tabindex=\"0\" role=\"button\"></a>\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button-group&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-intent-success</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Save</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-intent-success&nbsp;bp3-icon-caret-down</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button-group&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-database</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Queries</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-function</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Functions</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Options&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-icon-standard&nbsp;bp3-icon-caret-down&nbsp;bp3-align-right</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button-group&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-chart</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-control</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-graph</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-camera</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-map</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-code</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-th</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-time</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-compressed</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Buttons expand equally to fill container</p>\n",
          "name": ".bp3-fill"
        },
        {
          "documentation": "<p>Use large buttons</p>\n",
          "name": ".bp3-large"
        },
        {
          "documentation": "<p>Use minimal buttons</p>\n",
          "name": ".bp3-minimal"
        },
        {
          "documentation": "<p>Vertical layout</p>\n",
          "name": ".bp3-vertical"
        }
      ],
      "reference": "button-group"
    },
    "button-group-vertical": {
      "documentation": "",
      "markup": "<div class=\"bp3-button-group bp3-vertical\">\n  <a class=\"bp3-button bp3-icon-search-template\" role=\"button\" tabindex=\"0\"></a>\n  <a class=\"bp3-button bp3-icon-zoom-in\" role=\"button\" tabindex=\"0\"></a>\n  <a class=\"bp3-button bp3-icon-zoom-out\" role=\"button\" tabindex=\"0\"></a>\n  <a class=\"bp3-button bp3-icon-zoom-to-fit\" role=\"button\" tabindex=\"0\"></a>\n</div>\n<div class=\"bp3-button-group bp3-vertical\">\n  <button type=\"button\" class=\"bp3-button bp3-active\">Home</button>\n  <button type=\"button\" class=\"bp3-button\">Pages</button>\n  <button type=\"button\" class=\"bp3-button\">Blog</button>\n  <button type=\"button\" class=\"bp3-button\">Calendar</button>\n</div>\n<div class=\"bp3-button-group bp3-vertical bp3-align-left bp3-large\">\n  <button type=\"button\" class=\"bp3-button bp3-intent-primary bp3-icon-document\">Text</button>\n  <button type=\"button\" class=\"bp3-button bp3-intent-primary bp3-icon-media bp3-active\">Media</button>\n  <button type=\"button\" class=\"bp3-button bp3-intent-primary bp3-icon-link\">Sources</button>\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button-group&nbsp;bp3-vertical</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-search-template</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-zoom-in</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-zoom-out</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-zoom-to-fit</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button-group&nbsp;bp3-vertical</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-active</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Home</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Pages</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Blog</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Calendar</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button-group&nbsp;bp3-vertical&nbsp;bp3-align-left&nbsp;bp3-large</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-intent-primary&nbsp;bp3-icon-document</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Text</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-intent-primary&nbsp;bp3-icon-media&nbsp;bp3-active</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Media</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-intent-primary&nbsp;bp3-icon-link</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Sources</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [],
      "reference": "button-group-vertical"
    },
    "button-group}-fill": {
      "documentation": "",
      "markup": "<div class=\"bp3-button-group bp3-large bp3-fill\">\n  <a class=\"bp3-button bp3-intent-primary bp3-fixed\" tabindex=\"0\" role=\"button\">Start</a>\n  <a class=\"bp3-button bp3-intent-primary\" tabindex=\"0\" role=\"button\">Left</a>\n  <a class=\"bp3-button bp3-intent-primary bp3-active\" tabindex=\"0\" role=\"button\">Middle</a>\n  <a class=\"bp3-button bp3-intent-primary\" tabindex=\"0\" role=\"button\">Right</a>\n  <a class=\"bp3-button bp3-intent-primary bp3-fixed\" tabindex=\"0\" role=\"button\">End</a>\n</div>\n<br />\n<div class=\"bp3-button-group bp3-fill\">\n  <button class=\"bp3-button bp3-icon-arrow-left\"></button>\n  <button class=\"bp3-button bp3-fill\">Middle</button>\n  <button class=\"bp3-button bp3-icon-arrow-right\"></button>\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button-group&nbsp;bp3-large&nbsp;bp3-fill</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-intent-primary&nbsp;bp3-fixed</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Start</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-intent-primary</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Left</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-intent-primary&nbsp;bp3-active</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Middle</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-intent-primary</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Right</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-intent-primary&nbsp;bp3-fixed</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>End</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>br</span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button-group&nbsp;bp3-fill</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-arrow-left</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-fill</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Middle</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-arrow-right</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [],
      "reference": "button-group}-fill"
    },
    "callout": {
      "documentation": "",
      "markup": "<div class=\"bp3-callout {{.modifier}}\">\n  <h4 class=\"bp3-heading\">Callout Heading</h4>\n  Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ex, delectus!\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-callout&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>h4</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-heading</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Callout&nbsp;Heading</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>h4</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;Lorem&nbsp;ipsum&nbsp;dolor&nbsp;sit&nbsp;amet,&nbsp;consectetur&nbsp;adipisicing&nbsp;elit.&nbsp;Ex,&nbsp;delectus!</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Primary intent</p>\n",
          "name": ".bp3-intent-primary"
        },
        {
          "documentation": "<p>Success intent</p>\n",
          "name": ".bp3-intent-success"
        },
        {
          "documentation": "<p>Warning intent</p>\n",
          "name": ".bp3-intent-warning"
        },
        {
          "documentation": "<p>Danger intent</p>\n",
          "name": ".bp3-intent-danger"
        },
        {
          "documentation": "<p>With an icon</p>\n",
          "name": ".bp3-icon-info-sign"
        }
      ],
      "reference": "callout"
    },
    "card": {
      "documentation": "",
      "markup": "<div class=\"bp3-card {{.modifier}}\">\n  We build products that make people better at their most important work.\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-card&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;We&nbsp;build&nbsp;products&nbsp;that&nbsp;make&nbsp;people&nbsp;better&nbsp;at&nbsp;their&nbsp;most&nbsp;important&nbsp;work.</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Ground floor. This level provides just a gentle border shadow.</p>\n",
          "name": ".bp3-elevation-0"
        },
        {
          "documentation": "<p>First. Subtle drop shadow intended for static containers.</p>\n",
          "name": ".bp3-elevation-1"
        },
        {
          "documentation": "<p>Second. An even stronger shadow, moving on up.</p>\n",
          "name": ".bp3-elevation-2"
        },
        {
          "documentation": "<p>Third. For containers overlaying content temporarily.</p>\n",
          "name": ".bp3-elevation-3"
        },
        {
          "documentation": "<p>Fourth. The strongest shadow, usually for overlay containers on top of backdrops.</p>\n",
          "name": ".bp3-elevation-4"
        },
        {
          "documentation": "<p>On hover, increase elevation and use pointer cursor.</p>\n",
          "name": ".bp3-interactive"
        }
      ],
      "reference": "card"
    },
    "checkbox": {
      "documentation": "",
      "markup": "<label class=\"bp3-control bp3-checkbox {{.modifier}}\">\n  <input type=\"checkbox\" {{:modifier}} />\n  <span class=\"bp3-control-indicator\"></span>\n  Checkbox\n</label>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-control&nbsp;bp3-checkbox&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>checkbox</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span>:modifier</span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-control-indicator</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;Checkbox</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Checked</p>\n",
          "name": ":checked"
        },
        {
          "documentation": "<p>Disabled. Also add <code>.bp3-disabled</code> to <code>.bp3-control</code> to change text color (not shown below).</p>\n",
          "name": ":disabled"
        },
        {
          "documentation": "<p>Indeterminate. Note that this style can only be achieved via JavaScript <code>input.indeterminate = true</code>.</p>\n",
          "name": ":indeterminate"
        },
        {
          "documentation": "<p>Right-aligned indicator</p>\n",
          "name": ".bp3-align-right"
        },
        {
          "documentation": "<p>Large</p>\n",
          "name": ".bp3-large"
        }
      ],
      "reference": "checkbox"
    },
    "checkbox-inline": {
      "documentation": "",
      "markup": "<div>\n  <label class=\"bp3-label\">A group of related options</label>\n  <label class=\"bp3-control bp3-checkbox bp3-inline\">\n    <input type=\"checkbox\" />\n    <span class=\"bp3-control-indicator\"></span>\n    First\n  </label>\n  <label class=\"bp3-control bp3-checkbox bp3-inline\">\n    <input type=\"checkbox\" />\n    <span class=\"bp3-control-indicator\"></span>\n    Second\n  </label>\n  <label class=\"bp3-control bp3-checkbox bp3-inline\">\n    <input type=\"checkbox\" />\n    <span class=\"bp3-control-indicator\"></span>\n    Third\n  </label>\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-label</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>A&nbsp;group&nbsp;of&nbsp;related&nbsp;options</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-control&nbsp;bp3-checkbox&nbsp;bp3-inline</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>checkbox</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-control-indicator</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;First</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-control&nbsp;bp3-checkbox&nbsp;bp3-inline</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>checkbox</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-control-indicator</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Second</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-control&nbsp;bp3-checkbox&nbsp;bp3-inline</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>checkbox</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-control-indicator</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Third</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [],
      "reference": "checkbox-inline"
    },
    "control-group": {
      "documentation": "",
      "markup": "<div class=\"bp3-control-group\">\n  <button class=\"bp3-button bp3-icon-filter\">Filter</button>\n  <input type=\"text\" class=\"bp3-input\" placeholder=\"Find filters...\" />\n</div>\n<div class=\"bp3-control-group\">\n  <div class=\"bp3-select\">\n    <select>\n      <option selected>Filter...</option>\n      <option value=\"1\">Issues</option>\n      <option value=\"2\">Requests</option>\n      <option value=\"3\">Projects</option>\n    </select>\n  </div>\n  <div class=\"bp3-input-group\">\n    <span class=\"bp3-icon bp3-icon-search\"></span>\n    <input type=\"text\" class=\"bp3-input\" value=\"from:ggray to:allorca\" />\n  </div>\n</div>\n<div class=\"bp3-control-group\">\n  <div class=\"bp3-input-group\">\n    <span class=\"bp3-icon bp3-icon-people\"></span>\n    <input type=\"text\" class=\"bp3-input\" placeholder=\"Find collaborators...\" style=\"padding-right:94px\" />\n    <div class=\"bp3-input-action\">\n      <button class=\"bp3-button bp3-minimal bp3-intent-primary\">\n        can view<span class=\"bp3-icon-standard bp3-icon-caret-down bp3-align-right\"></span>\n      </button>\n    </div>\n  </div>\n  <button class=\"bp3-button bp3-intent-primary\">Add</button>\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-control-group</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-filter</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Filter</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>text</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>placeholder</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>Find&nbsp;filters...</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-control-group</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-select</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>select</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span>&nbsp;selected</span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Filter...</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>value</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>1</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Issues</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>value</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>2</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Requests</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>value</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>3</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Projects</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>select</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input-group</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-icon&nbsp;bp3-icon-search</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>text</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>value</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>from:ggray&nbsp;to:allorca</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-control-group</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input-group</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-icon&nbsp;bp3-icon-people</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>text</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>placeholder</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>Find&nbsp;collaborators...</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>style</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>padding-right:94px</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input-action</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-minimal&nbsp;bp3-intent-primary</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;can&nbsp;view</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-icon-standard&nbsp;bp3-icon-caret-down&nbsp;bp3-align-right</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-intent-primary</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Add</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [],
      "reference": "control-group"
    },
    "control-group-fill": {
      "documentation": "",
      "markup": "<div class=\"bp3-control-group\">\n  <div class=\"bp3-input-group bp3-fill\">\n    <span class=\"bp3-icon bp3-icon-people\"></span>\n    <input type=\"text\" class=\"bp3-input\" placeholder=\"Find collaborators...\" />\n  </div>\n  <button class=\"bp3-button bp3-intent-primary\">Add</button>\n</div>\n<div class=\"bp3-control-group bp3-fill\">\n  <button class=\"bp3-button bp3-icon-minus bp3-fixed\"></button>\n  <input type=\"text\" class=\"bp3-input\" placeholder=\"Enter a value...\" />\n  <button class=\"bp3-button bp3-icon-plus bp3-fixed\"></button>\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-control-group</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input-group&nbsp;bp3-fill</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-icon&nbsp;bp3-icon-people</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>text</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>placeholder</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>Find&nbsp;collaborators...</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-intent-primary</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Add</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-control-group&nbsp;bp3-fill</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-minus&nbsp;bp3-fixed</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>text</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>placeholder</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>Enter&nbsp;a&nbsp;value...</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-plus&nbsp;bp3-fixed</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [],
      "reference": "control-group-fill"
    },
    "control-group-vertical": {
      "documentation": "",
      "markup": "<div class=\"bp3-control-group bp3-vertical\" style=\"width: 300px;\">\n  <div class=\"bp3-input-group bp3-large\">\n    <span class=\"bp3-icon bp3-icon-person\"></span>\n    <input type=\"text\" class=\"bp3-input\" placeholder=\"Username\" />\n  </div>\n  <div class=\"bp3-input-group bp3-large\">\n    <span class=\"bp3-icon bp3-icon-lock\"></span>\n    <input type=\"password\" class=\"bp3-input\" placeholder=\"Password\" />\n  </div>\n  <button class=\"bp3-button bp3-large bp3-intent-primary\">Login</button>\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-control-group&nbsp;bp3-vertical</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>style</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>width:&nbsp;300px;</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input-group&nbsp;bp3-large</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-icon&nbsp;bp3-icon-person</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>text</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>placeholder</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>Username</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input-group&nbsp;bp3-large</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-icon&nbsp;bp3-icon-lock</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>password</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>placeholder</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>Password</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-large&nbsp;bp3-intent-primary</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Login</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [],
      "reference": "control-group-vertical"
    },
    "dialog": {
      "documentation": "",
      "markup": "<!-- this container element fills its parent and centers the .bp3-dialog within it -->\n<div class=\"bp3-dialog-container\">\n  <div class=\"bp3-dialog\">\n    <div class=\"bp3-dialog-header\">\n      <span class=\"bp3-icon-large bp3-icon-inbox\"></span>\n      <h4 class=\"bp3-heading\">Dialog header</h4>\n      <button aria-label=\"Close\" class=\"bp3-dialog-close-button bp3-button bp3-minimal bp3-icon-cross\"></button>\n    </div>\n    <div class=\"bp3-dialog-body\">\n      This dialog hasn't been wired up with any open or close interactions.\n      It's just an example of markup and styles.\n    </div>\n    <div class=\"bp3-dialog-footer\">\n      <div class=\"bp3-dialog-footer-actions\">\n        <button type=\"button\" class=\"bp3-button\">Secondary button</button>\n        <button type=\"submit\" class=\"bp3-button bp3-intent-primary\">Primary button</button>\n      </div>\n    </div>\n  </div>\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"comment block html\"><span class=\"punctuation definition comment html\"><span>&lt;!--</span></span><span>&nbsp;this&nbsp;container&nbsp;element&nbsp;fills&nbsp;its&nbsp;parent&nbsp;and&nbsp;centers&nbsp;the&nbsp;.bp3-dialog&nbsp;within&nbsp;it&nbsp;</span><span class=\"punctuation definition comment html\"><span>--&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-dialog-container</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-dialog</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-dialog-header</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-icon-large&nbsp;bp3-icon-inbox</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>h4</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-heading</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Dialog&nbsp;header</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>h4</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>aria-label</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>Close</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-dialog-close-button&nbsp;bp3-button&nbsp;bp3-minimal&nbsp;bp3-icon-cross</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-dialog-body</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;dialog&nbsp;hasn&#39;t&nbsp;been&nbsp;wired&nbsp;up&nbsp;with&nbsp;any&nbsp;open&nbsp;or&nbsp;close&nbsp;interactions.</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;It&#39;s&nbsp;just&nbsp;an&nbsp;example&nbsp;of&nbsp;markup&nbsp;and&nbsp;styles.</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-dialog-footer</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-dialog-footer-actions</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Secondary&nbsp;button</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>submit</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-intent-primary</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Primary&nbsp;button</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [],
      "reference": "dialog"
    },
    "file-input": {
      "documentation": "",
      "markup": "<label class=\"bp3-file-input {{.modifier}}\">\n  <input type=\"file\" {{:modifier}}/>\n  <span class=\"bp3-file-upload-input\">Choose file...</span>\n</label>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-file-input&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>file</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span>:modifier</span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition tag html\"><span>/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-file-upload-input</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Choose&nbsp;file...</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Disabled</p>\n",
          "name": ":disabled"
        },
        {
          "documentation": "<p>Larger size</p>\n",
          "name": ".bp3-large"
        },
        {
          "documentation": "<p>Take up full width of parent element</p>\n",
          "name": ".bp3-fill"
        },
        {
          "documentation": "<p>User has made a selection</p>\n",
          "name": ".bp3-file-input-has-selection"
        }
      ],
      "reference": "file-input"
    },
    "form-group": {
      "documentation": "",
      "markup": "<div class=\"bp3-form-group {{.modifier}}\">\n  <label class=\"bp3-label\" for=\"form-group-input\">\n    Label\n    <span class=\"bp3-text-muted\">(required)</span>\n  </label>\n  <div class=\"bp3-form-content\">\n    <div class=\"bp3-input-group {{.modifier}}\">\n      <span class=\"bp3-icon bp3-icon-calendar\"></span>\n      <input id=\"form-group-input\" type=\"text\" {{:modifier}} class=\"bp3-input\"\n             style=\"width: 200px;\" placeholder=\"Placeholder text\" dir=\"auto\" />\n    </div>\n    <div class=\"bp3-form-helper-text\">Please enter a value</div>\n  </div>\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-form-group&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-label</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>for</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>form-group-input</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Label</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-text-muted</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>(required)</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-form-content</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input-group&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-icon&nbsp;bp3-icon-calendar</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"meta attribute-with-value id html\"><span class=\"entity other attribute-name id html\"><span>id</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>form-group-input</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>text</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span>:modifier</span><span class=\"support constant handlebars\"><span>}}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>style</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>width:&nbsp;200px;</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>placeholder</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>Placeholder&nbsp;text</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>dir</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>auto</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-form-helper-text</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Please&nbsp;enter&nbsp;a&nbsp;value</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Disable the input.</p>\n",
          "name": ":disabled"
        },
        {
          "documentation": "<p>Disabled styles. Input must be disabled separately via attribute.</p>\n",
          "name": ".bp3-disabled"
        },
        {
          "documentation": "<p>Label and content appear side by side.</p>\n",
          "name": ".bp3-inline"
        },
        {
          "documentation": "<p>Apply intent to form group and input separately.</p>\n",
          "name": ".bp3-intent-primary"
        }
      ],
      "reference": "form-group"
    },
    "headings": {
      "documentation": "",
      "markup": "<div>\n  <h1 class=\"bp3-heading\">H1 heading</h1>\n  <h2 class=\"bp3-heading\">H2 heading</h2>\n  <h3 class=\"bp3-heading\">H3 heading</h3>\n  <h4 class=\"bp3-heading\">H4 heading</h4>\n  <h5 class=\"bp3-heading\">H5 heading</h5>\n  <h6 class=\"bp3-heading\">H6 heading</h6>\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>h1</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-heading</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>H1&nbsp;heading</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>h1</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>h2</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-heading</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>H2&nbsp;heading</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>h2</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>h3</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-heading</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>H3&nbsp;heading</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>h3</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>h4</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-heading</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>H4&nbsp;heading</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>h4</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>h5</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-heading</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>H5&nbsp;heading</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>h5</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>h6</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-heading</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>H6&nbsp;heading</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>h6</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [],
      "reference": "headings"
    },
    "html-table": {
      "documentation": "",
      "markup": "<table class=\"bp3-html-table {{.modifier}}\">\n  <thead>\n    <tr>\n      <th>Project</th>\n      <th>Description</th>\n      <th>Technologies</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Blueprint</td>\n      <td>CSS framework and UI toolkit</td>\n      <td>Sass, TypeScript, React</td>\n    </tr>\n    <tr>\n      <td>TSLint</td>\n      <td>Static analysis linter for TypeScript</td>\n      <td>TypeScript</td>\n    </tr>\n    <tr>\n      <td>Plottable</td>\n      <td>Composable charting library built on top of D3</td>\n      <td>SVG, TypeScript, D3</td>\n    </tr>\n  </tbody>\n</table>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>table</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-html-table&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>thead</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>tr</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>th</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Project</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>th</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>th</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Description</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>th</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>th</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Technologies</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>th</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>tr</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>thead</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>tbody</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>tr</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>td</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Blueprint</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>td</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>td</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>CSS&nbsp;framework&nbsp;and&nbsp;UI&nbsp;toolkit</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>td</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>td</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Sass,&nbsp;TypeScript,&nbsp;React</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>td</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>tr</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>tr</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>td</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>TSLint</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>td</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>td</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Static&nbsp;analysis&nbsp;linter&nbsp;for&nbsp;TypeScript</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>td</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>td</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>TypeScript</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>td</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>tr</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>tr</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>td</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Plottable</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>td</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>td</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Composable&nbsp;charting&nbsp;library&nbsp;built&nbsp;on&nbsp;top&nbsp;of&nbsp;D3</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>td</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>td</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>SVG,&nbsp;TypeScript,&nbsp;D3</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>td</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>tr</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>tbody</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>table</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Bordered appearance</p>\n",
          "name": ".bp3-html-table-bordered"
        },
        {
          "documentation": "<p>Condensed smaller appearance</p>\n",
          "name": ".bp3-html-table-condensed"
        },
        {
          "documentation": "<p>Striped appearance</p>\n",
          "name": ".bp3-html-table-striped"
        },
        {
          "documentation": "<p>Enables hover styles on rows</p>\n",
          "name": ".bp3-interactive"
        },
        {
          "documentation": "<p>Small, condensed appearance for this element <em>and all child elements</em></p>\n",
          "name": ".bp3-small"
        }
      ],
      "reference": "html-table"
    },
    "input": {
      "documentation": "",
      "markup": "<input class=\"bp3-input {{.modifier}}\" {{:modifier}} type=\"text\" placeholder=\"Text input\" dir=\"auto\" />",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span>:modifier</span><span class=\"support constant handlebars\"><span>}}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>text</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>placeholder</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>Text&nbsp;input</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>dir</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>auto</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Disabled</p>\n",
          "name": ":disabled"
        },
        {
          "documentation": "<p>Readonly</p>\n",
          "name": ":readonly"
        },
        {
          "documentation": "<p>Rounded ends</p>\n",
          "name": ".bp3-round"
        },
        {
          "documentation": "<p>Larger size</p>\n",
          "name": ".bp3-large"
        },
        {
          "documentation": "<p>Small size</p>\n",
          "name": ".bp3-small"
        },
        {
          "documentation": "<p>Primary intent</p>\n",
          "name": ".bp3-intent-primary"
        },
        {
          "documentation": "<p>Success intent</p>\n",
          "name": ".bp3-intent-success"
        },
        {
          "documentation": "<p>Warning intent</p>\n",
          "name": ".bp3-intent-warning"
        },
        {
          "documentation": "<p>Danger intent</p>\n",
          "name": ".bp3-intent-danger"
        },
        {
          "documentation": "<p>Take up full width of parent element</p>\n",
          "name": ".bp3-fill"
        }
      ],
      "reference": "input"
    },
    "input-group": {
      "documentation": "",
      "markup": "<div class=\"bp3-input-group {{.modifier}}\">\n  <span class=\"bp3-icon bp3-icon-filter\"></span>\n  <input type=\"text\" class=\"bp3-input\" {{:modifier}} placeholder=\"Filter histogram...\" />\n</div>\n<div class=\"bp3-input-group {{.modifier}}\">\n  <input type=\"password\" class=\"bp3-input\" {{:modifier}} placeholder=\"Enter your password...\" />\n  <button class=\"bp3-button bp3-minimal bp3-intent-warning bp3-icon-lock\" {{:modifier}}></button>\n</div>\n<div class=\"bp3-input-group {{.modifier}}\">\n  <span class=\"bp3-icon bp3-icon-search\"></span>\n  <input type=\"text\" class=\"bp3-input\" {{:modifier}} placeholder=\"Search\" />\n  <button class=\"bp3-button bp3-minimal bp3-intent-primary bp3-icon-arrow-right\" {{:modifier}}></button>\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input-group&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-icon&nbsp;bp3-icon-filter</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>text</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span>:modifier</span><span class=\"support constant handlebars\"><span>}}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>placeholder</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>Filter&nbsp;histogram...</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input-group&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>password</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span>:modifier</span><span class=\"support constant handlebars\"><span>}}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>placeholder</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>Enter&nbsp;your&nbsp;password...</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-minimal&nbsp;bp3-intent-warning&nbsp;bp3-icon-lock</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span>:modifier</span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input-group&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-icon&nbsp;bp3-icon-search</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>text</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span>:modifier</span><span class=\"support constant handlebars\"><span>}}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>placeholder</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>Search</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-minimal&nbsp;bp3-intent-primary&nbsp;bp3-icon-arrow-right</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span>:modifier</span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Disabled input. Must be added separately to the <code>&#60;input&#62;</code> and <code>&#60;button&#62;</code>. Also add <code>.bp3-disabled</code> to <code>.bp3-input-group</code> for icon coloring (not shown below).</p>\n",
          "name": ":disabled"
        },
        {
          "documentation": "<p>Rounded caps. Button will also be rounded.</p>\n",
          "name": ".bp3-round"
        },
        {
          "documentation": "<p>Large group. Children will adjust size accordingly.</p>\n",
          "name": ".bp3-large"
        },
        {
          "documentation": "<p>Small group. Children will adjust size accordingly.</p>\n",
          "name": ".bp3-small"
        },
        {
          "documentation": "<p>Primary intent. (All 4 intents are supported.)</p>\n",
          "name": ".bp3-intent-primary"
        },
        {
          "documentation": "<p>Take up full width of parent element.</p>\n",
          "name": ".bp3-fill"
        }
      ],
      "reference": "input-group"
    },
    "input-search": {
      "documentation": "",
      "markup": "<div class=\"bp3-input-group {{.modifier}}\">\n  <span class=\"bp3-icon bp3-icon-search\"></span>\n  <input class=\"bp3-input\" {{:modifier}} type=\"search\" placeholder=\"Search input\" dir=\"auto\" />\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input-group&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-icon&nbsp;bp3-icon-search</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span>:modifier</span><span class=\"support constant handlebars\"><span>}}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>search</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>placeholder</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>Search&nbsp;input</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>dir</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>auto</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Disabled. Also add <code>.bp3-disabled</code> to <code>.bp3-input-group</code> for icon coloring (not shown below).</p>\n",
          "name": ":disabled"
        },
        {
          "documentation": "<p>Large</p>\n",
          "name": ".bp3-large"
        },
        {
          "documentation": "<p>Small</p>\n",
          "name": ".bp3-small"
        }
      ],
      "reference": "input-search"
    },
    "label": {
      "documentation": "",
      "markup": "<div>\n  <label class=\"bp3-label {{.modifier}}\">\n    Label A\n    <span class=\"bp3-text-muted\">(optional)</span>\n    <input {{:modifier}} class=\"bp3-input\" style=\"width: 200px;\" type=\"text\" placeholder=\"Text input\" dir=\"auto\" />\n  </label>\n  <label class=\"bp3-label {{.modifier}}\">\n    Label B\n    <div class=\"bp3-input-group {{.modifier}}\">\n      <span class=\"bp3-icon bp3-icon-calendar\"></span>\n      <input {{:modifier}} class=\"bp3-input\" style=\"width: 200px;\" type=\"text\" placeholder=\"Input group\" dir=\"auto\" />\n    </div>\n  </label>\n  <label class=\"bp3-label {{.modifier}}\">\n    Label C\n    <div class=\"bp3-select {{.modifier}}\">\n      <select {{:modifier}}>\n        <option selected>Choose an item...</option>\n        <option value=\"1\">One</option>\n      </select>\n    </div>\n  </label>\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-label&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Label&nbsp;A</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-text-muted</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>(optional)</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span>:modifier</span><span class=\"support constant handlebars\"><span>}}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>style</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>width:&nbsp;200px;</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>text</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>placeholder</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>Text&nbsp;input</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>dir</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>auto</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-label&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Label&nbsp;B</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input-group&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-icon&nbsp;bp3-icon-calendar</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span>:modifier</span><span class=\"support constant handlebars\"><span>}}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>style</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>width:&nbsp;200px;</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>text</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>placeholder</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>Input&nbsp;group</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>dir</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>auto</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-label&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Label&nbsp;C</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-select&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>select</span></span><span>&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span>:modifier</span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span>&nbsp;selected</span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Choose&nbsp;an&nbsp;item...</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>value</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>1</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>One</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>select</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Disable the input.</p>\n",
          "name": ":disabled"
        },
        {
          "documentation": "<p>Disabled styles. Input must be disabled separately via attribute.</p>\n",
          "name": ".bp3-disabled"
        },
        {
          "documentation": "<p>Label and content appear side by side.</p>\n",
          "name": ".bp3-inline"
        }
      ],
      "reference": "label"
    },
    "lists": {
      "documentation": "",
      "markup": "<ol class=\"{{.modifier}}\">\n  <li>Item the first</li>\n  <li>Item the second</li>\n  <li>\n    Item the third\n    <ul class=\"{{.modifier}}\">\n      <li>Item the fourth</li>\n      <li>Item the fifth</li>\n    </ul>\n  </li>\n</ol>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>ol</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Item&nbsp;the&nbsp;first</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Item&nbsp;the&nbsp;second</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Item&nbsp;the&nbsp;third</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>ul</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Item&nbsp;the&nbsp;fourth</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Item&nbsp;the&nbsp;fifth</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>ul</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>ol</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Add a little spacing between items for readability.</p>\n",
          "name": ".bp3-list"
        },
        {
          "documentation": "<p>Remove all list styling (including indicators) so you can add your own.</p>\n",
          "name": ".bp3-list-unstyled"
        }
      ],
      "reference": "lists"
    },
    "menu": {
      "documentation": "",
      "markup": "<ul class=\"bp3-menu {{.modifier}} bp3-elevation-1\">\n  <li>\n    <a class=\"bp3-menu-item bp3-icon-people\" tabindex=\"0\">Share...</a>\n  </li>\n  <li>\n    <a class=\"bp3-menu-item bp3-icon-circle-arrow-right\" tabindex=\"0\">Move...</a>\n  </li>\n  <li>\n    <a class=\"bp3-menu-item bp3-icon-edit\" tabindex=\"0\">Rename</a>\n  </li>\n  <li class=\"bp3-menu-divider\"></li>\n  <li>\n    <a class=\"bp3-menu-item bp3-icon-trash bp3-intent-danger\" tabindex=\"0\">Delete</a>\n  </li>\n</ul>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>ul</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-menu&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span>&nbsp;bp3-elevation-1</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-menu-item&nbsp;bp3-icon-people</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Share...</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-menu-item&nbsp;bp3-icon-circle-arrow-right</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Move...</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-menu-item&nbsp;bp3-icon-edit</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Rename</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>li</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-menu-divider</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-menu-item&nbsp;bp3-icon-trash&nbsp;bp3-intent-danger</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Delete</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>ul</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Large size (only supported on <code>.bp3-menu</code>)</p>\n",
          "name": ".bp3-large"
        }
      ],
      "reference": "menu"
    },
    "menu-header": {
      "documentation": "",
      "markup": "<ul class=\"bp3-menu bp3-elevation-1\">\n  <li class=\"bp3-menu-header\"><h6 class=\"bp3-heading\">Layouts</h6></li>\n  <li><button type=\"button\" class=\"bp3-menu-item bp3-icon-layout-auto\">Auto</button></li>\n  <li><button type=\"button\" class=\"bp3-menu-item bp3-icon-layout-circle\">Circle</button></li>\n  <li><button type=\"button\" class=\"bp3-menu-item bp3-icon-layout-grid\">Grid</button></li>\n  <li class=\"bp3-menu-header\"><h6 class=\"bp3-heading\">Views</h6></li>\n  <li><button type=\"button\" class=\"bp3-menu-item bp3-icon-history\">History</button></li>\n  <li><button type=\"button\" class=\"bp3-menu-item bp3-icon-star\">Favorites</button></li>\n  <li><button type=\"button\" class=\"bp3-menu-item bp3-icon-envelope\">Messages</button></li>\n</ul>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>ul</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-menu&nbsp;bp3-elevation-1</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-menu-header</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>h6</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-heading</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Layouts</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>h6</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-menu-item&nbsp;bp3-icon-layout-auto</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Auto</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-menu-item&nbsp;bp3-icon-layout-circle</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Circle</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-menu-item&nbsp;bp3-icon-layout-grid</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Grid</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-menu-header</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>h6</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-heading</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Views</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>h6</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-menu-item&nbsp;bp3-icon-history</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>History</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-menu-item&nbsp;bp3-icon-star</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Favorites</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-menu-item&nbsp;bp3-icon-envelope</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Messages</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>ul</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [],
      "reference": "menu-header"
    },
    "navbar": {
      "documentation": "",
      "markup": "<nav class=\"bp3-navbar {{.modifier}}\">\n  <div class=\"bp3-navbar-group bp3-align-left\">\n    <div class=\"bp3-navbar-heading\">Blueprint</div>\n    <input class=\"bp3-input\" placeholder=\"Search files...\" type=\"text\" />\n  </div>\n  <div class=\"bp3-navbar-group bp3-align-right\">\n    <button class=\"bp3-button bp3-minimal bp3-icon-home\">Home</button>\n    <button class=\"bp3-button bp3-minimal bp3-icon-document\">Files</button>\n    <span class=\"bp3-navbar-divider\"></span>\n    <button class=\"bp3-button bp3-minimal bp3-icon-user\"></button>\n    <button class=\"bp3-button bp3-minimal bp3-icon-notifications\"></button>\n    <button class=\"bp3-button bp3-minimal bp3-icon-cog\"></button>\n  </div>\n</nav>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>nav</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-navbar&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-navbar-group&nbsp;bp3-align-left</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-navbar-heading</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Blueprint</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>placeholder</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>Search&nbsp;files...</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>text</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-navbar-group&nbsp;bp3-align-right</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-minimal&nbsp;bp3-icon-home</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Home</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-minimal&nbsp;bp3-icon-document</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Files</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-navbar-divider</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-minimal&nbsp;bp3-icon-user</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-minimal&nbsp;bp3-icon-notifications</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-minimal&nbsp;bp3-icon-cog</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>nav</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Dark theme</p>\n",
          "name": ".bp3-dark"
        }
      ],
      "reference": "navbar"
    },
    "navbar-container": {
      "documentation": "",
      "markup": "<nav class=\"bp3-navbar bp3-dark\">\n  <div style=\"margin: 0 auto; width: 480px;\"> <!-- ADD ME -->\n    <div class=\"bp3-navbar-group bp3-align-left\">\n      <div class=\"bp3-navbar-heading\">Blueprint</div>\n    </div>\n    <div class=\"bp3-navbar-group bp3-align-right\">\n      <button class=\"bp3-button bp3-minimal bp3-icon-home\">Home</button>\n      <button class=\"bp3-button bp3-minimal bp3-icon-document\">Files</button>\n      <span class=\"bp3-navbar-divider\"></span>\n      <button class=\"bp3-button bp3-minimal bp3-icon-user\"></button>\n      <button class=\"bp3-button bp3-minimal bp3-icon-notifications\"></button>\n      <button class=\"bp3-button bp3-minimal bp3-icon-cog\"></button>\n    </div>\n  </div>\n</nav>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>nav</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-navbar&nbsp;bp3-dark</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>style</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>margin:&nbsp;0&nbsp;auto;&nbsp;width:&nbsp;480px;</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>&nbsp;</span><span class=\"comment block html\"><span class=\"punctuation definition comment html\"><span>&lt;!--</span></span><span>&nbsp;ADD&nbsp;ME&nbsp;</span><span class=\"punctuation definition comment html\"><span>--&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-navbar-group&nbsp;bp3-align-left</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-navbar-heading</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Blueprint</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-navbar-group&nbsp;bp3-align-right</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-minimal&nbsp;bp3-icon-home</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Home</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-minimal&nbsp;bp3-icon-document</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Files</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-navbar-divider</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-minimal&nbsp;bp3-icon-user</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-minimal&nbsp;bp3-icon-notifications</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-minimal&nbsp;bp3-icon-cog</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>nav</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [],
      "reference": "navbar-container"
    },
    "non-ideal-state": {
      "documentation": "",
      "markup": "<div class=\"bp3-non-ideal-state\">\n  <div class=\"bp3-non-ideal-state-visual\">\n    <span class=\"bp3-icon bp3-icon-folder-open\"></span>\n  </div>\n  <h4 class=\"bp3-heading\">This folder is empty</h4>\n  <div>Create a new file to populate the folder.</div>\n  <button class=\"bp3-button bp3-intent-primary\">Create</button>\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-non-ideal-state</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-non-ideal-state-visual</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-icon&nbsp;bp3-icon-folder-open</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>h4</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-heading</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>This&nbsp;folder&nbsp;is&nbsp;empty</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>h4</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Create&nbsp;a&nbsp;new&nbsp;file&nbsp;to&nbsp;populate&nbsp;the&nbsp;folder.</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-intent-primary</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Create</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [],
      "reference": "non-ideal-state"
    },
    "preformatted": {
      "documentation": "",
      "markup": "<div>\n  <p>Use the <code class=\"bp3-code\">&lt;code></code> tag for snippets of code.</p>\n  <pre class=\"bp3-code-block\">Use the &lt;pre> tag for blocks of code.</pre>\n  <pre class=\"bp3-code-block\"><code>// code sample\nexport function hasModifier(\n  modifiers: ts.ModifiersArray,\n  ...modifierKinds: ts.SyntaxKind[],\n) {\n  if (modifiers == null || modifierKinds == null) {\n    return false;\n  }\n  return modifiers.some(m => modifierKinds.some(k => m.kind === k));\n}</code></pre>\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>p</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Use&nbsp;the&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>code</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-code</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span class=\"constant character entity html\"><span class=\"punctuation definition entity html\"><span>&amp;</span></span><span>lt</span><span class=\"punctuation definition entity html\"><span>;</span></span></span><span>code&gt;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>code</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>&nbsp;tag&nbsp;for&nbsp;snippets&nbsp;of&nbsp;code.</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>p</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>pre</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-code-block</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Use&nbsp;the&nbsp;</span><span class=\"constant character entity html\"><span class=\"punctuation definition entity html\"><span>&amp;</span></span><span>lt</span><span class=\"punctuation definition entity html\"><span>;</span></span></span><span>pre&gt;&nbsp;tag&nbsp;for&nbsp;blocks&nbsp;of&nbsp;code.</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>pre</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>pre</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-code-block</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>code</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>//&nbsp;code&nbsp;sample</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>export&nbsp;function&nbsp;hasModifier(</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;modifiers:&nbsp;ts.ModifiersArray,</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;...modifierKinds:&nbsp;ts.SyntaxKind[],</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;if&nbsp;(modifiers&nbsp;==&nbsp;null&nbsp;||&nbsp;modifierKinds&nbsp;==&nbsp;null)&nbsp;{</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;}</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;return&nbsp;modifiers.some(m&nbsp;=&gt;&nbsp;modifierKinds.some(k&nbsp;=&gt;&nbsp;m.kind&nbsp;===&nbsp;k));</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>}</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>code</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>pre</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [],
      "reference": "preformatted"
    },
    "progress-bar": {
      "documentation": "",
      "markup": "<div class=\"bp3-progress-bar {{.modifier}}\">\n  <div class=\"bp3-progress-meter\" style=\"width: 25%\"></div>\n</div>\n<div class=\"bp3-progress-bar bp3-intent-primary {{.modifier}}\">\n  <div class=\"bp3-progress-meter\" style=\"width: 50%\"></div>\n</div>\n<div class=\"bp3-progress-bar bp3-intent-success {{.modifier}}\">\n  <div class=\"bp3-progress-meter\" style=\"width: 75%\"></div>\n</div>\n<div class=\"bp3-progress-bar bp3-intent-danger {{.modifier}}\">\n  <div class=\"bp3-progress-meter\" style=\"width: 100%\"></div>\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-progress-bar&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-progress-meter</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>style</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>width:&nbsp;25%</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-progress-bar&nbsp;bp3-intent-primary&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-progress-meter</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>style</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>width:&nbsp;50%</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-progress-bar&nbsp;bp3-intent-success&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-progress-meter</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>style</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>width:&nbsp;75%</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-progress-bar&nbsp;bp3-intent-danger&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-progress-meter</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>style</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>width:&nbsp;100%</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>No stripes</p>\n",
          "name": ".bp3-no-stripes"
        },
        {
          "documentation": "<p>No animation</p>\n",
          "name": ".bp3-no-animation"
        }
      ],
      "reference": "progress-bar"
    },
    "radio": {
      "documentation": "",
      "markup": "<label class=\"bp3-control bp3-radio {{.modifier}}\">\n  <input type=\"radio\" name=\"docs-radio-regular\" {{:modifier}} />\n  <span class=\"bp3-control-indicator\"></span>\n  Radio\n</label>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-control&nbsp;bp3-radio&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>radio</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>name</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>docs-radio-regular</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span>:modifier</span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-control-indicator</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;Radio</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Selected</p>\n",
          "name": ":checked"
        },
        {
          "documentation": "<p>Disabled. Also add <code>.bp3-disabled</code> to <code>.bp3-control</code> to change text color (not shown below).</p>\n",
          "name": ":disabled"
        },
        {
          "documentation": "<p>Right-aligned indicator</p>\n",
          "name": ".bp3-align-right"
        },
        {
          "documentation": "<p>Large</p>\n",
          "name": ".bp3-large"
        }
      ],
      "reference": "radio"
    },
    "rtl": {
      "documentation": "",
      "markup": "<h5 class=\"bp3-heading\">Arabic:</h5>\n<p class=\"bp3-rtl\">\n  لكل لأداء بمحاولة من. مدينة الواقعة يبق أي, وإعلان وقوعها، حول كل, حدى عجّل مشروط الخاسرة قد.\n  من الذود تكبّد بين, و لها واحدة الأراضي. عل الصفحة والروسية يتم, أي للحكومة استعملت شيء. أم وصل زهاء اليا\n</p>\n<h5 class=\"bp3-heading\">Hebrew:</h5>\n<p class=\"bp3-rtl\">\n  כדי על עזרה יידיש הבהרה, מלא באגים טכניים דת. תנך או ברית ביולי. כתב בה הטבע למנוע, דת כלים פיסיקה החופשית זכר.\n  מתן החלל מאמרשיחהצפה ב. הספרות אנציקלופדיה אם זכר, על שימושי שימושיים תאולוגיה עזה\n</p>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>h5</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-heading</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Arabic:</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>h5</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>p</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-rtl</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;لكل&nbsp;لأداء&nbsp;بمحاولة&nbsp;من.&nbsp;مدينة&nbsp;الواقعة&nbsp;يبق&nbsp;أي,&nbsp;وإعلان&nbsp;وقوعها،&nbsp;حول&nbsp;كل,&nbsp;حدى&nbsp;عجّل&nbsp;مشروط&nbsp;الخاسرة&nbsp;قد.</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;من&nbsp;الذود&nbsp;تكبّد&nbsp;بين,&nbsp;و&nbsp;لها&nbsp;واحدة&nbsp;الأراضي.&nbsp;عل&nbsp;الصفحة&nbsp;والروسية&nbsp;يتم,&nbsp;أي&nbsp;للحكومة&nbsp;استعملت&nbsp;شيء.&nbsp;أم&nbsp;وصل&nbsp;زهاء&nbsp;اليا</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>p</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>h5</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-heading</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Hebrew:</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>h5</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>p</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-rtl</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;כדי&nbsp;על&nbsp;עזרה&nbsp;יידיש&nbsp;הבהרה,&nbsp;מלא&nbsp;באגים&nbsp;טכניים&nbsp;דת.&nbsp;תנך&nbsp;או&nbsp;ברית&nbsp;ביולי.&nbsp;כתב&nbsp;בה&nbsp;הטבע&nbsp;למנוע,&nbsp;דת&nbsp;כלים&nbsp;פיסיקה&nbsp;החופשית&nbsp;זכר.</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;מתן&nbsp;החלל&nbsp;מאמרשיחהצפה&nbsp;ב.&nbsp;הספרות&nbsp;אנציקלופדיה&nbsp;אם&nbsp;זכר,&nbsp;על&nbsp;שימושי&nbsp;שימושיים&nbsp;תאולוגיה&nbsp;עזה</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>p</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [],
      "reference": "rtl"
    },
    "running-text": {
      "documentation": "",
      "markup": "<div class=\"bp3-running-text {{.modifier}}\">\n  <p>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n    eiusmod tempor incididunt ut labore et dolore magna aliqua.\n  </p>\n  <ul>\n    <li>Item the <code>first</code>.</li>\n    <li>Item the <strong>second</strong></code>.</li>\n    <li>Item the <a href=\"#core/typography.running-text\">third</a>.</li>\n  </ul>\n  <h3>New section</h3>\n  <p>\n    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\n    nisi ut aliquip ex ea commodo consequat.\n  </p>\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-running-text&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>p</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Lorem&nbsp;ipsum&nbsp;dolor&nbsp;sit&nbsp;amet,&nbsp;consectetur&nbsp;adipiscing&nbsp;elit,&nbsp;sed&nbsp;do</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;eiusmod&nbsp;tempor&nbsp;incididunt&nbsp;ut&nbsp;labore&nbsp;et&nbsp;dolore&nbsp;magna&nbsp;aliqua.</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>p</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>ul</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Item&nbsp;the&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>code</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>first</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>code</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>.</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Item&nbsp;the&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>strong</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>second</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>strong</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>code</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>.</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Item&nbsp;the&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>href</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>#core/typography.running-text</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>third</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>.</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>ul</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>h3</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>New&nbsp;section</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>h3</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>p</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Ut&nbsp;enim&nbsp;ad&nbsp;minim&nbsp;veniam,&nbsp;quis&nbsp;nostrud&nbsp;exercitation&nbsp;ullamco&nbsp;laboris</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;nisi&nbsp;ut&nbsp;aliquip&nbsp;ex&nbsp;ea&nbsp;commodo&nbsp;consequat.</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>p</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Use larger font size.</p>\n",
          "name": ".bp3-text-large"
        }
      ],
      "reference": "running-text"
    },
    "select": {
      "documentation": "",
      "markup": "<div class=\"bp3-select {{.modifier}}\">\n  <select {{:modifier}}>\n    <option selected>Choose an item...</option>\n    <option value=\"1\">One</option>\n    <option value=\"2\">Two</option>\n    <option value=\"3\">Three</option>\n    <option value=\"4\">Four</option>\n  </select>\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-select&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>select</span></span><span>&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span>:modifier</span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span>&nbsp;selected</span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Choose&nbsp;an&nbsp;item...</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>value</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>1</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>One</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>value</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>2</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Two</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>value</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>3</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Three</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>value</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>4</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Four</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>option</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>select</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Disabled. Also add <code>.bp3-disabled</code> to <code>.bp3-select</code> for icon coloring (not shown below).</p>\n",
          "name": ":disabled"
        },
        {
          "documentation": "<p>Expand to fill parent container</p>\n",
          "name": ".bp3-fill"
        },
        {
          "documentation": "<p>Large size</p>\n",
          "name": ".bp3-large"
        },
        {
          "documentation": "<p>Minimal appearance</p>\n",
          "name": ".bp3-minimal"
        }
      ],
      "reference": "select"
    },
    "skeleton": {
      "documentation": "",
      "markup": "<div class=\"bp3-card\">\n  <h5 class=\"bp3-heading\"><a class=\"{{.modifier}}\" href=\"#\" tabindex=\"-1\">Card heading</a></h5>\n  <p class=\"{{.modifier}}\">\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque eget tortor felis.\n    Fusce dapibus metus in dapibus mollis. Quisque eget ex diam.\n  </p>\n  <button type=\"button\" class=\"bp3-button bp3-icon-add {{.modifier}}\" tabindex=\"-1\">Submit</button>\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-card</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>h5</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-heading</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>href</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>#</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>-1</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Card&nbsp;heading</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>a</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>h5</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>p</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Lorem&nbsp;ipsum&nbsp;dolor&nbsp;sit&nbsp;amet,&nbsp;consectetur&nbsp;adipiscing&nbsp;elit.&nbsp;Quisque&nbsp;eget&nbsp;tortor&nbsp;felis.</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;Fusce&nbsp;dapibus&nbsp;metus&nbsp;in&nbsp;dapibus&nbsp;mollis.&nbsp;Quisque&nbsp;eget&nbsp;ex&nbsp;diam.</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>p</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>button</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-button&nbsp;bp3-icon-add&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>tabindex</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>-1</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Submit</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Render this element as a skeleton, an outline of its true self.</p>\n",
          "name": ".bp3-skeleton"
        }
      ],
      "reference": "skeleton"
    },
    "switch": {
      "documentation": "",
      "markup": "<label class=\"bp3-control bp3-switch {{.modifier}}\">\n  <input type=\"checkbox\" {{:modifier}} />\n  <span class=\"bp3-control-indicator\"></span>\n  Switch\n</label>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-control&nbsp;bp3-switch&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>input</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>type</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>checkbox</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span>:modifier</span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition tag html\"><span>&nbsp;/&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-control-indicator</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;Switch</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>label</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Selected</p>\n",
          "name": ":checked"
        },
        {
          "documentation": "<p>Disabled. Also add <code>.bp3-disabled</code> to <code>.bp3-control</code> to change text color (not shown below).</p>\n",
          "name": ":disabled"
        },
        {
          "documentation": "<p>Right-aligned indicator</p>\n",
          "name": ".bp3-align-right"
        },
        {
          "documentation": "<p>Large</p>\n",
          "name": ".bp3-large"
        }
      ],
      "reference": "switch"
    },
    "tabs": {
      "documentation": "",
      "markup": "<div class=\"bp3-tabs\">\n    <ul class=\"bp3-tab-list {{.modifier}}\" role=\"tablist\">\n        <li class=\"bp3-tab\" role=\"tab\" aria-selected=\"true\">Selected tab</li>\n        <li class=\"bp3-tab\" role=\"tab\">Another tab</li>\n        <li class=\"bp3-tab\" role=\"tab\" aria-disabled=\"true\">Disabled tab</li>\n    </ul>\n    <div class=\"bp3-tab-panel\" role=\"tabpanel\">Selected panel</div>\n    <div class=\"bp3-tab-panel\" role=\"tabpanel\" aria-hidden=\"true\">Another panel</div>\n    <div class=\"bp3-tab-panel\" role=\"tabpanel\" aria-hidden=\"true\">Disabled panel</div>\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tabs</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>ul</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tab-list&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>tablist</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tab</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>tab</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>aria-selected</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>true</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Selected&nbsp;tab</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tab</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>tab</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Another&nbsp;tab</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tab</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>tab</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>aria-disabled</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>true</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Disabled&nbsp;tab</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>ul</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tab-panel</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>tabpanel</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Selected&nbsp;panel</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tab-panel</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>tabpanel</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>aria-hidden</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>true</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Another&nbsp;panel</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tab-panel</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>role</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>tabpanel</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>aria-hidden</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>true</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Disabled&nbsp;panel</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Large tabs</p>\n",
          "name": ".bp3-large"
        }
      ],
      "reference": "tabs"
    },
    "tag": {
      "documentation": "",
      "markup": "<span class=\"bp3-tag {{.modifier}}\">125</span>\n<span class=\"bp3-tag {{.modifier}}\">Done</span>\n<span class=\"bp3-tag {{.modifier}}\">\n  Tracking\n  <button class=\"bp3-tag-remove\"></button>\n</span>\n<span class=\"bp3-tag {{.modifier}}\">\n  Crushed\n  <button class=\"bp3-tag-remove\"></button>\n</span>\n<span class=\"bp3-tag {{.modifier}}\">\n  A rather long string of text that wraps to multiple lines\n  demonstrates the position of the remove button.\n  <button class=\"bp3-tag-remove\"></button>\n</span>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tag&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>125</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tag&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Done</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tag&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;Tracking</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tag-remove</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tag&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;Crushed</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tag-remove</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tag&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;A&nbsp;rather&nbsp;long&nbsp;string&nbsp;of&nbsp;text&nbsp;that&nbsp;wraps&nbsp;to&nbsp;multiple&nbsp;lines</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;demonstrates&nbsp;the&nbsp;position&nbsp;of&nbsp;the&nbsp;remove&nbsp;button.</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>button</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tag-remove</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>button</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Large</p>\n",
          "name": ".bp3-large"
        },
        {
          "documentation": "<p>Minimal appearance</p>\n",
          "name": ".bp3-minimal"
        },
        {
          "documentation": "<p>Rounded corners, ideal for badges</p>\n",
          "name": ".bp3-round"
        },
        {
          "documentation": "<p>Hover and active effects</p>\n",
          "name": ".bp3-interactive"
        },
        {
          "documentation": "<p>Primary intent</p>\n",
          "name": ".bp3-intent-primary"
        },
        {
          "documentation": "<p>Success intent</p>\n",
          "name": ".bp3-intent-success"
        },
        {
          "documentation": "<p>Warning intent</p>\n",
          "name": ".bp3-intent-warning"
        },
        {
          "documentation": "<p>Danger intent</p>\n",
          "name": ".bp3-intent-danger"
        }
      ],
      "reference": "tag"
    },
    "textarea": {
      "documentation": "",
      "markup": "<textarea class=\"bp3-input {{.modifier}}\" {{:modifier}} dir=\"auto\"></textarea>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>textarea</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-input&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span>&nbsp;</span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span>:modifier</span><span class=\"support constant handlebars\"><span>}}</span></span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>dir</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>auto</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>textarea</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Disabled</p>\n",
          "name": ":disabled"
        },
        {
          "documentation": "<p>Readonly</p>\n",
          "name": ":readonly"
        },
        {
          "documentation": "<p>Larger font size</p>\n",
          "name": ".bp3-large"
        },
        {
          "documentation": "<p>Small font size</p>\n",
          "name": ".bp3-small"
        },
        {
          "documentation": "<p>Primary intent</p>\n",
          "name": ".bp3-intent-primary"
        },
        {
          "documentation": "<p>Danger intent</p>\n",
          "name": ".bp3-intent-danger"
        },
        {
          "documentation": "<p>Take up full width of parent element</p>\n",
          "name": ".bp3-fill"
        }
      ],
      "reference": "textarea"
    },
    "tree": {
      "documentation": "",
      "markup": "<div class=\"bp3-tree bp3-elevation-0\">\n  <ul class=\"bp3-tree-node-list bp3-tree-root\">\n    <li class=\"bp3-tree-node bp3-tree-node-expanded\">\n      <div class=\"bp3-tree-node-content\">\n        <span class=\"bp3-tree-node-caret bp3-tree-node-caret-open bp3-icon-standard\"></span>\n        <span class=\"bp3-tree-node-icon bp3-icon-standard bp3-icon-folder-close\"></span>\n        <span class=\"bp3-tree-node-label\">Label</span>\n        <span class=\"bp3-tree-node-secondary-label\">Secondary label</span>\n      </div>\n      <ul class=\"bp3-tree-node-list\">\n        <li class=\"bp3-tree-node\">\n          <div class=\"bp3-tree-node-content\">\n            <span class=\"bp3-tree-node-caret-none bp3-icon-standard\"></span>\n            <span class=\"bp3-tree-node-icon bp3-icon-standard bp3-icon-document\"></span>\n          <span class=\"bp3-tree-node-label\">A Document</span>\n          </div>\n        </li>\n        <li class=\"bp3-tree-node\">\n          <div class=\"bp3-tree-node-content\">\n            <span class=\"bp3-tree-node-caret-none bp3-icon-standard\"></span>\n            <span class=\"bp3-tree-node-icon bp3-icon-standard bp3-icon-document\"></span>\n            <span class=\"bp3-tree-node-label\">Another Document</span>\n          </div>\n        </li>\n      </ul>\n    </li>\n  </ul>\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tree&nbsp;bp3-elevation-0</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>ul</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tree-node-list&nbsp;bp3-tree-root</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tree-node&nbsp;bp3-tree-node-expanded</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tree-node-content</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tree-node-caret&nbsp;bp3-tree-node-caret-open&nbsp;bp3-icon-standard</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tree-node-icon&nbsp;bp3-icon-standard&nbsp;bp3-icon-folder-close</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tree-node-label</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Label</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tree-node-secondary-label</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Secondary&nbsp;label</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>ul</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tree-node-list</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tree-node</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tree-node-content</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tree-node-caret-none&nbsp;bp3-icon-standard</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tree-node-icon&nbsp;bp3-icon-standard&nbsp;bp3-icon-document</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tree-node-label</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>A&nbsp;Document</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tree-node</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tree-node-content</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tree-node-caret-none&nbsp;bp3-icon-standard</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tree-node-icon&nbsp;bp3-icon-standard&nbsp;bp3-icon-document</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span><span class=\"meta scope between-tag-pair html\"><span>&lt;</span></span><span>/</span></span><span class=\"entity name tag html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span>bp3-tree-node-label</span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span><span>Another&nbsp;Document</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>span</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>ul</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"meta tag inline any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag inline any html\"><span>li</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;</span><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>ul</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [],
      "reference": "tree"
    },
    "typography.links": {
      "documentation": "<p>Simply use an <code>&lt;a href=&quot;&quot;&gt;</code> tag as you normally would. No class is necessary for Blueprint styles.\nLinks are underlined only when hovered.</p>\n<p>Putting an icon inside a link will cause it to inherit the link&#39;s text color.</p>\n",
      "markup": "",
      "markupHtml": "undefined",
      "modifiers": [],
      "reference": "typography.links"
    },
    "ui-text": {
      "documentation": "",
      "markup": "<div class=\"{{.modifier}}\">\n  More than a decade ago, we set out to create products that would transform\n  the way organizations use their data. Today, our products are deployed at\n  the most critical government, commercial, and non-profit institutions in\n  the world to solve problems we hadn’t even dreamed of back then.\n</div>",
      "markupHtml": "<pre class=\"editor editor-colors\"><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span>&nbsp;</span><span class=\"entity other attribute-name html\"><span class=\"entity other attribute-name generic html\"><span>class</span></span><span class=\"punctuation separator key-value html\"><span>=</span></span></span><span class=\"string quoted double handlebars\"><span class=\"punctuation definition string begin html\"><span>&quot;</span></span><span class=\"meta function inline other handlebars\"><span class=\"support constant handlebars\"><span>{{</span></span><span class=\"variable parameter handlebars\"><span>.modifier</span></span><span class=\"support constant handlebars\"><span>}}</span></span></span><span class=\"punctuation definition string end html\"><span>&quot;</span></span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;More&nbsp;than&nbsp;a&nbsp;decade&nbsp;ago,&nbsp;we&nbsp;set&nbsp;out&nbsp;to&nbsp;create&nbsp;products&nbsp;that&nbsp;would&nbsp;transform</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;the&nbsp;way&nbsp;organizations&nbsp;use&nbsp;their&nbsp;data.&nbsp;Today,&nbsp;our&nbsp;products&nbsp;are&nbsp;deployed&nbsp;at</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;the&nbsp;most&nbsp;critical&nbsp;government,&nbsp;commercial,&nbsp;and&nbsp;non-profit&nbsp;institutions&nbsp;in</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span>&nbsp;&nbsp;the&nbsp;world&nbsp;to&nbsp;solve&nbsp;problems&nbsp;we&nbsp;hadn’t&nbsp;even&nbsp;dreamed&nbsp;of&nbsp;back&nbsp;then.</span></span></div><div class=\"line\"><span class=\"text html handlebars\"><span class=\"meta tag block any html\"><span class=\"punctuation definition tag html\"><span>&lt;/</span></span><span class=\"entity name tag block any html\"><span>div</span></span><span class=\"punctuation definition tag html\"><span>&gt;</span></span></span></span></div></pre>",
      "modifiers": [
        {
          "documentation": "<p>Default Blueprint font styles, applied to the <code>&lt;body&gt;</code> tag and available as a class for nested resets.</p>\n",
          "name": ".bp3-ui-text"
        },
        {
          "documentation": "<p>Use a monospace font (ideal for code).</p>\n",
          "name": ".bp3-monospace-text"
        },
        {
          "documentation": "<p>Increase line height ideal for longform text. See <a href=\"#core/typography.running-text\">Running text</a> below for additional features.</p>\n",
          "name": ".bp3-running-text"
        },
        {
          "documentation": "<p>Use a larger font size.</p>\n",
          "name": ".bp3-text-large"
        },
        {
          "documentation": "<p>Use a smaller font size.</p>\n",
          "name": ".bp3-text-small"
        },
        {
          "documentation": "<p>Change text color to a gentler gray.</p>\n",
          "name": ".bp3-text-muted"
        },
        {
          "documentation": "<p>Change text color to a transparent, faded gray.</p>\n",
          "name": ".bp3-text-disabled"
        },
        {
          "documentation": "<p>Truncate a single line of text with an ellipsis if it overflows its container.</p>\n",
          "name": ".bp3-text-overflow-ellipsis"
        }
      ],
      "reference": "ui-text"
    }
  }
}